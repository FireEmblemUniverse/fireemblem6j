OUTPUT_ARCH(arm)

Pal_SystemText = 0x08100A08;
Pal_TalkText = 0x08100A28;
Pal_GreenTextColors = 0x08100A68;

Tsa_Unk_08101974 = 0x08101974;
Tsa_Unk_08101A2C = 0x08101A2C;

Img_TalkBubble = 0x082E4394;
Pal_TalkBubble = 0x082E4630;

Img_TalkBubbleOpeningA = 0x082E45E0;
Img_TalkBubbleOpeningB = 0x082E4590;
Img_TalkBubbleOpeningC = 0x082E453C;
Img_TalkBubbleOpeningD = 0x082E44E0;
Img_TalkBubbleOpeningE = 0x082E443C;

gMPlayTable             = 0x0839946C;
gSongTable              = 0x083994D8;

ProcScr_CamMove = 0x085C5234;
ProcScr_Unk_085C8080 = 0x085C8080;
ProcScr_OpeningSequence = 0x0869150C;
ProcScr_Unk_08691480 = 0x08691480;
ProcScr_Unk_0868C304 = 0x0868C304;

FaceInfoTable = 0x0866074C;

gNumMusicPlayers = 9;
gMaxLines = 0;

SECTIONS
{
    . = 0x02000000;
    EWRAM (NOLOAD) :
    ALIGN(4)
    {
        /* ??? */
        . = 0x01F0E8; gBuf = .;

        . = 0x0210E8; /* ewram_data */

        . = ALIGN(4); src/hardware.o(ewram_data);
        . = ALIGN(4); src/move.o(ewram_data);
        . = ALIGN(4); src/sound.o(ewram_data);
        . = ALIGN(4); src/proc.o(ewram_data);
        . = ALIGN(4); src/icon.o(ewram_data);
        . = ALIGN(4); src/debug-text.o(ewram_data);
        . = ALIGN(4); src/text.o(ewram_data);
        . = ALIGN(4); src/banim-sprite.o(ewram_data);
        . = ALIGN(4); src/sprite.o(ewram_data);
        . = ALIGN(4); src/face.o(ewram_data);
        . = ALIGN(4); src/msg.o(ewram_data);
        . = ALIGN(4); src/util.o(ewram_data);

        . = 0x02AA08; gBmSt = .;
        . = 0x02AA48; gPlaySt = .;
        . = 0x02D204; gMapUnit = .;
        . = 0x02D208; gMapTerrain = .;
        . = 0x02D21C; gMapOther = .;
        . = 0x032C28; gMoveScrBuf = .;
        . = 0x039214; gBattleUnitA = .;
        . = 0x039290; gBattleUnitB = .;
        . = 0x039328; gBattleHitIt = .;
        . = 0x039688; gAiDecision = .;
    }

    . = 0x03000000;
    IWRAM (NOLOAD) :
    ALIGN(4)
    {
        /* .bss */
        . = ALIGN(4); src/random.o(.bss);
        . = ALIGN(4); src/hardware.o(.bss);
        . = ALIGN(4); src/oam.o(.bss);
        . = ALIGN(4); src/talk.o(.bss);
        . = ALIGN(4); src/event.o(.bss);
        . = ALIGN(4); src/anim.o(.bss);
        . = ALIGN(4); src/util.o(.bss);

        . = 0x002158; src/agb_sram.o(.bss);
        . = ALIGN(4); tools/agbcc/lib/libgcc.a:dp-bit.o(.bss);
        . = ALIGN(4); tools/agbcc/lib/libgcc.a:fp-bit.o(.bss);

        /* COMMON */
        . = 0x0022A0; SoundMainRAM_Buffer = .;
        . = 0x0026A0; gOamLoPutIt = .;
        . = 0x0026B0; gDispIo = .;
        . = 0x002720; gIrqFuncs = .;
        . = 0x002758; MoveFillRamFunc = .;
        . = 0x00275C; gOamAffinePutId = .;
        . = 0x002760; PutOamHiRamFunc = .;
        . = 0x002764; gOnHBlankA = .;
        . = 0x002770; gOam = .;
        . = 0x002D70; DrawGlyphRamFunc = .;
        . = 0x002D74; gOamHiPutIt = .;
        . = 0x002D78; gOnHBlankB = .;
        . = 0x002D80; RamFuncArea = .;
        . = 0x003780; DecodeStringRamFunc = .;
        . = 0x003784; PutOamLoRamFunc = .;
        . = 0x003788; gOamAffinePutIt = .;
        . = 0x003790; IntrMainRam = .;
        . = 0x003F90; MoveFillStepRamFunc = .;
        . = 0x003FA0; gEventScriptQueueIt = .;
        . = 0x003FB0; gEventScriptQueue = .;
        . = 0x003FD0; gSpriteAllocIt = .;
        . = 0x004000; gFaces = .;
        . = 0x0044B0; gActiveUnit = .;
        . = 0x0052B0; gSoundInfo = .;
        . = 0x006260; gMpi_03006260 = .;
        . = 0x0062A0; gMpi_030062A0 = .;
        . = 0x0062E0; gMpi_FightBgm = .;
        . = 0x006320; gMPlayJumpTable = .;
        . = 0x0063B0; gCgbChans = .;
        . = 0x0064B0; gMpi_030064B0 = .;
        . = 0x0064F0; gMpi_MainBgm = .;
        . = 0x006530; gMpi_03006530 = .;
        . = 0x006570; gMpi_03006570 = .;
        . = 0x0065B0; gMPlayMemAccArea = .;
        . = 0x006600; gMpi_03006600 = .;
        . = 0x006640; ReadSramFast = .;
        . = 0x006644; VerifySramFast = .;
    }

    . = 0x08000000;
    ROM :
    ALIGN(4)
    {
        asm/crt0.o(.text);
        asm/arm.o(.text);

        src/main.o(.text);
        src/irq.o(.text);
        src/random.o(.text);
        src/hardware.o(.text);
        src/move.o(.text);
        src/oam.o(.text);
        src/sound.o(.text);
        src/ramfunc.o(.text);
        src/proc.o(.text);
        src/icon.o(.text);
        src/debug-text.o(.text);
        src/text.o(.text);
        src/banim-sprite.o(.text);
        src/sprite.o(.text);
        src/face.o(.text);
        src/talk.o(.text);
        src/event.o(.text);
        src/anim.o(.text);
        src/game-controller.o(.text);
        src/msg.o(.text);
        src/util.o(.text);

        asm/code.o(.text);

        asm/m4a_1.o(.text);
        src/m4a.o(.text);
        asm/agb_syscall.o(.text);
        src/agb_sram.o(.text);
        tools/agbcc/lib/libgcc.a:_ashldi3.o(.text);
        tools/agbcc/lib/libgcc.a:_call_via_rX.o(.text);
        tools/agbcc/lib/libgcc.a:_divsi3.o(.text);
        tools/agbcc/lib/libgcc.a:_dvmd_tls.o(.text);
        tools/agbcc/lib/libgcc.a:_modsi3.o(.text);
        tools/agbcc/lib/libgcc.a:_udivsi3.o(.text);
        tools/agbcc/lib/libgcc.a:_umodsi3.o(.text);
        tools/agbcc/lib/libgcc.a:dp-bit.o(.text);
        tools/agbcc/lib/libgcc.a:fp-bit.o(.text);
        tools/agbcc/lib/libgcc.a:_lshrdi3.o(.text);
        tools/agbcc/lib/libgcc.a:_muldi3.o(.text);
        tools/agbcc/lib/libgcc.a:_negdi2.o(.text);
        tools/agbcc/lib/libc.a:memcpy.o(.text);
        tools/agbcc/lib/libc.a:memset.o(.text);
        tools/agbcc/lib/libc.a:strcpy.o(.text);

        asm/code_blx_stub.o(.text);

        /* .rodata */
        . = ALIGN(4); data/rodata_msg.o(.rodata);
        . = ALIGN(4); src/main.o(.rodata);
        . = ALIGN(4); src/irq.o(.rodata);
        . = ALIGN(4); src/random.o(.rodata);
        . = ALIGN(4); src/hardware.o(.rodata);
        . = ALIGN(4); data/rodata_trig.o(.rodata);
        . = ALIGN(4); src/move.o(.rodata);
        . = ALIGN(4); src/oam.o(.rodata);
        . = ALIGN(4); src/sound.o(.rodata);
        . = ALIGN(4); src/ramfunc.o(.rodata);
        . = ALIGN(4); data/rodata_icon.o(.rodata);
        . = ALIGN(4); src/proc.o(.rodata);
        . = ALIGN(4); src/icon.o(.rodata);
        . = ALIGN(4); src/debug-text.o(.rodata);
        . = ALIGN(4); src/text.o(.rodata);
        . = ALIGN(4); src/banim-sprite.o(.rodata);
        . = ALIGN(4); src/sprite.o(.rodata);
        . = ALIGN(4); src/face.o(.rodata);
        . = ALIGN(4); src/talk.o(.rodata);
        . = ALIGN(4); src/event.o(.rodata);
        . = ALIGN(4); src/anim.o(.rodata);
        . = ALIGN(4); src/game-controller.o(.rodata);
        . = ALIGN(4); src/msg.o(.rodata);
        . = ALIGN(4); src/util.o(.rodata);

        . = ALIGN(4); data/rodata.o(.rodata);
        . = ALIGN(4); src/m4a_tables.o(.rodata);
        . = ALIGN(4); data/rodata_lib.o(.rodata);

        /* .data */
        . = ALIGN(4); src/hardware.o(.data);
        . = ALIGN(4); src/sound.o(.data);
        . = ALIGN(4); src/proc.o(.data);
        . = ALIGN(4); data/data_dbgfont.o(.data);
        . = ALIGN(4); src/text.o(.data);
        . = ALIGN(4); data/data_textglyphs.o(.data);
        . = ALIGN(4); src/sprite.o(.data);
        . = ALIGN(4); src/face.o(.data);
        . = ALIGN(4); src/talk.o(.data);
        . = ALIGN(4); src/event.o(.data);
        . = ALIGN(4); src/anim.o(.data);
        . = ALIGN(4); src/game-controller.o(.data);
        . = ALIGN(4); src/util.o(.data);

        . = ALIGN(4); data/data.o(.data);
    } = 0

  /* Stabs debugging sections.  */
  .stab          0 : { *(.stab) }
  .stabstr       0 : { *(.stabstr) }
  .stab.excl     0 : { *(.stab.excl) }
  .stab.exclstr  0 : { *(.stab.exclstr) }
  .stab.index    0 : { *(.stab.index) }
  .stab.indexstr 0 : { *(.stab.indexstr) }
  .comment       0 : { *(.comment) }
  .gnu.build.attributes : { *(.gnu.build.attributes .gnu.build.attributes.*) }
  /* DWARF debug sections.
     Symbols in the DWARF debugging sections are relative to the beginning
     of the section so we begin them at 0.  */
  /* DWARF 1 */
  .debug          0 : { *(.debug) }
  .line           0 : { *(.line) }
  /* GNU DWARF 1 extensions */
  .debug_srcinfo  0 : { *(.debug_srcinfo) }
  .debug_sfnames  0 : { *(.debug_sfnames) }
  /* DWARF 1.1 and DWARF 2 */
  .debug_aranges  0 : { *(.debug_aranges) }
  .debug_pubnames 0 : { *(.debug_pubnames) }
  /* DWARF 2 */
  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }
  .debug_abbrev   0 : { *(.debug_abbrev) }
  .debug_line     0 : { *(.debug_line .debug_line.* .debug_line_end) }
  .debug_frame    0 : { *(.debug_frame) }
  .debug_str      0 : { *(.debug_str) }
  .debug_loc      0 : { *(.debug_loc) }
  .debug_macinfo  0 : { *(.debug_macinfo) }
  /* SGI/MIPS DWARF 2 extensions */
  .debug_weaknames 0 : { *(.debug_weaknames) }
  .debug_funcnames 0 : { *(.debug_funcnames) }
  .debug_typenames 0 : { *(.debug_typenames) }
  .debug_varnames  0 : { *(.debug_varnames) }
  /* DWARF 3 */
  .debug_pubtypes 0 : { *(.debug_pubtypes) }
  .debug_ranges   0 : { *(.debug_ranges) }
  /* DWARF Extension.  */
  .debug_macro    0 : { *(.debug_macro) }
  .debug_addr     0 : { *(.debug_addr) }
  .ARM.attributes 0 : { KEEP (*(.ARM.attributes)) KEEP (*(.gnu.attributes)) }
  .note.gnu.arm.ident 0 : { KEEP (*(.note.gnu.arm.ident)) }

    /* Discard everything not specifically mentioned above. */
    /DISCARD/ :
    {
        *(*);
    }
}
