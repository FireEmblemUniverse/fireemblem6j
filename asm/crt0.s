
	.text
	.include "asm_gbaio.inc"

	.syntax unified
	.arm

_entry:
	b crt0

.L08000004:
	@ TODO: make header data look nicer

	.byte 0x24, 0xFF, 0xAE, 0x51, 0x69, 0x9A, 0xA2, 0x21, 0x3D, 0x84, 0x82, 0x0A
	.byte 0x84, 0xE4, 0x09, 0xAD, 0x11, 0x24, 0x8B, 0x98, 0xC0, 0x81, 0x7F, 0x21, 0xA3, 0x52, 0xBE, 0x19
	.byte 0x93, 0x09, 0xCE, 0x20, 0x10, 0x46, 0x4A, 0x4A, 0xF8, 0x27, 0x31, 0xEC, 0x58, 0xC7, 0xE8, 0x33
	.byte 0x82, 0xE3, 0xCE, 0xBF, 0x85, 0xF4, 0xDF, 0x94, 0xCE, 0x4B, 0x09, 0xC1, 0x94, 0x56, 0x8A, 0xC0
	.byte 0x13, 0x72, 0xA7, 0xFC, 0x9F, 0x84, 0x4D, 0x73, 0xA3, 0xCA, 0x9A, 0x61, 0x58, 0x97, 0xA3, 0x27
	.byte 0xFC, 0x03, 0x98, 0x76, 0x23, 0x1D, 0xC7, 0x61, 0x03, 0x04, 0xAE, 0x56, 0xBF, 0x38, 0x84, 0x00
	.byte 0x40, 0xA7, 0x0E, 0xFD, 0xFF, 0x52, 0xFE, 0x03, 0x6F, 0x95, 0x30, 0xF1, 0x97, 0xFB, 0xC0, 0x85
	.byte 0x60, 0xD6, 0x80, 0x25, 0xA9, 0x63, 0xBE, 0x03, 0x01, 0x4E, 0x38, 0xE2, 0xF9, 0xA2, 0x34, 0xFF
	.byte 0xBB, 0x3E, 0x03, 0x44, 0x78, 0x00, 0x90, 0xCB, 0x88, 0x11, 0x3A, 0x94, 0x65, 0xC0, 0x7C, 0x63
	.byte 0x87, 0xF0, 0x3C, 0xAF, 0xD6, 0x25, 0xE4, 0x8B, 0x38, 0x0A, 0xAC, 0x72, 0x21, 0xD4, 0xF8, 0x07
	.byte 0x46, 0x49, 0x52, 0x45, 0x45, 0x4D, 0x42, 0x4C, 0x45, 0x4D, 0x36, 0x00, 0x41, 0x46, 0x45, 0x4A
	.byte 0x30, 0x31, 0x96, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCC, 0x00, 0x00

.global crt0
crt0:
	@ Switch to IRQ Mode
	mov r0, #0x12
	msr cpsr_fc, r0
	ldr sp, ___sp_irq

	@ Switch to System Mode
	mov r0, #0x1f
	msr cpsr_fc, r0
	ldr sp, ___sp_usr

	@ Setup IRQ
	ldr r1, =INTR_VECTOR
	adr r0, IrqMain
	str r0, [r1]

	@ Jump to main
	ldr r1, =AgbMain
	mov lr, pc
	bx r1
	b crt0

___sp_usr:	.word __sp_usr
___sp_irq:	.word __sp_irq


.global IrqMain
IrqMain:
	@ Reserve IE & spsr
	mov r3, REG_BASE
	add r3, r3, REG_OFFSET_IE
	ldr r2, [r3]
	lsl r1, r2, #0x10
	lsr r1, r1, #0x10
	mrs r0, spsr
	push {r0, r1, r3, lr}

irq_search:
	and r1, r2, r2, lsr #16
	ands r0, r1, INTR_FLAG_GAMEPAK

@ when the cart is removed from the GBA.
panic_gamepak:
	bne panic_gamepak

	mov r2, #0
	ands r0, r1, INTR_FLAG_VBLANK
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_HBLANK
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_VCOUNT
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_TIMER0
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_TIMER1
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_TIMER2
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_TIMER3
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_SERIAL
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_DMA0
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_DMA1
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_DMA2
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_DMA3
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_KEYPAD
	bne handle_normal_irq
	add r2, r2, #4
	ands r0, r1, INTR_FLAG_GAMEPAK

@ when the cart is removed from the GBA.
panic_gamepak2:
	bne panic_gamepak2

handle_normal_irq:
	strh r0, [r3, #2]

	@ Switch to System Mode
	mrs r3, cpsr
	bic r3, r3, #0xdf
	orr r3, r3, #0x1f
	msr cpsr_fc, r3

	@ jump to irq-handler
	ldr r1, =gIrqFuncs
	add r1, r1, r2
	ldr r0, [r1]
	stmdb sp!, {lr}
	add lr, pc, #0	@ post_irq
	bx r0
post_irq:
	ldmia sp!, {lr}

	@ Reset to IRQ Mode, also disable irq interrupt
	mrs r3, cpsr_fc
	bic r3, r3, 0xDF
	orr r3, r3, 0x92
	msr cpsr_fc, r3

	@ Restore original spsr & IE
	pop {r0, r1, r3, lr}
	strh r1, [r3]
	msr spsr_fc, r0
	bx lr
