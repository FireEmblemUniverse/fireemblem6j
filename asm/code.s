
	.include "macro.inc"

	.syntax unified

	thumb_func_start sub_8061838
sub_8061838: @ 0x08061838
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08061850 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #1
	beq _08061854
	b _08061856
	.align 2, 0
_08061850: .4byte gMapAnimSt
_08061854:
	b _08061858
_08061856:
	b _0806186A
_08061858:
	ldr r0, _08061874 @ =gMapAnimSt
	ldr r1, [r0, #0x18]
	adds r0, r1, #0
	adds r1, #0x48
	ldrh r2, [r1]
	adds r0, r2, #0
	ldr r1, [r7]
	bl StartPopup_08012178
_0806186A:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061874: .4byte gMapAnimSt

	thumb_func_start sub_8061878
sub_8061878: @ 0x08061878
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	str r0, [r7, #4]
	ldr r1, _080618CC @ =gBattleUnitA
	adds r0, r1, #0
	bl sub_80618D4
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _08061898
	ldr r0, _080618CC @ =gBattleUnitA
	str r0, [r7, #4]
_08061898:
	ldr r1, _080618D0 @ =gBattleUnitB
	adds r0, r1, #0
	bl sub_80618D4
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _080618AC
	ldr r0, _080618D0 @ =gBattleUnitB
	str r0, [r7, #4]
_080618AC:
	ldr r0, [r7, #4]
	cmp r0, #0
	beq _080618C2
	ldr r1, [r7, #4]
	adds r0, r1, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	ldr r1, [r7]
	bl StartPopup_08012040
_080618C2:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080618CC: .4byte gBattleUnitA
_080618D0: .4byte gBattleUnitB

	thumb_func_start sub_80618D4
sub_80618D4: @ 0x080618D4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	movs r1, #0xb
	ldrsb r1, [r0, r1]
	movs r2, #0xc0
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _080618FA
	ldr r0, [r7]
	bl DidBattleUnitBreakWeapon
	lsls r2, r0, #0x18
	asrs r1, r2, #0x18
	adds r0, r1, #0
	b _080618FE
_080618FA:
	movs r0, #0
	b _080618FE
_080618FE:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8061908
sub_8061908: @ 0x08061908
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	str r0, [r7, #4]
	ldr r1, _0806195C @ =gBattleUnitA
	adds r0, r1, #0
	bl sub_8061964
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _08061928
	ldr r0, _0806195C @ =gBattleUnitA
	str r0, [r7, #4]
_08061928:
	ldr r1, _08061960 @ =gBattleUnitB
	adds r0, r1, #0
	bl sub_8061964
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _0806193C
	ldr r0, _08061960 @ =gBattleUnitB
	str r0, [r7, #4]
_0806193C:
	ldr r0, [r7, #4]
	cmp r0, #0
	beq _08061952
	ldr r1, [r7, #4]
	adds r0, r1, #0
	adds r1, #0x4e
	ldrb r2, [r1]
	adds r0, r2, #0
	ldr r1, [r7]
	bl StartPopup_080120A0
_08061952:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806195C: .4byte gBattleUnitA
_08061960: .4byte gBattleUnitB

	thumb_func_start sub_8061964
sub_8061964: @ 0x08061964
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	movs r1, #0xb
	ldrsb r1, [r0, r1]
	movs r2, #0xc0
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0806198E
	ldr r0, [r7]
	bl HasBattleUnitGainedWeaponLevel
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _0806198E
	movs r0, #1
	b _08061992
_0806198E:
	movs r0, #0
	b _08061992
_08061992:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806199C
sub_806199C: @ 0x0806199C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ResetText
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80619B0
sub_80619B0: @ 0x080619B0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ResetMuAnims
	bl ResetTextFont
	bl sub_8062CF0
	bl InitBmBgLayers
	bl LoadUiFrameGraphics
	bl ApplySystemObjectsGraphics
	bl IsEventRunning
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _080619E0
	bl EndAllMus
_080619E0:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80619E8
sub_80619E8: @ 0x080619E8
	push {r7, lr}
	mov r7, sp
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r1, _08061AC4 @ =gMapAnimSt
	ldr r2, [r1, #0x50]
	ldrb r1, [r2, #2]
	lsrs r2, r1, #3
	adds r1, r2, #0
	movs r2, #1
	ands r1, r2
	adds r2, r0, #0
	adds r0, #0x58
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r2, _08061AC4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	movs r2, #1
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x59
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r2, _08061AC4 @ =gMapAnimSt
	ldr r1, [r2, #0x50]
	adds r2, r0, #0
	adds r0, #0x5a
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r2, _08061AC4 @ =gMapAnimSt
	ldr r1, [r2, #0x50]
	adds r2, r0, #0
	adds r0, #0x5c
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1, #2]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r2, _08061AC4 @ =gMapAnimSt
	ldr r1, [r2, #0x50]
	adds r2, r0, #0
	adds r0, #0x5d
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1, #3]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r1, _08061AC4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	bne _08061AB2
	ldr r0, _08061AC4 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x58
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08061AC4 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x59
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
_08061AB2:
	ldr r1, _08061AC4 @ =gMapAnimSt
	ldr r0, _08061AC4 @ =gMapAnimSt
	ldr r1, _08061AC4 @ =gMapAnimSt
	ldr r2, [r1, #0x50]
	adds r1, r2, #4
	str r1, [r0, #0x50]
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061AC4: .4byte gMapAnimSt

	thumb_func_start sub_8061AC8
sub_8061AC8: @ 0x08061AC8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08061AF4 @ =gMapAnimSt
	ldr r1, [r0, #0x50]
	ldrb r0, [r1, #2]
	movs r1, #0x80
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	beq _08061AFC
	ldr r0, [r7]
	bl Proc_Break
	ldr r1, _08061AF8 @ =gUnk_08664E4C
	ldr r0, [r7]
	bl Proc_GotoScript
	b _08061B06
	.align 2, 0
_08061AF4: .4byte gMapAnimSt
_08061AF8: .4byte gUnk_08664E4C
_08061AFC:
	bl sub_80619E8
	ldr r0, [r7]
	bl Proc_Break
_08061B06:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8061B10
sub_8061B10: @ 0x08061B10
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl sub_8068A48
	adds r1, r0, #0
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8061B30
sub_8061B30: @ 0x08061B30
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08061B7C @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #0x40
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08061B72
	ldr r0, _08061B7C @ =gMapAnimSt
	ldr r2, _08061B7C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064B7C
	ldr r0, [r7]
	movs r1, #0x64
	bl StartTemporaryLock
_08061B72:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061B7C: .4byte gMapAnimSt

	thumb_func_start MA_MoveCameraOntoActor
MA_MoveCameraOntoActor: @ 0x08061B80
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08061BA8 @ =gMapAnimSt
	ldr r2, [r0]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r0, _08061BA8 @ =gMapAnimSt
	ldr r3, [r0]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r0, [r7]
	bl CameraMoveWatchPosition
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061BA8: .4byte gMapAnimSt

	thumb_func_start MA_MoveCamOntoTarget
MA_MoveCamOntoTarget: @ 0x08061BAC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08061BC4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	bne _08061BC8
	b _08061BDE
	.align 2, 0
_08061BC4: .4byte gMapAnimSt
_08061BC8:
	ldr r0, _08061BE8 @ =gMapAnimSt
	ldr r2, [r0, #0x14]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r0, _08061BE8 @ =gMapAnimSt
	ldr r3, [r0, #0x14]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r0, [r7]
	bl CameraMoveWatchPosition
_08061BDE:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061BE8: .4byte gMapAnimSt

	thumb_func_start MA_DisplayDeathQuote
MA_DisplayDeathQuote: @ 0x08061BEC
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #4]
	ldr r1, _08061C0C @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _08061C20
	cmp r0, #2
	beq _08061C10
	b _08061C34
	.align 2, 0
_08061C0C: .4byte gMapAnimSt
_08061C10:
	ldr r1, _08061C30 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x21
	ldrb r0, [r1]
	cmp r0, #0
	bne _08061C20
	movs r0, #1
	str r0, [r7, #4]
_08061C20:
	ldr r0, _08061C30 @ =gMapAnimSt
	ldrb r1, [r0, #0xd]
	cmp r1, #0
	bne _08061C2C
	movs r0, #0
	str r0, [r7, #4]
_08061C2C:
	b _08061C34
	.align 2, 0
_08061C30: .4byte gMapAnimSt
_08061C34:
	ldr r0, [r7, #4]
	movs r1, #1
	cmn r0, r1
	beq _08061C7E
	ldr r0, _08061C88 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [r1]
	ldrb r1, [r0, #4]
	str r1, [r7, #8]
	ldr r1, [r7, #8]
	adds r0, r1, #0
	lsls r2, r0, #0x18
	lsrs r1, r2, #0x18
	adds r0, r1, #0
	bl ShouldDisplayDeathQuote
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _08061C7E
	bl sub_8062CF0
	ldr r1, [r7, #8]
	adds r0, r1, #0
	lsls r2, r0, #0x18
	lsrs r1, r2, #0x18
	adds r0, r1, #0
	bl sub_806B808
	bl DisableEventSkip
_08061C7E:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061C88: .4byte gMapAnimSt

	thumb_func_start MapAnimProc_DisplayDeathFade
MapAnimProc_DisplayDeathFade: @ 0x08061C8C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #4]
	ldr r1, _08061CAC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _08061CC0
	cmp r0, #2
	beq _08061CB0
	b _08061CD4
	.align 2, 0
_08061CAC: .4byte gMapAnimSt
_08061CB0:
	ldr r1, _08061CD0 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x21
	ldrb r0, [r1]
	cmp r0, #0
	bne _08061CC0
	movs r0, #1
	str r0, [r7, #4]
_08061CC0:
	ldr r0, _08061CD0 @ =gMapAnimSt
	ldrb r1, [r0, #0xd]
	cmp r1, #0
	bne _08061CCC
	movs r0, #0
	str r0, [r7, #4]
_08061CCC:
	b _08061CD4
	.align 2, 0
_08061CD0: .4byte gMapAnimSt
_08061CD4:
	ldr r0, [r7, #4]
	movs r1, #1
	cmn r0, r1
	beq _08061CF4
	ldr r0, _08061CFC @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuDeathFade
_08061CF4:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061CFC: .4byte gMapAnimSt

	thumb_func_start MapAnimProc_DisplayExpBar
MapAnimProc_DisplayExpBar: @ 0x08061D00
	push {r4, r5, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	movs r0, #1
	rsbs r0, r0, #0
	str r0, [r7, #8]
	ldr r1, _08061D20 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _08061D38
	cmp r0, #2
	beq _08061D24
	b _08061D54
	.align 2, 0
_08061D20: .4byte gMapAnimSt
_08061D24:
	ldr r0, _08061D50 @ =gMapAnimSt
	ldr r1, [r0, #0x18]
	adds r0, r1, #0
	adds r1, #0x6a
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08061D38
	movs r0, #1
	str r0, [r7, #8]
_08061D38:
	ldr r0, _08061D50 @ =gMapAnimSt
	ldr r1, [r0, #4]
	adds r0, r1, #0
	adds r1, #0x6a
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08061D4C
	movs r0, #0
	str r0, [r7, #8]
_08061D4C:
	b _08061D54
	.align 2, 0
_08061D50: .4byte gMapAnimSt
_08061D54:
	ldr r0, [r7, #8]
	cmp r0, #0
	blt _08061E04
	ldr r1, _08061E0C @ =gUnk_08664F90
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, _08061E10 @ =gMapAnimSt
	ldr r2, [r7, #8]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, #4
	adds r2, r1, r2
	ldr r3, [r2]
	adds r1, r3, #0
	adds r2, r3, #0
	adds r2, #0x6d
	movs r3, #0
	ldrsb r3, [r2, r3]
	adds r1, r3, #0
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7, #4]
	ldr r1, _08061E10 @ =gMapAnimSt
	ldr r2, [r7, #8]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, #4
	adds r2, r1, r2
	ldr r3, [r2]
	adds r1, r3, #0
	adds r2, r3, #0
	adds r2, #0x6d
	movs r3, #0
	ldrsb r3, [r2, r3]
	adds r1, r3, #0
	ldr r2, _08061E10 @ =gMapAnimSt
	ldr r3, [r7, #8]
	adds r5, r3, #0
	lsls r4, r5, #2
	adds r4, r4, r3
	lsls r3, r4, #2
	adds r2, #4
	adds r3, r2, r3
	ldr r4, [r3]
	adds r2, r4, #0
	adds r3, r4, #0
	adds r3, #0x6a
	movs r4, #0
	ldrsb r4, [r3, r4]
	adds r2, r4, #0
	adds r1, r1, r2
	adds r2, r0, #0
	adds r0, #0x66
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7, #4]
	ldr r2, [r7, #8]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x68
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
_08061E04:
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08061E0C: .4byte gUnk_08664F90
_08061E10: .4byte gMapAnimSt

	thumb_func_start sub_8061E14
sub_8061E14: @ 0x08061E14
	push {r4, r7, lr}
	sub sp, #0x18
	mov r7, sp
	str r0, [r7]
	ldr r0, _08061E78 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08061E78 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08061E78 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08061E78 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08061E7C @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #2
	bgt _08061E82
	cmp r0, #1
	blt _08061E82
	b _08061E80
	.align 2, 0
_08061E78: .4byte gDispIo
_08061E7C: .4byte gMapAnimSt
_08061E80:
	b _08061FC6
_08061E82:
	b _08061E84
_08061E84:
	ldr r0, _08061EA0 @ =gMapAnimSt
	ldr r1, [r0, #4]
	adds r0, r1, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F7B4
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	bne _08061EA4
	b _08061FC6
	.align 2, 0
_08061EA0: .4byte gMapAnimSt
_08061EA4:
	ldr r1, _08061ED4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	bne _08061EE6
	ldr r0, _08061ED4 @ =gMapAnimSt
	ldr r1, [r0]
	movs r2, #0xf
	ldrsb r2, [r1, r2]
	lsls r0, r2, #4
	ldr r1, _08061ED8 @ =gBmSt
	movs r3, #0xe
	ldrsh r2, [r1, r3]
	subs r0, r0, r2
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	cmp r0, #0x6f
	ble _08061EDC
	ldr r0, [r7, #4]
	adds r1, r0, #0
	subs r1, #0x28
	str r1, [r7, #4]
	b _08061EE4
	.align 2, 0
_08061ED4: .4byte gMapAnimSt
_08061ED8: .4byte gBmSt
_08061EDC:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	adds r1, #0x18
	str r1, [r7, #4]
_08061EE4:
	b _08061FB2
_08061EE6:
	movs r0, #0
	str r0, [r7, #0x10]
_08061EEA:
	ldr r1, _08061EFC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	ldr r1, [r7, #0x10]
	cmp r1, r0
	blt _08061F00
	b _08061F3C
	.align 2, 0
_08061EFC: .4byte gMapAnimSt
_08061F00:
	ldr r0, [r7, #0x10]
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #8
	adds r0, r1, r0
	ldr r1, _08061F34 @ =gMapAnimSt
	ldr r2, [r7, #0x10]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r3, #0xf
	ldrsb r3, [r2, r3]
	lsls r1, r3, #4
	ldr r2, _08061F38 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	subs r1, r1, r3
	str r1, [r0]
	ldr r0, [r7, #0x10]
	adds r1, r0, #1
	str r1, [r7, #0x10]
	b _08061EEA
	.align 2, 0
_08061F34: .4byte gMapAnimSt
_08061F38: .4byte gBmSt
_08061F3C:
	ldr r0, [r7, #8]
	ldr r1, [r7, #0xc]
	subs r0, r0, r1
	cmp r0, #0
	blt _08061F52
	ldr r0, [r7, #8]
	ldr r1, [r7, #0xc]
	subs r0, r0, r1
	cmp r0, #0x4f
	bgt _08061F5E
	b _08061F64
_08061F52:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #8]
	subs r0, r0, r1
	cmp r0, #0x4f
	bgt _08061F5E
	b _08061F64
_08061F5E:
	movs r0, #0x40
	str r0, [r7, #4]
	b _08061FB2
_08061F64:
	movs r0, #0
	ldr r1, [r7, #8]
	ldr r2, [r7, #0xc]
	cmp r1, r2
	bgt _08061F70
	movs r0, #1
_08061F70:
	str r0, [r7, #0x14]
	ldr r0, [r7, #0x14]
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #8
	adds r0, r1, r0
	ldr r1, [r0]
	cmp r1, #0x6f
	ble _08061F9E
	movs r0, #1
	ldr r1, [r7, #0x14]
	subs r0, r0, r1
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #8
	adds r0, r1, r0
	ldr r1, [r0]
	adds r0, r1, #0
	subs r0, #0x28
	str r0, [r7, #4]
	b _08061FB2
_08061F9E:
	ldr r0, [r7, #0x14]
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r1, r7, #0
	adds r1, #8
	adds r0, r1, r0
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x18
	str r0, [r7, #4]
_08061FB2:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	cmp r0, #0
	bge _08061FBC
	adds r0, #7
_08061FBC:
	asrs r1, r0, #3
	movs r0, #0xf
	ldr r2, [r7]
	bl MA_StartBattleInfoBox
_08061FC6:
	add sp, #0x18
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8061FD0
sub_8061FD0: @ 0x08061FD0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08061FE8 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #2
	beq _08061FEC
	b _08062008
	.align 2, 0
_08061FE8: .4byte gMapAnimSt
_08061FEC:
	ldr r0, _08062004 @ =gMapAnimSt
	ldr r1, [r0]
	ldr r2, [r1]
	ldrb r0, [r2, #4]
	ldr r1, _08062004 @ =gMapAnimSt
	ldr r2, [r1, #0x14]
	ldr r1, [r2]
	ldrb r2, [r1, #4]
	adds r1, r2, #0
	bl sub_806B754
	b _0806200A
	.align 2, 0
_08062004: .4byte gMapAnimSt
_08062008:
	b _0806200A
_0806200A:
	bl DisableEventSkip
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8062018
sub_8062018: @ 0x08062018
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806204C @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r1, r2, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl GetItemIid
	cmp r0, #0x53
	beq _08062050
	cmp r0, #0x54
	beq _08062090
	b _080620D0
	.align 2, 0
_0806204C: .4byte gMapAnimSt
_08062050:
	ldr r0, _08062088 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r1, #8
	bl SetMuPal
	ldr r0, _08062088 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r2, _0806208C @ =gUnk_082AA968
	movs r1, #0x3a
	bl SetMuSpecialSprite
	b _080620D0
	.align 2, 0
_08062088: .4byte gMapAnimSt
_0806208C: .4byte gUnk_082AA968
_08062090:
	ldr r0, _080620C8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r1, #8
	bl SetMuPal
	ldr r0, _080620C8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r2, _080620CC @ =gUnk_082AA988
	movs r1, #0x3b
	bl SetMuSpecialSprite
	b _080620D0
	.align 2, 0
_080620C8: .4byte gMapAnimSt
_080620CC: .4byte gUnk_082AA988
_080620D0:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80620D8
sub_80620D8: @ 0x080620D8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080620F4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _080620FE
	cmp r0, #2
	beq _080620F8
	b _08062104
	.align 2, 0
_080620F4: .4byte gMapAnimSt
_080620F8:
	movs r0, #1
	bl sub_8062018
_080620FE:
	movs r0, #0
	bl sub_8062018
_08062104:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806210C
sub_806210C: @ 0x0806210C
	push {r7, lr}
	mov r7, sp
	ldr r0, _08062128 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08062122
	movs r0, #0xa0
	bl m4aSongNumStart
_08062122:
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062128: .4byte gPlaySt

	thumb_func_start MA_InitActor
MA_InitActor: @ 0x0806212C
	push {r4, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, [r7, #4]
	cmp r0, #0
	bne _08062140
	b _080621E0
_08062140:
	ldr r0, _080621E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r7, #8]
	str r1, [r0]
	ldr r0, _080621E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r0, [r7, #4]
	str r0, [r1]
	ldr r1, [r7, #8]
	adds r0, r1, #0
	bl StartMu
	ldr r1, _080621E8 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, #8
	adds r2, r1, r2
	str r0, [r2]
	ldr r0, _080621E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x18]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x18]
	ldr r0, _080621E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x1a]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x1a]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	adds r1, #0x53
	ldrb r0, [r1]
	cmp r0, #0x1b
	bne _080621E0
	ldr r0, _080621E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl HideMu
_080621E0:
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080621E8: .4byte gMapAnimSt

	thumb_func_start MA_SetActorFacing
MA_SetActorFacing: @ 0x080621EC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, [r7, #8]
	cmp r0, #1
	beq _08062284
	cmp r0, #1
	bgt _08062208
	cmp r0, #0
	beq _0806220E
	b _080622EE
_08062208:
	cmp r0, #2
	beq _080622A4
	b _080622EE
_0806220E:
	ldr r0, _08062280 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldr r1, _08062280 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08062280 @ =gMapAnimSt
	ldr r3, [r7, #4]
	adds r5, r3, #0
	lsls r4, r5, #2
	adds r4, r4, r3
	lsls r3, r4, #2
	adds r2, r2, r3
	ldr r3, [r2]
	movs r2, #0xe
	ldrsb r2, [r3, r2]
	ldr r3, _08062280 @ =gMapAnimSt
	ldr r4, [r7, #4]
	adds r6, r4, #0
	lsls r5, r6, #2
	adds r5, r5, r4
	lsls r4, r5, #2
	adds r3, r3, r4
	ldr r4, [r3]
	movs r3, #0xf
	ldrsb r3, [r4, r3]
	bl sub_80629FC
	str r0, [r7, #0xc]
	ldr r0, _08062280 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r1, [r7, #0xc]
	bl SetMuFacing
	b _080622EE
	.align 2, 0
_08062280: .4byte gMapAnimSt
_08062284:
	ldr r0, _080622A0 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl SetMuDefaultFacing
	b _080622EE
	.align 2, 0
_080622A0: .4byte gMapAnimSt
_080622A4:
	ldr r0, _080622F8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldr r1, _080622F8 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	movs r2, #0
	movs r3, #0
	bl sub_80629FC
	str r0, [r7, #0xc]
	ldr r0, _080622F8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r1, [r7, #0xc]
	bl SetMuFacing
_080622EE:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080622F8: .4byte gMapAnimSt

	thumb_func_start sub_80622FC
sub_80622FC: @ 0x080622FC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	ldr r0, _08062330 @ =gMapAnimSt
	ldr r1, [r0, #4]
	adds r0, r1, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl GetItemMaFacing
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	str r0, [r7]
	bl MA_SortMuLayers
	ldr r1, _08062330 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _08062368
	cmp r0, #2
	beq _08062334
	b _08062378
	.align 2, 0
_08062330: .4byte gMapAnimSt
_08062334:
	ldr r0, _08062374 @ =gBattleHits
	ldrh r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0806235E
	movs r0, #2
	movs r1, #1
	ldr r2, [r7]
	bl MA_SetActorFacing
	movs r0, #3
	movs r1, #1
	ldr r2, [r7]
	bl MA_SetActorFacing
_0806235E:
	movs r0, #1
	movs r1, #0
	ldr r2, [r7]
	bl MA_SetActorFacing
_08062368:
	movs r0, #0
	movs r1, #1
	ldr r2, [r7]
	bl MA_SetActorFacing
	b _08062378
	.align 2, 0
_08062374: .4byte gBattleHits
_08062378:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start MA_SortMuLayers
MA_SortMuLayers: @ 0x08062380
	push {r4, r7, lr}
	sub sp, #0x18
	mov r7, sp
	ldr r1, _080623A4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	str r0, [r7, #0x14]
	ldr r1, _080623A4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _080623CC
	cmp r0, #2
	beq _080623A8
	b _080623CE
	.align 2, 0
_080623A4: .4byte gMapAnimSt
_080623A8:
	ldr r0, _080623C8 @ =gBattleHits
	ldrh r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080623C4
	ldr r0, [r7, #0x14]
	adds r1, r0, #2
	str r1, [r7, #0x14]
_080623C4:
	b _080623CE
	.align 2, 0
_080623C8: .4byte gBattleHits
_080623CC:
	b _080623CE
_080623CE:
	movs r0, #0
	str r0, [r7, #8]
_080623D2:
	ldr r0, [r7, #8]
	ldr r1, [r7, #0x14]
	cmp r0, r1
	blt _080623DC
	b _080623FC
_080623DC:
	adds r0, r7, #0
	ldr r1, [r7, #8]
	adds r0, r0, r1
	ldr r2, [r7, #8]
	adds r1, r2, #0
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #8]
	b _080623D2
_080623FC:
	movs r0, #0
	str r0, [r7, #8]
_08062400:
	ldr r1, [r7, #0x14]
	subs r0, r1, #1
	ldr r1, [r7, #8]
	cmp r1, r0
	blt _0806240C
	b _08062540
_0806240C:
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #0xc]
_08062412:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0x14]
	cmp r0, r1
	blt _0806241C
	b _08062538
_0806241C:
	movs r0, #0
	str r0, [r7, #0x10]
	ldr r0, _0806249C @ =gMapAnimSt
	adds r1, r7, #0
	ldr r2, [r7, #8]
	adds r3, r1, r2
	ldrb r1, [r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _0806249C @ =gMapAnimSt
	adds r2, r7, #0
	ldr r3, [r7, #0xc]
	adds r4, r2, r3
	ldrb r2, [r4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldrb r0, [r0, #0xf]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	cmp r0, r1
	bne _080624A0
	ldr r0, _0806249C @ =gMapAnimSt
	adds r1, r7, #0
	ldr r2, [r7, #8]
	adds r3, r1, r2
	ldrb r1, [r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _0806249C @ =gMapAnimSt
	adds r2, r7, #0
	ldr r3, [r7, #0xc]
	adds r4, r2, r3
	ldrb r2, [r4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	cmp r0, r1
	blt _0806249A
	ldr r0, [r7, #0x10]
	adds r1, r0, #1
	str r1, [r7, #0x10]
_0806249A:
	b _080624E0
	.align 2, 0
_0806249C: .4byte gMapAnimSt
_080624A0:
	ldr r0, _08062534 @ =gMapAnimSt
	adds r1, r7, #0
	ldr r2, [r7, #8]
	adds r3, r1, r2
	ldrb r1, [r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08062534 @ =gMapAnimSt
	adds r2, r7, #0
	ldr r3, [r7, #0xc]
	adds r4, r2, r3
	ldrb r2, [r4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	ldrb r0, [r0, #0xf]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	cmp r0, r1
	blt _080624E0
	ldr r0, [r7, #0x10]
	adds r1, r0, #1
	str r1, [r7, #0x10]
_080624E0:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _0806252A
	adds r0, r7, #4
	adds r1, r7, #0
	ldr r2, [r7, #8]
	adds r1, r1, r2
	ldrb r2, [r1]
	strb r2, [r0]
	adds r0, r7, #0
	ldr r1, [r7, #8]
	adds r0, r0, r1
	adds r1, r7, #0
	ldr r2, [r7, #0xc]
	adds r1, r1, r2
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	adds r0, r7, #0
	ldr r1, [r7, #0xc]
	adds r0, r0, r1
	adds r1, r7, #4
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
_0806252A:
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _08062412
	.align 2, 0
_08062534: .4byte gMapAnimSt
_08062538:
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #8]
	b _08062400
_08062540:
	movs r0, #0
	str r0, [r7, #8]
_08062544:
	ldr r0, [r7, #8]
	ldr r1, [r7, #0x14]
	cmp r0, r1
	blt _0806254E
	b _08062590
_0806254E:
	ldr r0, _08062588 @ =gMapAnimSt
	adds r1, r7, #0
	ldr r2, [r7, #8]
	adds r3, r1, r2
	ldrb r1, [r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldr r1, _0806258C @ =gUnk_083075B4
	ldr r2, [r7, #8]
	adds r1, r1, r2
	ldrb r2, [r1]
	adds r1, r2, #0
	ldrh r2, [r0, #0x1e]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x1e]
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #8]
	b _08062544
	.align 2, 0
_08062588: .4byte gMapAnimSt
_0806258C: .4byte gUnk_083075B4
_08062590:
	add sp, #0x18
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8062598
sub_8062598: @ 0x08062598
	push {r7, lr}
	mov r7, sp
	ldr r0, _08062600 @ =gBattleUnitA
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x68
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08062604 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062604 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062604 @ =gMapAnimSt
	ldr r1, _08062608 @ =gBattleHits
	str r1, [r0, #0x50]
	bl sub_80619E8
	ldr r0, _08062600 @ =gBattleUnitA
	ldr r1, _0806260C @ =gBattleUnitB
	ldr r2, _08062608 @ =gBattleHits
	bl sub_8062890
	ldr r1, _08062610 @ =gUnk_08664C0C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062600: .4byte gBattleUnitA
_08062604: .4byte gMapAnimSt
_08062608: .4byte gBattleHits
_0806260C: .4byte gBattleUnitB
_08062610: .4byte gUnk_08664C0C

	thumb_func_start sub_8062614
sub_8062614: @ 0x08062614
	push {r7, lr}
	mov r7, sp
	ldr r0, _0806267C @ =gBattleUnitA
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x68
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08062680 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062680 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062680 @ =gMapAnimSt
	ldr r1, _08062684 @ =gBattleHits
	str r1, [r0, #0x50]
	bl sub_80619E8
	ldr r0, _0806267C @ =gBattleUnitA
	ldr r1, _08062688 @ =gBattleUnitB
	ldr r2, _08062684 @ =gBattleHits
	bl sub_8062890
	ldr r1, _0806268C @ =gUnk_08664C4C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806267C: .4byte gBattleUnitA
_08062680: .4byte gMapAnimSt
_08062684: .4byte gBattleHits
_08062688: .4byte gBattleUnitB
_0806268C: .4byte gUnk_08664C4C

	thumb_func_start sub_8062690
sub_8062690: @ 0x08062690
	push {r7, lr}
	mov r7, sp
	ldr r0, _08062720 @ =gBattleUnitA
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08062724 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062724 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062724 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x58
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062724 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x59
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08062720 @ =gBattleUnitA
	ldr r1, _08062728 @ =gBattleUnitB
	ldr r2, _0806272C @ =gBattleHits
	bl sub_8062890
	ldr r1, _08062730 @ =gUnk_08664C8C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062720: .4byte gBattleUnitA
_08062724: .4byte gMapAnimSt
_08062728: .4byte gBattleUnitB
_0806272C: .4byte gBattleHits
_08062730: .4byte gUnk_08664C8C

	thumb_func_start sub_8062734
sub_8062734: @ 0x08062734
	push {r7, lr}
	mov r7, sp
	ldr r0, _080627BC @ =gBattleUnitA
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x47
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _080627C0 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080627C0 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080627C0 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x58
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080627C0 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x59
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080627BC @ =gBattleUnitA
	ldr r1, _080627C4 @ =gBattleUnitB
	ldr r2, _080627C8 @ =gBattleHits
	bl sub_8062890
	ldr r1, _080627CC @ =gUnk_08664D5C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080627BC: .4byte gBattleUnitA
_080627C0: .4byte gMapAnimSt
_080627C4: .4byte gBattleUnitB
_080627C8: .4byte gBattleHits
_080627CC: .4byte gUnk_08664D5C

	thumb_func_start sub_80627D0
sub_80627D0: @ 0x080627D0
	push {r7, lr}
	mov r7, sp
	ldr r0, _080627F0 @ =gBattleSt
	ldrb r1, [r0, #1]
	movs r2, #0x40
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	beq _080627F4
	bl sub_8062734
	b _08062822
	.align 2, 0
_080627F0: .4byte gBattleSt
_080627F4:
	ldr r0, _08062828 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806282C @ =gBattleUnitA
	ldr r1, _08062830 @ =gBattleUnitB
	ldr r2, _08062834 @ =gBattleHits
	bl sub_806283C
	ldr r0, _0806282C @ =gBattleUnitA
	ldr r1, _08062830 @ =gBattleUnitB
	ldr r2, _08062834 @ =gBattleHits
	bl sub_8062890
	ldr r1, _08062838 @ =gUnk_08664DA4
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
_08062822:
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062828: .4byte gMapAnimSt
_0806282C: .4byte gBattleUnitA
_08062830: .4byte gBattleUnitB
_08062834: .4byte gBattleHits
_08062838: .4byte gUnk_08664DA4

	thumb_func_start sub_806283C
sub_806283C: @ 0x0806283C
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F784
	ldr r1, _0806288C @ =gMapAnimSt
	adds r2, r1, #0
	adds r1, #0x5e
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _0806288C @ =gMapAnimSt
	ldr r1, [r7, #8]
	str r1, [r0, #0x50]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F7A4
	ldr r1, _0806288C @ =gMapAnimSt
	str r0, [r1, #0x54]
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806288C: .4byte gMapAnimSt

	thumb_func_start sub_8062890
sub_8062890: @ 0x08062890
	push {r4, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	movs r0, #0
	ldr r1, [r7]
	ldr r2, [r7]
	bl MA_InitActor
	ldr r1, _08062920 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	bls _080628C4
	ldr r1, _08062924 @ =gBattleUnitB
	adds r0, r1, #0
	bl HideUnitSprite
	ldr r1, [r7, #4]
	ldr r2, [r7, #4]
	movs r0, #1
	bl MA_InitActor
_080628C4:
	ldr r0, _08062928 @ =gBattleHits
	ldrh r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08062906
	ldr r0, _0806292C @ =gBattleSt
	ldr r2, [r0, #0xc]
	movs r0, #2
	ldr r1, [r7]
	bl MA_InitActor
	ldr r0, _0806292C @ =gBattleSt
	ldr r2, [r0, #0x10]
	movs r0, #3
	ldr r1, [r7]
	bl MA_InitActor
	ldr r0, _0806292C @ =gBattleSt
	ldr r1, [r0, #0xc]
	adds r0, r1, #0
	bl HideUnitSprite
	ldr r0, _0806292C @ =gBattleSt
	ldr r1, [r0, #0x10]
	adds r0, r1, #0
	bl HideUnitSprite
_08062906:
	bl sub_80622FC
	movs r0, #0
	str r0, [r7, #0xc]
_0806290E:
	ldr r1, _08062920 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	ldr r1, [r7, #0xc]
	cmp r1, r0
	blt _08062930
	b _080629A8
	.align 2, 0
_08062920: .4byte gMapAnimSt
_08062924: .4byte gBattleUnitB
_08062928: .4byte gBattleHits
_0806292C: .4byte gBattleSt
_08062930:
	ldr r0, _080629A4 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, _080629A4 @ =gMapAnimSt
	ldr r2, [r7, #0xc]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, #4
	adds r2, r1, r2
	ldr r1, [r2]
	adds r2, r1, #0
	adds r1, #0x6e
	ldrb r2, [r0, #0xd]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0xd]
	ldr r0, _080629A4 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl GetUnitMaxHp
	ldr r1, _080629A4 @ =gMapAnimSt
	ldr r2, [r7, #0xc]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0xc]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1, #0xc]
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _0806290E
	.align 2, 0
_080629A4: .4byte gMapAnimSt
_080629A8:
	ldr r0, _080629F8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080629F8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080629F8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080629F8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080629F8: .4byte gDispIo

	thumb_func_start sub_80629FC
sub_80629FC: @ 0x080629FC
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #8]
	ldr r2, [r7]
	subs r0, r0, r2
	cmp r0, #0
	blt _08062A22
	ldr r0, [r7, #8]
	ldr r2, [r7]
	subs r1, r0, r2
	adds r0, r1, #0
	lsls r2, r0, #1
	adds r1, r2, #0
	b _08062A2E
_08062A22:
	ldr r0, [r7]
	ldr r2, [r7, #8]
	subs r1, r0, r2
	adds r0, r1, #0
	lsls r2, r0, #1
	adds r1, r2, #0
_08062A2E:
	ldr r0, [r7, #0xc]
	ldr r2, [r7, #4]
	subs r0, r0, r2
	cmp r0, #0
	blt _08062A44
	ldr r0, [r7, #0xc]
	ldr r2, [r7, #4]
	subs r0, r0, r2
	cmp r1, r0
	blt _08062A50
	b _08062A64
_08062A44:
	ldr r0, [r7, #4]
	ldr r2, [r7, #0xc]
	subs r0, r0, r2
	cmp r1, r0
	blt _08062A50
	b _08062A64
_08062A50:
	ldr r0, [r7, #4]
	ldr r2, [r7, #0xc]
	cmp r0, r2
	bge _08062A5E
	movs r0, #2
	b _08062A76
_08062A5C:
	.byte 0x01, 0xE0
_08062A5E:
	movs r0, #3
	b _08062A76
_08062A62:
	.byte 0x08, 0xE0
_08062A64:
	ldr r0, [r7]
	ldr r2, [r7, #8]
	cmp r0, r2
	bge _08062A72
	movs r0, #1
	b _08062A76
_08062A70:
	.byte 0x01, 0xE0
_08062A72:
	movs r0, #0
	b _08062A76
_08062A76:
	add sp, #0x10
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8062A80
sub_8062A80: @ 0x08062A80
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r4, _08062AB0 @ =gUnk_082DC618
	movs r0, #0
	bl GetBgChrOffset
	ldr r1, [r7]
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r2, r3
	adds r2, r0, r1
	adds r0, r4, #0
	adds r1, r2, #0
	bl Decompress
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062AB0: .4byte gUnk_082DC618

	thumb_func_start sub_8062AB4
sub_8062AB4: @ 0x08062AB4
	push {r4, r7, lr}
	sub sp, #0x24
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #0x30]
	adds r1, r7, #0
	adds r1, #0x10
	strh r0, [r1]
	movs r0, #7
	str r0, [r7, #0x1c]
_08062ACE:
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _08062AD6
	b _08062B4A
_08062AD6:
	adds r0, r7, #0
	adds r0, #0x14
	ldr r1, [r7, #0x1c]
	adds r4, r0, r1
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #0xa
	bl __modsi3
	adds r1, r0, #0
	adds r0, r1, #0
	adds r0, #0x30
	ldrb r1, [r4]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r1, #0
	strb r0, [r4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #0xa
	bl __divsi3
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	cmp r0, #0
	bne _08062B42
	ldr r0, [r7, #0x1c]
	subs r1, r0, #1
	str r1, [r7, #0x20]
_08062B16:
	ldr r0, [r7, #0x20]
	cmp r0, #0
	bge _08062B1E
	b _08062B40
_08062B1E:
	adds r0, r7, #0
	adds r0, #0x14
	ldr r1, [r7, #0x20]
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x20
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7, #0x20]
	subs r1, r0, #1
	str r1, [r7, #0x20]
	b _08062B16
_08062B40:
	b _08062B4A
_08062B42:
	ldr r0, [r7, #0x1c]
	subs r1, r0, #1
	str r1, [r7, #0x1c]
	b _08062ACE
_08062B4A:
	adds r0, r7, #0
	adds r0, #0x14
	adds r1, r0, #7
	ldr r2, [r7, #8]
	ldr r3, [r7, #0xc]
	ldr r0, [r7]
	bl sub_8013E8C
	ldr r0, [r7, #0xc]
	subs r1, r0, #1
	str r1, [r7, #0x1c]
_08062B60:
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bgt _08062B68
	b _08062B96
_08062B68:
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #7
	ldr r2, [r7, #0x1c]
	subs r1, r1, r2
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0x20
	beq _08062B7C
	b _08062B96
_08062B7C:
	ldr r0, [r7, #0x1c]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, [r7]
	subs r0, r1, r0
	adds r1, r7, #0
	adds r1, #0x10
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, [r7, #0x1c]
	subs r1, r0, #1
	str r1, [r7, #0x1c]
	b _08062B60
_08062B96:
	add sp, #0x24
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8062BA0
sub_8062BA0: @ 0x08062BA0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0x20
	bl sub_8062A80
	ldr r1, _08062BCC @ =0x06000540
	ldr r0, [r7]
	bl Decompress
	ldr r1, _08062BD0 @ =gUnk_082E278C
	adds r0, r1, #0
	movs r1, #0xa0
	movs r2, #0x20
	bl ApplyPaletteExt
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062BCC: .4byte 0x06000540
_08062BD0: .4byte gUnk_082E278C

	thumb_func_start sub_8062BD4
sub_8062BD4: @ 0x08062BD4
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #4]
	ldr r1, [r0]
	ldr r0, [r7, #0xc]
	cmp r1, r0
	ble _08062BF2
	ldr r0, [r7, #0xc]
	str r0, [r7, #0x10]
	b _08062BF8
_08062BF2:
	ldr r0, [r7, #4]
	ldr r1, [r0]
	str r1, [r7, #0x10]
_08062BF8:
	ldr r0, [r7]
	ldr r2, [r7, #0x1c]
	adds r1, r2, #0
	ldr r3, [r7, #0x10]
	adds r2, r3, #0
	adds r1, r1, r2
	ldr r3, [r7, #8]
	adds r2, r3, #0
	lsls r3, r2, #0xc
	adds r2, r3, #0
	adds r1, r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7, #4]
	ldr r1, [r7, #4]
	ldr r2, [r1]
	adds r1, r2, #1
	ldr r2, [r7, #0xc]
	subs r1, r1, r2
	str r1, [r0]
	ldr r0, [r7, #4]
	ldr r1, [r0]
	cmp r1, #0
	bge _08062C2E
	ldr r0, [r7, #4]
	movs r1, #0
	str r1, [r0]
_08062C2E:
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8062C38
sub_8062C38: @ 0x08062C38
	push {r4, r7, lr}
	sub sp, #0x20
	add r7, sp, #4
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	movs r0, #0
	str r0, [r7, #0x14]
	ldr r0, [r7, #0x28]
	str r0, [r7, #0x18]
_08062C4E:
	ldr r0, [r7, #0x18]
	ldrh r1, [r0]
	cmp r1, #0
	bne _08062C58
	b _08062C6C
_08062C58:
	ldr r1, [r7, #0x14]
	subs r0, r1, #1
	ldr r1, [r7, #0x18]
	ldrh r2, [r1]
	adds r0, r0, r2
	str r0, [r7, #0x14]
	ldr r0, [r7, #0x18]
	adds r1, r0, #4
	str r1, [r7, #0x18]
	b _08062C4E
_08062C6C:
	ldr r0, [r7, #0x14]
	adds r1, r0, #1
	str r1, [r7, #0x14]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	cmp r0, r1
	bne _08062C80
	ldr r0, [r7, #0x14]
	str r0, [r7, #0x10]
	b _08062C94
_08062C80:
	ldr r0, [r7, #0x14]
	lsls r1, r0, #8
	adds r0, r1, #0
	ldr r1, [r7, #4]
	bl __divsi3
	ldr r1, [r7, #8]
	muls r0, r1, r0
	asrs r1, r0, #8
	str r1, [r7, #0x10]
_08062C94:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _08062CA6
	ldr r0, [r7, #8]
	cmp r0, #0
	ble _08062CA6
	ldr r0, [r7, #0x10]
	adds r1, r0, #1
	str r1, [r7, #0x10]
_08062CA6:
	ldr r0, [r7, #0x28]
	str r0, [r7, #0x18]
_08062CAA:
	ldr r0, [r7, #0x18]
	ldrh r1, [r0]
	cmp r1, #0
	bne _08062CB4
	b _08062CE8
_08062CB4:
	adds r1, r7, #0
	adds r1, #0x10
	ldr r0, _08062CE4 @ =gUnk_08664F00
	ldr r2, [r7, #0xc]
	adds r3, r2, #0
	lsls r2, r3, #2
	adds r0, r0, r2
	ldr r2, [r0]
	ldr r0, [r7, #0x18]
	ldrh r3, [r0]
	ldr r4, [r7, #0x18]
	adds r0, r4, #2
	ldrh r4, [r0]
	str r4, [sp]
	ldr r0, [r7]
	bl sub_8062BD4
	ldr r0, [r7]
	adds r1, r0, #2
	str r1, [r7]
	ldr r0, [r7, #0x18]
	adds r1, r0, #4
	str r1, [r7, #0x18]
	b _08062CAA
	.align 2, 0
_08062CE4: .4byte gUnk_08664F00
_08062CE8:
	add sp, #0x20
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8062CF0
sub_8062CF0: @ 0x08062CF0
	push {r7, lr}
	mov r7, sp
	ldr r1, _08062D04 @ =gUnk_08664F20
	adds r0, r1, #0
	bl Proc_EndEach
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062D04: .4byte gUnk_08664F20

	thumb_func_start MA_StartBattleInfoBox
MA_StartBattleInfoBox: @ 0x08062D08
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, _08062D60 @ =gUnk_08664F20
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x2e
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r1, [r7, #0xc]
	ldr r2, [r7, #4]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x2f
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #8]
	str r1, [r0, #0x30]
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062D60: .4byte gUnk_08664F20

	thumb_func_start sub_8062D64
sub_8062D64: @ 0x08062D64
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetOnHBlankA
	bl ClearBg0Bg1
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8062D80
sub_8062D80: @ 0x08062D80
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _08062DC8 @ =gUnk_082DC6DC
	movs r0, #1
	bl GetBgChrOffset
	ldr r2, _08062DCC @ =0x06000020
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r1, _08062DD0 @ =gUnk_082E25D4
	adds r0, r1, #0
	bl sub_8062BA0
	ldr r1, _08062DD4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	cmp r0, #1
	beq _08062DD8
	cmp r0, #2
	beq _08062DE6
	b _08062E4C
	.align 2, 0
_08062DC8: .4byte gUnk_082DC6DC
_08062DCC: .4byte 0x06000020
_08062DD0: .4byte gUnk_082E25D4
_08062DD4: .4byte gMapAnimSt
_08062DD8:
	movs r2, #5
	rsbs r2, r2, #0
	ldr r0, [r7]
	movs r1, #0
	bl sub_8063120
	b _08062E4C
_08062DE6:
	movs r0, #0
	str r0, [r7, #4]
	ldr r1, _08062E08 @ =gMapAnimSt
	ldr r0, [r1]
	ldr r1, _08062E08 @ =gMapAnimSt
	ldr r2, [r1, #0x14]
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	cmp r0, r1
	ble _08062E0C
	movs r0, #1
	str r0, [r7, #4]
	b _08062E2C
	.align 2, 0
_08062E08: .4byte gMapAnimSt
_08062E0C:
	ldr r0, _08062E48 @ =gMapAnimSt
	ldr r1, [r0]
	movs r0, #0xb
	ldrsb r0, [r1, r0]
	movs r1, #0xc0
	ands r0, r1
	ldr r1, _08062E48 @ =gMapAnimSt
	ldr r2, [r1, #0x14]
	movs r1, #0xb
	ldrsb r1, [r2, r1]
	movs r2, #0xc0
	ands r1, r2
	cmp r0, r1
	ble _08062E2C
	movs r0, #1
	str r0, [r7, #4]
_08062E2C:
	ldr r1, [r7, #4]
	movs r2, #0xa
	rsbs r2, r2, #0
	ldr r0, [r7]
	bl sub_8063120
	movs r0, #1
	ldr r2, [r7, #4]
	subs r1, r0, r2
	ldr r0, [r7]
	movs r2, #0
	bl sub_8063120
	b _08062E4C
	.align 2, 0
_08062E48: .4byte gMapAnimSt
_08062E4C:
	bl sub_8069C34
	ldr r0, _08062E8C @ =gMapAnimSt
	ldrb r1, [r0, #0x11]
	adds r0, r1, #0
	lsls r1, r0, #3
	adds r0, r1, #0
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	ldr r1, _08062E8C @ =gMapAnimSt
	ldrb r2, [r1, #0x11]
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r2, r1, #0
	adds r2, #0x20
	adds r1, r2, #0
	lsls r2, r1, #0x10
	lsrs r1, r2, #0x10
	ldr r3, _08062E90 @ =gPal
	ldrh r2, [r3, #0x22]
	ldr r4, _08062E90 @ =gPal
	adds r3, r4, #0
	adds r4, #0x42
	ldrh r3, [r4]
	bl sub_806A0DC
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062E8C: .4byte gMapAnimSt
_08062E90: .4byte gPal

	thumb_func_start sub_8062E94
sub_8062E94: @ 0x08062E94
	push {r4, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	adds r0, r7, #0
	adds r0, #0xa
	movs r1, #0
	strb r1, [r0]
	movs r0, #0
	str r0, [r7, #4]
_08062EA8:
	ldr r1, _08062EB8 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	ldr r1, [r7, #4]
	cmp r1, r0
	blt _08062EBC
	b _08062FB4
	.align 2, 0
_08062EB8: .4byte gMapAnimSt
_08062EBC:
	adds r0, r7, #0
	adds r0, #8
	ldr r1, _08062FAC @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrh r2, [r1, #0xe]
	strh r2, [r0]
	adds r1, r7, #0
	adds r1, #8
	ldrh r0, [r1]
	ldr r1, _08062FAC @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0xd]
	lsls r1, r2, #4
	cmp r0, r1
	ble _08062F00
	adds r0, r7, #0
	adds r0, #8
	adds r1, r7, #0
	adds r1, #8
	ldrh r2, [r1]
	adds r1, r2, #0
	subs r1, #0x10
	adds r2, r1, #0
	strh r2, [r0]
_08062F00:
	adds r1, r7, #0
	adds r1, #8
	ldrh r0, [r1]
	ldr r1, _08062FAC @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0xd]
	lsls r1, r2, #4
	cmp r0, r1
	bge _08062F54
	adds r0, r7, #0
	adds r0, #8
	adds r1, r7, #0
	adds r1, #8
	ldrh r2, [r1]
	adds r1, r2, #4
	adds r2, r1, #0
	strh r2, [r0]
	adds r0, r7, #0
	adds r0, #8
	ldrh r1, [r0]
	movs r2, #0xf
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	bne _08062F54
	ldr r0, _08062FB0 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08062F54
	movs r0, #0x75
	bl m4aSongNumStart
_08062F54:
	adds r0, r7, #0
	adds r0, #8
	ldr r1, _08062FAC @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrh r0, [r0]
	ldrh r1, [r1, #0xe]
	cmp r0, r1
	beq _08062FA2
	ldr r0, _08062FAC @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	adds r1, r7, #0
	adds r1, #8
	ldrh r2, [r0, #0xe]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0xe]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	bl sub_8062FE8
	adds r0, r7, #0
	adds r0, #0xa
	movs r1, #1
	strb r1, [r0]
_08062FA2:
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08062EA8
	.align 2, 0
_08062FAC: .4byte gMapAnimSt
_08062FB0: .4byte gPlaySt
_08062FB4:
	adds r0, r7, #0
	adds r0, #0xa
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	bne _08062FDC
	ldr r1, _08062FE4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	cmp r0, #0
	beq _08062FDC
	ldr r0, _08062FE4 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5f
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
_08062FDC:
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08062FE4: .4byte gMapAnimSt

	thumb_func_start sub_8062FE8
sub_8062FE8: @ 0x08062FE8
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _080630B8 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0x11]
	adds r0, r1, #2
	lsls r1, r0, #5
	adds r0, r1, #2
	ldr r1, _080630B8 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0x10]
	adds r0, r0, r2
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080630BC @ =gBg0Tm
	adds r0, r0, r1
	ldr r1, _080630B8 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrh r2, [r1, #0xe]
	lsrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	lsrs r1, r2, #0x10
	ldr r2, _080630C0 @ =0x00005020
	movs r3, #0
	str r3, [sp]
	movs r3, #3
	bl sub_8062AB4
	ldr r0, _080630B8 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0x11]
	adds r0, r1, #2
	lsls r1, r0, #5
	adds r0, r1, #3
	ldr r1, _080630B8 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0x10]
	adds r0, r0, r2
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080630BC @ =gBg0Tm
	adds r0, r0, r1
	ldr r1, _080630B8 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r3, r1, r2
	ldrb r1, [r3, #0xc]
	ldr r2, _080630B8 @ =gMapAnimSt
	ldr r3, [r7, #4]
	adds r5, r3, #0
	lsls r4, r5, #2
	adds r4, r4, r3
	lsls r3, r4, #2
	adds r2, r2, r3
	ldrh r3, [r2, #0xe]
	lsrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	lsrs r2, r3, #0x10
	ldr r3, _080630C4 @ =gUnk_08664EE4
	str r3, [sp]
	movs r3, #0
	bl sub_8062C38
	movs r0, #1
	bl EnableBgSync
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080630B8: .4byte gMapAnimSt
_080630BC: .4byte gBg0Tm
_080630C0: .4byte 0x00005020
_080630C4: .4byte gUnk_08664EE4

	thumb_func_start sub_80630C8
sub_80630C8: @ 0x080630C8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	movs r1, #0xb
	ldrsb r1, [r0, r1]
	movs r2, #0xc0
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0x40
	beq _08063104
	cmp r0, #0x40
	bgt _080630EA
	cmp r0, #0
	beq _080630F4
	b _08063114
_080630EA:
	cmp r0, #0x80
	beq _080630FC
	cmp r0, #0xc0
	beq _0806310C
	b _08063114
_080630F4:
	ldr r0, _080630F8 @ =gUnk_082DC840
	b _08063118
	.align 2, 0
_080630F8: .4byte gUnk_082DC840
_080630FC:
	ldr r0, _08063100 @ =gUnk_082DC860
	b _08063118
	.align 2, 0
_08063100: .4byte gUnk_082DC860
_08063104:
	ldr r0, _08063108 @ =gUnk_082DC880
	b _08063118
	.align 2, 0
_08063108: .4byte gUnk_082DC880
_0806310C:
	ldr r0, _08063110 @ =gUnk_082DC8A0
	b _08063118
	.align 2, 0
_08063110: .4byte gUnk_082DC8A0
_08063114:
	movs r0, #0
	b _08063118
_08063118:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8063120
sub_8063120: @ 0x08063120
	push {r4, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x2e
	ldr r3, [r7, #8]
	adds r2, r3, #0
	ldrb r3, [r1]
	adds r1, r2, r3
	ldrb r2, [r0, #0x10]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0x10]
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x2f
	ldrb r2, [r0, #0x11]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0x11]
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_80630C8
	ldr r2, [r7, #4]
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080632B4 @ =gUnk_08664F08
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #2
	ldr r3, _080632B0 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x5e
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r2, _080632B8 @ =gBuf
	adds r0, r1, #0
	adds r1, r2, #0
	bl Decompress
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0x11]
	lsls r0, r1, #5
	ldr r1, _080632B0 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0x10]
	adds r0, r0, r2
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080632BC @ =gBg1Tm
	adds r0, r0, r1
	ldr r1, _080632B8 @ =gBuf
	ldr r3, [r7, #4]
	adds r2, r3, #0
	adds r3, r2, #1
	adds r2, r3, #0
	lsls r3, r2, #0xc
	adds r2, r3, #0
	movs r3, #1
	orrs r2, r3
	adds r4, r2, #0
	lsls r3, r4, #0x10
	lsrs r2, r3, #0x10
	bl TmApplyTsa_t
	movs r0, #2
	bl EnableBgSync
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0x11]
	lsls r2, r1, #5
	adds r0, r2, #1
	ldr r1, _080632B0 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1, #0x10]
	adds r0, r0, r2
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080632C0 @ =gBg0Tm
	adds r4, r0, r1
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [r1]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	bl PutStringCentered
	movs r0, #1
	bl EnableBgSync
	ldr r0, _080632B0 @ =gMapAnimSt
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, _080632B0 @ =gMapAnimSt
	ldr r2, [r7, #4]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r3, [r1, #0xd]
	adds r2, r3, #0
	lsls r1, r2, #4
	ldrh r2, [r0, #0xe]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0xe]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	bl sub_8062FE8
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080632B0: .4byte gMapAnimSt
_080632B4: .4byte gUnk_08664F08
_080632B8: .4byte gBuf
_080632BC: .4byte gBg1Tm
_080632C0: .4byte gBg0Tm

	thumb_func_start sub_80632C4
sub_80632C4: @ 0x080632C4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldrh r1, [r0, #0x2a]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x2a]
	ldr r0, [r7]
	bl sub_80633B0
	ldr r0, _080633AC @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _080633AC @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _080633AC @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfe
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfd
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080633AC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080633AC: .4byte gDispIo

	thumb_func_start sub_80633B0
sub_80633B0: @ 0x080633B0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08063490 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063490 @ =gDispIo
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x2f
	ldrb r1, [r2]
	adds r2, r1, #2
	adds r3, r2, #0
	lsls r1, r3, #3
	ldr r2, [r7]
	ldrh r3, [r2, #0x2a]
	adds r2, r3, #0
	adds r3, r1, #0
	subs r1, r3, r2
	adds r2, r0, #0
	adds r0, #0x31
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08063490 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063490 @ =gDispIo
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x2f
	ldrb r1, [r2]
	adds r2, r1, #2
	adds r3, r2, #0
	lsls r1, r3, #3
	ldr r2, [r7]
	ldrh r3, [r2, #0x2a]
	adds r2, r3, #0
	adds r3, r1, #0
	adds r1, r2, r3
	adds r2, r0, #0
	adds r0, #0x30
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, [r7]
	ldr r1, [r7]
	ldrh r2, [r1, #0x2a]
	adds r1, r2, #2
	ldrh r2, [r0, #0x2a]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x2a]
	ldr r0, [r7]
	movs r2, #0x2a
	ldrsh r1, [r0, r2]
	cmp r1, #0x10
	ble _08063488
	ldr r0, _08063490 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063490 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063490 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, [r7]
	bl Proc_Break
_08063488:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063490: .4byte gDispIo

	thumb_func_start sub_8063494
sub_8063494: @ 0x08063494
	push {r7, lr}
	sub sp, #0x10
	add r7, sp, #4
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, [r7, #4]
	adds r0, r1, #1
	lsls r1, r0, #5
	adds r0, r1, #2
	ldr r1, [r7]
	adds r0, r0, r1
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080634F4 @ =gBg0Tm
	adds r0, r0, r1
	ldr r1, [r7, #8]
	ldr r2, _080634F8 @ =0x0000521F
	ldr r3, _080634FC @ =0x00005229
	str r3, [sp]
	movs r3, #2
	bl sub_8062AB4
	ldr r1, [r7, #4]
	adds r0, r1, #1
	lsls r1, r0, #5
	adds r0, r1, #3
	ldr r1, [r7]
	adds r0, r0, r1
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080634F4 @ =gBg0Tm
	adds r0, r0, r1
	ldr r2, [r7, #8]
	ldr r1, _08063500 @ =gUnk_08664F58
	str r1, [sp]
	movs r1, #0x63
	movs r3, #0
	bl sub_8062C38
	movs r0, #1
	bl EnableBgSync
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080634F4: .4byte gBg0Tm
_080634F8: .4byte 0x0000521F
_080634FC: .4byte 0x00005229
_08063500: .4byte gUnk_08664F58

	thumb_func_start sub_8063504
sub_8063504: @ 0x08063504
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _08063594 @ =gUnk_08113584
	movs r0, #0
	bl GetBgChrOffset
	ldr r2, _08063598 @ =0x06004000
	adds r1, r0, r2
	adds r0, r4, #0
	movs r2, #0xe0
	bl RegisterDataMove
	ldr r4, _0806359C @ =gUnk_08113884
	movs r0, #0
	bl GetBgChrOffset
	ldr r2, _080635A0 @ =0x060040E0
	adds r1, r0, r2
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r4, #0
	bl RegisterDataMove
	ldr r4, _080635A4 @ =gUnk_08113B84
	movs r0, #0
	bl GetBgChrOffset
	ldr r2, _080635A8 @ =0x060043E0
	adds r1, r0, r2
	movs r2, #0xb0
	lsls r2, r2, #1
	adds r0, r4, #0
	bl RegisterDataMove
	ldr r1, _080635AC @ =gUnk_08113D50
	adds r0, r1, #0
	movs r1, #0xa0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080635B0 @ =gBg0Tm+0x20C
	ldr r1, _080635B4 @ =gUnk_082DC5B0
	movs r2, #0xa4
	lsls r2, r2, #7
	bl TmApplyTsa_t
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r0, #0
	ldrsh r2, [r1, r0]
	movs r0, #6
	movs r1, #8
	bl sub_8063494
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063594: .4byte gUnk_08113584
_08063598: .4byte 0x06004000
_0806359C: .4byte gUnk_08113884
_080635A0: .4byte 0x060040E0
_080635A4: .4byte gUnk_08113B84
_080635A8: .4byte 0x060043E0
_080635AC: .4byte gUnk_08113D50
_080635B0: .4byte gBg0Tm+0x20C
_080635B4: .4byte gUnk_082DC5B0

	thumb_func_start sub_80635B8
sub_80635B8: @ 0x080635B8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080635DC @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _080635D2
	movs r0, #0x74
	bl m4aSongNumStart
_080635D2:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080635DC: .4byte gPlaySt

	thumb_func_start sub_80635E0
sub_80635E0: @ 0x080635E0
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x63
	ble _0806362C
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
_0806362C:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r0, #0
	ldrsh r2, [r1, r0]
	movs r0, #6
	movs r1, #8
	bl sub_8063494
	ldr r1, [r7]
	adds r0, r1, #0
	adds r4, r1, #0
	adds r4, #0x64
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r0, #0
	ldrsh r2, [r1, r0]
	adds r0, r2, #0
	movs r1, #0x64
	bl __modsi3
	adds r1, r0, #0
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x10
	cmp r0, r1
	bne _08063672
	ldr r0, [r7]
	bl Proc_Break
	movs r0, #0x74
	bl m4aSongNumStop
_08063672:
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806367C
sub_806367C: @ 0x0806367C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x6a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	bl sub_806376C
	ldr r0, _08063768 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063768 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063768 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfe
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfd
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063768 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063768: .4byte gDispIo

	thumb_func_start sub_806376C
sub_806376C: @ 0x0806376C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08063844 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063844 @ =gDispIo
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x6a
	ldrh r3, [r2]
	adds r1, r3, #0
	movs r2, #0x4c
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x31
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08063844 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063844 @ =gDispIo
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x6a
	ldrh r1, [r2]
	adds r2, r1, #0
	adds r1, r2, #0
	adds r1, #0x4c
	adds r2, r0, #0
	adds r0, #0x30
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x6a
	ldrh r3, [r2]
	adds r1, r3, #2
	adds r2, r0, #0
	adds r0, #0x6a
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x6a
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xc
	ble _0806383C
	ldr r0, _08063844 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063844 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063844 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, [r7]
	bl Proc_Break
_0806383C:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063844: .4byte gDispIo

	thumb_func_start sub_8063848
sub_8063848: @ 0x08063848
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x63
	bgt _08063860
	b _08063872
_08063860:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x68
	movs r0, #0
	ldrsh r2, [r1, r0]
	adds r0, r2, #0
	ldr r1, [r7]
	bl sub_8067CF8
_08063872:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806387C
sub_806387C: @ 0x0806387C
	push {r7, lr}
	mov r7, sp
	ldr r1, _08063890 @ =gUnk_086650AC
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063890: .4byte gUnk_086650AC

	thumb_func_start sub_8063894
sub_8063894: @ 0x08063894
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x30
	add r7, sp, #8
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, _08063920 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r2, #8
	ldrsh r1, [r0, r2]
	adds r0, r1, #0
	bl GetPersonInfo
	str r0, [r7, #0xc]
	ldr r1, _08063920 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r4, #0xe
	ldrsh r1, [r0, r4]
	adds r0, r1, #0
	bl GetJobInfo
	str r0, [r7, #0x10]
	ldr r1, _08063920 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r5, #8
	ldrsh r1, [r0, r5]
	str r1, [r7, #0x14]
	ldr r1, _08063920 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r6, #0xe
	ldrsh r1, [r0, r6]
	str r1, [r7, #0x18]
	ldr r1, _08063920 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r2, #0x10
	ldrsh r1, [r0, r2]
	str r1, [r7, #0x1c]
	ldr r0, [r7, #4]
	cmp r0, #9
	bls _08063912
	b _08063CE8
_08063912:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #2
	ldr r1, _08063924 @ =_08063928
	adds r0, r0, r1
	ldr r1, [r0]
	mov pc, r1
	.align 2, 0
_08063920: .4byte gUnk_086650A8
_08063924: .4byte _08063928
_08063928: @ jump table
	.4byte _08063950 @ case 0
	.4byte _080639D8 @ case 1
	.4byte _08063A54 @ case 2
	.4byte _08063AD0 @ case 3
	.4byte _08063B58 @ case 4
	.4byte _08063BEC @ case 5
	.4byte _08063BEC @ case 6
	.4byte _08063BEC @ case 7
	.4byte _08063BEC @ case 8
	.4byte _08063BEC @ case 9
_08063950:
	ldr r0, _080639D0 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	adds r1, r0, #0
	adds r1, #0x14
	adds r0, r1, #0
	bl ClearText
	ldr r0, _080639D0 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x14
	ldr r2, [r7, #8]
	ldr r3, [r7, #0x14]
	movs r1, #0x10
	bl Text_InsertDrawNumberOrBlank
	ldr r0, [r7, #0xc]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	ldr r1, _080639D0 @ =gUnk_086650A8
	ldr r2, [r7]
	movs r3, #0x64
	muls r2, r3, r2
	adds r3, r2, #0
	adds r3, #8
	ldr r1, [r1]
	adds r2, r3, r1
	adds r1, r2, #0
	adds r1, #0x14
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #1
	adds r3, r3, r2
	lsls r2, r3, #3
	ldr r3, _080639D4 @ =gBg0Tm+0xC
	adds r2, r2, r3
	ldr r3, [r7, #8]
	movs r4, #0
	str r4, [sp]
	str r0, [sp, #4]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0x18
	bl PutDrawText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_080639D0: .4byte gUnk_086650A8
_080639D4: .4byte gBg0Tm+0xC
_080639D8:
	ldr r0, _08063A4C @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	adds r1, r0, #0
	adds r1, #0x1c
	adds r0, r1, #0
	bl ClearText
	ldr r0, _08063A4C @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x1c
	ldr r2, [r7, #8]
	ldr r3, _08063A4C @ =gUnk_086650A8
	ldr r1, [r3]
	ldr r3, [r7]
	movs r4, #0x64
	muls r3, r4, r3
	adds r1, r1, r3
	movs r4, #0xa
	ldrsh r3, [r1, r4]
	movs r1, #8
	bl Text_InsertDrawNumberOrBlank
	ldr r0, _08063A4C @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x1c
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #3
	ldr r2, _08063A50 @ =gBg0Tm+0x8E
	adds r1, r1, r2
	bl PutText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_08063A4C: .4byte gUnk_086650A8
_08063A50: .4byte gBg0Tm+0x8E
_08063A54:
	ldr r0, _08063AC8 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	adds r1, r0, #0
	adds r1, #0x24
	adds r0, r1, #0
	bl ClearText
	ldr r0, _08063AC8 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x24
	ldr r2, [r7, #8]
	ldr r3, _08063AC8 @ =gUnk_086650A8
	ldr r1, [r3]
	ldr r3, [r7]
	movs r4, #0x64
	muls r3, r4, r3
	adds r1, r1, r3
	movs r5, #0xc
	ldrsh r3, [r1, r5]
	movs r1, #8
	bl Text_InsertDrawNumberOrBlank
	ldr r0, _08063AC8 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x24
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #3
	ldr r2, _08063ACC @ =gBg0Tm+0x94
	adds r1, r1, r2
	bl PutText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_08063AC8: .4byte gUnk_086650A8
_08063ACC: .4byte gBg0Tm+0x94
_08063AD0:
	ldr r0, _08063B50 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	adds r1, r0, #0
	adds r1, #0x2c
	adds r0, r1, #0
	bl ClearText
	ldr r0, _08063B50 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x2c
	ldr r2, [r7, #8]
	ldr r3, [r7, #0x18]
	movs r1, #0x10
	bl Text_InsertDrawNumberOrBlank
	ldr r0, [r7, #0x10]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	ldr r1, _08063B50 @ =gUnk_086650A8
	ldr r2, [r7]
	movs r3, #0x64
	muls r2, r3, r2
	adds r3, r2, #0
	adds r3, #8
	ldr r1, [r1]
	adds r2, r3, r1
	adds r1, r2, #0
	adds r1, #0x2c
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #1
	adds r3, r3, r2
	lsls r2, r3, #3
	ldr r3, _08063B54 @ =gBg0Tm+0x10C
	adds r2, r2, r3
	ldr r3, [r7, #8]
	movs r4, #0
	str r4, [sp]
	str r0, [sp, #4]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0x18
	bl PutDrawText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_08063B50: .4byte gUnk_086650A8
_08063B54: .4byte gBg0Tm+0x10C
_08063B58:
	ldr r0, _08063BE4 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	adds r1, r0, #0
	adds r1, #0x34
	adds r0, r1, #0
	bl ClearText
	ldr r0, _08063BE4 @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r0, [r0]
	adds r1, r2, r0
	adds r0, r1, #0
	adds r0, #0x34
	ldr r2, [r7, #8]
	ldr r3, [r7, #0x1c]
	movs r1, #0x10
	bl Text_InsertDrawNumberOrBlank
	ldr r1, _08063BE4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r6, #0x10
	ldrsh r1, [r0, r6]
	adds r0, r1, #0
	bl GetItemName
	ldr r1, _08063BE4 @ =gUnk_086650A8
	ldr r2, [r7]
	movs r3, #0x64
	muls r2, r3, r2
	adds r3, r2, #0
	adds r3, #8
	ldr r1, [r1]
	adds r2, r3, r1
	adds r1, r2, #0
	adds r1, #0x34
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #1
	adds r3, r3, r2
	lsls r2, r3, #3
	ldr r3, _08063BE8 @ =gBg0Tm+0x18C
	adds r2, r2, r3
	ldr r3, [r7, #8]
	movs r4, #0
	str r4, [sp]
	str r0, [sp, #4]
	adds r0, r1, #0
	adds r1, r2, #0
	adds r2, r3, #0
	movs r3, #0x18
	bl PutDrawText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_08063BE4: .4byte gUnk_086650A8
_08063BE8: .4byte gBg0Tm+0x18C
_08063BEC:
	ldr r0, _08063CDC @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r2, r1, #0
	adds r2, #0x14
	adds r1, r0, r2
	adds r0, r1, #0
	bl ClearText
	ldr r0, _08063CDC @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r2, r1, #0
	adds r2, #0x14
	adds r0, r0, r2
	ldr r2, [r7, #8]
	ldr r3, _08063CDC @ =gUnk_086650A8
	ldr r1, [r3]
	ldr r3, [r7, #4]
	adds r4, r3, #0
	lsls r3, r4, #1
	ldr r4, [r7]
	movs r5, #0x64
	muls r4, r5, r4
	adds r3, r3, r4
	adds r1, #8
	adds r4, r1, r3
	movs r1, #0
	ldrsh r3, [r4, r1]
	movs r1, #8
	bl Text_InsertDrawNumberOrBlank
	ldr r0, _08063CDC @ =gUnk_086650A8
	ldr r1, [r7]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r2, r1, #0
	adds r2, #0x14
	adds r0, r0, r2
	ldr r2, [r7, #4]
	subs r1, r2, #5
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r2, r1, #0
	adds r2, #8
	lsls r3, r2, #5
	adds r1, r3, #7
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #1
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r2, _08063CE0 @ =gBg0Tm
	adds r1, r1, r2
	ldr r2, [r7, #8]
	movs r3, #0
	str r3, [sp]
	ldr r3, _08063CE4 @ =gUnk_08665008
	ldr r5, _08063CDC @ =gUnk_086650A8
	ldr r4, [r5]
	ldr r5, [r7, #4]
	adds r6, r5, #0
	lsls r5, r6, #1
	str r5, [r7, #0x20]
	ldr r6, [r7]
	str r6, [r7, #0x24]
	movs r5, #0x64
	mov r8, r5
	ldr r5, [r7, #0x24]
	mov r6, r8
	muls r6, r5, r6
	str r6, [r7, #0x24]
	ldr r6, [r7, #0x20]
	ldr r5, [r7, #0x24]
	adds r6, r6, r5
	str r6, [r7, #0x20]
	adds r4, #8
	ldr r6, [r7, #0x20]
	adds r5, r4, r6
	movs r6, #0
	ldrsh r4, [r5, r6]
	adds r5, r4, #0
	lsls r4, r5, #2
	adds r3, r3, r4
	ldr r4, [r3]
	str r4, [sp, #4]
	movs r3, #0x10
	bl PutDrawText
	movs r0, #1
	bl EnableBgSync
	b _08063CE8
	.align 2, 0
_08063CDC: .4byte gUnk_086650A8
_08063CE0: .4byte gBg0Tm
_08063CE4: .4byte gUnk_08665008
_08063CE8:
	add sp, #0x30
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8063CF4
sub_8063CF4: @ 0x08063CF4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08063EE8 @ =ProcScr_DebugMonitor
	adds r0, r1, #0
	bl Proc_EndEach
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x66
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0xe]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0xe]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #8]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x10]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x10]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0xa]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0xa]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0xc]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0xc]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x72
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x6c
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x26
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x74
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x6e
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x70
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x12]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x12]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x14]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x14]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x16]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x16]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x18]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x18]
	ldr r1, _08063EEC @ =gUnk_086650A8
	ldr r0, [r1]
	ldrh r1, [r0, #0x1a]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x1a]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x76
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x78
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x7a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x7c
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063EEC @ =gUnk_086650A8
	ldr r2, [r0]
	adds r1, r2, #0
	adds r0, r2, #0
	adds r0, #0x7e
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08063EE8: .4byte ProcScr_DebugMonitor
_08063EEC: .4byte gUnk_086650A8

	thumb_func_start sub_8063EF0
sub_8063EF0: @ 0x08063EF0
	push {r7, lr}
	sub sp, #0x10
	add r7, sp, #4
	str r0, [r7]
	bl EndAllMus
	bl ResetText
	ldr r0, _08063FE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x80
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063FE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063FE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063FE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08063FE8 @ =gDispIo+0x3C
	ldr r1, _08063FE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08063FEC @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063FE8 @ =gDispIo+0x3C
	ldr r1, _08063FE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063FE8 @ =gDispIo+0x3C
	ldr r1, _08063FE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08063FF0 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063FE8 @ =gDispIo+0x3C
	ldr r1, _08063FE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0xe0
	lsls r3, r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08063FE4 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063FE4 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08063FE4 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x1d
	movs r3, #0x13
	bl sub_8041358
	movs r0, #0
	str r0, [r7, #4]
_08063FD2:
	ldr r0, _08063FF4 @ =gUnk_08665080
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	cmp r1, #0
	bne _08063FF8
	b _0806402C
	.align 2, 0
_08063FE4: .4byte gDispIo
_08063FE8: .4byte gDispIo+0x3C
_08063FEC: .4byte 0x0000FFE0
_08063FF0: .4byte 0x0000E0FF
_08063FF4: .4byte gUnk_08665080
_08063FF8:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #1
	lsls r1, r0, #5
	adds r0, r1, #0
	lsls r1, r0, #1
	ldr r2, _08064024 @ =gBg0Tm+0x2
	adds r0, r1, r2
	ldr r1, _08064028 @ =gUnk_08665080
	ldr r2, [r7, #4]
	adds r3, r2, #0
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0
	bl PutString
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08063FD2
	.align 2, 0
_08064024: .4byte gBg0Tm+0x2
_08064028: .4byte gUnk_08665080
_0806402C:
	movs r0, #0
	str r0, [r7, #4]
_08064030:
	ldr r0, [r7, #4]
	cmp r0, #9
	ble _08064038
	b _080640C2
_08064038:
	movs r0, #0
	str r0, [r7, #8]
_0806403C:
	ldr r0, [r7, #8]
	cmp r0, #1
	ble _08064044
	b _080640BA
_08064044:
	ldr r0, _080640A0 @ =gUnk_086650A8
	ldr r1, [r7, #8]
	movs r2, #0x64
	muls r1, r2, r1
	adds r2, r1, #0
	adds r2, #8
	ldr r1, [r0]
	adds r0, r2, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r2, r1, #0
	adds r2, #0x14
	adds r0, r0, r2
	ldr r1, _080640A4 @ =gUnk_08665030
	ldr r2, [r7, #4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r2, [r1]
	adds r1, r2, #0
	bl InitTextDb
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	ldr r1, [r7, #8]
	cmp r1, r0
	bne _080640A8
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r2, #0
	ldrsh r0, [r1, r2]
	ldr r1, [r7, #4]
	cmp r1, r0
	bne _080640A8
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	movs r2, #0
	bl sub_8063894
	b _080640B2
	.align 2, 0
_080640A0: .4byte gUnk_086650A8
_080640A4: .4byte gUnk_08665030
_080640A8:
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	movs r2, #1
	bl sub_8063894
_080640B2:
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #8]
	b _0806403C
_080640BA:
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08064030
_080640C2:
	movs r0, #1
	bl EnableBgSync
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80640D0
sub_80640D0: @ 0x080640D0
	push {r4, r5, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	str r0, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r3, #0
	ldrsh r0, [r1, r3]
	str r0, [r7, #8]
	ldr r1, _08064114 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #8
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0806411E
	bl sub_80646E4
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	bne _08064118
	b _080645E4
	.align 2, 0
_08064114: .4byte gKeySt
_08064118:
	ldr r0, [r7]
	bl Proc_Break
_0806411E:
	ldr r1, _0806413C @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #4]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08064140
	movs r0, #0xa
	str r0, [r7, #0xc]
	b _08064144
	.align 2, 0
_0806413C: .4byte gKeySt
_08064140:
	movs r0, #1
	str r0, [r7, #0xc]
_08064144:
	ldr r1, _0806425C @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	bne _0806415C
	b _080642B8
_0806415C:
	ldr r1, _08064260 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r4, #0
	ldrsh r1, [r2, r4]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r5, #0
	ldrsh r2, [r3, r5]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r2, _08064260 @ =gUnk_086650A8
	ldr r1, [r2]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #1
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x64
	movs r5, #0
	ldrsh r3, [r4, r5]
	movs r4, #0x64
	muls r3, r4, r3
	adds r2, r2, r3
	adds r3, r1, #0
	adds r3, #8
	adds r1, r3, r2
	ldr r3, [r7, #0xc]
	adds r2, r3, #0
	ldrh r3, [r1]
	adds r1, r2, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, _08064260 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r0, #8
	adds r1, r0, r1
	movs r5, #0
	ldrsh r0, [r1, r5]
	ldr r1, _08064264 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r2, [r1, #6]
	cmp r0, r2
	blt _080642B8
	ldr r0, [r7, #0xc]
	cmp r0, #1
	bne _08064268
	ldr r1, _08064260 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r5, #0
	ldrsh r1, [r2, r5]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r1, _08064264 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r2, [r1, #5]
	adds r1, r2, #0
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	b _080642B8
	.align 2, 0
_0806425C: .4byte gKeySt
_08064260: .4byte gUnk_086650A8
_08064264: .4byte gUnk_08665030
_08064268:
	ldr r1, _080643D4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r1, _080643D8 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r3, [r1, #6]
	adds r2, r3, #0
	subs r1, r2, #1
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
_080642B8:
	ldr r1, _080643DC @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #2
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	bne _080642D0
	b _0806442C
_080642D0:
	ldr r1, _080643D4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r2, _080643D4 @ =gUnk_086650A8
	ldr r1, [r2]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #1
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x64
	movs r5, #0
	ldrsh r3, [r4, r5]
	movs r4, #0x64
	muls r3, r4, r3
	adds r2, r2, r3
	adds r3, r1, #0
	adds r3, #8
	adds r1, r3, r2
	ldr r3, [r7, #0xc]
	adds r2, r3, #0
	ldrh r3, [r1]
	subs r1, r3, r2
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, _080643D4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r0, #8
	adds r1, r0, r1
	movs r5, #0
	ldrsh r0, [r1, r5]
	ldr r1, _080643D8 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r2, [r1, #5]
	cmp r0, r2
	bge _0806442C
	ldr r0, [r7, #0xc]
	cmp r0, #1
	bne _080643E0
	ldr r1, _080643D4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r5, #0
	ldrsh r1, [r2, r5]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r1, _080643D8 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r3, [r1, #6]
	adds r2, r3, #0
	subs r1, r2, #1
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	b _0806442C
	.align 2, 0
_080643D4: .4byte gUnk_086650A8
_080643D8: .4byte gUnk_08665030
_080643DC: .4byte gKeySt
_080643E0:
	ldr r1, _080645EC @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r2, [r3, r4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r2, #8
	adds r0, r2, r1
	ldr r1, _080645F0 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	ldrb r2, [r1, #5]
	adds r1, r2, #0
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_0806442C:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x20
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0806449E
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #2
	beq _08064472
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	ldrh r1, [r2]
	movs r2, #1
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
_08064472:
	ldr r0, [r7]
	ldr r1, _080645F0 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	movs r2, #3
	ldrsb r2, [r1, r2]
	adds r1, r2, #0
	adds r2, r0, #0
	adds r0, #0x66
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_0806449E:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x10
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08064510
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x66
	movs r5, #0
	ldrsh r0, [r1, r5]
	cmp r0, #1
	beq _080644E4
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	ldrh r1, [r2]
	movs r2, #1
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
_080644E4:
	ldr r0, [r7]
	ldr r1, _080645F0 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	movs r2, #4
	ldrsb r2, [r1, r2]
	adds r1, r2, #0
	adds r2, r0, #0
	adds r0, #0x66
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_08064510:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x40
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08064552
	ldr r0, [r7]
	ldr r1, _080645F0 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r5, #0
	ldrsh r2, [r3, r5]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	movs r2, #1
	ldrsb r2, [r1, r2]
	adds r1, r2, #0
	adds r2, r0, #0
	adds r0, #0x66
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_08064552:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x80
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08064594
	ldr r0, [r7]
	ldr r1, _080645F0 @ =gUnk_08665030
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r3, r2, #0
	lsls r2, r3, #3
	adds r1, r1, r2
	movs r2, #2
	ldrsb r2, [r1, r2]
	adds r1, r2, #0
	adds r2, r0, #0
	adds r0, #0x66
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_08064594:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0xf0
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080645B4
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	movs r2, #1
	bl sub_8063894
_080645B4:
	ldr r1, _080645F4 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0xf3
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080645E4
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r5, #0
	ldrsh r0, [r1, r5]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	movs r2, #0
	bl sub_8063894
_080645E4:
	add sp, #0x10
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080645EC: .4byte gUnk_086650A8
_080645F0: .4byte gUnk_08665030
_080645F4: .4byte gKeySt

	thumb_func_start sub_80645F8
sub_80645F8: @ 0x080645F8
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x6e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x1e
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	ldrb r1, [r0, #0x10]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x3c
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r1, _080646E0 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7, #4]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r2, #8
	ldrsh r1, [r0, r2]
	adds r0, r1, #0
	bl GetPersonInfo
	ldr r1, [r7]
	str r0, [r1]
	ldr r1, _080646E0 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r1, [r7, #4]
	movs r2, #0x64
	muls r1, r2, r1
	adds r0, r0, r1
	movs r2, #0xe
	ldrsh r1, [r0, r2]
	adds r0, r1, #0
	bl GetJobInfo
	ldr r1, [r7]
	str r0, [r1, #4]
	ldr r0, [r7]
	ldr r2, _080646E0 @ =gUnk_086650A8
	ldr r1, [r2]
	ldr r2, [r7, #4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	ldrh r2, [r1, #0xa]
	adds r1, r2, #0
	ldrb r2, [r0, #0xe]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0xe]
	ldr r0, [r7]
	ldr r2, _080646E0 @ =gUnk_086650A8
	ldr r1, [r2]
	ldr r2, [r7, #4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	ldrh r2, [r1, #0xc]
	adds r1, r2, #0
	ldrb r2, [r0, #0xf]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0xf]
	ldr r0, [r7]
	ldr r2, _080646E0 @ =gUnk_086650A8
	ldr r1, [r2]
	ldr r2, [r7, #4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r2, r0, #0
	adds r0, #0x4a
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1, #0x10]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x6a
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080646E0: .4byte gUnk_086650A8

	thumb_func_start sub_80646E4
sub_80646E4: @ 0x080646E4
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	ldr r0, _08064718 @ =gBattleHits
	str r0, [r7, #0xc]
	ldr r1, _0806471C @ =gBattleUnitA
	adds r0, r1, #0
	movs r1, #0
	bl sub_80645F8
	ldr r1, _08064720 @ =gBattleUnitB
	adds r0, r1, #0
	movs r1, #1
	bl sub_80645F8
	bl ClearBattleHits
	movs r0, #0
	str r0, [r7, #0x10]
	movs r0, #0
	str r0, [r7]
_0806470E:
	ldr r0, [r7]
	cmp r0, #4
	ble _08064724
	b _08064774
	.align 2, 0
_08064718: .4byte gBattleHits
_0806471C: .4byte gBattleUnitA
_08064720: .4byte gBattleUnitB
_08064724:
	movs r0, #0
	str r0, [r7, #4]
_08064728:
	ldr r0, [r7, #4]
	cmp r0, #1
	ble _08064730
	b _08064764
_08064730:
	ldr r1, _08064758 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #5
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r2, [r7, #4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r0, #8
	adds r1, r0, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	beq _0806475C
	movs r0, #1
	str r0, [r7, #0x10]
	b _08064764
	.align 2, 0
_08064758: .4byte gUnk_086650A8
_0806475C:
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08064728
_08064764:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _0806476C
	b _08064774
_0806476C:
	ldr r0, [r7]
	adds r1, r0, #1
	str r1, [r7]
	b _0806470E
_08064774:
	ldr r0, [r7]
	cmp r0, #5
	bne _08064784
	ldr r0, [r7, #4]
	cmp r0, #2
	bne _08064784
	movs r0, #0
	b _08064952
_08064784:
	ldr r0, [r7]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, [r7, #4]
	adds r0, r0, r1
	str r0, [r7, #8]
_08064790:
	ldr r0, [r7, #8]
	cmp r0, #9
	ble _08064798
	b _08064932
_08064798:
	ldr r0, [r7, #8]
	asrs r1, r0, #0x1f
	lsrs r2, r1, #0x1f
	adds r1, r0, r2
	asrs r0, r1, #1
	str r0, [r7]
	ldr r0, [r7, #8]
	movs r1, #1
	ands r0, r1
	str r0, [r7, #4]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	ldrb r2, [r0, #2]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #2]
	ldr r1, _080647F4 @ =gUnk_086650A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #5
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r2, [r7, #4]
	movs r3, #0x64
	muls r2, r3, r2
	adds r1, r1, r2
	adds r0, #8
	adds r1, r0, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	str r0, [r7, #0x10]
	ldr r1, [r7, #0x10]
	subs r0, r1, #1
	cmp r0, #8
	bhi _08064886
	lsls r1, r0, #2
	ldr r2, _080647F8 @ =_080647FC
	adds r0, r1, r2
	ldr r1, [r0]
	mov pc, r1
	.align 2, 0
_080647F4: .4byte gUnk_086650A8
_080647F8: .4byte _080647FC
_080647FC: @ jump table
	.4byte _08064852 @ case 0
	.4byte _08064852 @ case 1
	.4byte _08064852 @ case 2
	.4byte _08064852 @ case 3
	.4byte _08064820 @ case 4
	.4byte _08064820 @ case 5
	.4byte _08064820 @ case 6
	.4byte _08064820 @ case 7
	.4byte _08064868 @ case 8
_08064820:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrh r2, [r1]
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7, #0xc]
	ldrb r1, [r0, #3]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x14
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #3]
	b _08064886
_08064852:
	ldr r0, [r7, #0xc]
	ldrb r1, [r0, #3]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xa
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #3]
	b _08064886
_08064868:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrh r2, [r1]
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	b _08064886
_08064886:
	ldr r1, [r7, #0x10]
	subs r0, r1, #2
	cmp r0, #6
	bhi _0806491A
	lsls r1, r0, #2
	ldr r2, _08064898 @ =_0806489C
	adds r0, r1, r2
	ldr r1, [r0]
	mov pc, r1
	.align 2, 0
_08064898: .4byte _0806489C
_0806489C: @ jump table
	.4byte _080648B8 @ case 0
	.4byte _080648D8 @ case 1
	.4byte _080648FA @ case 2
	.4byte _0806491A @ case 3
	.4byte _080648B8 @ case 4
	.4byte _080648D8 @ case 5
	.4byte _080648FA @ case 6
_080648B8:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrh r2, [r1]
	movs r3, #0x80
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	b _0806491A
_080648D6:
	.byte 0x20, 0xE0
_080648D8:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrh r2, [r1]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	b _0806491A
_080648F8:
	.byte 0x0F, 0xE0
_080648FA:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrh r2, [r1]
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	b _0806491A
_08064918:
	.byte 0xFF, 0xE7
_0806491A:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _08064922
	b _08064924
_08064922:
	b _0806492A
_08064924:
	ldr r0, [r7, #0xc]
	adds r1, r0, #4
	str r1, [r7, #0xc]
_0806492A:
	ldr r0, [r7, #8]
	adds r1, r0, #1
	str r1, [r7, #8]
	b _08064790
_08064932:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldrb r2, [r1, #2]
	movs r3, #0x80
	adds r1, r2, #0
	orrs r1, r3
	ldrb r2, [r0, #2]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #2]
	movs r0, #1
	b _08064952
_08064952:
	add sp, #0x14
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806495C
sub_806495C: @ 0x0806495C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806498C @ =gBg0Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r1, _08064990 @ =gBg1Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #3
	bl EnableBgSync
	bl sub_80627D0
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806498C: .4byte gBg0Tm
_08064990: .4byte gBg1Tm

	thumb_func_start sub_8064994
sub_8064994: @ 0x08064994
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _08064A00 @ =gUnk_082DB1C0
	ldr r1, _08064A04 @ =0x06013000
	bl Decompress
	ldr r0, _08064A08 @ =gUnk_082DB2B0
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08064A0C @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	ldr r3, [r7]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r3, _08064A0C @ =gBmSt
	movs r5, #0xe
	ldrsh r4, [r3, r5]
	asrs r3, r4, #4
	adds r5, r3, #0
	lsls r4, r5, #0x10
	asrs r3, r4, #0x10
	subs r2, r2, r3
	lsls r3, r2, #1
	adds r2, r3, #0
	lsls r3, r2, #3
	adds r2, r3, #0
	adds r2, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064A00: .4byte gUnk_082DB1C0
_08064A04: .4byte 0x06013000
_08064A08: .4byte gUnk_082DB2B0
_08064A0C: .4byte gBmSt

	thumb_func_start sub_8064A10
sub_8064A10: @ 0x08064A10
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _08064A7C @ =gUnk_082DB418
	ldr r1, _08064A80 @ =0x06013000
	bl Decompress
	ldr r0, _08064A84 @ =gUnk_082DB55C
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08064A88 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	ldr r3, [r7]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r3, _08064A88 @ =gBmSt
	movs r5, #0xe
	ldrsh r4, [r3, r5]
	asrs r3, r4, #4
	adds r5, r3, #0
	lsls r4, r5, #0x10
	asrs r3, r4, #0x10
	subs r2, r2, r3
	lsls r3, r2, #1
	adds r2, r3, #0
	lsls r3, r2, #3
	adds r2, r3, #0
	adds r2, #0x10
	movs r3, #0xc0
	lsls r3, r3, #1
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064A7C: .4byte gUnk_082DB418
_08064A80: .4byte 0x06013000
_08064A84: .4byte gUnk_082DB55C
_08064A88: .4byte gBmSt

	thumb_func_start sub_8064A8C
sub_8064A8C: @ 0x08064A8C
	push {r4, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, _08064B18 @ =gUnk_0866510C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #8]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08064B1C @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x30]
	ldr r0, [r7, #8]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08064B1C @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	subs r1, #8
	str r1, [r0, #0x34]
	ldr r0, [r7, #8]
	ldr r2, [r7, #4]
	adds r1, r2, #0
	movs r2, #1
	eors r1, r2
	adds r2, r0, #0
	adds r0, #0x48
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064B18: .4byte gUnk_0866510C
_08064B1C: .4byte gBmSt

	thumb_func_start sub_8064B20
sub_8064B20: @ 0x08064B20
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _08064B6C @ =gUnk_082DCAE4
	ldr r1, _08064B70 @ =0x06013000
	bl Decompress
	ldr r0, _08064B74 @ =gUnk_082DCD70
	movs r1, #0x98
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08064B78 @ =gUnk_082A9228
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	adds r2, #0x10
	movs r3, #0xc6
	lsls r3, r3, #6
	ldr r5, [r7]
	adds r4, r5, #0
	adds r5, #0x48
	movs r6, #0
	ldrsh r4, [r5, r6]
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064B6C: .4byte gUnk_082DCAE4
_08064B70: .4byte 0x06013000
_08064B74: .4byte gUnk_082DCD70
_08064B78: .4byte gUnk_082A9228

	thumb_func_start sub_8064B7C
sub_8064B7C: @ 0x08064B7C
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08064BE4 @ =gUnk_0866512C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08064BE8 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08064BE8 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064BE4: .4byte gUnk_0866512C
_08064BE8: .4byte gBmSt

	thumb_func_start sub_8064BEC
sub_8064BEC: @ 0x08064BEC
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0xb7
	bl PlaySeSpacial
	ldr r0, _08064C3C @ =gUnk_082DCEF4
	ldr r1, _08064C40 @ =0x06013800
	bl Decompress
	ldr r0, _08064C44 @ =gUnk_082DD248
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08064C48 @ =gUnk_082A9190
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	subs r1, #8
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	adds r2, #8
	ldr r3, _08064C4C @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064C3C: .4byte gUnk_082DCEF4
_08064C40: .4byte 0x06013800
_08064C44: .4byte gUnk_082DD248
_08064C48: .4byte gUnk_082A9190
_08064C4C: .4byte 0x000041C0

	thumb_func_start sub_8064C50
sub_8064C50: @ 0x08064C50
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08064CB8 @ =gUnk_0866514C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08064CBC @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08064CBC @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064CB8: .4byte gUnk_0866514C
_08064CBC: .4byte gBmSt

	thumb_func_start sub_8064CC0
sub_8064CC0: @ 0x08064CC0
	push {r4, r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	bl sub_8067324
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _08064DDC @ =gUnk_082DE994
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08064DE0 @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08064DE8 @ =gDispIo+0x3C
	ldr r1, _08064DE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08064DEC @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064DE8 @ =gDispIo+0x3C
	ldr r1, _08064DE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08064DE8 @ =gDispIo+0x3C
	ldr r1, _08064DE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08064DF0 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064DE8 @ =gDispIo+0x3C
	ldr r1, _08064DE8 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064DE4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x40
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x42
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064DF4 @ =gUnk_082DEFBC
	ldr r1, [r7]
	str r1, [sp]
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #2
	bl sub_8014D9C
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064DDC: .4byte gUnk_082DE994
_08064DE0: .4byte 0x06002800
_08064DE4: .4byte gDispIo
_08064DE8: .4byte gDispIo+0x3C
_08064DEC: .4byte 0x0000FFE0
_08064DF0: .4byte 0x0000E0FF
_08064DF4: .4byte gUnk_082DEFBC

	thumb_func_start sub_8064DF8
sub_8064DF8: @ 0x08064DF8
	push {r4, r7, lr}
	sub sp, #0x14
	add r7, sp, #8
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x42
	ldrh r0, [r1]
	cmp r0, #2
	bls _08064E80
	bl sub_8014D50
	ldr r0, _08064E74 @ =gUnk_082DEFBC
	ldr r1, [r7]
	str r1, [sp]
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #4
	bl sub_8014DB4
	ldr r4, _08064E78 @ =gUnk_082DEFFC
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08064E7C @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	adds r0, r1, #0
	cmp r0, #0
	bge _08064E3E
	adds r0, #7
_08064E3E:
	asrs r1, r0, #3
	subs r0, r1, #4
	ldr r1, [r7]
	ldr r2, [r1, #0x34]
	adds r1, r2, #0
	cmp r1, #0
	bge _08064E4E
	adds r1, #7
_08064E4E:
	asrs r2, r1, #3
	subs r1, r2, #4
	movs r2, #0
	str r2, [sp]
	ldr r2, [r7]
	str r2, [sp, #4]
	movs r2, #8
	movs r3, #0x3c
	bl sub_80650A4
	ldr r0, [r7]
	bl Proc_Break
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x8c
	bl PlaySeSpacial
	b _08064F1A
	.align 2, 0
_08064E74: .4byte gUnk_082DEFBC
_08064E78: .4byte gUnk_082DEFFC
_08064E7C: .4byte 0x06002800
_08064E80:
	ldr r0, _08064F24 @ =gUnk_08665184
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x42
	ldrh r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	str r1, [r7, #4]
	ldr r0, _08064F24 @ =gUnk_08665184
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x42
	ldrh r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #1
	adds r0, r0, r2
	movs r2, #0
	ldrsh r1, [r0, r2]
	str r1, [r7, #8]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	adds r0, r1, #0
	cmp r0, #0
	bge _08064EBE
	adds r0, #7
_08064EBE:
	asrs r0, r0, #3
	ldr r2, [r7, #4]
	adds r1, r0, r2
	subs r0, r1, #3
	ldr r1, [r7]
	ldr r2, [r1, #0x34]
	adds r1, r2, #0
	cmp r1, #0
	bge _08064ED2
	adds r1, #7
_08064ED2:
	asrs r1, r1, #3
	ldr r3, [r7, #8]
	adds r2, r1, r3
	subs r1, r2, #3
	movs r2, #8
	str r2, [sp]
	ldr r2, [r7]
	str r2, [sp, #4]
	movs r2, #6
	movs r3, #0xa
	bl sub_80650A4
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x89
	bl PlaySeSpacial
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x42
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x42
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x42
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
_08064F1A:
	add sp, #0x14
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064F24: .4byte gUnk_08665184

	thumb_func_start sub_8064F28
sub_8064F28: @ 0x08064F28
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08064F48 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064F48: .4byte gBg2Tm

	thumb_func_start sub_8064F4C
sub_8064F4C: @ 0x08064F4C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl sub_8014D50
	ldr r1, _08064FC0 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08064FC4 @ =gDispIo+0x3C
	ldr r1, _08064FC4 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08064FC8 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064FC4 @ =gDispIo+0x3C
	ldr r1, _08064FC4 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0x1f
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08064FCC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	bl sub_8064FD0
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08064FC0: .4byte gBg2Tm
_08064FC4: .4byte gDispIo+0x3C
_08064FC8: .4byte 0x0000FFE0
_08064FCC: .4byte gDispIo

	thumb_func_start sub_8064FD0
sub_8064FD0: @ 0x08064FD0
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x80
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x64
	ldrh r2, [r1]
	subs r3, r2, #1
	adds r4, r3, #0
	strh r4, [r1]
	lsls r2, r2, #0x10
	asrs r1, r2, #0x10
	asrs r2, r1, #2
	adds r1, r2, #0
	adds r2, r0, #0
	adds r0, #0x46
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bne _08065096
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080650A0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	bl Proc_Break
_08065096:
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080650A0: .4byte gDispIo

	thumb_func_start sub_80650A4
sub_80650A4: @ 0x080650A4
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _080650F4 @ =gUnk_086651AC
	ldr r1, [r7, #0x20]
	bl SpawnProcLocking
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #4]
	str r1, [r0, #0x30]
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #8]
	str r1, [r0, #0x54]
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #0x1c]
	str r1, [r0, #0x58]
	ldr r1, [r7, #0x10]
	ldr r2, [r7, #0xc]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080650F4: .4byte gUnk_086651AC

	thumb_func_start sub_80650F8
sub_80650F8: @ 0x080650F8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08065118 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065118: .4byte gBg2Tm

	thumb_func_start sub_806511C
sub_806511C: @ 0x0806511C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806513C @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806513C: .4byte gBg2Tm

	thumb_func_start sub_8065140
sub_8065140: @ 0x08065140
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _080651D4 @ =gBg2Tm
	ldr r2, [r7]
	ldr r1, [r2, #0x2c]
	ldr r3, [r7]
	ldr r2, [r3, #0x30]
	ldr r3, _080651D8 @ =0x00004140
	ldr r4, [r7]
	ldr r5, [r4, #0x54]
	str r5, [sp]
	ldr r4, [r7]
	ldr r5, [r4, #0x54]
	str r5, [sp, #4]
	bl sub_8014E30
	movs r0, #4
	bl EnableBgSync
	ldr r0, _080651DC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080651DC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080651DC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080651DC @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080651D4: .4byte gBg2Tm
_080651D8: .4byte 0x00004140
_080651DC: .4byte gDispIo

	thumb_func_start sub_80651E0
sub_80651E0: @ 0x080651E0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	ldrh r3, [r2]
	adds r1, r3, #2
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08065294 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08065294 @ =gDispIo
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x64
	ldrh r3, [r2]
	adds r0, r3, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _08065294 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065294 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #7
	ble _0806528A
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	bl Proc_Break
_0806528A:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065294: .4byte gDispIo

	thumb_func_start sub_8065298
sub_8065298: @ 0x08065298
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r2, r1, #0
	adds r2, #0x44
	ldr r1, [r7]
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x44
	ldrh r3, [r2]
	subs r0, r3, #1
	adds r2, r1, #0
	adds r1, #0x44
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r0, #0
	orrs r3, r2
	adds r2, r3, #0
	strh r2, [r1]
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	movs r1, #1
	cmn r0, r1
	bne _080652D8
	ldr r0, [r7]
	bl Proc_Break
_080652D8:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80652E0
sub_80652E0: @ 0x080652E0
	push {r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x58]
	cmp r1, #0
	bne _080652F8
	ldr r0, [r7]
	bl Proc_Break
	b _080653AC
_080652F8:
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r2, r1, #1
	adds r3, r2, #0
	strh r3, [r0]
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	ldr r0, [r7]
	ldr r1, [r0, #0x58]
	str r1, [sp]
	movs r0, #0
	movs r1, #8
	movs r2, #0
	bl Interpolate
	str r0, [r7, #4]
	ldr r0, _080653B4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _080653B4 @ =gDispIo
	ldr r2, [r7, #4]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _080653B4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080653B4 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	ldr r1, [r7]
	ldr r2, [r1, #0x58]
	cmp r0, r2
	blt _080653AC
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, _080653B8 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	ldr r0, [r7]
	bl Proc_Break
_080653AC:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080653B4: .4byte gDispIo
_080653B8: .4byte gBg2Tm

	thumb_func_start sub_80653BC
sub_80653BC: @ 0x080653BC
	push {r4, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, _08065434 @ =gUnk_086651EC
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #0xc]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065438 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #0xc]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08065438 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #4]
	str r1, [r0, #0x50]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #8]
	str r1, [r0, #0x54]
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065434: .4byte gUnk_086651EC
_08065438: .4byte gBmSt

	thumb_func_start sub_806543C
sub_806543C: @ 0x0806543C
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0xb6
	bl PlaySeSpacial
	ldr r0, _08065538 @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _08065538 @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _08065538 @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _08065538 @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, [r7]
	ldr r4, [r0, #0x50]
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _0806553C @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	bl sub_8067324
	ldr r0, _08065538 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065538 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065538 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065538 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x40
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065538: .4byte gDispIo
_0806553C: .4byte 0x06002800

	thumb_func_start sub_8065540
sub_8065540: @ 0x08065540
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, _080655F8 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _0806555A
	adds r1, #7
_0806555A:
	asrs r2, r1, #3
	subs r1, r2, #3
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _0806556A
	adds r2, #7
_0806556A:
	asrs r3, r2, #3
	subs r2, r3, #3
	ldr r3, _080655FC @ =0x00004140
	movs r4, #6
	str r4, [sp]
	movs r4, #6
	str r4, [sp, #4]
	ldr r4, _08065600 @ =gUnk_082DE354
	str r4, [sp, #8]
	ldr r4, _08065604 @ =gUnk_0866521C
	ldr r6, [r7]
	adds r5, r6, #0
	adds r6, #0x40
	ldrh r5, [r6]
	mov r8, r5
	mov r6, r8
	lsrs r5, r6, #1
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	adds r4, r4, r5
	ldrb r5, [r4]
	str r5, [sp, #0xc]
	bl sub_8014F70
	movs r0, #4
	bl EnableBgSync
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08065604 @ =gUnk_0866521C
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	lsrs r1, r3, #1
	adds r3, r1, #0
	lsls r2, r3, #0x10
	lsrs r1, r2, #0x10
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _080655EA
	ldr r0, [r7]
	bl Proc_Break
_080655EA:
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080655F8: .4byte gBg2Tm
_080655FC: .4byte 0x00004140
_08065600: .4byte gUnk_082DE354
_08065604: .4byte gUnk_0866521C

	thumb_func_start sub_8065608
sub_8065608: @ 0x08065608
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806566C @ =gUnk_08665234
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065670 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08065670 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806566C: .4byte gUnk_08665234
_08065670: .4byte gBmSt

	thumb_func_start sub_8065674
sub_8065674: @ 0x08065674
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08065690 @ =0x0000010F
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	bl PlaySeSpacial
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065690: .4byte 0x0000010F

	thumb_func_start sub_8065694
sub_8065694: @ 0x08065694
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	adds r0, r3, #0
	adds r1, r7, #0
	adds r1, #0xc
	strh r0, [r1]
	ldr r1, _080656EC @ =gUnk_08665254
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #4]
	str r1, [r0, #0x50]
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #8]
	str r1, [r0, #0x54]
	ldr r0, [r7, #0x10]
	adds r1, r7, #0
	adds r1, #0xc
	adds r2, r0, #0
	adds r0, #0x58
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080656EC: .4byte gUnk_08665254

	thumb_func_start sub_80656F0
sub_80656F0: @ 0x080656F0
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _0806581C @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _0806581C @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _0806581C @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _0806581C @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, [r7]
	ldr r4, [r0, #0x50]
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08065820 @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08065824 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x2c]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065828 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x2c]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r3, _08065828 @ =gBmSt
	movs r5, #0xe
	ldrsh r4, [r3, r5]
	asrs r3, r4, #4
	adds r5, r3, #0
	lsls r4, r5, #0x10
	asrs r3, r4, #0x10
	subs r2, r2, r3
	lsls r3, r2, #1
	subs r2, r3, #2
	ldr r3, _0806582C @ =0x00004140
	movs r4, #6
	str r4, [sp]
	movs r4, #6
	str r4, [sp, #4]
	bl sub_8014E30
	movs r0, #4
	bl EnableBgSync
	ldr r1, [r7]
	ldr r0, [r1, #0x54]
	ldr r1, [r7]
	str r1, [sp]
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #4
	bl sub_8014DB4
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x40
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x42
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x58
	ldrh r0, [r1]
	ldr r1, [r7]
	ldr r2, [r1, #0x2c]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065828 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	bl PlaySeSpacial
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806581C: .4byte gDispIo
_08065820: .4byte 0x06002800
_08065824: .4byte gBg2Tm
_08065828: .4byte gBmSt
_0806582C: .4byte 0x00004140

	thumb_func_start sub_8065830
sub_8065830: @ 0x08065830
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	cmp r0, #0x10
	bne _08065870
	ldr r0, [r7]
	bl Proc_Break
_08065870:
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r1, [r2]
	movs r2, #0x16
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x42
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x42
	ldrh r0, [r1]
	cmp r0, #0x10
	bls _080658B6
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x42
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_080658B6:
	ldr r0, _08065984 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08065984 @ =gDispIo
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r0, r3, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r1, _08065984 @ =gDispIo
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x42
	ldrh r3, [r2]
	adds r0, r3, #0
	adds r2, r1, #0
	adds r1, #0x45
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _08065984 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065988 @ =gDispIo+0x3C
	ldr r1, _08065988 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _0806598C @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065988 @ =gDispIo+0x3C
	ldr r1, _08065988 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065984 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065988 @ =gDispIo+0x3C
	ldr r1, _08065988 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08065990 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065988 @ =gDispIo+0x3C
	ldr r1, _08065988 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065984 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065984: .4byte gDispIo
_08065988: .4byte gDispIo+0x3C
_0806598C: .4byte 0x0000FFE0
_08065990: .4byte 0x0000E0FF

	thumb_func_start sub_8065994
sub_8065994: @ 0x08065994
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	subs r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	cmp r0, #0
	bne _080659D4
	ldr r0, [r7]
	bl Proc_Break
_080659D4:
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r1, [r2]
	movs r2, #0x16
	subs r1, r2, r1
	adds r2, r0, #0
	adds r0, #0x42
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x42
	ldrh r0, [r1]
	cmp r0, #0x10
	bls _08065A1A
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x42
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
_08065A1A:
	ldr r0, _08065AE8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08065AE8 @ =gDispIo
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r0, r3, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r1, _08065AE8 @ =gDispIo
	ldr r2, [r7]
	adds r0, r2, #0
	adds r2, #0x42
	ldrh r3, [r2]
	adds r0, r3, #0
	adds r2, r1, #0
	adds r1, #0x45
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _08065AE8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065AEC @ =gDispIo+0x3C
	ldr r1, _08065AEC @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08065AF0 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065AEC @ =gDispIo+0x3C
	ldr r1, _08065AEC @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065AE8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065AEC @ =gDispIo+0x3C
	ldr r1, _08065AEC @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08065AF4 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065AEC @ =gDispIo+0x3C
	ldr r1, _08065AEC @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065AE8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065AE8: .4byte gDispIo
_08065AEC: .4byte gDispIo+0x3C
_08065AF0: .4byte 0x0000FFE0
_08065AF4: .4byte 0x0000E0FF

	thumb_func_start sub_8065AF8
sub_8065AF8: @ 0x08065AF8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl sub_8014D50
	ldr r1, _08065B88 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08065B8C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065B8C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065B8C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065B8C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065B8C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08065B8C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08065B8C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065B88: .4byte gBg2Tm
_08065B8C: .4byte gDispIo

	thumb_func_start sub_8065B90
sub_8065B90: @ 0x08065B90
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetOnHBlankA
	bl sub_8014D50
	ldr r1, _08065C28 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08065C2C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065C2C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065C2C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065C2C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065C2C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08065C2C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08065C2C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065C28: .4byte gBg2Tm
_08065C2C: .4byte gDispIo

	thumb_func_start sub_8065C30
sub_8065C30: @ 0x08065C30
	push {r4, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, _08065C94 @ =gUnk_0866528C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldr r2, [r1, #0x2c]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065C98 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	str r2, [r0, #0x30]
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0xc]
	ldr r2, [r1, #0x2c]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08065C98 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	str r2, [r0, #0x34]
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065C94: .4byte gUnk_0866528C
_08065C98: .4byte gBmSt

	thumb_func_start sub_8065C9C
sub_8065C9C: @ 0x08065C9C
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _08065CE8 @ =gUnk_082DD268
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08065CEC @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r1, _08065CF0 @ =gUnk_082DD4C8
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	bl sub_80686D8
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x40
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065CE8: .4byte gUnk_082DD268
_08065CEC: .4byte 0x06002800
_08065CF0: .4byte gUnk_082DD4C8

	thumb_func_start sub_8065CF4
sub_8065CF4: @ 0x08065CF4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, _08065DF4 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	subs r1, r2, #1
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	subs r2, r3, #3
	ldr r3, _08065DF8 @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #6
	str r4, [sp, #4]
	ldr r4, _08065DFC @ =gUnk_082DD4E8
	str r4, [sp, #8]
	ldr r4, _08065E00 @ =gUnk_086652BC
	ldr r6, [r7]
	adds r5, r6, #0
	adds r6, #0x40
	ldrh r5, [r6]
	mov r8, r5
	mov r6, r8
	lsrs r5, r6, #1
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	adds r4, r4, r5
	ldrb r5, [r4]
	str r5, [sp, #0xc]
	bl sub_8014F70
	movs r0, #4
	bl EnableBgSync
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08065E00 @ =gUnk_086652BC
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	lsrs r1, r3, #1
	adds r3, r1, #0
	lsls r2, r3, #0x10
	lsrs r1, r2, #0x10
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _08065D8A
	ldr r0, [r7]
	bl Proc_Break
_08065D8A:
	bl sub_8067324
	ldr r0, _08065E04 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065E04 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xc
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065E04 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xc
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065E04 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065DF4: .4byte gBg2Tm
_08065DF8: .4byte 0x00004140
_08065DFC: .4byte gUnk_082DD4E8
_08065E00: .4byte gUnk_086652BC
_08065E04: .4byte gDispIo

	thumb_func_start sub_8065E08
sub_8065E08: @ 0x08065E08
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08065E70 @ =gUnk_086652D4
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #4]
	ldr r1, [r7, #4]
	ldr r2, [r1, #0x2c]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08065E74 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	str r2, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r1, [r7, #4]
	ldr r2, [r1, #0x2c]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08065E74 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	str r2, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065E70: .4byte gUnk_086652D4
_08065E74: .4byte gBmSt

	thumb_func_start sub_8065E78
sub_8065E78: @ 0x08065E78
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _08065F70 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08065E92
	movs r0, #0xb3
	bl m4aSongNumStart
_08065E92:
	ldr r0, _08065F74 @ =gUnk_082DF3D8
	ldr r1, _08065F78 @ =0x06013800
	bl Decompress
	ldr r0, _08065F7C @ =gUnk_082DF690
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #4
	bl SetWhitePal
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08065F80 @ =0x06002800
	adds r1, r0, r2
	ldr r2, _08065F84 @ =0x0000FFFF
	adds r0, r1, #0
	movs r1, #0x10
	bl sub_8015208
	ldr r0, _08065F88 @ =gBg2Tm
	movs r1, #0x80
	lsls r1, r1, #3
	ldr r2, _08065F8C @ =0x00004140
	bl sub_8015208
	movs r0, #4
	bl EnableBgSync
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x40
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x42
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08065F90 @ =gUnk_082A8448
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #4
	ldr r3, [r7]
	ldr r2, [r3, #0x34]
	ldr r3, _08065F94 @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	bl sub_8069C34
	bl sub_8069C74
	bl sub_8067324
	ldr r0, _08065F98 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065F98 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065F98 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08065F98 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08065F70: .4byte gPlaySt
_08065F74: .4byte gUnk_082DF3D8
_08065F78: .4byte 0x06013800
_08065F7C: .4byte gUnk_082DF690
_08065F80: .4byte 0x06002800
_08065F84: .4byte 0x0000FFFF
_08065F88: .4byte gBg2Tm
_08065F8C: .4byte 0x00004140
_08065F90: .4byte gUnk_082A8448
_08065F94: .4byte 0x000041C0
_08065F98: .4byte gDispIo

	thumb_func_start sub_8065F9C
sub_8065F9C: @ 0x08065F9C
	push {r7, lr}
	sub sp, #0x10
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r3, [r1]
	movs r0, #0x50
	str r0, [sp]
	movs r0, #5
	movs r1, #1
	movs r2, #0xa0
	bl Interpolate
	str r0, [r7, #4]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	adds r0, r1, #0
	adds r0, #8
	ldr r1, [r7]
	ldr r2, [r1, #0x34]
	adds r1, r2, #0
	adds r1, #8
	ldr r2, [r7, #4]
	bl sub_8069DA4
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	adds r1, r0, #0
	lsls r2, r1, #4
	adds r0, r2, #0
	movs r1, #0x28
	bl __divsi3
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	cmp r0, #0xf
	ble _08066018
	movs r0, #0x10
	str r0, [r7, #8]
_08066018:
	ldr r0, _08066090 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08066090 @ =gDispIo
	ldr r2, [r7, #8]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _08066090 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066090 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	cmp r0, #0x27
	bls _08066086
	ldr r0, [r7]
	bl Proc_Break
	bl EndEachSpriteAnimProc
_08066086:
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066090: .4byte gDispIo

	thumb_func_start sub_8066094
sub_8066094: @ 0x08066094
	push {r7, lr}
	sub sp, #0x10
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r3, [r1]
	movs r0, #0x50
	str r0, [sp]
	movs r0, #5
	movs r1, #1
	movs r2, #0xa0
	bl Interpolate
	str r0, [r7, #4]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	adds r0, r1, #0
	adds r0, #8
	ldr r1, [r7]
	ldr r2, [r1, #0x34]
	adds r1, r2, #0
	adds r1, #8
	ldr r2, [r7, #4]
	bl sub_8069DA4
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x40
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	adds r1, r0, #0
	subs r1, #0x28
	adds r0, r1, #0
	lsls r1, r0, #4
	adds r0, r1, #0
	movs r1, #0x1e
	bl __divsi3
	movs r1, #0x10
	subs r0, r1, r0
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	cmp r0, #0
	bgt _08066118
	movs r0, #0
	str r0, [r7, #8]
_08066118:
	ldr r0, _0806618C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _0806618C @ =gDispIo
	ldr r2, [r7, #8]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, _0806618C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806618C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x40
	ldrh r0, [r1]
	cmp r0, #0x45
	bls _08066182
	ldr r0, [r7]
	bl Proc_Break
_08066182:
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806618C: .4byte gDispIo

	thumb_func_start sub_8066190
sub_8066190: @ 0x08066190
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl sub_8069DD8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80661A4
sub_80661A4: @ 0x080661A4
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806620C @ =gUnk_0866531C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08066210 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08066210 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806620C: .4byte gUnk_0866531C
_08066210: .4byte gBmSt

	thumb_func_start sub_8066214
sub_8066214: @ 0x08066214
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x87
	bl PlaySeSpacial
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl sub_8067324
	ldr r0, _08066280 @ =gUnk_082E0E14
	ldr r1, _08066284 @ =0x06013800
	bl Decompress
	ldr r0, _08066288 @ =gUnk_082E10EC
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0806628C @ =gUnk_082E110C
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r3, [r7]
	ldr r2, [r3, #0x34]
	ldr r3, _08066290 @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066280: .4byte gUnk_082E0E14
_08066284: .4byte 0x06013800
_08066288: .4byte gUnk_082E10EC
_0806628C: .4byte gUnk_082E110C
_08066290: .4byte 0x000041C0

	thumb_func_start sub_8066294
sub_8066294: @ 0x08066294
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _080662F8 @ =gUnk_08665344
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _080662FC @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _080662FC @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080662F8: .4byte gUnk_08665344
_080662FC: .4byte gBmSt

	thumb_func_start sub_8066300
sub_8066300: @ 0x08066300
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x86
	bl PlaySeSpacial
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806631C
sub_806631C: @ 0x0806631C
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl sub_8067324
	ldr r0, _080663D0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080663D0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080663D0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080663D0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r4, _080663D4 @ =gUnk_082DFAD4
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _080663D8 @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r1, _080663DC @ =gUnk_081B4274
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080663D0: .4byte gDispIo
_080663D4: .4byte gUnk_082DFAD4
_080663D8: .4byte 0x06002800
_080663DC: .4byte gUnk_081B4274

	thumb_func_start sub_80663E0
sub_80663E0: @ 0x080663E0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, _08066474 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _080663FC
	adds r1, #7
_080663FC:
	asrs r2, r1, #3
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _0806640C
	adds r2, #7
_0806640C:
	asrs r3, r2, #3
	adds r2, r3, #0
	subs r2, #9
	ldr r3, _08066478 @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #0xb
	str r4, [sp, #4]
	ldr r4, _0806647C @ =gUnk_082E07A8
	str r4, [sp, #8]
	ldr r4, _08066480 @ =gUnk_08307928
	str r4, [r7, #4]
	ldr r5, [r7]
	adds r6, r5, #0
	adds r5, #0x48
	ldrh r6, [r5]
	adds r4, r6, #1
	mov r8, r4
	mov sb, r8
	mov r4, sb
	strh r4, [r5]
	lsls r6, r6, #0x10
	asrs r5, r6, #0x10
	ldr r6, [r7, #4]
	adds r4, r6, r5
	ldrb r5, [r4]
	str r5, [sp, #0xc]
	bl sub_801501C
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08066480 @ =gUnk_08307928
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _08066466
	ldr r0, [r7]
	bl Proc_Break
_08066466:
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066474: .4byte gBg2Tm
_08066478: .4byte 0x00004140
_0806647C: .4byte gUnk_082E07A8
_08066480: .4byte gUnk_08307928

	thumb_func_start sub_8066484
sub_8066484: @ 0x08066484
	push {r4, r5, r7, lr}
	sub sp, #0x18
	mov r7, sp
	str r0, [r7]
	adds r0, r7, #4
	adds r1, r7, #4
	ldr r2, _0806653C @ =gUnk_08307944
	adds r0, r1, #0
	adds r1, r2, #0
	movs r2, #0x13
	bl memcpy
	ldr r0, _08066540 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066540 @ =gDispIo
	adds r1, r7, #4
	ldr r2, [r7]
	adds r3, r2, #0
	adds r2, #0x4a
	ldrh r3, [r2]
	adds r4, r3, #1
	adds r5, r4, #0
	strh r5, [r2]
	lsls r3, r3, #0x10
	asrs r2, r3, #0x10
	adds r1, r1, r2
	adds r2, r0, #0
	adds r0, #0x44
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08066540 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066540 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	adds r0, r7, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x4a
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _08066534
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	bl Proc_Break
_08066534:
	add sp, #0x18
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806653C: .4byte gUnk_08307944
_08066540: .4byte gDispIo

	thumb_func_start sub_8066544
sub_8066544: @ 0x08066544
	push {r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	ldr r0, _080665E0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	adds r2, r1, #1
	adds r3, r2, #0
	strh r3, [r0]
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	movs r0, #0x1e
	str r0, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	ldr r1, _080665E0 @ =gDispIo
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	ldr r0, _080665E0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080665E0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x4a
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1e
	ble _080665D6
	ldr r0, [r7]
	bl Proc_Break
_080665D6:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080665E0: .4byte gDispIo

	thumb_func_start sub_80665E4
sub_80665E4: @ 0x080665E4
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08066644 @ =gUnk_08665384
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08066648 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08066648 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066644: .4byte gUnk_08665384
_08066648: .4byte gBmSt

	thumb_func_start sub_806664C
sub_806664C: @ 0x0806664C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x82
	bl PlaySeSpacial
	ldr r1, _08066674 @ =gUnk_081B1710
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066674: .4byte gUnk_081B1710

	thumb_func_start sub_8066678
sub_8066678: @ 0x08066678
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, _0806670C @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _08066694
	adds r1, #7
_08066694:
	asrs r2, r1, #3
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _080666A4
	adds r2, #7
_080666A4:
	asrs r3, r2, #3
	adds r2, r3, #0
	subs r2, #9
	ldr r3, _08066710 @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #0xb
	str r4, [sp, #4]
	ldr r4, _08066714 @ =gUnk_082DF868
	str r4, [sp, #8]
	ldr r4, _08066718 @ =gUnk_08307970
	str r4, [r7, #4]
	ldr r5, [r7]
	adds r6, r5, #0
	adds r5, #0x48
	ldrh r6, [r5]
	adds r4, r6, #1
	mov r8, r4
	mov sb, r8
	mov r4, sb
	strh r4, [r5]
	lsls r6, r6, #0x10
	asrs r5, r6, #0x10
	ldr r6, [r7, #4]
	adds r4, r6, r5
	ldrb r5, [r4]
	str r5, [sp, #0xc]
	bl sub_801501C
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08066718 @ =gUnk_08307970
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _080666FE
	ldr r0, [r7]
	bl Proc_Break
_080666FE:
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806670C: .4byte gBg2Tm
_08066710: .4byte 0x00004140
_08066714: .4byte gUnk_082DF868
_08066718: .4byte gUnk_08307970

	thumb_func_start sub_806671C
sub_806671C: @ 0x0806671C
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806677C @ =gUnk_086653C4
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08066780 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08066780 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806677C: .4byte gUnk_086653C4
_08066780: .4byte gBmSt

	thumb_func_start sub_8066784
sub_8066784: @ 0x08066784
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x85
	bl PlaySeSpacial
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl sub_8067324
	ldr r0, _080667DC @ =gUnk_081B7468
	ldr r1, _080667E0 @ =0x06013800
	bl Decompress
	ldr r0, _080667E4 @ =gUnk_081B7650
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080667E8 @ =gUnk_082E0A14
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	subs r2, #0x10
	ldr r3, _080667EC @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080667DC: .4byte gUnk_081B7468
_080667E0: .4byte 0x06013800
_080667E4: .4byte gUnk_081B7650
_080667E8: .4byte gUnk_082E0A14
_080667EC: .4byte 0x000041C0

	thumb_func_start sub_80667F0
sub_80667F0: @ 0x080667F0
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x85
	bl PlaySeSpacial
	ldr r0, _08066828 @ =gUnk_082E0A14
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	subs r2, #8
	ldr r3, _0806682C @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066828: .4byte gUnk_082E0A14
_0806682C: .4byte 0x000041C0

	thumb_func_start sub_8066830
sub_8066830: @ 0x08066830
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x85
	bl PlaySeSpacial
	ldr r0, _08066864 @ =gUnk_082E0A14
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r3, [r7]
	ldr r2, [r3, #0x34]
	ldr r3, _08066868 @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066864: .4byte gUnk_082E0A14
_08066868: .4byte 0x000041C0

	thumb_func_start sub_806686C
sub_806686C: @ 0x0806686C
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _080668D0 @ =gUnk_08665404
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _080668D4 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _080668D4 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #0x12
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080668D0: .4byte gUnk_08665404
_080668D4: .4byte gBmSt

	thumb_func_start sub_80668D8
sub_80668D8: @ 0x080668D8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0xfd
	bl PlaySeSpacial
	bl sub_8069C34
	bl sub_8069C74
	ldr r1, _080669A4 @ =sub_8069E50
	adds r0, r1, #0
	bl SetOnHBlankA
	bl sub_8067324
	ldr r0, _080669A8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080669A8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080669A8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080669A8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080669AC @ =gBg2Tm
	ldr r1, _080669B0 @ =gBuf
	ldr r2, _080669B4 @ =0x00004140
	bl TmApplyTsa_t
	movs r0, #4
	bl EnableBgSync
	movs r0, #2
	movs r1, #0
	movs r2, #1
	ldr r3, [r7]
	bl sub_8067498
	ldr r1, _080669B8 @ =gUnk_086660FC
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProc
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080669A4: .4byte sub_8069E50
_080669A8: .4byte gDispIo
_080669AC: .4byte gBg2Tm
_080669B0: .4byte gBuf
_080669B4: .4byte 0x00004140
_080669B8: .4byte gUnk_086660FC

	thumb_func_start sub_80669BC
sub_80669BC: @ 0x080669BC
	push {r4, r5, r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0xb
	ble _080669FE
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	ldrh r3, [r2]
	subs r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x48
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7]
	bl Proc_Break
_080669FE:
	ldr r1, [r7]
	ldr r0, [r1, #0x30]
	ldr r2, [r7]
	ldr r1, [r2, #0x34]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r4, r3, #0
	adds r4, #0x48
	ldr r3, [r7]
	ldr r4, [r7]
	adds r2, r4, #0
	adds r4, #0x48
	ldrh r5, [r4]
	adds r2, r5, #1
	adds r4, r3, #0
	adds r3, #0x48
	ldrh r4, [r3]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	adds r4, r2, #0
	orrs r5, r4
	adds r4, r5, #0
	strh r4, [r3]
	lsls r3, r2, #0x10
	asrs r2, r3, #0x10
	ldr r3, _08066A44 @ =gUnk_0866544C
	str r3, [sp]
	movs r3, #0xc
	bl sub_806A270
	add sp, #8
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066A44: .4byte gUnk_0866544C

	thumb_func_start sub_8066A48
sub_8066A48: @ 0x08066A48
	push {r4, r5, r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bgt _08066A8A
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x48
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7]
	bl Proc_Break
_08066A8A:
	ldr r1, [r7]
	ldr r0, [r1, #0x30]
	ldr r2, [r7]
	ldr r1, [r2, #0x34]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r4, r3, #0
	adds r4, #0x48
	ldr r3, [r7]
	ldr r4, [r7]
	adds r2, r4, #0
	adds r4, #0x48
	ldrh r5, [r4]
	subs r2, r5, #1
	adds r4, r3, #0
	adds r3, #0x48
	ldrh r4, [r3]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	adds r4, r2, #0
	orrs r5, r4
	adds r4, r5, #0
	strh r4, [r3]
	lsls r3, r2, #0x10
	asrs r2, r3, #0x10
	ldr r3, _08066AD0 @ =gUnk_0866544C
	str r3, [sp]
	movs r3, #0xc
	bl sub_806A270
	add sp, #8
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066AD0: .4byte gUnk_0866544C

	thumb_func_start sub_8066AD4
sub_8066AD4: @ 0x08066AD4
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08066B34 @ =gUnk_08665454
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08066B38 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08066B38 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066B34: .4byte gUnk_08665454
_08066B38: .4byte gBmSt

	thumb_func_start sub_8066B3C
sub_8066B3C: @ 0x08066B3C
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x83
	bl PlaySeSpacial
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl sub_8067324
	ldr r4, _08066C48 @ =gUnk_082E161C
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08066C4C @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08066C50 @ =gUnk_082E11DC
	ldr r1, _08066C54 @ =0x06013800
	bl Decompress
	ldr r1, _08066C58 @ =gUnk_082E172C
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08066C58 @ =gUnk_082E172C
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08066C5C @ =gUnk_082E174C
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	movs r4, #0x80
	lsls r4, r4, #3
	adds r2, r3, #0
	orrs r2, r4
	ldr r3, _08066C60 @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08066C64 @ =gDispIo+0x3C
	ldr r1, _08066C64 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08066C68 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08066C64 @ =gDispIo+0x3C
	ldr r1, _08066C64 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08066C6C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066C6C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066C6C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066C6C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066C6C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066C48: .4byte gUnk_082E161C
_08066C4C: .4byte 0x06002800
_08066C50: .4byte gUnk_082E11DC
_08066C54: .4byte 0x06013800
_08066C58: .4byte gUnk_082E172C
_08066C5C: .4byte gUnk_082E174C
_08066C60: .4byte 0x000041C0
_08066C64: .4byte gDispIo+0x3C
_08066C68: .4byte 0x0000FFE0
_08066C6C: .4byte gDispIo

	thumb_func_start sub_8066C70
sub_8066C70: @ 0x08066C70
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #8
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x84
	bl PlaySeSpacial
	ldr r0, _08066D48 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _08066C90
	adds r1, #7
_08066C90:
	asrs r2, r1, #3
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _08066CA0
	adds r2, #7
_08066CA0:
	asrs r3, r2, #3
	subs r2, r3, #2
	ldr r3, _08066D4C @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #4
	str r4, [sp, #4]
	bl sub_8014E30
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08066D50 @ =gDispIo+0x3C
	ldr r1, _08066D50 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08066D54 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08066D50 @ =gDispIo+0x3C
	ldr r1, _08066D50 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08066D58 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066D58 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066D58 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066D58 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066D58 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066D48: .4byte gBg2Tm
_08066D4C: .4byte 0x00004140
_08066D50: .4byte gDispIo+0x3C
_08066D54: .4byte 0x0000FFE0
_08066D58: .4byte gDispIo

	thumb_func_start sub_8066D5C
sub_8066D5C: @ 0x08066D5C
	push {r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	ldr r0, _08066DF8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	adds r2, r1, #1
	adds r3, r2, #0
	strh r3, [r0]
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	movs r0, #0x1e
	str r0, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	ldr r1, _08066DF8 @ =gDispIo
	adds r2, r1, #0
	adds r1, #0x44
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	ldr r0, _08066DF8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066DF8 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1d
	ble _08066DEE
	ldr r0, [r7]
	bl Proc_Break
_08066DEE:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066DF8: .4byte gDispIo

	thumb_func_start sub_8066DFC
sub_8066DFC: @ 0x08066DFC
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r1, _08066E5C @ =gUnk_08665494
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08066E60 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x30]
	ldr r0, [r7, #4]
	ldr r2, [r7]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	ldr r2, _08066E60 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	asrs r2, r3, #4
	adds r4, r2, #0
	lsls r3, r4, #0x10
	asrs r2, r3, #0x10
	subs r1, r1, r2
	lsls r2, r1, #1
	adds r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #3
	str r1, [r0, #0x34]
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066E5C: .4byte gUnk_08665494
_08066E60: .4byte gBmSt

	thumb_func_start sub_8066E64
sub_8066E64: @ 0x08066E64
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x88
	bl PlaySeSpacial
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl sub_8067324
	ldr r0, _08066F24 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066F24 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066F24 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08066F24 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r4, _08066F28 @ =gUnk_082E1884
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _08066F2C @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r1, _08066F30 @ =gUnk_081B8934
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x4a
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066F24: .4byte gDispIo
_08066F28: .4byte gUnk_082E1884
_08066F2C: .4byte 0x06002800
_08066F30: .4byte gUnk_081B8934

	thumb_func_start sub_8066F34
sub_8066F34: @ 0x08066F34
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x18
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, _08066FC8 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _08066F50
	adds r1, #7
_08066F50:
	asrs r2, r1, #3
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _08066F60
	adds r2, #7
_08066F60:
	asrs r3, r2, #3
	adds r2, r3, #0
	subs r2, #8
	ldr r3, _08066FCC @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #0xa
	str r4, [sp, #4]
	ldr r4, _08066FD0 @ =gUnk_082E2440
	str r4, [sp, #8]
	ldr r4, _08066FD4 @ =gUnk_08307A10
	str r4, [r7, #4]
	ldr r5, [r7]
	adds r6, r5, #0
	adds r5, #0x48
	ldrh r6, [r5]
	adds r4, r6, #1
	mov r8, r4
	mov sb, r8
	mov r4, sb
	strh r4, [r5]
	lsls r6, r6, #0x10
	asrs r5, r6, #0x10
	ldr r6, [r7, #4]
	adds r4, r6, r5
	ldrb r5, [r4]
	str r5, [sp, #0xc]
	bl sub_801501C
	movs r0, #4
	bl EnableBgSync
	ldr r0, _08066FD4 @ =gUnk_08307A10
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _08066FBA
	ldr r0, [r7]
	bl Proc_Break
_08066FBA:
	add sp, #0x18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08066FC8: .4byte gBg2Tm
_08066FCC: .4byte 0x00004140
_08066FD0: .4byte gUnk_082E2440
_08066FD4: .4byte gUnk_08307A10

	thumb_func_start sub_8066FD8
sub_8066FD8: @ 0x08066FD8
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, _08067038 @ =gUnk_086654BC
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	ldr r1, _0806703C @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	ldr r2, [r7]
	subs r1, r2, r1
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x30]
	ldr r0, [r7, #8]
	ldr r1, _0806703C @ =gBmSt
	movs r3, #0xe
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	ldr r2, [r7, #4]
	subs r1, r2, r1
	lsls r2, r1, #1
	adds r1, r2, #0
	lsls r2, r1, #3
	adds r1, r2, #0
	adds r1, #8
	str r1, [r0, #0x34]
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067038: .4byte gUnk_086654BC
_0806703C: .4byte gBmSt

	thumb_func_start sub_8067040
sub_8067040: @ 0x08067040
	push {r4, r7, lr}
	mov r7, sp
	ldr r0, _08067080 @ =gAction
	ldrb r1, [r0, #0xc]
	adds r0, r1, #0
	bl GetUnit
	adds r4, r0, #0
	ldrh r0, [r4, #0xc]
	movs r1, #1
	orrs r0, r1
	ldrh r1, [r4, #0xc]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r1, #0
	strh r0, [r4, #0xc]
	ldr r1, _08067080 @ =gAction
	movs r0, #0x13
	ldrsb r0, [r1, r0]
	ldr r1, _08067080 @ =gAction
	movs r2, #0x14
	ldrsb r2, [r1, r2]
	adds r1, r2, #0
	bl sub_806B398
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067080: .4byte gAction

	thumb_func_start sub_8067084
sub_8067084: @ 0x08067084
	push {r4, r7, lr}
	mov r7, sp
	ldr r0, _080670B0 @ =gAction
	ldrb r1, [r0, #0xc]
	adds r0, r1, #0
	bl GetUnit
	adds r4, r0, #0
	ldrh r0, [r4, #0xc]
	ldr r1, _080670B4 @ =0x0000FFFE
	ands r0, r1
	ldrh r1, [r4, #0xc]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	adds r1, r2, #0
	orrs r1, r0
	adds r0, r1, #0
	strh r0, [r4, #0xc]
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080670B0: .4byte gAction
_080670B4: .4byte 0x0000FFFE

	thumb_func_start sub_80670B8
sub_80670B8: @ 0x080670B8
	push {r4, r7, lr}
	sub sp, #0x14
	add r7, sp, #0x10
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x30]
	movs r0, #0x8d
	bl PlaySeSpacial
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _080671CC @ =gUnk_082DF724
	movs r0, #2
	bl GetBgChrOffset
	ldr r2, _080671D0 @ =0x06002800
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _080671D4 @ =gBg2Tm
	ldr r1, [r7]
	ldr r2, [r1, #0x30]
	adds r1, r2, #0
	cmp r1, #0
	bge _080670F4
	adds r1, #7
_080670F4:
	asrs r2, r1, #3
	subs r1, r2, #2
	ldr r2, [r7]
	ldr r3, [r2, #0x34]
	adds r2, r3, #0
	cmp r2, #0
	bge _08067104
	adds r2, #7
_08067104:
	asrs r3, r2, #3
	subs r2, r3, #2
	ldr r3, _080671D8 @ =0x00004140
	movs r4, #4
	str r4, [sp]
	movs r4, #4
	str r4, [sp, #4]
	ldr r4, _080671DC @ =gUnk_082DF844
	str r4, [sp, #8]
	movs r4, #0
	str r4, [sp, #0xc]
	bl sub_801501C
	movs r0, #4
	bl EnableBgSync
	ldr r0, _080671E0 @ =gUnk_082DF6B0
	ldr r1, _080671E4 @ =0x06013800
	bl Decompress
	ldr r0, _080671E8 @ =gUnk_082DF704
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080671EC @ =gUnk_082DF824
	ldr r1, [r7]
	str r1, [sp]
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #4
	bl sub_8014D9C
	bl sub_8069C34
	bl sub_8069C74
	bl sub_8067324
	ldr r0, _080671F0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080671F0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080671F0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _080671F0 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #0x14
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080671CC: .4byte gUnk_082DF724
_080671D0: .4byte 0x06002800
_080671D4: .4byte gBg2Tm
_080671D8: .4byte 0x00004140
_080671DC: .4byte gUnk_082DF844
_080671E0: .4byte gUnk_082DF6B0
_080671E4: .4byte 0x06013800
_080671E8: .4byte gUnk_082DF704
_080671EC: .4byte gUnk_082DF824
_080671F0: .4byte gDispIo

	thumb_func_start sub_80671F4
sub_80671F4: @ 0x080671F4
	push {r4, r7, lr}
	sub sp, #0x10
	add r7, sp, #8
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r0, #0
	ldrsh r3, [r1, r0]
	movs r0, #0x1e
	str r0, [sp]
	movs r0, #5
	movs r1, #1
	movs r2, #0x10
	bl Interpolate
	str r0, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x48
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	ldr r0, [r1, #0x30]
	ldr r2, [r7]
	ldr r1, [r2, #0x34]
	ldr r2, [r7, #4]
	bl sub_8069DA4
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1d
	ble _0806729E
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x48
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	bl Proc_Break
	ldr r0, _080672A8 @ =gUnk_082A84A4
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r3, [r7]
	ldr r2, [r3, #0x34]
	ldr r3, _080672AC @ =0x000041C0
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r0, _080672A8 @ =gUnk_082A84A4
	ldr r2, [r7]
	ldr r1, [r2, #0x30]
	ldr r3, [r7]
	ldr r2, [r3, #0x34]
	ldr r3, _080672AC @ =0x000041C0
	movs r4, #1
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
_0806729E:
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080672A8: .4byte gUnk_082A84A4
_080672AC: .4byte 0x000041C0

	thumb_func_start sub_80672B0
sub_80672B0: @ 0x080672B0
	push {r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r0, #0
	ldrsh r3, [r1, r0]
	movs r0, #0x1e
	str r0, [sp]
	movs r0, #5
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	str r0, [r7, #4]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x48
	ldrh r3, [r2]
	adds r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x48
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, [r7]
	ldr r0, [r1, #0x30]
	ldr r2, [r7]
	ldr r1, [r2, #0x34]
	ldr r2, [r7, #4]
	bl sub_8069DA4
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x48
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0x1d
	ble _0806731A
	ldr r0, [r7]
	bl Proc_Break
_0806731A:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8067324
sub_8067324: @ 0x08067324
	push {r7, lr}
	mov r7, sp
	ldr r0, _08067488 @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _08067488 @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _08067488 @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _08067488 @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	ldr r0, _0806748C @ =gDispIo+0x3C
	ldr r1, _0806748C @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08067490 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0806748C @ =gDispIo+0x3C
	ldr r1, _0806748C @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806748C @ =gDispIo+0x3C
	ldr r1, _0806748C @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08067494 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0806748C @ =gDispIo+0x3C
	ldr r1, _0806748C @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #0xc0
	lsls r3, r3, #5
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067488 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067488: .4byte gDispIo
_0806748C: .4byte gDispIo+0x3C
_08067490: .4byte 0x0000FFE0
_08067494: .4byte 0x0000E0FF

	thumb_func_start sub_8067498
sub_8067498: @ 0x08067498
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _08067510 @ =gUnk_08665514
	ldr r1, [r7, #0xc]
	bl SpawnProc
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	str r1, [r0, #0x58]
	ldr r0, [r7, #0x10]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, [r7, #0x10]
	ldr r2, [r7, #4]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x66
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
	ldr r0, [r7, #0x10]
	adds r1, r0, #0
	adds r0, #0x68
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r1, [r7, #0x10]
	ldr r2, [r7, #8]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x6a
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067510: .4byte gUnk_08665514

	thumb_func_start sub_8067514
sub_8067514: @ 0x08067514
	push {r7, lr}
	mov r7, sp
	ldr r1, _08067528 @ =gUnk_08665514
	adds r0, r1, #0
	bl Proc_EndEach
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067528: .4byte gUnk_08665514

	thumb_func_start sub_806752C
sub_806752C: @ 0x0806752C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x58]
	adds r0, r1, #0
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	ldrh r1, [r2]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x68
	ldrh r2, [r3]
	bl SetBgOffset
	ldr r0, [r7]
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x64
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x66
	ldrh r1, [r1]
	ldrh r2, [r3]
	adds r1, r1, r2
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7]
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x68
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x6a
	ldrh r1, [r1]
	ldrh r2, [r3]
	adds r1, r1, r2
	adds r2, r0, #0
	adds r0, #0x68
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80675AC
sub_80675AC: @ 0x080675AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r1, _0806764C @ =gBg1Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r5, _08067650 @ =gUnk_08114D80
	movs r0, #1
	bl GetBgChrOffset
	ldr r2, _08067654 @ =0x06004000
	adds r1, r0, r2
	adds r0, r5, #0
	bl Decompress
	ldr r0, _08067658 @ =gUnk_08114FCC
	ldr r1, _0806765C @ =gBuf
	bl Decompress
	ldr r0, _0806765C @ =gBuf
	ldr r1, _0806764C @ =gBg1Tm
	movs r2, #0xe0
	lsls r2, r2, #2
	movs r3, #0xa4
	lsls r3, r3, #7
	bl sub_80152C4
	ldr r1, _08067660 @ =gUnk_081150C8
	adds r0, r1, #0
	movs r1, #0xa0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, [r7, #8]
	lsls r0, r1, #5
	adds r1, r0, #1
	ldr r2, [r7, #4]
	adds r0, r1, r2
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _08067664 @ =gBg0Tm
	adds r5, r0, r1
	ldr r0, _08067668 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [r1, #4]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	adds r2, r0, #0
	adds r0, r5, #0
	movs r1, #0
	bl PutString
	movs r0, #0
	str r0, [r7, #0xc]
_08067636:
	ldr r0, _0806766C @ =gUnk_08665524
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0xff
	bne _08067670
	b _0806770C
	.align 2, 0
_0806764C: .4byte gBg1Tm
_08067650: .4byte gUnk_08114D80
_08067654: .4byte 0x06004000
_08067658: .4byte gUnk_08114FCC
_0806765C: .4byte gBuf
_08067660: .4byte gUnk_081150C8
_08067664: .4byte gBg0Tm
_08067668: .4byte gMapAnimSt
_0806766C: .4byte gUnk_08665524
_08067670:
	ldr r0, _080676E0 @ =gUnk_08665524
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #1]
	ldr r0, [r7, #8]
	adds r1, r1, r0
	lsls r0, r1, #5
	ldr r1, _080676E0 @ =gUnk_08665524
	ldr r2, [r7, #0xc]
	adds r5, r2, #0
	lsls r3, r5, #1
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1]
	ldr r3, [r7, #4]
	adds r1, r2, r3
	adds r0, r0, r1
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080676E4 @ =gBg0Tm
	adds r5, r0, r1
	ldr r0, _080676E8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl UnitKnowsMagic
	strb r0, [r7, #0x10]
	bl GetLang
	ldr r1, _080676E0 @ =gUnk_08665524
	ldr r2, [r7, #0xc]
	mov r8, r2
	mov r6, r8
	lsls r3, r6, #1
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r4, r2, #0
	ldrb r2, [r7, #0x10]
	lsls r3, r2, #0x18
	asrs r2, r3, #0x18
	cmp r2, #1
	bne _080676EC
	adds r2, r4, #4
	b _080676EE
	.align 2, 0
_080676E0: .4byte gUnk_08665524
_080676E4: .4byte gBg0Tm
_080676E8: .4byte gMapAnimSt
_080676EC:
	adds r2, r4, #0
_080676EE:
	adds r3, r1, #4
	adds r1, r3, r2
	lsls r2, r0, #2
	ldr r1, [r1]
	adds r0, r2, r1
	ldr r3, [r0]
	adds r0, r5, #0
	movs r1, #3
	movs r2, #3
	bl PutStringCentered
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _08067636
_0806770C:
	movs r0, #3
	bl EnableBgSync
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start MALevelUp_DrawActorStat
MALevelUp_DrawActorStat: @ 0x08067720
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #0x28]
	adds r1, r7, #0
	adds r1, #0x10
	strb r0, [r1]
	ldr r0, _080677A0 @ =gUnk_08665524
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #1]
	ldr r2, [r7, #8]
	adds r0, r1, r2
	lsls r1, r0, #5
	adds r0, r1, #4
	ldr r1, _080677A0 @ =gUnk_08665524
	ldr r2, [r7, #0xc]
	adds r5, r2, #0
	lsls r3, r5, #1
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r1]
	ldr r3, [r7, #4]
	adds r1, r2, r3
	adds r0, r0, r1
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, _080677A4 @ =gBg0Tm
	adds r5, r0, r1
	ldr r1, [r7, #0xc]
	ldr r0, [r7]
	bl sub_8067920
	adds r4, r0, #0
	adds r6, r4, #0
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _0806778E
	ldr r1, [r7, #0xc]
	ldr r0, [r7]
	bl MALevelUp_GetActorStatUp
	adds r6, r6, r0
_0806778E:
	adds r0, r5, #0
	movs r1, #2
	adds r2, r6, #0
	bl PutNumberOrBlank
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080677A0: .4byte gUnk_08665524
_080677A4: .4byte gBg0Tm

	thumb_func_start MALevelUp_GetActorStatUp
MALevelUp_GetActorStatUp: @ 0x080677A8
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	cmp r0, #8
	bls _080677BA
	b _08067914
_080677BA:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #2
	ldr r1, _080677C8 @ =_080677CC
	adds r0, r0, r1
	ldr r1, [r0]
	mov pc, r1
	.align 2, 0
_080677C8: .4byte _080677CC
_080677CC: @ jump table
	.4byte _080677F0 @ case 0
	.4byte _080677F4 @ case 1
	.4byte _08067818 @ case 2
	.4byte _0806783C @ case 3
	.4byte _08067860 @ case 4
	.4byte _08067884 @ case 5
	.4byte _080678A8 @ case 6
	.4byte _080678CC @ case 7
	.4byte _080678F0 @ case 8
_080677F0:
	movs r0, #1
	b _08067918
_080677F4:
	ldr r0, _08067814 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x6f
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_08067814: .4byte gMapAnimSt
_08067818:
	ldr r0, _08067838 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x70
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_08067838: .4byte gMapAnimSt
_0806783C:
	ldr r0, _0806785C @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x71
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_0806785C: .4byte gMapAnimSt
_08067860:
	ldr r0, _08067880 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x72
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_08067880: .4byte gMapAnimSt
_08067884:
	ldr r0, _080678A4 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x75
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_080678A4: .4byte gMapAnimSt
_080678A8:
	ldr r0, _080678C8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x73
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_080678C8: .4byte gMapAnimSt
_080678CC:
	ldr r0, _080678EC @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x74
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_080678EC: .4byte gMapAnimSt
_080678F0:
	ldr r0, _08067910 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x76
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067918
	.align 2, 0
_08067910: .4byte gMapAnimSt
_08067914:
	movs r0, #0
	b _08067918
_08067918:
	add sp, #8
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8067920
sub_8067920: @ 0x08067920
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _0806795C @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r2, #0xb
	ldrsb r2, [r1, r2]
	adds r0, r2, #0
	bl GetUnit
	str r0, [r7, #8]
	ldr r0, [r7, #4]
	cmp r0, #8
	bhi _08067A08
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #2
	ldr r1, _08067960 @ =_08067964
	adds r0, r0, r1
	ldr r1, [r0]
	mov pc, r1
	.align 2, 0
_0806795C: .4byte gMapAnimSt
_08067960: .4byte _08067964
_08067964: @ jump table
	.4byte _08067988 @ case 0
	.4byte _080679AC @ case 1
	.4byte _080679B6 @ case 2
	.4byte _080679C0 @ case 3
	.4byte _080679CA @ case 4
	.4byte _080679D4 @ case 5
	.4byte _080679DE @ case 6
	.4byte _080679E8 @ case 7
	.4byte _080679F2 @ case 8
_08067988:
	ldr r0, _080679A8 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r2, #0x6c
	movs r1, #0
	ldrsb r1, [r2, r1]
	adds r0, r1, #0
	b _08067A0C
	.align 2, 0
_080679A8: .4byte gMapAnimSt
_080679AC:
	ldr r0, [r7, #8]
	movs r1, #0x10
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679B6:
	ldr r0, [r7, #8]
	movs r1, #0x12
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679C0:
	ldr r0, [r7, #8]
	movs r1, #0x13
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679CA:
	ldr r0, [r7, #8]
	movs r1, #0x14
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679D4:
	ldr r0, [r7, #8]
	movs r1, #0x17
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679DE:
	ldr r0, [r7, #8]
	movs r1, #0x15
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679E8:
	ldr r0, [r7, #8]
	movs r1, #0x16
	ldrsb r1, [r0, r1]
	adds r0, r1, #0
	b _08067A0C
_080679F2:
	ldr r0, [r7, #8]
	ldr r2, [r0, #4]
	movs r1, #0x11
	ldrsb r1, [r2, r1]
	ldr r0, [r7, #8]
	ldr r2, [r0]
	movs r0, #0x13
	ldrsb r0, [r2, r0]
	adds r1, r1, r0
	adds r0, r1, #0
	b _08067A0C
_08067A08:
	movs r0, #0
	b _08067A0C
_08067A0C:
	add sp, #0xc
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8067A14
sub_8067A14: @ 0x08067A14
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl EndEachSpriteAnimProc
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8067A28
sub_8067A28: @ 0x08067A28
	push {r7, lr}
	sub sp, #0x18
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _08067ADC @ =gUnk_0866559C
	ldr r1, [r7, #0xc]
	bl SpawnProc
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	ldr r2, [r7]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2a]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2a]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #4]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2c]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2c]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #8]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2e]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2e]
	ldr r0, _08067AE0 @ =gUnk_082DBB24
	ldr r1, [r7]
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	ldr r3, _08067AE4 @ =0x06010000
	adds r1, r2, r3
	bl Decompress
	ldr r0, _08067AE8 @ =gUnk_082DBAC4
	ldr r2, [r7, #4]
	adds r1, r2, #0
	adds r1, #0x10
	adds r2, r1, #0
	lsls r1, r2, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08067AE8 @ =gUnk_082DBAC4
	ldr r2, [r7, #4]
	adds r1, r2, #0
	adds r1, #0x11
	adds r2, r1, #0
	lsls r1, r2, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08067AEC @ =gUnk_086655AC
	ldr r1, [r7, #0x10]
	bl SpawnProc
	str r0, [r7, #0x14]
	ldr r1, [r7, #0x14]
	ldr r2, [r7, #4]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x64
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
	add sp, #0x18
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067ADC: .4byte gUnk_0866559C
_08067AE0: .4byte gUnk_082DBB24
_08067AE4: .4byte 0x06010000
_08067AE8: .4byte gUnk_082DBAC4
_08067AEC: .4byte gUnk_086655AC

	thumb_func_start sub_8067AF0
sub_8067AF0: @ 0x08067AF0
	push {r7, lr}
	mov r7, sp
	ldr r1, _08067B04 @ =gUnk_0866559C
	adds r0, r1, #0
	bl Proc_EndEach
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067B04: .4byte gUnk_0866559C

	thumb_func_start sub_8067B08
sub_8067B08: @ 0x08067B08
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	add r7, sp, #8
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _08067B88 @ =gUnk_082DBDB0
	str r0, [r7, #0x20]
	ldr r1, _08067B8C @ =gUnk_0866559C
	adds r0, r1, #0
	bl Proc_Find
	str r0, [r7, #0x1c]
	ldr r0, [r7, #0x1c]
	ldrh r1, [r0, #0x2a]
	str r1, [r7, #0x14]
	ldr r1, [r7, #0x1c]
	ldrh r0, [r1, #0x2a]
	ldr r2, [r7, #8]
	subs r1, r2, #1
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, r0, r1
	str r0, [r7, #0x18]
	ldr r0, [r7, #8]
	cmp r0, #0
	bne _08067B94
	ldr r0, _08067B90 @ =gUnk_082A75FC
	ldr r2, [r7]
	adds r1, r2, #0
	subs r1, #0x12
	ldr r3, [r7, #4]
	subs r2, r3, #4
	ldr r3, [r7, #0x1c]
	ldrh r4, [r3, #0x2c]
	movs r5, #0xf
	adds r3, r4, #0
	ands r3, r5
	adds r5, r3, #0
	lsls r4, r5, #0x10
	lsrs r3, r4, #0x10
	adds r4, r3, #0
	lsls r3, r4, #0xc
	ldr r4, [r7, #0x14]
	adds r3, r3, r4
	ldr r4, [r7, #0x1c]
	ldrh r5, [r4, #0x2e]
	movs r6, #3
	adds r4, r5, #0
	ands r4, r6
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	adds r5, r4, #0
	lsls r4, r5, #0xa
	adds r3, r3, r4
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	b _08067CE8
	.align 2, 0
_08067B88: .4byte gUnk_082DBDB0
_08067B8C: .4byte gUnk_0866559C
_08067B90: .4byte gUnk_082A75FC
_08067B94:
	ldr r0, [r7, #0xc]
	cmp r0, #0
	ble _08067BA0
	movs r0, #0
	str r0, [r7, #0x10]
	b _08067BA4
_08067BA0:
	movs r0, #1
	str r0, [r7, #0x10]
_08067BA4:
	ldr r0, _08067CF0 @ =gUnk_082A75FC
	ldr r2, [r7, #4]
	ldr r1, [r7, #0x1c]
	ldrh r3, [r1, #0x2c]
	ldr r4, [r7, #0x10]
	adds r1, r3, r4
	movs r3, #0xf
	ands r1, r3
	adds r3, r1, #0
	lsls r1, r3, #0xc
	ldr r3, [r7, #0x14]
	adds r1, r1, r3
	ldr r3, [r7, #0x1c]
	ldrh r4, [r3, #0x2e]
	movs r5, #3
	adds r3, r4, #0
	ands r3, r5
	adds r5, r3, #0
	lsls r4, r5, #0x10
	lsrs r3, r4, #0x10
	adds r4, r3, #0
	lsls r5, r4, #0xa
	adds r3, r1, r5
	ldr r1, [r7, #0x10]
	adds r4, r1, #1
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	ldr r1, [r7]
	bl StartSpriteAnimProc
	ldr r0, _08067CF0 @ =gUnk_082A75FC
	ldr r2, [r7]
	subs r1, r2, #3
	ldr r2, [r7, #4]
	ldr r3, [r7, #0x1c]
	ldrh r4, [r3, #0x2c]
	movs r5, #0xf
	adds r3, r4, #0
	ands r3, r5
	adds r5, r3, #0
	lsls r4, r5, #0x10
	lsrs r3, r4, #0x10
	adds r4, r3, #0
	lsls r3, r4, #0xc
	ldr r4, [r7, #0x18]
	adds r3, r3, r4
	ldr r4, [r7, #0x1c]
	ldrh r5, [r4, #0x2e]
	movs r6, #3
	adds r4, r5, #0
	ands r4, r6
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	adds r5, r4, #0
	lsls r4, r5, #0xa
	adds r3, r3, r4
	ldr r4, [r7, #0x10]
	adds r5, r4, #3
	str r5, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r0, [r7, #0xc]
	cmp r0, #0
	ble _08067C72
	ldr r0, _08067CF0 @ =gUnk_082A75FC
	ldr r2, [r7]
	adds r1, r2, #0
	subs r1, #0x12
	ldr r3, [r7, #4]
	subs r2, r3, #4
	ldr r3, [r7, #0x1c]
	ldrh r4, [r3, #0x2c]
	movs r5, #0xf
	adds r3, r4, #0
	ands r3, r5
	adds r5, r3, #0
	lsls r4, r5, #0x10
	lsrs r3, r4, #0x10
	adds r4, r3, #0
	lsls r3, r4, #0xc
	ldr r4, [r7, #0x14]
	adds r3, r3, r4
	ldr r4, [r7, #0x1c]
	ldrh r5, [r4, #0x2e]
	movs r6, #3
	adds r4, r5, #0
	ands r4, r6
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	adds r5, r4, #0
	lsls r4, r5, #0xa
	adds r3, r3, r4
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
_08067C72:
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bge _08067C96
	ldr r1, [r7, #0x20]
	movs r2, #0x80
	lsls r2, r2, #3
	adds r0, r1, r2
	ldr r2, [r7, #0x18]
	adds r1, r2, #0
	adds r1, #0x4c
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	ldr r3, _08067CF4 @ =0x06010000
	adds r1, r2, r3
	movs r2, #0x20
	bl sub_8015260
_08067C96:
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bge _08067C9E
	rsbs r0, r0, #0
_08067C9E:
	lsls r1, r0, #0x16
	lsrs r0, r1, #0x16
	lsls r1, r0, #5
	ldr r2, [r7, #0x20]
	adds r0, r1, r2
	ldr r2, [r7, #0x18]
	adds r1, r2, #0
	adds r1, #0x2d
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	ldr r3, _08067CF4 @ =0x06010000
	adds r1, r2, r3
	movs r2, #0x20
	bl sub_8015260
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bge _08067CC6
	rsbs r0, r0, #0
_08067CC6:
	adds r0, #0x20
	lsls r1, r0, #0x16
	lsrs r0, r1, #0x16
	lsls r1, r0, #5
	ldr r2, [r7, #0x20]
	adds r0, r1, r2
	ldr r2, [r7, #0x18]
	adds r1, r2, #0
	adds r1, #0x4d
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	ldr r3, _08067CF4 @ =0x06010000
	adds r1, r2, r3
	movs r2, #0x20
	bl sub_8015260
_08067CE8:
	add sp, #0x2c
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067CF0: .4byte gUnk_082A75FC
_08067CF4: .4byte 0x06010000

	thumb_func_start sub_8067CF8
sub_8067CF8: @ 0x08067CF8
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _08067D28 @ =gUnk_086655C4
	ldr r1, [r7, #4]
	bl SpawnProcLocking
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	ldr r2, [r7]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2e]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2e]
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067D28: .4byte gUnk_086655C4

	thumb_func_start sub_8067D2C
sub_8067D2C: @ 0x08067D2C
	push {r7, lr}
	mov r7, sp
	ldr r0, _08067E4C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08067E4C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08067E4C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x30
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x30
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xfe
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xfd
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08067E4C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067E4C: .4byte gDispIo

	thumb_func_start sub_8067E50
sub_8067E50: @ 0x08067E50
	push {r7, lr}
	mov r7, sp
	ldr r0, _08067E80 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08067E80 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08067E80 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067E80: .4byte gDispIo

	thumb_func_start sub_8067E84
sub_8067E84: @ 0x08067E84
	push {r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	bl ResetTextFont
	ldr r1, _08067EB8 @ =gBg0Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r0, [r7]
	movs r2, #0x2e
	ldrsh r1, [r0, r2]
	adds r0, r1, #0
	movs r1, #1
	movs r2, #1
	bl sub_80675AC
	movs r0, #0
	str r0, [r7, #4]
_08067EAE:
	ldr r0, [r7, #4]
	cmp r0, #8
	ble _08067EBC
	b _08067ED8
	.align 2, 0
_08067EB8: .4byte gBg0Tm
_08067EBC:
	ldr r1, [r7]
	movs r3, #0x2e
	ldrsh r0, [r1, r3]
	ldr r3, [r7, #4]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	movs r2, #1
	bl MALevelUp_DrawActorStat
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08067EAE
_08067ED8:
	movs r0, #1
	bl EnableBgSync
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x30
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	ldrh r1, [r0, #0x32]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	ldr r3, _08068038 @ =0x0000FF70
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x32]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	ldr r0, _0806803C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0x3f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806803C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806803C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806803C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _0806803C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
	ldr r0, _08068040 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r0, #0x42
	str r0, [sp]
	movs r0, #0
	movs r2, #0xb8
	movs r3, #0x50
	bl StartFace
	ldr r1, _08068044 @ =gFaces
	ldr r0, [r1]
	ldr r1, [r7]
	ldrh r2, [r1, #0x32]
	rsbs r1, r2, #0
	ldrh r2, [r0, #0x30]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x30]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r1, #0
	movs r1, #3
	movs r2, #1
	ldr r3, [r7]
	bl sub_8067A28
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068038: .4byte 0x0000FF70
_0806803C: .4byte gDispIo
_08068040: .4byte gMapAnimSt
_08068044: .4byte gFaces

	thumb_func_start sub_8068048
sub_8068048: @ 0x08068048
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	movs r1, #0
	str r1, [r0, #0x54]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068060
sub_8068060: @ 0x08068060
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068088 @ =gUnk_082DB6E8
	str r0, [r7, #8]
	ldr r1, [r7]
	ldr r0, [r7]
	ldr r1, [r7]
	ldr r2, [r1, #0x54]
	adds r1, r2, #1
	str r1, [r0, #0x54]
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	movs r2, #3
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _0806808C
	b _080680E8
	.align 2, 0
_08068088: .4byte gUnk_082DB6E8
_0806808C:
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	asrs r0, r1, #2
	movs r1, #0xf
	ands r0, r1
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, [r7, #8]
	adds r0, r0, r1
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	adds r2, #0x10
	adds r1, r2, #0
	lsls r2, r1, #5
	adds r1, r2, #0
	adds r1, #0x12
	movs r2, #0xe
	bl ApplyPaletteExt
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r2, [r7, #8]
	adds r1, r0, r2
	adds r0, r1, #0
	adds r0, #0x40
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x64
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r2, r1, #0
	adds r2, #0x11
	adds r1, r2, #0
	lsls r2, r1, #5
	adds r1, r2, #0
	adds r1, #0x12
	movs r2, #0xe
	bl ApplyPaletteExt
_080680E8:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80680F0
sub_80680F0: @ 0x080680F0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r7]
	ldrh r2, [r1, #0x32]
	adds r1, r2, #0
	adds r1, #8
	ldrh r2, [r0, #0x32]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x32]
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
	ldr r1, _08068160 @ =gFaces
	ldr r0, [r1]
	ldr r1, [r7]
	ldrh r2, [r1, #0x32]
	movs r3, #0x20
	subs r1, r3, r2
	ldrh r2, [r0, #0x30]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x30]
	ldr r0, [r7]
	movs r2, #0x32
	ldrsh r1, [r0, r2]
	movs r0, #0x30
	cmn r1, r0
	blt _08068158
	ldr r0, [r7]
	bl Proc_Break
_08068158:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068160: .4byte gFaces

	thumb_func_start sub_8068164
sub_8068164: @ 0x08068164
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r7]
	ldrh r2, [r1, #0x32]
	adds r1, r2, #0
	subs r1, #8
	ldrh r2, [r0, #0x32]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x32]
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldr r0, [r7]
	ldrh r2, [r0, #0x32]
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
	ldr r1, _080681D4 @ =gFaces
	ldr r0, [r1]
	ldr r1, [r7]
	ldrh r2, [r1, #0x32]
	movs r3, #0x20
	subs r1, r3, r2
	ldrh r2, [r0, #0x30]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x30]
	ldr r0, [r7]
	movs r2, #0x32
	ldrsh r1, [r0, r2]
	movs r0, #0x90
	cmn r1, r0
	bgt _080681CC
	ldr r0, [r7]
	bl Proc_Break
_080681CC:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080681D4: .4byte gFaces

	thumb_func_start sub_80681D8
sub_80681D8: @ 0x080681D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x31
	ldrb r0, [r1]
	cmp r0, #0
	beq _08068214
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x31
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x31
	ldrb r3, [r2]
	subs r1, r3, #1
	adds r2, r0, #0
	adds r0, #0x31
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	b _08068308
_08068214:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x30
	ldrb r0, [r1]
	str r0, [r7, #4]
_0806821E:
	ldr r0, [r7, #4]
	cmp r0, #8
	ble _08068226
	b _08068244
_08068226:
	ldr r0, [r7]
	movs r2, #0x2e
	ldrsh r1, [r0, r2]
	ldr r2, [r7, #4]
	adds r0, r1, #0
	adds r1, r2, #0
	bl MALevelUp_GetActorStatUp
	cmp r0, #0
	beq _0806823C
	b _08068244
_0806823C:
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _0806821E
_08068244:
	ldr r0, [r7, #4]
	cmp r0, #8
	ble _08068252
	ldr r0, [r7]
	bl Proc_Break
	b _08068308
_08068252:
	ldr r1, [r7]
	movs r3, #0x2e
	ldrsh r0, [r1, r3]
	ldr r3, [r7, #4]
	movs r1, #1
	str r1, [sp]
	movs r1, #1
	movs r2, #1
	bl MALevelUp_DrawActorStat
	movs r0, #1
	bl EnableBgSync
	ldr r0, _08068310 @ =gUnk_08665524
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r1, #0
	lsls r1, r0, #3
	adds r4, r1, #0
	adds r4, #0x3e
	ldr r0, _08068310 @ =gUnk_08665524
	ldr r1, [r7, #4]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #1]
	adds r2, r1, #0
	lsls r0, r2, #3
	ldr r1, [r7]
	movs r3, #0x32
	ldrsh r2, [r1, r3]
	adds r1, r2, #0
	subs r1, #0x17
	subs r5, r0, r1
	ldr r6, [r7, #4]
	ldr r0, [r7]
	movs r2, #0x2e
	ldrsh r1, [r0, r2]
	ldr r2, [r7, #4]
	adds r0, r1, #0
	adds r1, r2, #0
	bl MALevelUp_GetActorStatUp
	adds r3, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r6, #0
	bl sub_8067B08
	ldr r0, _08068314 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _080682D4
	movs r0, #0x76
	bl m4aSongNumStart
_080682D4:
	ldr r0, [r7]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	adds r1, r2, #1
	adds r2, r0, #0
	adds r0, #0x30
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x14
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
_08068308:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068310: .4byte gUnk_08665524
_08068314: .4byte gPlaySt

	thumb_func_start sub_8068318
sub_8068318: @ 0x08068318
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #0x10
	ldr r3, [r7]
	bl StartBgmVolumeChange
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8068338
sub_8068338: @ 0x08068338
	push {r4, r7, lr}
	sub sp, #0x14
	add r7, sp, #8
	str r0, [r7]
	ldr r0, _08068488 @ =gUnk_082DB8B0
	ldr r1, _0806848C @ =0x06013800
	bl Decompress
	ldr r0, _08068490 @ =gUnk_082DBAC4
	movs r1, #0x98
	lsls r1, r1, #2
	movs r2, #0x60
	bl ApplyPaletteExt
	ldr r0, _08068494 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldr r1, _08068498 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	subs r0, r0, r1
	lsls r1, r0, #1
	adds r0, r1, #0
	lsls r1, r0, #3
	adds r0, r1, #0
	adds r0, #0x10
	str r0, [r7, #4]
	ldr r0, _08068494 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xf
	ldrsb r0, [r1, r0]
	ldr r1, _08068498 @ =gBmSt
	movs r3, #0xe
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	subs r0, r0, r1
	lsls r1, r0, #1
	adds r0, r1, #0
	lsls r1, r0, #3
	adds r0, r1, #0
	subs r0, #8
	str r0, [r7, #8]
	ldr r0, _08068494 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xf
	ldrsb r0, [r1, r0]
	ldr r1, _08068498 @ =gBmSt
	movs r3, #0xe
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	subs r0, r0, r1
	lsls r1, r0, #1
	cmp r1, #3
	bgt _080683F2
	ldr r0, [r7, #8]
	adds r1, r0, #0
	adds r1, #0x20
	str r1, [r7, #8]
_080683F2:
	ldr r0, _08068494 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldr r1, _08068498 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	subs r0, r0, r1
	lsls r1, r0, #1
	cmp r1, #3
	bgt _08068424
	movs r0, #0x30
	str r0, [r7, #4]
_08068424:
	ldr r0, _08068494 @ =gMapAnimSt
	ldr r2, [r7]
	movs r3, #0x2e
	ldrsh r1, [r2, r3]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldr r1, _08068498 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	asrs r1, r2, #4
	adds r3, r1, #0
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	subs r0, r0, r1
	lsls r1, r0, #1
	cmp r1, #0x19
	ble _08068456
	movs r0, #0xd0
	str r0, [r7, #4]
_08068456:
	ldr r0, _0806849C @ =gUnk_082A7CBC
	ldr r1, [r7, #4]
	ldr r2, [r7, #8]
	movs r3, #0xc7
	lsls r3, r3, #6
	movs r4, #0
	str r4, [sp]
	movs r4, #2
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r0, _080684A0 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _0806847E
	movs r0, #0x5b
	bl m4aSongNumStart
_0806847E:
	add sp, #0x14
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068488: .4byte gUnk_082DB8B0
_0806848C: .4byte 0x06013800
_08068490: .4byte gUnk_082DBAC4
_08068494: .4byte gMapAnimSt
_08068498: .4byte gBmSt
_0806849C: .4byte gUnk_082A7CBC
_080684A0: .4byte gPlaySt

	thumb_func_start sub_80684A4
sub_80684A4: @ 0x080684A4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl EndEachSpriteAnimProc
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80684B8
sub_80684B8: @ 0x080684B8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x80
	movs r2, #0x10
	ldr r3, [r7]
	bl StartBgmVolumeChange
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80684D8
sub_80684D8: @ 0x080684D8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ClearTalk
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80684EC
sub_80684EC: @ 0x080684EC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	cmp r0, #0
	beq _0806850C
	ldr r1, _08068508 @ =gUnk_08665684
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
	b _08068516
	.align 2, 0
_08068508: .4byte gUnk_08665684
_0806850C:
	ldr r1, _08068520 @ =gUnk_08665684
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
_08068516:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068520: .4byte gUnk_08665684

	thumb_func_start sub_8068524
sub_8068524: @ 0x08068524
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068544 @ =gPal+0xC0
	ldr r1, _08068548 @ =0x03004750
	movs r2, #0x50
	bl CpuFastSet
	movs r0, #0
	str r0, [r7, #4]
_0806853A:
	ldr r0, [r7, #4]
	cmp r0, #9
	ble _0806854C
	b _08068570
	.align 2, 0
_08068544: .4byte gPal+0xC0
_08068548: .4byte 0x03004750
_0806854C:
	ldr r0, _0806856C @ =Pal_AllBlack
	ldr r2, [r7, #4]
	adds r1, r2, #6
	movs r2, #0x3c
	ldr r3, [r7]
	bl StartPalFade
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #0xf
	bl SetPalFadeStop
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _0806853A
	.align 2, 0
_0806856C: .4byte Pal_AllBlack
_08068570:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8068578
sub_8068578: @ 0x08068578
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	cmp r0, #0
	beq _08068598
	ldr r1, _08068594 @ =gUnk_0866569C
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
	b _080685A2
	.align 2, 0
_08068594: .4byte gUnk_0866569C
_08068598:
	ldr r1, _080685AC @ =gUnk_0866569C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
_080685A2:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080685AC: .4byte gUnk_0866569C

	thumb_func_start sub_80685B0
sub_80685B0: @ 0x080685B0
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	str r0, [r7, #4]
_080685BC:
	ldr r0, [r7, #4]
	cmp r0, #9
	ble _080685C4
	b _080685E8
_080685C4:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #5
	ldr r1, _080685E4 @ =0x03004750
	adds r0, r0, r1
	ldr r2, [r7, #4]
	adds r1, r2, #6
	movs r2, #0xf
	ldr r3, [r7]
	bl StartPalFade
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080685BC
	.align 2, 0
_080685E4: .4byte 0x03004750
_080685E8:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80685F0
sub_80685F0: @ 0x080685F0
	push {r7, lr}
	mov r7, sp
	ldr r1, _08068604 @ =gUnk_086656B4
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068604: .4byte gUnk_086656B4

	thumb_func_start sub_8068608
sub_8068608: @ 0x08068608
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8068628
sub_8068628: @ 0x08068628
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl RandNextB
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #9
	bl DivRem
	adds r1, r0, #0
	subs r0, r1, #4
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r4, r0, #0x10
	bl RandNextB
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #9
	bl DivRem
	adds r1, r0, #0
	subs r0, r1, #4
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #0
	adds r1, r4, #0
	bl SetBgOffset
	bl RandNextB
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #9
	bl DivRem
	adds r1, r0, #0
	subs r0, r1, #4
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r4, r0, #0x10
	bl RandNextB
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #9
	bl DivRem
	adds r1, r0, #0
	subs r0, r1, #4
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #1
	adds r1, r4, #0
	bl SetBgOffset
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r2, r1, #1
	adds r3, r2, #0
	strh r3, [r0]
	lsls r1, r1, #0x10
	asrs r0, r1, #0x10
	cmp r0, #0xf
	ble _080686D0
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, [r7]
	bl Proc_Break
_080686D0:
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80686D8
sub_80686D8: @ 0x080686D8
	push {r7, lr}
	mov r7, sp
	ldr r0, _080686F8 @ =gUnk_082DD7E8
	ldr r1, _080686FC @ =0x06013800
	bl Decompress
	ldr r0, _08068700 @ =gUnk_082DD808
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080686F8: .4byte gUnk_082DD7E8
_080686FC: .4byte 0x06013800
_08068700: .4byte gUnk_082DD808

	thumb_func_start sub_8068704
sub_8068704: @ 0x08068704
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, [r7]
	movs r1, #4
	cmn r0, r1
	bge _08068718
	b _0806874A
_08068718:
	ldr r0, [r7]
	cmp r0, #0xeb
	ble _08068720
	b _0806874A
_08068720:
	ldr r0, [r7, #4]
	movs r1, #4
	cmn r0, r1
	bge _0806872A
	b _0806874A
_0806872A:
	ldr r0, [r7, #4]
	cmp r0, #0x9b
	ble _08068732
	b _0806874A
_08068732:
	ldr r1, [r7]
	subs r0, r1, #4
	lsls r1, r0, #0x17
	lsrs r0, r1, #0x17
	ldr r2, [r7, #4]
	subs r1, r2, #4
	movs r2, #0xff
	ands r1, r2
	ldr r2, _08068754 @ =Sprite_8x8
	ldr r3, _08068758 @ =0x000041C0
	bl PutOamHiRam
_0806874A:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068754: .4byte Sprite_8x8
_08068758: .4byte 0x000041C0

	thumb_func_start sub_806875C
sub_806875C: @ 0x0806875C
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _080687B8 @ =gSinLut
	ldr r1, [r7, #0xc]
	movs r2, #0xff
	ands r1, r2
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, r0, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r2, [r7, #8]
	adds r0, r1, #0
	muls r0, r2, r0
	asrs r1, r0, #0xc
	ldr r2, [r7]
	adds r0, r1, r2
	ldr r1, _080687B8 @ =gSinLut
	ldr r2, [r7, #0xc]
	movs r3, #0xff
	ands r2, r3
	adds r3, r2, #0
	adds r3, #0x40
	adds r2, r3, #0
	lsls r3, r2, #1
	adds r1, r1, r3
	movs r3, #0
	ldrsh r2, [r1, r3]
	ldr r3, [r7, #8]
	adds r1, r2, #0
	muls r1, r3, r1
	asrs r2, r1, #0xc
	ldr r3, [r7, #4]
	adds r1, r2, r3
	bl sub_8068704
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080687B8: .4byte gSinLut

	thumb_func_start sub_80687BC
sub_80687BC: @ 0x080687BC
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	bl sub_80686D8
	movs r0, #0
	str r0, [r7, #4]
_080687CC:
	ldr r0, [r7, #4]
	cmp r0, #0xf
	ble _080687D4
	b _08068820
_080687D4:
	ldr r0, _0806881C @ =0x030046D0
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0806881C @ =0x030046D0
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #3
	adds r0, r0, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	lsls r1, r2, #4
	ldrh r2, [r0, #2]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #2]
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080687CC
	.align 2, 0
_0806881C: .4byte 0x030046D0
_08068820:
	ldr r0, [r7]
	ldrh r1, [r0, #0x36]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x36]
	ldr r0, [r7]
	ldrh r1, [r0, #0x38]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x38]
	ldr r0, [r7]
	ldr r1, [r7]
	ldrh r2, [r0, #0x3a]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1, #0x3c]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x3a]
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068858
sub_8068858: @ 0x08068858
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	add r7, sp, #4
	str r0, [r7]
	ldr r0, [r7]
	movs r2, #0x2e
	ldrsh r1, [r0, r2]
	ldr r0, [r7]
	movs r3, #0x30
	ldrsh r2, [r0, r3]
	ldr r0, [r7]
	ldrh r3, [r0, #0x3a]
	ldr r0, [r7]
	ldrh r4, [r0, #0x3e]
	str r4, [sp]
	movs r0, #5
	bl Interpolate
	lsls r1, r0, #4
	str r1, [r7, #8]
	ldr r0, [r7]
	ldr r2, [r7, #8]
	adds r1, r2, #0
	ldrh r2, [r0, #0x36]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x36]
	ldr r0, [r7]
	ldr r1, [r7, #8]
	asrs r2, r1, #0x1f
	lsrs r3, r2, #0x1f
	adds r2, r1, r3
	asrs r1, r2, #1
	ldrh r2, [r0, #0x38]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x38]
	movs r0, #0
	str r0, [r7, #4]
_080688B4:
	ldr r0, [r7, #4]
	cmp r0, #0xf
	ble _080688BC
	b _08068900
_080688BC:
	ldr r1, [r7]
	movs r2, #0x2a
	ldrsh r0, [r1, r2]
	ldr r2, [r7]
	movs r3, #0x2c
	ldrsh r1, [r2, r3]
	ldr r3, [r7]
	ldrh r2, [r3, #0x36]
	ldr r3, _080688FC @ =0x030046D0
	ldr r4, [r7, #4]
	adds r5, r4, #0
	lsls r4, r5, #3
	adds r3, r3, r4
	ldrh r4, [r3]
	adds r3, r2, r4
	asrs r2, r3, #4
	ldr r4, [r7]
	ldrh r3, [r4, #0x38]
	ldr r4, _080688FC @ =0x030046D0
	ldr r5, [r7, #4]
	adds r6, r5, #0
	lsls r5, r6, #3
	adds r4, r4, r5
	ldrh r5, [r4, #2]
	adds r4, r3, r5
	asrs r3, r4, #4
	bl sub_806875C
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080688B4
	.align 2, 0
_080688FC: .4byte 0x030046D0
_08068900:
	ldr r1, [r7]
	ldr r0, [r7]
	ldr r1, [r7]
	ldrh r2, [r1, #0x3a]
	adds r1, r2, #1
	ldrh r2, [r0, #0x3a]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0x3a]
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x40
	ldrh r0, [r0, #0x3a]
	ldrh r1, [r2]
	cmp r0, r1
	bls _08068930
	ldr r0, [r7]
	bl Proc_Break
_08068930:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8068938
sub_8068938: @ 0x08068938
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r1, _080689EC @ =gUnk_086656CC
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	ldr r2, [r7]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2a]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2a]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #4]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2c]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2c]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #8]
	adds r1, r2, #0
	ldrh r2, [r0, #0x2e]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x2e]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #0xc]
	adds r1, r2, #0
	ldrh r2, [r0, #0x30]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x30]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #0x1c]
	adds r1, r2, #0
	ldrh r2, [r0, #0x3c]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x3c]
	ldr r0, [r7, #0x10]
	ldr r2, [r7, #0x20]
	adds r1, r2, #0
	ldrh r2, [r0, #0x3e]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x3e]
	ldr r1, [r7, #0x10]
	ldr r2, [r7, #0x24]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x40
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strh r2, [r1]
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080689EC: .4byte gUnk_086656CC

	thumb_func_start sub_80689F0
sub_80689F0: @ 0x080689F0
	push {r7, lr}
	sub sp, #0x14
	add r7, sp, #0xc
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	movs r0, #0
	str r0, [sp]
	movs r0, #0x50
	str r0, [sp, #4]
	movs r0, #0x28
	str r0, [sp, #8]
	ldr r0, [r7]
	movs r2, #1
	movs r3, #0xc8
	bl sub_8068938
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068A1C
sub_8068A1C: @ 0x08068A1C
	push {r7, lr}
	sub sp, #0x14
	add r7, sp, #0xc
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	movs r0, #0
	str r0, [sp]
	movs r0, #0x3c
	str r0, [sp, #4]
	movs r0, #0x37
	str r0, [sp, #8]
	ldr r0, [r7]
	movs r2, #0xc8
	movs r3, #1
	bl sub_8068938
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068A48
sub_8068A48: @ 0x08068A48
	push {r7, lr}
	mov r7, sp
	ldr r0, _08068A58 @ =gMapAnimSt
	ldr r1, [r0, #0x54]
	cmp r1, #0
	bne _08068A60
	ldr r0, _08068A5C @ =gUnk_086656FC
	b _08068A6C
	.align 2, 0
_08068A58: .4byte gMapAnimSt
_08068A5C: .4byte gUnk_086656FC
_08068A60:
	ldr r0, _08068A68 @ =gMapAnimSt
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	b _08068A6C
	.align 2, 0
_08068A68: .4byte gMapAnimSt
_08068A6C:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8068A74
sub_8068A74: @ 0x08068A74
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068AA4 @ =gMapAnimSt
	ldr r2, _08068AA4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuActionAnim
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068AA4: .4byte gMapAnimSt

	thumb_func_start sub_8068AA8
sub_8068AA8: @ 0x08068AA8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068AD8 @ =gMapAnimSt
	ldr r2, _08068AD8 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuDelayedFaceTarget
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068AD8: .4byte gMapAnimSt

	thumb_func_start sub_8068ADC
sub_8068ADC: @ 0x08068ADC
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068B10 @ =gMapAnimSt
	ldr r2, _08068B10 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	ldr r0, [r1, #4]
	ldrb r1, [r0, #4]
	cmp r1, #0x37
	bne _08068B18
	ldr r1, _08068B14 @ =sub_8068BA8
	adds r0, r1, #0
	movs r1, #9
	bl CallDelayed
	b _08068B22
	.align 2, 0
_08068B10: .4byte gMapAnimSt
_08068B14: .4byte sub_8068BA8
_08068B18:
	ldr r1, _08068BA0 @ =sub_8068BE8
	adds r0, r1, #0
	movs r1, #0xc
	bl CallDelayed
_08068B22:
	ldr r0, _08068BA4 @ =gMapAnimSt
	ldr r2, _08068BA4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x18]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x18]
	ldr r0, _08068BA4 @ =gMapAnimSt
	ldr r2, _08068BA4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x1a]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0x1a]
	ldr r0, _08068BA4 @ =gMapAnimSt
	ldr r2, _08068BA4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r1, [r0, #0x30]
	adds r0, r1, #0
	movs r1, #5
	bl SetSpriteAnimId
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068BA0: .4byte sub_8068BE8
_08068BA4: .4byte gMapAnimSt

	thumb_func_start sub_8068BA8
sub_8068BA8: @ 0x08068BA8
	push {r7, lr}
	mov r7, sp
	ldr r0, _08068BE0 @ =gMapAnimSt
	ldr r2, _08068BE0 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _08068BE4 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	movs r0, #0xa8
	bl PlaySeSpacial
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068BE0: .4byte gMapAnimSt
_08068BE4: .4byte gBmSt

	thumb_func_start sub_8068BE8
sub_8068BE8: @ 0x08068BE8
	push {r7, lr}
	mov r7, sp
	ldr r0, _08068C20 @ =gMapAnimSt
	ldr r2, _08068C20 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _08068C24 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	movs r0, #0xa9
	bl PlaySeSpacial
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068C20: .4byte gMapAnimSt
_08068C24: .4byte gBmSt

	thumb_func_start sub_8068C28
sub_8068C28: @ 0x08068C28
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068C80 @ =gMapAnimSt
	ldr r2, _08068C80 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x18]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x18]
	ldr r0, _08068C80 @ =gMapAnimSt
	ldr r2, _08068C80 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	ldr r0, [r2, #0x30]
	ldrh r1, [r0, #0x1a]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0, #0x1a]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068C80: .4byte gMapAnimSt

	thumb_func_start sub_8068C84
sub_8068C84: @ 0x08068C84
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068CB4 @ =gMapAnimSt
	ldr r2, _08068CB4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuSlowDownAnim
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068CB4: .4byte gMapAnimSt

	thumb_func_start sub_8068CB8
sub_8068CB8: @ 0x08068CB8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r2, [r7]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x44
	movs r3, #0
	ldrsh r0, [r4, r3]
	ldr r4, [r7, #4]
	adds r3, r4, #0
	adds r4, #0x44
	movs r5, #0
	ldrsh r3, [r4, r5]
	ldr r5, [r7]
	adds r4, r5, #0
	adds r5, #0x44
	movs r6, #0
	ldrsh r4, [r5, r6]
	subs r3, r3, r4
	cmp r3, #0
	bgt _08068D12
	adds r3, r0, #0
	ldr r5, [r7, #4]
	adds r4, r5, #0
	adds r5, #0x44
	movs r6, #0
	ldrsh r4, [r5, r6]
	ldr r6, [r7]
	adds r5, r6, #0
	adds r5, r6, #0
	adds r5, #0x44
	str r5, [r7, #8]
	ldr r6, [r7, #8]
	movs r5, #0
	ldrsh r6, [r6, r5]
	str r6, [r7, #0xc]
	ldr r6, [r7, #0xc]
	subs r4, r4, r6
	cmp r4, #0
	bge _08068D10
	subs r3, #0x10
_08068D10:
	b _08068D18
_08068D12:
	adds r4, r0, #0
	adds r4, #0x10
	adds r3, r4, #0
_08068D18:
	adds r4, r2, #0
	adds r2, #0x44
	ldrh r4, [r2]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	orrs r3, r5
	adds r4, r3, #0
	strh r4, [r2]
	ldr r2, [r7]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x46
	movs r3, #0
	ldrsh r1, [r4, r3]
	ldr r4, [r7, #4]
	adds r3, r4, #0
	adds r4, #0x46
	movs r5, #0
	ldrsh r3, [r4, r5]
	ldr r5, [r7]
	adds r4, r5, #0
	adds r5, #0x46
	movs r6, #0
	ldrsh r4, [r5, r6]
	subs r3, r3, r4
	cmp r3, #0
	bgt _08068D7A
	adds r3, r1, #0
	ldr r5, [r7, #4]
	adds r4, r5, #0
	adds r5, #0x46
	movs r6, #0
	ldrsh r4, [r5, r6]
	ldr r6, [r7]
	adds r5, r6, #0
	adds r5, r6, #0
	adds r5, #0x46
	str r5, [r7, #8]
	ldr r6, [r7, #8]
	movs r5, #0
	ldrsh r6, [r6, r5]
	str r6, [r7, #0xc]
	ldr r6, [r7, #0xc]
	subs r4, r4, r6
	cmp r4, #0
	bge _08068D78
	subs r3, #0x10
_08068D78:
	b _08068D80
_08068D7A:
	adds r4, r1, #0
	adds r4, #0x10
	adds r3, r4, #0
_08068D80:
	adds r4, r2, #0
	adds r2, #0x46
	ldrh r4, [r2]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	orrs r3, r5
	adds r4, r3, #0
	strh r4, [r2]
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068D9C
sub_8068D9C: @ 0x08068D9C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r2, [r7]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x44
	movs r3, #0
	ldrsh r0, [r4, r3]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x44
	movs r5, #0
	ldrsh r3, [r4, r5]
	ldr r5, [r7, #4]
	adds r4, r5, #0
	adds r5, #0x44
	movs r6, #0
	ldrsh r4, [r5, r6]
	subs r3, r3, r4
	cmp r3, #0
	bgt _08068DF6
	adds r3, r0, #0
	ldr r5, [r7]
	adds r4, r5, #0
	adds r5, #0x44
	movs r6, #0
	ldrsh r4, [r5, r6]
	ldr r6, [r7, #4]
	adds r5, r6, #0
	adds r5, r6, #0
	adds r5, #0x44
	str r5, [r7, #8]
	ldr r6, [r7, #8]
	movs r5, #0
	ldrsh r6, [r6, r5]
	str r6, [r7, #0xc]
	ldr r6, [r7, #0xc]
	subs r4, r4, r6
	cmp r4, #0
	bge _08068DF4
	subs r3, #0x10
_08068DF4:
	b _08068DFC
_08068DF6:
	adds r4, r0, #0
	adds r4, #0x10
	adds r3, r4, #0
_08068DFC:
	adds r4, r2, #0
	adds r2, #0x44
	ldrh r4, [r2]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	orrs r3, r5
	adds r4, r3, #0
	strh r4, [r2]
	ldr r2, [r7]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x46
	movs r3, #0
	ldrsh r1, [r4, r3]
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x46
	movs r5, #0
	ldrsh r3, [r4, r5]
	ldr r5, [r7, #4]
	adds r4, r5, #0
	adds r5, #0x46
	movs r6, #0
	ldrsh r4, [r5, r6]
	subs r3, r3, r4
	cmp r3, #0
	bgt _08068E5E
	adds r3, r1, #0
	ldr r5, [r7]
	adds r4, r5, #0
	adds r5, #0x46
	movs r6, #0
	ldrsh r4, [r5, r6]
	ldr r6, [r7, #4]
	adds r5, r6, #0
	adds r5, r6, #0
	adds r5, #0x46
	str r5, [r7, #8]
	ldr r6, [r7, #8]
	movs r5, #0
	ldrsh r6, [r6, r5]
	str r6, [r7, #0xc]
	ldr r6, [r7, #0xc]
	subs r4, r4, r6
	cmp r4, #0
	bge _08068E5C
	subs r3, #0x10
_08068E5C:
	b _08068E64
_08068E5E:
	adds r4, r1, #0
	adds r4, #0x10
	adds r3, r4, #0
_08068E64:
	adds r4, r2, #0
	adds r2, #0x46
	ldrh r4, [r2]
	movs r5, #0
	ands r4, r5
	adds r5, r4, #0
	orrs r3, r5
	adds r4, r3, #0
	strh r4, [r2]
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8068E80
sub_8068E80: @ 0x08068E80
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068F00 @ =gMapAnimSt
	ldr r2, _08068F00 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r7, #4]
	ldr r0, _08068F00 @ =gMapAnimSt
	ldr r2, _08068F00 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r7, #8]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068CB8
	ldr r1, _08068F00 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08068EF8
	ldr r0, _08068F00 @ =gMapAnimSt
	ldr r1, [r0, #0x30]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068CB8
	ldr r0, _08068F00 @ =gMapAnimSt
	ldr r1, [r0, #0x44]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068CB8
_08068EF8:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068F00: .4byte gMapAnimSt

	thumb_func_start sub_8068F04
sub_8068F04: @ 0x08068F04
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068F84 @ =gMapAnimSt
	ldr r2, _08068F84 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r7, #4]
	ldr r0, _08068F84 @ =gMapAnimSt
	ldr r2, _08068F84 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r7, #8]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068D9C
	ldr r1, _08068F84 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #3
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08068F7C
	ldr r0, _08068F84 @ =gMapAnimSt
	ldr r1, [r0, #0x30]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068D9C
	ldr r0, _08068F84 @ =gMapAnimSt
	ldr r1, [r0, #0x44]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r7, #8]
	bl sub_8068D9C
_08068F7C:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068F84: .4byte gMapAnimSt

	thumb_func_start sub_8068F88
sub_8068F88: @ 0x08068F88
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08068FD4 @ =gMapAnimSt
	ldr r2, _08068FD4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r2, [r0]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r0, _08068FD4 @ =gMapAnimSt
	ldr r3, _08068FD4 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x58
	ldrb r2, [r3]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r0, r0, r2
	ldr r3, [r0]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r0, [r7]
	bl CameraMoveWatchPosition
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08068FD4: .4byte gMapAnimSt

	thumb_func_start sub_8068FD8
sub_8068FD8: @ 0x08068FD8
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069024 @ =gMapAnimSt
	ldr r2, _08069024 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r2, [r0]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r0, _08069024 @ =gMapAnimSt
	ldr r3, _08069024 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x59
	ldrb r2, [r3]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r0, r0, r2
	ldr r3, [r0]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	ldr r0, [r7]
	bl CameraMoveWatchPosition
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069024: .4byte gMapAnimSt

	thumb_func_start sub_8069028
sub_8069028: @ 0x08069028
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069090 @ =gMapAnimSt
	ldr r1, _08069094 @ =gBattleUnitB
	adds r2, r1, #0
	adds r1, #0x6f
	adds r2, r0, #0
	adds r0, #0x60
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08069090 @ =gMapAnimSt
	ldr r1, _08069094 @ =gBattleUnitB
	adds r2, r1, #0
	adds r1, #0x70
	adds r2, r0, #0
	adds r0, #0x61
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r1, _08069090 @ =gMapAnimSt
	adds r0, r1, #0
	adds r2, r1, #0
	adds r2, #0x60
	ldrb r1, [r2]
	ldr r2, _08069090 @ =gMapAnimSt
	adds r0, r2, #0
	adds r3, r2, #0
	adds r3, #0x61
	ldrb r2, [r3]
	ldr r0, [r7]
	bl CameraMoveWatchPosition
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069090: .4byte gMapAnimSt
_08069094: .4byte gBattleUnitB

	thumb_func_start sub_8069098
sub_8069098: @ 0x08069098
	push {r4, r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	ldr r1, _080690CC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x58
	ldrb r0, [r1]
	str r0, [r7, #8]
	ldr r1, _080690CC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #0x80
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080690D0
	ldr r1, _080690CC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x58
	ldrb r0, [r1]
	str r0, [r7, #0xc]
	b _080690DA
	.align 2, 0
_080690CC: .4byte gMapAnimSt
_080690D0:
	ldr r1, _08069130 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x59
	ldrb r0, [r1]
	str r0, [r7, #0xc]
_080690DA:
	ldr r0, _08069130 @ =gMapAnimSt
	ldr r1, [r7, #8]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r1, r2, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F7B4
	lsls r1, r0, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	bne _08069134
	ldr r1, _08069130 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #2
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0806912E
	ldr r0, _08069130 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064994
_0806912E:
	b _0806941E
	.align 2, 0
_08069130: .4byte gMapAnimSt
_08069134:
	ldr r0, _08069198 @ =gMapAnimSt
	adds r1, r0, #0
	adds r0, #0x5f
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7, #0xc]
	ldr r2, _08069198 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x5d
	movs r1, #0
	ldrsb r1, [r2, r1]
	bl sub_8069430
	ldr r1, _08069198 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08069188
	ldr r0, [r7, #8]
	ldr r2, _08069198 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x5d
	movs r1, #0
	ldrsb r1, [r2, r1]
	rsbs r2, r1, #0
	adds r1, r2, #0
	bl sub_8069430
_08069188:
	ldr r1, _08069198 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5d
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bge _0806919C
	b _0806941E
	.align 2, 0
_08069198: .4byte gMapAnimSt
_0806919C:
	ldr r1, _080691F0 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #2
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080691F8
	ldr r0, _080691F0 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _080691F4 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	movs r0, #0xc8
	bl PlaySeSpacial
	ldr r0, _080691F0 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064994
	b _0806941E
	.align 2, 0
_080691F0: .4byte gMapAnimSt
_080691F4: .4byte gBmSt
_080691F8:
	ldr r1, _08069244 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5d
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0806924C
	ldr r0, _08069244 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _08069248 @ =gBmSt
	movs r4, #0xc
	ldrsh r2, [r1, r4]
	subs r1, r0, r2
	movs r0, #0xec
	bl PlaySeSpacial
	ldr r0, _08069244 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064A10
	b _0806941E
	.align 2, 0
_08069244: .4byte gMapAnimSt
_08069248: .4byte gBmSt
_0806924C:
	movs r0, #0
	ldr r1, _080692AC @ =gMapAnimSt
	ldr r2, [r7, #0xc]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, #4
	adds r2, r1, r2
	ldr r3, [r2]
	adds r1, r3, #0
	adds r2, r3, #0
	adds r2, #0x53
	ldrb r1, [r2]
	cmp r1, #0x1b
	bne _0806926E
	movs r0, #1
_0806926E:
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	beq _080692D4
	ldr r1, _080692AC @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	movs r1, #2
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	beq _080692B0
	movs r0, #0xaf
	str r0, [r7, #4]
	ldr r0, _080692AC @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	movs r1, #1
	bl sub_8064A8C
	b _080692CC
	.align 2, 0
_080692AC: .4byte gMapAnimSt
_080692B0:
	movs r0, #0xb0
	str r0, [r7, #4]
	ldr r0, _080692D0 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	movs r1, #0
	bl sub_8064A8C
_080692CC:
	b _080692F8
	.align 2, 0
_080692D0: .4byte gMapAnimSt
_080692D4:
	ldr r1, _080692F0 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	movs r1, #2
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	beq _080692F4
	movs r0, #0xd5
	str r0, [r7, #4]
	b _080692F8
	.align 2, 0
_080692F0: .4byte gMapAnimSt
_080692F4:
	movs r0, #0xd2
	str r0, [r7, #4]
_080692F8:
	ldr r1, _080693B4 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5a
	ldrh r0, [r1]
	movs r1, #1
	ands r0, r1
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080693BC
	ldr r0, [r7, #4]
	ldr r1, _080693B4 @ =gMapAnimSt
	ldr r2, [r7, #0xc]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	adds r2, r1, #0
	lsls r1, r2, #4
	ldr r2, _080693B8 @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	subs r1, r1, r3
	bl PlaySeSpacial
	ldr r0, _080693B4 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r4, [r1]
	ldr r0, _080693B4 @ =gMapAnimSt
	ldr r1, [r7, #8]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r1, r2, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F7D4
	lsls r2, r0, #0x18
	lsrs r1, r2, #0x18
	adds r0, r4, #0
	bl sub_806142C
	bl sub_80685F0
	ldr r0, _080693B4 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _080693B8 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	movs r0, #0xd8
	bl PlaySeSpacial
	ldr r0, _080693B4 @ =gMapAnimSt
	ldr r1, [r7, #8]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuSlowDownAnim
	b _0806941E
	.align 2, 0
_080693B4: .4byte gMapAnimSt
_080693B8: .4byte gBmSt
_080693BC:
	ldr r0, [r7, #4]
	ldr r1, _08069428 @ =gMapAnimSt
	ldr r2, [r7, #0xc]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	adds r2, r1, #0
	lsls r1, r2, #4
	ldr r2, _0806942C @ =gBmSt
	movs r4, #0xc
	ldrsh r3, [r2, r4]
	subs r1, r1, r3
	bl PlaySeSpacial
	ldr r0, _08069428 @ =gMapAnimSt
	ldr r1, [r7, #0xc]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r4, [r1]
	ldr r0, _08069428 @ =gMapAnimSt
	ldr r1, [r7, #8]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #4
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	adds r1, r2, #0
	adds r1, #0x4a
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_805F7D4
	lsls r2, r0, #0x18
	lsrs r1, r2, #0x18
	adds r0, r4, #0
	bl StartMuFlashFadeFrom
_0806941E:
	add sp, #0x14
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069428: .4byte gMapAnimSt
_0806942C: .4byte gBmSt

	thumb_func_start sub_8069430
sub_8069430: @ 0x08069430
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _0806946C @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0xd]
	ldr r0, [r7, #4]
	cmp r1, r0
	bgt _08069470
	ldr r0, _0806946C @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldrb r1, [r0, #0xd]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xd]
	b _080694A4
	.align 2, 0
_0806946C: .4byte gMapAnimSt
_08069470:
	ldr r0, _08069500 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, _08069500 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r3, [r7, #4]
	adds r2, r3, #0
	ldrb r3, [r1, #0xd]
	subs r1, r3, r2
	ldrb r2, [r0, #0xd]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0xd]
_080694A4:
	ldr r0, _08069500 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, _08069500 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r0, [r0, #0xd]
	ldrb r1, [r1, #0xc]
	cmp r0, r1
	bls _080694F6
	ldr r0, _08069500 @ =gMapAnimSt
	ldr r1, [r7]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, _08069500 @ =gMapAnimSt
	ldr r2, [r7]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldrb r2, [r0, #0xd]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1, #0xc]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0xd]
_080694F6:
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069500: .4byte gMapAnimSt

	thumb_func_start sub_8069504
sub_8069504: @ 0x08069504
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _0806951C @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	cmp r0, #0
	beq _08069520
	b _08069526
	.align 2, 0
_0806951C: .4byte gMapAnimSt
_08069520:
	ldr r0, [r7]
	bl Proc_Break
_08069526:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8069530
sub_8069530: @ 0x08069530
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806955C @ =gMapAnimSt
	ldr r2, _0806955C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064B7C
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806955C: .4byte gMapAnimSt

	thumb_func_start sub_8069560
sub_8069560: @ 0x08069560
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806958C @ =gMapAnimSt
	ldr r2, _0806958C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8066AD4
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806958C: .4byte gMapAnimSt

	thumb_func_start sub_8069590
sub_8069590: @ 0x08069590
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080695BC @ =gMapAnimSt
	ldr r2, _080695BC @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8066DFC
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080695BC: .4byte gMapAnimSt

	thumb_func_start sub_80695C0
sub_80695C0: @ 0x080695C0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080695EC @ =gMapAnimSt
	ldr r2, _080695EC @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8064C50
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080695EC: .4byte gMapAnimSt

	thumb_func_start sub_80695F0
sub_80695F0: @ 0x080695F0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069620 @ =gMapAnimSt
	ldr r2, _08069620 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08069624 @ =gUnk_082DD848
	ldr r2, _08069628 @ =gUnk_082DE974
	bl sub_80653BC
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069620: .4byte gMapAnimSt
_08069624: .4byte gUnk_082DD848
_08069628: .4byte gUnk_082DE974

	thumb_func_start sub_806962C
sub_806962C: @ 0x0806962C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806965C @ =gMapAnimSt
	ldr r2, _0806965C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08069660 @ =gUnk_082DD848
	ldr r2, _08069664 @ =gUnk_082DE954
	bl sub_80653BC
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806965C: .4byte gMapAnimSt
_08069660: .4byte gUnk_082DD848
_08069664: .4byte gUnk_082DE954

	thumb_func_start sub_8069668
sub_8069668: @ 0x08069668
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069698 @ =gMapAnimSt
	ldr r2, _08069698 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _0806969C @ =gUnk_082DED00
	ldr r2, _080696A0 @ =gUnk_082DEFBC
	movs r3, #0x8b
	bl sub_8065694
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069698: .4byte gMapAnimSt
_0806969C: .4byte gUnk_082DED00
_080696A0: .4byte gUnk_082DEFBC

	thumb_func_start sub_80696A4
sub_80696A4: @ 0x080696A4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080696D4 @ =gMapAnimSt
	ldr r2, _080696D4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _080696D8 @ =gUnk_082DE994
	ldr r2, _080696DC @ =gUnk_082DEFBC
	movs r3, #0x89
	bl sub_8065694
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080696D4: .4byte gMapAnimSt
_080696D8: .4byte gUnk_082DE994
_080696DC: .4byte gUnk_082DEFBC

	thumb_func_start sub_80696E0
sub_80696E0: @ 0x080696E0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069710 @ =gMapAnimSt
	ldr r2, _08069710 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08069714 @ =gUnk_082DEB08
	ldr r2, _08069718 @ =gUnk_082DEFBC
	movs r3, #0x8a
	bl sub_8065694
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069710: .4byte gMapAnimSt
_08069714: .4byte gUnk_082DEB08
_08069718: .4byte gUnk_082DEFBC

	thumb_func_start sub_806971C
sub_806971C: @ 0x0806971C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806974C @ =gMapAnimSt
	ldr r2, _0806974C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08069750 @ =gUnk_082DED00
	ldr r2, _08069754 @ =gUnk_082DEFBC
	movs r3, #0x8b
	bl sub_8065694
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806974C: .4byte gMapAnimSt
_08069750: .4byte gUnk_082DED00
_08069754: .4byte gUnk_082DEFBC

	thumb_func_start sub_8069758
sub_8069758: @ 0x08069758
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069788 @ =gMapAnimSt
	ldr r2, _08069788 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _0806978C @ =gUnk_082DE994
	ldr r2, _08069790 @ =gUnk_082DEFBC
	movs r3, #0x89
	bl sub_8065694
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069788: .4byte gMapAnimSt
_0806978C: .4byte gUnk_082DE994
_08069790: .4byte gUnk_082DEFBC

	thumb_func_start sub_8069794
sub_8069794: @ 0x08069794
	push {r4, r5, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069840 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _080697AE
	movs r0, #0xb4
	bl m4aSongNumStart
_080697AE:
	ldr r0, _08069844 @ =gMapAnimSt
	ldr r1, _08069848 @ =gBattleUnitB
	adds r2, r1, #0
	adds r1, #0x6f
	adds r2, r0, #0
	adds r0, #0x60
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08069844 @ =gMapAnimSt
	ldr r1, _08069848 @ =gBattleUnitB
	adds r2, r1, #0
	adds r1, #0x70
	adds r2, r0, #0
	adds r0, #0x61
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, _08069844 @ =gMapAnimSt
	ldr r2, _08069844 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r1, _08069844 @ =gMapAnimSt
	ldr r3, _08069844 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x59
	ldrb r2, [r3]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	ldr r2, _08069844 @ =gMapAnimSt
	ldr r4, _08069844 @ =gMapAnimSt
	adds r3, r4, #0
	adds r4, #0x59
	ldrb r3, [r4]
	adds r5, r3, #0
	lsls r4, r5, #2
	adds r4, r4, r3
	lsls r3, r4, #2
	adds r2, r2, r3
	ldr r3, [r2]
	movs r2, #0xf
	ldrsb r2, [r3, r2]
	bl sub_8065C30
	add sp, #4
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069840: .4byte gPlaySt
_08069844: .4byte gMapAnimSt
_08069848: .4byte gBattleUnitB

	thumb_func_start sub_806984C
sub_806984C: @ 0x0806984C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069888 @ =gMapAnimSt
	ldr r2, _08069888 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r2, r0, r1
	ldr r0, [r2]
	ldr r2, _08069888 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x60
	ldrb r1, [r2]
	ldr r3, _08069888 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x61
	ldrb r2, [r3]
	bl sub_8065C30
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069888: .4byte gMapAnimSt

	thumb_func_start sub_806988C
sub_806988C: @ 0x0806988C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080698B8 @ =gMapAnimSt
	ldr r2, _080698B8 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x58
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8065E08
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080698B8: .4byte gMapAnimSt

	thumb_func_start sub_80698BC
sub_80698BC: @ 0x080698BC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080698E0 @ =gMapAnimSt
	adds r0, r1, #0
	adds r1, #0x60
	ldrb r0, [r1]
	ldr r2, _080698E0 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x61
	ldrb r1, [r2]
	bl sub_8066FD8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080698E0: .4byte gMapAnimSt

	thumb_func_start sub_80698E4
sub_80698E4: @ 0x080698E4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069910 @ =gMapAnimSt
	ldr r2, _08069910 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_80661A4
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069910: .4byte gMapAnimSt

	thumb_func_start sub_8069914
sub_8069914: @ 0x08069914
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069940 @ =gMapAnimSt
	ldr r2, _08069940 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_80665E4
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069940: .4byte gMapAnimSt

	thumb_func_start sub_8069944
sub_8069944: @ 0x08069944
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069970 @ =gMapAnimSt
	ldr r2, _08069970 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_806671C
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069970: .4byte gMapAnimSt

	thumb_func_start sub_8069974
sub_8069974: @ 0x08069974
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080699A0 @ =gMapAnimSt
	ldr r2, _080699A0 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_8066294
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080699A0: .4byte gMapAnimSt

	thumb_func_start sub_80699A4
sub_80699A4: @ 0x080699A4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080699D4 @ =gMapAnimSt
	ldr r2, _080699D4 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	movs r1, #0
	bl StartMuFadeIntoFlash
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080699D4: .4byte gMapAnimSt

	thumb_func_start sub_80699D8
sub_80699D8: @ 0x080699D8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069A08 @ =gMapAnimSt
	ldr r2, _08069A08 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl StartMuFadeFromFlash
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069A08: .4byte gMapAnimSt

	thumb_func_start sub_8069A0C
sub_8069A0C: @ 0x08069A0C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069A3C @ =gMapAnimSt
	ldr r2, _08069A3C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl HideMu
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069A3C: .4byte gMapAnimSt

	thumb_func_start sub_8069A40
sub_8069A40: @ 0x08069A40
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069AAC @ =gMapAnimSt
	ldr r2, _08069AAC @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _08069AB0 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	adds r0, r1, #0
	adds r0, #8
	ldr r1, _08069AAC @ =gMapAnimSt
	ldr r3, _08069AAC @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x59
	ldrb r2, [r3]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	adds r2, r1, #0
	lsls r1, r2, #4
	ldr r2, _08069AB0 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	subs r1, r1, r3
	adds r2, r1, #0
	adds r2, #8
	adds r1, r2, #0
	bl sub_80689F0
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069AAC: .4byte gMapAnimSt
_08069AB0: .4byte gBmSt

	thumb_func_start sub_8069AB4
sub_8069AB4: @ 0x08069AB4
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069B30 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08069ACE
	movs r0, #0xb5
	bl m4aSongNumStart
_08069ACE:
	ldr r0, _08069B34 @ =gMapAnimSt
	ldr r2, _08069B34 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r1, _08069B38 @ =gBmSt
	movs r3, #0xc
	ldrsh r2, [r1, r3]
	subs r1, r0, r2
	adds r0, r1, #0
	adds r0, #8
	ldr r1, _08069B34 @ =gMapAnimSt
	ldr r3, _08069B34 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x59
	ldrb r2, [r3]
	adds r4, r2, #0
	lsls r3, r4, #2
	adds r3, r3, r2
	lsls r2, r3, #2
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	adds r2, r1, #0
	lsls r1, r2, #4
	ldr r2, _08069B38 @ =gBmSt
	movs r4, #0xe
	ldrsh r3, [r2, r4]
	subs r1, r1, r3
	adds r2, r1, #0
	adds r2, #8
	adds r1, r2, #0
	bl sub_8068A1C
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069B30: .4byte gPlaySt
_08069B34: .4byte gMapAnimSt
_08069B38: .4byte gBmSt

	thumb_func_start sub_8069B3C
sub_8069B3C: @ 0x08069B3C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069B6C @ =gMapAnimSt
	ldr r2, _08069B6C @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r2, [r1]
	adds r0, r2, #0
	bl ShowMu
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069B6C: .4byte gMapAnimSt

	thumb_func_start sub_8069B70
sub_8069B70: @ 0x08069B70
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r0, _08069C00 @ =gMapAnimSt
	ldr r2, _08069C00 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	str r1, [r7, #4]
	ldr r0, _08069C00 @ =gMapAnimSt
	ldr r2, _08069C00 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x59
	ldrb r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #2
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, #8
	adds r1, r0, r1
	ldr r0, [r1]
	ldr r2, _08069C00 @ =gMapAnimSt
	adds r1, r2, #0
	adds r2, #0x60
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	ldr r3, _08069C00 @ =gMapAnimSt
	adds r2, r3, #0
	adds r3, #0x61
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #4
	bl SetMuScreenPosition
	ldr r0, [r7, #4]
	ldr r1, _08069C00 @ =gMapAnimSt
	adds r2, r1, #0
	adds r1, #0x60
	ldrb r2, [r0, #0xe]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0xe]
	ldr r0, [r7, #4]
	ldr r1, _08069C00 @ =gMapAnimSt
	adds r2, r1, #0
	adds r1, #0x61
	ldrb r2, [r0, #0xf]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0, #0xf]
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069C00: .4byte gMapAnimSt

	thumb_func_start sub_8069C04
sub_8069C04: @ 0x08069C04
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl sub_80684EC
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8069C1C
sub_8069C1C: @ 0x08069C1C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl sub_8068578
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8069C34
sub_8069C34: @ 0x08069C34
	push {r7, lr}
	mov r7, sp
	ldr r1, _08069C64 @ =0x0203CE48
	adds r0, r1, #0
	bl sub_806A44C
	ldr r1, _08069C68 @ =0x0203D0C8
	adds r0, r1, #0
	bl sub_806A44C
	ldr r0, _08069C6C @ =0x0203D348
	ldr r1, _08069C64 @ =0x0203CE48
	str r1, [r0]
	ldr r0, _08069C6C @ =0x0203D348
	ldr r1, _08069C68 @ =0x0203D0C8
	str r1, [r0, #4]
	ldr r0, _08069C70 @ =0x0203D350
	ldr r1, _08069C6C @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069C64: .4byte 0x0203CE48
_08069C68: .4byte 0x0203D0C8
_08069C6C: .4byte 0x0203D348
_08069C70: .4byte 0x0203D350

	thumb_func_start sub_8069C74
sub_8069C74: @ 0x08069C74
	push {r7, lr}
	mov r7, sp
	ldr r0, _08069D9C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08069D9C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08069D9C @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x30
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xa0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xfe
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xfd
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xf7
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xef
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08069D9C @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08069DA0 @ =sub_8069DE8
	adds r0, r1, #0
	bl SetOnHBlankA
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069D9C: .4byte gDispIo
_08069DA0: .4byte sub_8069DE8

	thumb_func_start sub_8069DA4
sub_8069DA4: @ 0x08069DA4
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, _08069DD4 @ =0x0203D348
	ldr r1, [r0, #4]
	adds r0, r1, #0
	bl sub_806A44C
	ldr r1, _08069DD4 @ =0x0203D348
	ldr r0, [r1, #4]
	ldr r2, [r7, #4]
	ldr r3, [r7, #8]
	ldr r1, [r7]
	bl sub_806A51C
	bl sub_806A424
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069DD4: .4byte 0x0203D348

	thumb_func_start sub_8069DD8
sub_8069DD8: @ 0x08069DD8
	push {r7, lr}
	mov r7, sp
	movs r0, #0
	bl SetOnHBlankA
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8069DE8
sub_8069DE8: @ 0x08069DE8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _08069E10 @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _08069E1C
	ldr r0, _08069E14 @ =0x0203D350
	ldr r1, _08069E18 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _08069E2A
	.align 2, 0
_08069E10: .4byte 0x04000006
_08069E14: .4byte 0x0203D350
_08069E18: .4byte 0x0203D348
_08069E1C:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_08069E2A:
	ldr r0, _08069E48 @ =0x04000040
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069E4C @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069E48: .4byte 0x04000040
_08069E4C: .4byte 0x0203D350

	thumb_func_start sub_8069E50
sub_8069E50: @ 0x08069E50
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _08069E78 @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _08069E84
	ldr r0, _08069E7C @ =0x0203D350
	ldr r1, _08069E80 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _08069E92
	.align 2, 0
_08069E78: .4byte 0x04000006
_08069E7C: .4byte 0x0203D350
_08069E80: .4byte 0x0203D348
_08069E84:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_08069E92:
	ldr r0, _08069EC8 @ =0x04000040
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069ECC @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, _08069ED0 @ =0x04000018
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069ECC @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r2, r1, r3
	ldrh r1, [r2]
	strh r1, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069EC8: .4byte 0x04000040
_08069ECC: .4byte 0x0203D350
_08069ED0: .4byte 0x04000018

	thumb_func_start sub_8069ED4
sub_8069ED4: @ 0x08069ED4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _08069EFC @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _08069F08
	ldr r0, _08069F00 @ =0x0203D350
	ldr r1, _08069F04 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _08069F16
	.align 2, 0
_08069EFC: .4byte 0x04000006
_08069F00: .4byte 0x0203D350
_08069F04: .4byte 0x0203D348
_08069F08:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_08069F16:
	ldr r0, _08069F4C @ =0x05000022
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069F50 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, _08069F54 @ =0x05000042
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069F50 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r2, r1, r3
	ldrh r1, [r2]
	strh r1, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069F4C: .4byte 0x05000022
_08069F50: .4byte 0x0203D350
_08069F54: .4byte 0x05000042

	thumb_func_start sub_8069F58
sub_8069F58: @ 0x08069F58
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _08069F80 @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _08069F8C
	ldr r0, _08069F84 @ =0x0203D350
	ldr r1, _08069F88 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _08069F9A
	.align 2, 0
_08069F80: .4byte 0x04000006
_08069F84: .4byte 0x0203D350
_08069F88: .4byte 0x0203D348
_08069F8C:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_08069F9A:
	ldr r0, _08069FCC @ =0x05000328
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069FD0 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, _08069FD4 @ =0x050003A8
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _08069FD0 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069FCC: .4byte 0x05000328
_08069FD0: .4byte 0x0203D350
_08069FD4: .4byte 0x050003A8

	thumb_func_start sub_8069FD8
sub_8069FD8: @ 0x08069FD8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _0806A000 @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _0806A00C
	ldr r0, _0806A004 @ =0x0203D350
	ldr r1, _0806A008 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _0806A01A
	.align 2, 0
_0806A000: .4byte 0x04000006
_0806A004: .4byte 0x0203D350
_0806A008: .4byte 0x0203D348
_0806A00C:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_0806A01A:
	ldr r0, _0806A038 @ =0x04000052
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _0806A03C @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A038: .4byte 0x04000052
_0806A03C: .4byte 0x0203D350

	thumb_func_start sub_806A040
sub_806A040: @ 0x0806A040
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	adds r0, r7, #0
	ldr r1, _0806A068 @ =0x04000006
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, r7, #0
	ldrh r1, [r0]
	cmp r1, #0x9f
	bls _0806A074
	ldr r0, _0806A06C @ =0x0203D350
	ldr r1, _0806A070 @ =0x0203D348
	ldr r2, [r1]
	str r2, [r0]
	adds r0, r7, #0
	movs r1, #0
	strh r1, [r0]
	b _0806A082
	.align 2, 0
_0806A068: .4byte 0x04000006
_0806A06C: .4byte 0x0203D350
_0806A070: .4byte 0x0203D348
_0806A074:
	adds r1, r7, #0
	adds r0, r7, #0
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r1, r2, #1
	adds r2, r1, #0
	strh r2, [r0]
_0806A082:
	ldr r0, _0806A0CC @ =0x04000012
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _0806A0D0 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, _0806A0D4 @ =0x04000010
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _0806A0D0 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r0, _0806A0D8 @ =0x04000016
	adds r1, r7, #0
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #1
	ldr r3, _0806A0D0 @ =0x0203D350
	ldr r2, [r3]
	adds r1, r1, r2
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r2, r1, r3
	ldrh r1, [r2]
	strh r1, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A0CC: .4byte 0x04000012
_0806A0D0: .4byte 0x0203D350
_0806A0D4: .4byte 0x04000010
_0806A0D8: .4byte 0x04000016

	thumb_func_start sub_806A0DC
sub_806A0DC: @ 0x0806A0DC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	add r7, sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r2, #0
	adds r0, r3, #0
	adds r2, r7, #0
	adds r3, r5, #0
	strh r3, [r2]
	adds r2, r7, #2
	adds r3, r4, #0
	strh r3, [r2]
	adds r2, r7, #4
	strh r1, [r2]
	adds r1, r7, #6
	strh r0, [r1]
	ldr r1, _0806A210 @ =0x0203D348
	ldr r0, [r1, #4]
	adds r2, r7, #0
	ldrh r1, [r2]
	adds r3, r7, #2
	ldrh r2, [r3]
	adds r4, r7, #4
	ldrh r3, [r4]
	adds r4, r7, #4
	ldrh r5, [r4]
	movs r6, #0x1f
	adds r4, r5, #0
	ands r4, r6
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	lsrs r5, r4, #1
	adds r4, r5, #0
	movs r5, #0x1f
	ands r4, r5
	adds r5, r7, #4
	ldrh r6, [r5]
	movs r5, #0xf8
	lsls r5, r5, #2
	mov r8, r5
	mov r5, r8
	ands r5, r6
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	lsrs r6, r5, #1
	adds r5, r6, #0
	movs r6, #0xf8
	lsls r6, r6, #2
	ands r5, r6
	orrs r4, r5
	adds r5, r7, #4
	ldrh r6, [r5]
	movs r5, #0xf8
	lsls r5, r5, #7
	mov r8, r5
	mov r5, r8
	ands r5, r6
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	lsrs r6, r5, #1
	adds r5, r6, #0
	movs r6, #0xf8
	lsls r6, r6, #7
	ands r5, r6
	orrs r4, r5
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	str r4, [sp]
	bl sub_806A600
	ldr r0, _0806A210 @ =0x0203D348
	ldr r1, [r0, #4]
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r0, r1, r2
	adds r2, r7, #0
	ldrh r1, [r2]
	adds r3, r7, #2
	ldrh r2, [r3]
	adds r4, r7, #6
	ldrh r3, [r4]
	adds r4, r7, #6
	ldrh r5, [r4]
	movs r6, #0x1f
	adds r4, r5, #0
	ands r4, r6
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	lsrs r5, r4, #1
	adds r4, r5, #0
	movs r5, #0x1f
	ands r4, r5
	adds r5, r7, #6
	ldrh r6, [r5]
	movs r5, #0xf8
	lsls r5, r5, #2
	mov r8, r5
	mov r5, r8
	ands r5, r6
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	lsrs r6, r5, #1
	adds r5, r6, #0
	movs r6, #0xf8
	lsls r6, r6, #2
	ands r5, r6
	orrs r4, r5
	adds r5, r7, #6
	ldrh r6, [r5]
	movs r5, #0xf8
	lsls r5, r5, #7
	mov r8, r5
	mov r5, r8
	ands r5, r6
	mov r8, r5
	mov r5, r8
	lsls r6, r5, #0x10
	lsrs r5, r6, #0x10
	lsrs r6, r5, #1
	adds r5, r6, #0
	movs r6, #0xf8
	lsls r6, r6, #7
	ands r5, r6
	orrs r4, r5
	adds r6, r4, #0
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	str r4, [sp]
	bl sub_806A600
	bl sub_806A424
	ldr r1, _0806A214 @ =sub_8069ED4
	adds r0, r1, #0
	bl SetOnHBlankA
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A210: .4byte 0x0203D348
_0806A214: .4byte sub_8069ED4

	thumb_func_start sub_806A218
sub_806A218: @ 0x0806A218
	push {r4, r5, r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r2, #0
	adds r0, r3, #0
	adds r2, r7, #0
	adds r3, r5, #0
	strh r3, [r2]
	adds r2, r7, #2
	adds r3, r4, #0
	strh r3, [r2]
	adds r2, r7, #4
	strh r1, [r2]
	adds r1, r7, #6
	strh r0, [r1]
	ldr r1, _0806A268 @ =0x0203D348
	ldr r0, [r1, #4]
	adds r2, r7, #0
	ldrh r1, [r2]
	adds r3, r7, #2
	ldrh r2, [r3]
	adds r4, r7, #4
	ldrh r3, [r4]
	adds r4, r7, #6
	ldrh r5, [r4]
	str r5, [sp]
	bl sub_806A600
	bl sub_806A424
	ldr r1, _0806A26C @ =sub_8069F58
	adds r0, r1, #0
	bl SetOnHBlankA
	add sp, #0xc
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A268: .4byte 0x0203D348
_0806A26C: .4byte sub_8069F58

	thumb_func_start sub_806A270
sub_806A270: @ 0x0806A270
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _0806A298 @ =0x0203D348
	ldr r1, [r0, #4]
	adds r0, r1, #0
	bl sub_806A44C
_0806A288:
	ldr r0, [r7, #0x1c]
	ldrb r1, [r0]
	cmp r1, #0xff
	beq _0806A29C
	ldr r0, [r7, #4]
	cmp r0, #0
	bge _0806A29E
	b _0806A29C
	.align 2, 0
_0806A298: .4byte 0x0203D348
_0806A29C:
	b _0806A2EC
_0806A29E:
	ldr r0, [r7, #0x1c]
	ldrb r1, [r0]
	ldr r2, [r7, #8]
	adds r0, r1, #0
	muls r0, r2, r0
	ldr r1, [r7, #0xc]
	bl Div
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x1c]
	adds r1, r0, #1
	str r1, [r7, #0x1c]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	ble _0806A2DE
	ldr r1, _0806A2E8 @ =0x0203D348
	ldr r0, [r1, #4]
	ldr r1, [r7]
	ldr r3, [r7, #0x10]
	adds r2, r1, r3
	subs r1, r2, #1
	ldr r2, [r7, #4]
	bl sub_806A4D4
	ldr r1, _0806A2E8 @ =0x0203D348
	ldr r0, [r1, #4]
	ldr r1, [r7]
	ldr r2, [r7, #0x10]
	subs r1, r1, r2
	ldr r2, [r7, #4]
	bl sub_806A488
_0806A2DE:
	ldr r0, [r7, #4]
	subs r1, r0, #1
	str r1, [r7, #4]
	b _0806A288
	.align 2, 0
_0806A2E8: .4byte 0x0203D348
_0806A2EC:
	ldr r0, [r7, #0x10]
	cmp r0, #0
	ble _0806A328
_0806A2F2:
	ldr r0, [r7, #4]
	cmp r0, #0
	bge _0806A2FA
	b _0806A328
_0806A2FA:
	ldr r1, _0806A324 @ =0x0203D348
	ldr r0, [r1, #4]
	ldr r1, [r7]
	ldr r3, [r7, #0x10]
	adds r2, r1, r3
	subs r1, r2, #1
	ldr r2, [r7, #4]
	bl sub_806A4D4
	ldr r1, _0806A324 @ =0x0203D348
	ldr r0, [r1, #4]
	ldr r1, [r7]
	ldr r2, [r7, #0x10]
	subs r1, r1, r2
	ldr r2, [r7, #4]
	bl sub_806A488
	ldr r0, [r7, #4]
	subs r1, r0, #1
	str r1, [r7, #4]
	b _0806A2F2
	.align 2, 0
_0806A324: .4byte 0x0203D348
_0806A328:
	add sp, #0x14
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A330
sub_806A330: @ 0x0806A330
	push {r4, r5, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	adds r4, r1, #0
	adds r1, r2, #0
	adds r0, r3, #0
	adds r2, r7, #4
	adds r3, r4, #0
	strh r3, [r2]
	adds r2, r7, #6
	strh r1, [r2]
	adds r1, r7, #0
	adds r1, #8
	strh r0, [r1]
	movs r0, #0
	str r0, [r7, #0xc]
_0806A352:
	ldr r0, [r7, #0xc]
	cmp r0, #0x9f
	ble _0806A35A
	b _0806A3A0
_0806A35A:
	ldr r0, [r7]
	ldr r1, _0806A39C @ =gSinLut
	adds r2, r7, #0
	adds r2, #8
	movs r4, #0
	ldrsh r3, [r2, r4]
	ldr r4, [r7, #0xc]
	adds r2, r3, #0
	muls r2, r4, r2
	adds r3, r7, #4
	movs r5, #0
	ldrsh r4, [r3, r5]
	adds r2, r2, r4
	movs r3, #0xff
	ands r2, r3
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r3, r1, r2
	movs r2, #0
	ldrsh r1, [r3, r2]
	adds r2, r7, #6
	movs r4, #0
	ldrsh r3, [r2, r4]
	muls r1, r3, r1
	asrs r2, r1, #0xc
	adds r1, r2, #0
	strh r1, [r0]
	adds r0, #2
	str r0, [r7]
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _0806A352
	.align 2, 0
_0806A39C: .4byte gSinLut
_0806A3A0:
	add sp, #0x10
	pop {r4, r5, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A3A8
sub_806A3A8: @ 0x0806A3A8
	push {r4, r5, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	adds r4, r1, #0
	adds r1, r2, #0
	adds r0, r3, #0
	adds r2, r7, #4
	adds r3, r4, #0
	strh r3, [r2]
	adds r2, r7, #6
	strh r1, [r2]
	adds r1, r7, #0
	adds r1, #8
	strh r0, [r1]
	ldr r0, [r7, #0x20]
	str r0, [r7, #0xc]
_0806A3CA:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0x24]
	cmp r0, r1
	blt _0806A3D4
	b _0806A41C
_0806A3D4:
	ldr r0, [r7]
	ldr r1, _0806A418 @ =gSinLut
	adds r2, r7, #0
	adds r2, #8
	movs r4, #0
	ldrsh r3, [r2, r4]
	ldr r4, [r7, #0xc]
	adds r2, r3, #0
	muls r2, r4, r2
	adds r3, r7, #4
	movs r5, #0
	ldrsh r4, [r3, r5]
	adds r2, r2, r4
	movs r3, #0xff
	ands r2, r3
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r3, r1, r2
	movs r2, #0
	ldrsh r1, [r3, r2]
	adds r2, r7, #6
	movs r4, #0
	ldrsh r3, [r2, r4]
	muls r1, r3, r1
	asrs r2, r1, #0xc
	adds r1, r2, #0
	strh r1, [r0]
	adds r0, #2
	str r0, [r7]
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _0806A3CA
	.align 2, 0
_0806A418: .4byte gSinLut
_0806A41C:
	add sp, #0x10
	pop {r4, r5, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A424
sub_806A424: @ 0x0806A424
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	ldr r0, _0806A448 @ =0x0203D348
	ldr r1, [r0]
	str r1, [r7]
	ldr r0, _0806A448 @ =0x0203D348
	ldr r1, _0806A448 @ =0x0203D348
	ldr r2, [r1, #4]
	str r2, [r0]
	ldr r0, _0806A448 @ =0x0203D348
	ldr r1, [r7]
	str r1, [r0, #4]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A448: .4byte 0x0203D348

	thumb_func_start sub_806A44C
sub_806A44C: @ 0x0806A44C
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	str r0, [r7, #8]
	movs r0, #0
	str r0, [r7, #4]
_0806A45C:
	ldr r0, [r7, #4]
	cmp r0, #0x9f
	ble _0806A464
	b _0806A480
_0806A464:
	adds r0, r7, #0
	adds r0, #8
	ldr r1, [r0]
	ldr r3, _0806A47C @ =0x0000F0F0
	adds r2, r3, #0
	strh r2, [r1]
	adds r1, #2
	str r1, [r0]
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _0806A45C
	.align 2, 0
_0806A47C: .4byte 0x0000F0F0
_0806A480:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A488
sub_806A488: @ 0x0806A488
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, [r7, #4]
	cmp r0, #0
	bge _0806A49E
	movs r0, #0
	str r0, [r7, #4]
_0806A49E:
	ldr r0, [r7, #4]
	cmp r0, #0xef
	ble _0806A4A8
	movs r0, #0xef
	str r0, [r7, #4]
_0806A4A8:
	ldr r0, [r7, #8]
	cmp r0, #0
	blt _0806A4B6
	ldr r0, [r7, #8]
	cmp r0, #0x9f
	bgt _0806A4B6
	b _0806A4B8
_0806A4B6:
	b _0806A4CA
_0806A4B8:
	ldr r0, [r7, #8]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r2, [r7]
	adds r1, r0, r2
	adds r0, r1, #1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	strb r2, [r0]
_0806A4CA:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806A4D4
sub_806A4D4: @ 0x0806A4D4
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, [r7, #4]
	cmp r0, #0
	bge _0806A4EA
	movs r0, #0
	str r0, [r7, #4]
_0806A4EA:
	ldr r0, [r7, #4]
	cmp r0, #0xef
	ble _0806A4F4
	movs r0, #0xef
	str r0, [r7, #4]
_0806A4F4:
	ldr r0, [r7, #8]
	cmp r0, #0
	blt _0806A502
	ldr r0, [r7, #8]
	cmp r0, #0x9f
	bgt _0806A502
	b _0806A504
_0806A502:
	b _0806A514
_0806A504:
	ldr r0, [r7, #8]
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, [r7]
	adds r0, r0, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	strb r2, [r0]
_0806A514:
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A51C
sub_806A51C: @ 0x0806A51C
	push {r7, lr}
	sub sp, #0x18
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #0xc]
	str r0, [r7, #0x10]
	movs r0, #0
	str r0, [r7, #0x14]
_0806A532:
	ldr r0, [r7, #0x10]
	ldr r1, [r7, #0x14]
	cmp r0, r1
	bge _0806A53C
	b _0806A5F8
_0806A53C:
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x10]
	adds r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x14]
	adds r2, r0, r3
	ldr r0, [r7]
	bl sub_806A4D4
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x10]
	adds r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x14]
	subs r2, r0, r3
	ldr r0, [r7]
	bl sub_806A4D4
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x14]
	adds r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x10]
	adds r2, r0, r3
	ldr r0, [r7]
	bl sub_806A4D4
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x14]
	adds r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x10]
	subs r2, r0, r3
	ldr r0, [r7]
	bl sub_806A4D4
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x10]
	subs r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x14]
	adds r2, r0, r3
	ldr r0, [r7]
	bl sub_806A488
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x10]
	subs r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x14]
	subs r2, r0, r3
	ldr r0, [r7]
	bl sub_806A488
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x14]
	subs r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x10]
	adds r2, r0, r3
	ldr r0, [r7]
	bl sub_806A488
	ldr r0, [r7, #4]
	ldr r2, [r7, #0x14]
	subs r1, r0, r2
	ldr r0, [r7, #8]
	ldr r3, [r7, #0x10]
	subs r2, r0, r3
	ldr r0, [r7]
	bl sub_806A488
	ldr r1, [r7, #0xc]
	adds r0, r1, #1
	ldr r2, [r7, #0x14]
	lsls r1, r2, #1
	subs r0, r0, r1
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bge _0806A5F0
	ldr r1, [r7, #0x10]
	subs r0, r1, #1
	lsls r1, r0, #1
	ldr r0, [r7, #0xc]
	adds r1, r0, r1
	str r1, [r7, #0xc]
	ldr r0, [r7, #0x10]
	subs r1, r0, #1
	str r1, [r7, #0x10]
_0806A5F0:
	ldr r0, [r7, #0x14]
	adds r1, r0, #1
	str r1, [r7, #0x14]
	b _0806A532
_0806A5F8:
	add sp, #0x18
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A600
sub_806A600: @ 0x0806A600
	push {r4, r7, lr}
	sub sp, #0x28
	add r7, sp, #4
	str r0, [r7]
	adds r4, r1, #0
	adds r1, r3, #0
	ldr r0, [r7, #0x30]
	adds r3, r7, #4
	strh r4, [r3]
	adds r3, r7, #6
	strh r2, [r3]
	adds r2, r7, #0
	adds r2, #8
	strh r1, [r2]
	adds r1, r7, #0
	adds r1, #0xa
	strh r0, [r1]
	adds r1, r7, #6
	ldrh r0, [r1]
	adds r1, r7, #4
	ldrh r2, [r1]
	subs r0, r0, r2
	str r0, [r7, #0x20]
	movs r0, #0
	str r0, [r7, #0x10]
	movs r0, #0
	str r0, [r7, #0xc]
_0806A636:
	ldr r0, [r7, #0xc]
	cmp r0, #0x9f
	ble _0806A63E
	b _0806A748
_0806A63E:
	adds r0, r7, #4
	ldrh r1, [r0]
	ldr r0, [r7, #0xc]
	cmp r0, r1
	bge _0806A658
	ldr r0, [r7]
	adds r1, r7, #0
	adds r1, #8
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, #2
	str r0, [r7]
	b _0806A740
_0806A658:
	adds r0, r7, #6
	ldrh r1, [r0]
	ldr r0, [r7, #0xc]
	cmp r0, r1
	ble _0806A672
	ldr r0, [r7]
	adds r1, r7, #0
	adds r1, #0xa
	ldrh r2, [r1]
	strh r2, [r0]
	adds r0, #2
	str r0, [r7]
	b _0806A740
_0806A672:
	adds r0, r7, #0
	adds r0, #8
	ldrh r1, [r0]
	movs r2, #0x1f
	adds r0, r1, #0
	ands r0, r2
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r7, #0
	adds r0, #0xa
	ldrh r2, [r0]
	movs r3, #0x1f
	adds r0, r2, #0
	ands r0, r3
	adds r2, r0, #0
	lsls r0, r2, #0x10
	lsrs r2, r0, #0x10
	ldr r3, [r7, #0x10]
	ldr r0, [r7, #0x20]
	str r0, [sp]
	movs r0, #0
	bl Interpolate
	str r0, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #8
	ldrh r1, [r0]
	movs r2, #0xf8
	lsls r2, r2, #2
	adds r0, r1, #0
	ands r0, r2
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r7, #0
	adds r0, #0xa
	ldrh r2, [r0]
	movs r3, #0xf8
	lsls r3, r3, #2
	adds r0, r2, #0
	ands r0, r3
	adds r2, r0, #0
	lsls r0, r2, #0x10
	lsrs r2, r0, #0x10
	ldr r3, [r7, #0x10]
	ldr r0, [r7, #0x20]
	str r0, [sp]
	movs r0, #0
	bl Interpolate
	str r0, [r7, #0x18]
	adds r0, r7, #0
	adds r0, #8
	ldrh r1, [r0]
	movs r2, #0xf8
	lsls r2, r2, #7
	adds r0, r1, #0
	ands r0, r2
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r7, #0
	adds r0, #0xa
	ldrh r2, [r0]
	movs r3, #0xf8
	lsls r3, r3, #7
	adds r0, r2, #0
	ands r0, r3
	adds r2, r0, #0
	lsls r0, r2, #0x10
	lsrs r2, r0, #0x10
	ldr r3, [r7, #0x10]
	ldr r0, [r7, #0x20]
	str r0, [sp]
	movs r0, #0
	bl Interpolate
	str r0, [r7, #0x1c]
	ldr r0, [r7]
	ldr r2, [r7, #0x14]
	adds r1, r2, #0
	movs r2, #0x1f
	ands r1, r2
	ldr r3, [r7, #0x18]
	adds r2, r3, #0
	movs r3, #0xf8
	lsls r3, r3, #2
	ands r2, r3
	orrs r1, r2
	ldr r3, [r7, #0x1c]
	adds r2, r3, #0
	movs r3, #0xf8
	lsls r3, r3, #7
	ands r2, r3
	orrs r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	adds r0, #2
	str r0, [r7]
	ldr r0, [r7, #0x10]
	adds r1, r0, #1
	str r1, [r7, #0x10]
_0806A740:
	ldr r0, [r7, #0xc]
	adds r1, r0, #1
	str r1, [r7, #0xc]
	b _0806A636
_0806A748:
	add sp, #0x28
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A750
sub_806A750: @ 0x0806A750
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A770
sub_806A770: @ 0x0806A770
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _0806A7A8 @ =0x0203D348
	ldr r1, [r0, #4]
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r0, r1, r2
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x64
	ldrh r2, [r1]
	adds r3, r2, #1
	adds r4, r3, #0
	strh r4, [r1]
	lsls r2, r2, #0x10
	asrs r1, r2, #0x10
	movs r2, #0x10
	movs r3, #8
	bl sub_806A330
	bl sub_806A424
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A7A8: .4byte 0x0203D348

	thumb_func_start sub_806A7AC
sub_806A7AC: @ 0x0806A7AC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	movs r0, #0
	str r0, [r7]
_0806A7B6:
	ldr r0, [r7]
	cmp r0, #0x9f
	ble _0806A7BE
	b _0806A7E0
_0806A7BE:
	ldr r0, _0806A7DC @ =0x0203D348
	ldr r1, [r7]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r2, [r0]
	adds r0, r1, r2
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, [r7]
	adds r1, r0, #1
	str r1, [r7]
	b _0806A7B6
	.align 2, 0
_0806A7DC: .4byte 0x0203D348
_0806A7E0:
	movs r0, #8
	str r0, [r7]
_0806A7E4:
	ldr r0, [r7]
	cmp r0, #0x97
	ble _0806A7EC
	b _0806A808
_0806A7EC:
	ldr r0, _0806A804 @ =0x0203D348
	ldr r1, [r7]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r2, [r0]
	adds r0, r1, r2
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, [r7]
	adds r1, r0, #1
	str r1, [r7]
	b _0806A7E4
	.align 2, 0
_0806A804: .4byte 0x0203D348
_0806A808:
	movs r0, #0
	str r0, [r7]
_0806A80C:
	ldr r0, [r7]
	cmp r0, #0x20
	ble _0806A814
	b _0806A874
_0806A814:
	ldr r0, _0806A86C @ =0x0203D348
	ldr r1, [r7]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r0, [r0]
	adds r1, r1, r0
	adds r0, r1, #0
	adds r0, #0x10
	ldr r2, [r7]
	asrs r1, r2, #1
	adds r2, r1, #0
	movs r3, #0x10
	subs r1, r3, r2
	adds r2, r1, #0
	lsls r1, r2, #8
	ldr r3, [r7]
	asrs r2, r3, #1
	orrs r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0806A86C @ =0x0203D348
	ldr r1, [r7]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r3, _0806A870 @ =0xFFFFFED0
	adds r2, r1, r3
	ldr r1, [r0]
	subs r0, r1, r2
	ldr r2, [r7]
	asrs r1, r2, #1
	adds r2, r1, #0
	movs r3, #0x10
	subs r1, r3, r2
	adds r2, r1, #0
	lsls r1, r2, #8
	ldr r3, [r7]
	asrs r2, r3, #1
	orrs r1, r2
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #1
	str r1, [r7]
	b _0806A80C
	.align 2, 0
_0806A86C: .4byte 0x0203D348
_0806A870: .4byte 0xFFFFFED0
_0806A874:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806A87C
sub_806A87C: @ 0x0806A87C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _0806A8A0 @ =0x0203D348
	ldr r1, [r7]
	adds r2, r1, #0
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	ldr r0, [r0]
	adds r1, r1, r0
	adds r0, r1, #0
	b _0806A8A4
	.align 2, 0
_0806A8A0: .4byte 0x0203D348
_0806A8A4:
	add sp, #8
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806A8AC
sub_806A8AC: @ 0x0806A8AC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0806A8C6
	ldr r0, [r4, #8]
	bl SetEid
	ldr r0, [r4, #4]
	cmp r0, #1
	beq _0806A8C6
	bl StartEvent
_0806A8C6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806A8CC
sub_806A8CC: @ 0x0806A8CC
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r0, #0
	str r0, [r4, #4]
	str r0, [r4, #8]
	ldr r6, _0806A8DC @ =gUnk_08666114
	adds r7, r6, #4
	b _0806A8EE
	.align 2, 0
_0806A8DC: .4byte gUnk_08666114
_0806A8E0:
	lsls r0, r5, #3
	adds r0, r0, r7
	ldr r1, [r0]
	lsls r1, r1, #2
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r4]
_0806A8EE:
	ldr r0, [r4]
	ldrh r5, [r0]
	ldrh r0, [r0, #2]
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806A8E0
	lsls r0, r5, #3
	adds r0, r0, r6
	ldr r1, [r0]
	adds r0, r4, #0
	bl _call_via_r1
	cmp r0, #1
	bne _0806A8E0
	ldr r0, [r4, #4]
	cmp r0, #0
	bne _0806A918
	movs r0, #0
	b _0806A91A
_0806A918:
	adds r0, r4, #0
_0806A91A:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806A920
sub_806A920: @ 0x0806A920
	push {r4, lr}
	adds r3, r0, #0
	cmp r3, #0
	bne _0806A92C
	movs r0, #0
	b _0806A946
_0806A92C:
	ldr r2, [r3]
	ldr r0, _0806A94C @ =gUnk_08666114
	ldrh r4, [r2]
	lsls r1, r4, #3
	adds r0, #4
	adds r1, r1, r0
	ldr r0, [r1]
	lsls r0, r0, #2
	adds r2, r2, r0
	str r2, [r3]
	adds r0, r3, #0
	bl sub_806A8CC
_0806A946:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806A94C: .4byte gUnk_08666114

	thumb_func_start sub_806A950
sub_806A950: @ 0x0806A950
	movs r0, #1
	bx lr

	thumb_func_start sub_806A954
sub_806A954: @ 0x0806A954
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldrh r0, [r0, #8]
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806A96A
	movs r0, #0
	b _0806A976
_0806A96A:
	ldr r0, [r4]
	ldr r1, [r0, #4]
	str r1, [r4, #4]
	ldrh r0, [r0, #2]
	str r0, [r4, #8]
	movs r0, #1
_0806A976:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806A97C
sub_806A97C: @ 0x0806A97C
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	ldr r2, [r3]
	ldr r0, [r2, #8]
	ldrb r5, [r2, #8]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r0
	lsrs r4, r1, #8
	movs r1, #0xff
	lsls r1, r1, #0x10
	ands r0, r1
	lsrs r6, r0, #0x10
	cmp r4, #0
	bne _0806A9B0
	ldr r1, _0806A9AC @ =gPlaySt
	ldrh r0, [r1, #0x10]
	cmp r0, r5
	bne _0806A9D4
	ldrb r1, [r1, #0xf]
	cmp r1, r6
	bne _0806A9D4
	b _0806A9C2
	.align 2, 0
_0806A9AC: .4byte gPlaySt
_0806A9B0:
	ldr r0, _0806A9D0 @ =gPlaySt
	ldrh r1, [r0, #0x10]
	cmp r1, r5
	blt _0806A9D4
	cmp r1, r4
	bgt _0806A9D4
	ldrb r0, [r0, #0xf]
	cmp r0, r6
	bne _0806A9D4
_0806A9C2:
	ldr r0, [r2, #4]
	str r0, [r3, #4]
	ldrh r0, [r2, #2]
	str r0, [r3, #8]
	movs r0, #1
	b _0806A9D6
	.align 2, 0
_0806A9D0: .4byte gPlaySt
_0806A9D4:
	movs r0, #0
_0806A9D6:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_806A9DC
sub_806A9DC: @ 0x0806A9DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _0806AA00 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0806AA04
	movs r0, #2
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806AA04
	adds r0, r4, #0
	bl sub_806A97C
	b _0806AA06
	.align 2, 0
_0806AA00: .4byte gPlaySt
_0806AA04:
	movs r0, #0
_0806AA06:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806AA0C
sub_806AA0C: @ 0x0806AA0C
	push {r4, lr}
	adds r3, r0, #0
	ldr r2, [r3]
	ldr r0, [r2, #8]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r0, r1
	lsrs r0, r0, #8
	ldrb r1, [r3, #0x1a]
	ldrb r4, [r2, #8]
	cmp r1, r4
	bne _0806AA36
	ldrb r1, [r3, #0x1b]
	cmp r1, r0
	bne _0806AA36
	ldr r0, [r2, #4]
	str r0, [r3, #4]
	ldrh r0, [r2, #2]
	str r0, [r3, #8]
	movs r0, #1
	b _0806AA38
_0806AA36:
	movs r0, #0
_0806AA38:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AA40
sub_806AA40: @ 0x0806AA40
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	ldr r4, [r3]
	ldr r1, [r4, #8]
	ldrb r2, [r4, #8]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	lsrs r5, r0, #8
	movs r0, #0xff
	lsls r0, r0, #0x10
	ands r1, r0
	lsrs r1, r1, #0x10
	movs r6, #0
	str r6, [r3, #0x10]
	movs r0, #0x18
	ldrsb r0, [r3, r0]
	cmp r2, r0
	bne _0806AA82
	movs r0, #0x19
	ldrsb r0, [r3, r0]
	cmp r5, r0
	bne _0806AA82
	ldr r0, [r4, #4]
	str r0, [r3, #4]
	ldrh r0, [r4, #2]
	str r0, [r3, #8]
	str r1, [r3, #0xc]
	cmp r1, #0x12
	bne _0806AA7E
	str r6, [r3, #0x14]
_0806AA7E:
	movs r0, #1
	b _0806AA84
_0806AA82:
	movs r0, #0
_0806AA84:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AA8C
sub_806AA8C: @ 0x0806AA8C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_806AA40
	movs r1, #3
	str r1, [r4, #0x10]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AAA0
sub_806AAA0: @ 0x0806AAA0
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r3, [r2]
	ldr r0, [r3, #8]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r0
	lsrs r4, r1, #8
	movs r1, #0xff
	lsls r1, r1, #0x10
	ands r1, r0
	lsrs r5, r1, #0x10
	lsrs r1, r0, #0x18
	ldrb r0, [r3, #8]
	ldrb r6, [r2, #0x18]
	cmp r0, r6
	bne _0806AAE2
	movs r0, #0x19
	ldrsb r0, [r2, r0]
	cmp r4, r0
	bne _0806AAE2
	movs r0, #1
	str r0, [r2, #4]
	ldrh r0, [r3, #2]
	str r0, [r2, #8]
	str r5, [r2, #0xc]
	str r1, [r2, #0x10]
	ldrh r0, [r3, #4]
	str r0, [r2, #0x14]
	ldrh r0, [r3, #6]
	str r0, [r2, #0x10]
	movs r0, #1
	b _0806AAE4
_0806AAE2:
	movs r0, #0
_0806AAE4:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AAEC
sub_806AAEC: @ 0x0806AAEC
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r3, [r2]
	ldr r0, [r3, #8]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r0
	lsrs r4, r1, #8
	movs r1, #0xff
	lsls r1, r1, #0x10
	ands r1, r0
	lsrs r5, r1, #0x10
	lsrs r1, r0, #0x18
	ldrb r0, [r3, #8]
	ldrb r6, [r2, #0x18]
	cmp r0, r6
	bne _0806AB28
	movs r0, #0x19
	ldrsb r0, [r2, r0]
	cmp r4, r0
	bne _0806AB28
	ldr r0, [r3, #4]
	str r0, [r2, #4]
	ldr r0, [r2]
	ldrh r0, [r0, #2]
	str r0, [r2, #8]
	str r5, [r2, #0xc]
	str r1, [r2, #0x10]
	movs r0, #1
	b _0806AB2A
_0806AB28:
	movs r0, #0
_0806AB2A:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_806AB30
sub_806AB30: @ 0x0806AB30
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	ldr r3, [r2]
	ldr r0, [r3, #8]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r0
	lsrs r4, r1, #8
	movs r1, #0xff
	lsls r1, r1, #0x10
	ands r1, r0
	lsrs r5, r1, #0x10
	lsrs r1, r0, #0x18
	ldrb r0, [r3, #8]
	ldrb r6, [r2, #0x18]
	cmp r0, r6
	bne _0806AB6C
	movs r0, #0x19
	ldrsb r0, [r2, r0]
	cmp r4, r0
	bne _0806AB6C
	ldr r0, [r3, #4]
	str r0, [r2, #4]
	ldr r0, [r2]
	ldrh r0, [r0, #2]
	str r0, [r2, #8]
	str r5, [r2, #0xc]
	str r1, [r2, #0x10]
	movs r0, #1
	b _0806AB6E
_0806AB6C:
	movs r0, #0
_0806AB6E:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_806AB74
sub_806AB74: @ 0x0806AB74
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r2, [r4]
	ldr r1, [r2, #8]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	lsrs r3, r0, #8
	movs r0, #0xff
	lsls r0, r0, #0x10
	ands r1, r0
	lsrs r5, r1, #0x10
	ldrb r2, [r2, #8]
	ldrb r0, [r4, #0x18]
	cmp r2, r0
	bne _0806ABC8
	movs r0, #0x19
	ldrsb r0, [r4, r0]
	cmp r3, r0
	bne _0806ABC8
	cmp r5, #0x15
	bne _0806ABB2
	ldr r0, _0806ABC4 @ =gActiveUnit
	ldr r0, [r0]
	movs r1, #0x6d
	bl FindUnitItemSlot
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _0806ABC8
_0806ABB2:
	ldr r0, [r4]
	ldr r1, [r0, #4]
	str r1, [r4, #4]
	ldrh r0, [r0, #2]
	str r0, [r4, #8]
	str r5, [r4, #0xc]
	movs r0, #1
	b _0806ABCA
	.align 2, 0
_0806ABC4: .4byte gActiveUnit
_0806ABC8:
	movs r0, #0
_0806ABCA:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806ABD0
sub_806ABD0: @ 0x0806ABD0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r0, _0806AC28 @ =gActiveUnit
	ldr r2, [r0]
	ldrb r0, [r2, #0xf]
	mov ip, r0
	ldr r3, [r5]
	ldr r1, [r3, #8]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	lsrs r4, r0, #8
	movs r0, #0xff
	lsls r0, r0, #0x10
	ands r0, r1
	lsrs r7, r0, #0x10
	lsrs r6, r1, #0x18
	movs r0, #8
	ldrsb r0, [r3, r0]
	ldrb r2, [r2, #0xe]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	cmp r0, r2
	bgt _0806AC2C
	lsls r1, r4, #0x18
	mov r4, ip
	lsls r0, r4, #0x18
	asrs r4, r0, #0x18
	cmp r1, r0
	bgt _0806AC2C
	lsls r0, r7, #0x18
	asrs r0, r0, #0x18
	cmp r0, r2
	blt _0806AC2C
	lsls r0, r6, #0x18
	asrs r0, r0, #0x18
	cmp r0, r4
	blt _0806AC2C
	ldr r0, [r3, #4]
	str r0, [r5, #4]
	ldrh r0, [r3, #2]
	str r0, [r5, #8]
	movs r0, #1
	b _0806AC2E
	.align 2, 0
_0806AC28: .4byte gActiveUnit
_0806AC2C:
	movs r0, #0
_0806AC2E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806AC34
sub_806AC34: @ 0x0806AC34
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _0806AC58 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0806AC5C
	movs r0, #2
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806AC5C
	adds r0, r4, #0
	bl sub_806ABD0
	b _0806AC5E
	.align 2, 0
_0806AC58: .4byte gPlaySt
_0806AC5C:
	movs r0, #0
_0806AC5E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806AC64
sub_806AC64: @ 0x0806AC64
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4]
	ldr r1, [r0, #8]
	adds r0, r4, #0
	bl _call_via_r1
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806AC7C
	movs r0, #0
	b _0806AC88
_0806AC7C:
	ldr r0, [r4]
	ldr r1, [r0, #4]
	str r1, [r4, #4]
	ldrh r0, [r0, #2]
	str r0, [r4, #8]
	movs r0, #1
_0806AC88:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AC90
sub_806AC90: @ 0x0806AC90
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldrb r0, [r3, #0x1a]
	cmp r0, r1
	bne _0806ACB4
	ldrb r0, [r3, #0x1b]
	cmp r0, r2
	bne _0806ACB4
	ldr r0, [r3]
	ldr r1, [r0, #4]
	str r1, [r3, #4]
	ldrh r0, [r0, #2]
	str r0, [r3, #8]
	movs r0, #1
	b _0806ACB6
_0806ACB4:
	movs r0, #0
_0806ACB6:
	bx lr

	thumb_func_start sub_806ACB8
sub_806ACB8: @ 0x0806ACB8
	push {r4, r5, lr}
	adds r5, r1, #0
	adds r4, r2, #0
	ldr r1, _0806ACE0 @ =gActiveUnit
	ldr r2, [r1]
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	cmp r1, r0
	blt _0806ACE4
	cmp r1, r4
	bgt _0806ACE4
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	cmp r1, r5
	blt _0806ACE4
	cmp r1, r3
	bgt _0806ACE4
	movs r0, #1
	b _0806ACE6
	.align 2, 0
_0806ACE0: .4byte gActiveUnit
_0806ACE4:
	movs r0, #0
_0806ACE6:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806ACEC
sub_806ACEC: @ 0x0806ACEC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	adds r7, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	movs r4, #1
_0806ACFC:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806AD34
	ldr r0, [r1]
	cmp r0, #0
	beq _0806AD34
	movs r0, #4
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _0806AD34
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	cmp r0, r8
	blt _0806AD34
	cmp r0, r6
	bgt _0806AD34
	movs r0, #0xf
	ldrsb r0, [r1, r0]
	cmp r0, r7
	blt _0806AD34
	cmp r0, r5
	bgt _0806AD34
	movs r0, #1
	b _0806AD3C
_0806AD34:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806ACFC
	movs r0, #0
_0806AD3C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AD48
sub_806AD48: @ 0x0806AD48
	push {lr}
	ldr r0, _0806AD68 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806AD6C
	movs r0, #0
	movs r1, #0xf
	movs r2, #0x19
	movs r3, #0x17
	bl sub_806ACEC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806AD6C
	movs r0, #1
	b _0806AD6E
	.align 2, 0
_0806AD68: .4byte gPlaySt
_0806AD6C:
	movs r0, #0
_0806AD6E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AD74
sub_806AD74: @ 0x0806AD74
	push {lr}
	ldr r0, _0806ADB8 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806ADB4
	movs r0, #0
	movs r1, #0x18
	movs r2, #0x10
	movs r3, #0x1b
	bl sub_806ACEC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806ADBC
	movs r0, #0
	movs r1, #0x15
	movs r2, #2
	movs r3, #0x17
	bl sub_806ACEC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806ADBC
	movs r0, #3
	movs r1, #0x14
	movs r2, #5
	movs r3, #0x16
	bl sub_806ACEC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806ADBC
_0806ADB4:
	movs r0, #0
	b _0806ADBE
	.align 2, 0
_0806ADB8: .4byte gPlaySt
_0806ADBC:
	movs r0, #1
_0806ADBE:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806ADC4
sub_806ADC4: @ 0x0806ADC4
	push {lr}
	movs r0, #0xc
	movs r1, #0x15
	movs r2, #0x1f
	movs r3, #0x18
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806ADDC
sub_806ADDC: @ 0x0806ADDC
	push {lr}
	ldr r0, _0806ADF8 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806ADFC
	movs r0, #0x11
	movs r1, #0x15
	movs r2, #0x1f
	movs r3, #0x23
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806ADFE
	.align 2, 0
_0806ADF8: .4byte gPlaySt
_0806ADFC:
	movs r0, #0
_0806ADFE:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AE04
sub_806AE04: @ 0x0806AE04
	push {lr}
	ldr r0, _0806AE20 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806AE24
	movs r0, #0
	movs r1, #0xf
	movs r2, #8
	movs r3, #0x12
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806AE26
	.align 2, 0
_0806AE20: .4byte gPlaySt
_0806AE24:
	movs r0, #0
_0806AE26:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AE2C
sub_806AE2C: @ 0x0806AE2C
	push {lr}
	ldr r0, _0806AE48 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806AE4C
	movs r0, #0
	movs r1, #0x18
	movs r2, #0xc
	movs r3, #0x1b
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806AE4E
	.align 2, 0
_0806AE48: .4byte gPlaySt
_0806AE4C:
	movs r0, #0
_0806AE4E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AE54
sub_806AE54: @ 0x0806AE54
	push {lr}
	ldr r0, _0806AE70 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806AE74
	movs r0, #0x15
	movs r1, #0
	movs r2, #0x1e
	movs r3, #6
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806AE76
	.align 2, 0
_0806AE70: .4byte gPlaySt
_0806AE74:
	movs r0, #0
_0806AE76:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AE7C
sub_806AE7C: @ 0x0806AE7C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	adds r7, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	movs r4, #0x81
_0806AE8C:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806AEC4
	ldr r0, [r1]
	cmp r0, #0
	beq _0806AEC4
	movs r0, #4
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _0806AEC4
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	cmp r0, r8
	blt _0806AEC4
	cmp r0, r6
	bgt _0806AEC4
	movs r0, #0xf
	ldrsb r0, [r1, r0]
	cmp r0, r7
	blt _0806AEC4
	cmp r0, r5
	bgt _0806AEC4
	movs r0, #1
	b _0806AECC
_0806AEC4:
	adds r4, #1
	cmp r4, #0xbf
	ble _0806AE8C
	movs r0, #0
_0806AECC:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AED8
sub_806AED8: @ 0x0806AED8
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806AEFC @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	bne _0806AF00
	movs r0, #0
	b _0806AF02
	.align 2, 0
_0806AEFC: .4byte gPlaySt
_0806AF00:
	movs r0, #1
_0806AF02:
	add sp, #0x1c
	pop {r1}
	bx r1

	thumb_func_start sub_806AF08
sub_806AF08: @ 0x0806AF08
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806AF30 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0]
	str r0, [sp]
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	beq _0806AF44
	mov r0, sp
	bl sub_806A8AC
	b _0806AF3A
	.align 2, 0
_0806AF30: .4byte gPlaySt
_0806AF34:
	mov r0, sp
	bl sub_806A8AC
_0806AF3A:
	mov r0, sp
	bl sub_806A920
	cmp r0, #0
	bne _0806AF34
_0806AF44:
	add sp, #0x1c
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806AF4C
sub_806AF4C: @ 0x0806AF4C
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _0806AF80 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #4]
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #0x1a]
	strb r5, [r0, #0x1b]
	bl sub_806A8CC
	cmp r0, #0
	bne _0806AF84
	movs r0, #0
	b _0806AF86
	.align 2, 0
_0806AF80: .4byte gPlaySt
_0806AF84:
	movs r0, #1
_0806AF86:
	add sp, #0x1c
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806AF90
sub_806AF90: @ 0x0806AF90
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _0806AFCC @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #4]
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #0x1a]
	strb r5, [r0, #0x1b]
	bl sub_806A8CC
	cmp r0, #0
	beq _0806AFC4
	mov r0, sp
	bl sub_806A8AC
_0806AFC4:
	add sp, #0x1c
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806AFCC: .4byte gPlaySt

	thumb_func_start sub_806AFD0
sub_806AFD0: @ 0x0806AFD0
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	movs r5, #0
	ldr r1, _0806AFE0 @ =gUnk_08666CF8
	b _0806B00E
	.align 2, 0
_0806AFE0: .4byte gUnk_08666CF8
_0806AFE4:
	adds r0, r3, #0
	ldrb r3, [r1, #1]
	cmp r0, r6
	bne _0806AFF0
	cmp r3, r4
	beq _0806AFF8
_0806AFF0:
	cmp r3, r6
	bne _0806B00C
	cmp r0, r4
	bne _0806B00C
_0806AFF8:
	cmp r2, #1
	bne _0806AFFE
	ldr r5, [r1, #4]
_0806AFFE:
	cmp r2, #2
	bne _0806B004
	ldr r5, [r1, #8]
_0806B004:
	cmp r2, #3
	bne _0806B014
	ldr r5, [r1, #0xc]
	b _0806B014
_0806B00C:
	adds r1, #0x10
_0806B00E:
	ldrb r3, [r1]
	cmp r3, #0
	bne _0806AFE4
_0806B014:
	cmp r5, #0
	beq _0806B022
	adds r0, r5, #0
	bl StartTalkSupportEvent
	bl DisableEventSkip
_0806B022:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_806B028
sub_806B028: @ 0x0806B028
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _0806B05C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #8]
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #0x18]
	strb r5, [r0, #0x19]
	bl sub_806A8CC
	cmp r0, #0
	beq _0806B060
	ldr r0, [sp, #0xc]
	b _0806B062
	.align 2, 0
_0806B05C: .4byte gPlaySt
_0806B060:
	movs r0, #0
_0806B062:
	add sp, #0x1c
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806B06C
sub_806B06C: @ 0x0806B06C
	push {r4, r5, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _0806B0B0 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #8]
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #0x18]
	strb r5, [r0, #0x19]
	bl sub_806A8CC
	cmp r0, #0
	bne _0806B09C
	b _0806B24A
_0806B09C:
	ldr r0, [sp, #0xc]
	cmp r0, #0x1d
	bls _0806B0A4
	b _0806B24A
_0806B0A4:
	lsls r0, r0, #2
	ldr r1, _0806B0B4 @ =_0806B0B8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806B0B0: .4byte gPlaySt
_0806B0B4: .4byte _0806B0B8
_0806B0B8: @ jump table
	.4byte _0806B248 @ case 0
	.4byte _0806B24A @ case 1
	.4byte _0806B24A @ case 2
	.4byte _0806B24A @ case 3
	.4byte _0806B24A @ case 4
	.4byte _0806B24A @ case 5
	.4byte _0806B24A @ case 6
	.4byte _0806B24A @ case 7
	.4byte _0806B24A @ case 8
	.4byte _0806B24A @ case 9
	.4byte _0806B24A @ case 10
	.4byte _0806B24A @ case 11
	.4byte _0806B24A @ case 12
	.4byte _0806B24A @ case 13
	.4byte _0806B130 @ case 14
	.4byte _0806B130 @ case 15
	.4byte _0806B160 @ case 16
	.4byte _0806B160 @ case 17
	.4byte _0806B192 @ case 18
	.4byte _0806B214 @ case 19
	.4byte _0806B224 @ case 20
	.4byte _0806B234 @ case 21
	.4byte _0806B244 @ case 22
	.4byte _0806B24A @ case 23
	.4byte _0806B24A @ case 24
	.4byte _0806B24A @ case 25
	.4byte _0806B24A @ case 26
	.4byte _0806B24A @ case 27
	.4byte _0806B24A @ case 28
	.4byte _0806B13E @ case 29
_0806B130:
	mov r0, sp
	bl sub_806A8AC
	ldr r0, [sp, #0x10]
	cmp r0, #3
	beq _0806B13E
	b _0806B24A
_0806B13E:
	mov r0, sp
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sp
	ldrb r1, [r1, #0x19]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl GetMapChangeIdAt
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl StartMapChangeEvent
_0806B15A:
	bl DisableEventSkip
	b _0806B24A
_0806B160:
	ldr r0, [sp, #4]
	cmp r0, #1
	bne _0806B18A
	mov r0, sp
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sp
	ldrb r1, [r1, #0x19]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl GetMapChangeIdAt
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl StartMapChangeEvent
	ldr r0, [sp, #8]
	bl SetEid
	b _0806B15A
_0806B18A:
	mov r0, sp
	bl sub_806A8AC
	b _0806B15A
_0806B192:
	ldr r4, [sp, #0x14]
	cmp r4, #0
	bne _0806B1BC
	mov r0, sp
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sp
	ldrb r1, [r1, #0x19]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl GetMapChangeIdAt
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl StartMapChangeEvent
	mov r0, sp
	bl sub_806A8AC
	b _0806B208
_0806B1BC:
	cmp r4, #0x6f
	beq _0806B1E6
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, sp
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sp
	ldrb r1, [r1, #0x19]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl GetMapChangeIdAt
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl StartChestItemEvent
	b _0806B208
_0806B1E6:
	ldr r4, [sp, #0x10]
	mov r0, sp
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sp
	ldrb r1, [r1, #0x19]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl GetMapChangeIdAt
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl StartChestMoneyEvent
_0806B208:
	bl DisableEventSkip
	ldr r0, [sp, #8]
	bl SetEid
	b _0806B24A
_0806B214:
	ldr r0, _0806B220 @ =gActiveUnit
	ldr r0, [r0]
	ldr r1, [sp, #4]
	bl sub_8095E10
	b _0806B24A
	.align 2, 0
_0806B220: .4byte gActiveUnit
_0806B224:
	ldr r0, _0806B230 @ =gActiveUnit
	ldr r0, [r0]
	ldr r1, [sp, #4]
	bl sub_8095E30
	b _0806B24A
	.align 2, 0
_0806B230: .4byte gActiveUnit
_0806B234:
	ldr r0, _0806B240 @ =gActiveUnit
	ldr r0, [r0]
	ldr r1, [sp, #4]
	bl sub_8095E50
	b _0806B24A
	.align 2, 0
_0806B240: .4byte gActiveUnit
_0806B244:
	mov r8, r8
	b _0806B24A
_0806B248:
	mov r8, r8
_0806B24A:
	add sp, #0x1c
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B254
sub_806B254: @ 0x0806B254
	push {lr}
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_806B06C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B268
sub_806B268: @ 0x0806B268
	push {lr}
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_806B028
	cmp r0, #0xe
	beq _0806B27E
	movs r0, #0
	b _0806B280
_0806B27E:
	movs r0, #1
_0806B280:
	pop {r1}
	bx r1

	thumb_func_start sub_806B284
sub_806B284: @ 0x0806B284
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	lsls r1, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B268
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B2A4
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B06C
_0806B2A4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B2AC
sub_806B2AC: @ 0x0806B2AC
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r6, r0, #0x18
	asrs r5, r0, #0x18
	lsrs r7, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B028
	cmp r0, #0x13
	beq _0806B308
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B028
	cmp r0, #0x14
	beq _0806B308
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B028
	cmp r0, #0x15
	bne _0806B2F0
	ldr r0, _0806B304 @ =gActiveUnit
	ldr r0, [r0]
	movs r1, #0x6d
	bl FindUnitItemSlot
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0806B308
_0806B2F0:
	lsls r0, r6, #0x18
	asrs r0, r0, #0x18
	lsls r1, r7, #0x18
	asrs r1, r1, #0x18
	bl sub_806B028
	cmp r0, #0x16
	beq _0806B308
	movs r0, #0
	b _0806B30A
	.align 2, 0
_0806B304: .4byte gActiveUnit
_0806B308:
	movs r0, #1
_0806B30A:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806B310
sub_806B310: @ 0x0806B310
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	lsls r1, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B2AC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B330
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B06C
_0806B330:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start IsThereClosedChestAt
IsThereClosedChestAt: @ 0x0806B338
	push {lr}
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_806B028
	cmp r0, #0x12
	beq _0806B34E
	movs r0, #0
	b _0806B350
_0806B34E:
	movs r0, #1
_0806B350:
	pop {r1}
	bx r1

	thumb_func_start sub_806B354
sub_806B354: @ 0x0806B354
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	lsls r1, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl IsThereClosedChestAt
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B374
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B06C
_0806B374:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B37C
sub_806B37C: @ 0x0806B37C
	push {lr}
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_806B028
	cmp r0, #0x10
	beq _0806B392
	movs r0, #0
	b _0806B394
_0806B392:
	movs r0, #1
_0806B394:
	pop {r1}
	bx r1

	thumb_func_start sub_806B398
sub_806B398: @ 0x0806B398
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	lsls r1, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B37C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B3B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B06C
_0806B3B8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B3C0
sub_806B3C0: @ 0x0806B3C0
	push {lr}
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_806B028
	cmp r0, #0x11
	beq _0806B3D6
	movs r0, #0
	b _0806B3D8
_0806B3D6:
	movs r0, #1
_0806B3D8:
	pop {r1}
	bx r1

	thumb_func_start sub_806B3DC
sub_806B3DC: @ 0x0806B3DC
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	lsls r1, r1, #0x18
	asrs r4, r1, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B3C0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B3FC
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_806B06C
_0806B3FC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B404
sub_806B404: @ 0x0806B404
	push {lr}
	bl sub_806B580
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806B414
sub_806B414: @ 0x0806B414
	push {lr}
	bl sub_806B5B0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B420
sub_806B420: @ 0x0806B420
	push {lr}
	ldr r0, _0806B438 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B432
	bl sub_806C6B0
_0806B432:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0806B438: .4byte gPlaySt

	thumb_func_start sub_806B43C
sub_806B43C: @ 0x0806B43C
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806B460 @ =gUnk_086676E0
	str r0, [sp]
	ldr r0, _0806B464 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B468
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	beq _0806B468
	movs r0, #1
	b _0806B46A
	.align 2, 0
_0806B460: .4byte gUnk_086676E0
_0806B464: .4byte gPlaySt
_0806B468:
	movs r0, #0
_0806B46A:
	add sp, #0x1c
	pop {r1}
	bx r1

	thumb_func_start sub_806B470
sub_806B470: @ 0x0806B470
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806B49C @ =gUnk_086676E0
	str r0, [sp]
	ldr r0, _0806B4A0 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B494
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	beq _0806B494
	mov r0, sp
	bl sub_806A8AC
_0806B494:
	movs r0, #0
	add sp, #0x1c
	pop {r1}
	bx r1
	.align 2, 0
_0806B49C: .4byte gUnk_086676E0
_0806B4A0: .4byte gPlaySt

	thumb_func_start sub_806B4A4
sub_806B4A4: @ 0x0806B4A4
	movs r0, #0
	bx lr

	thumb_func_start sub_806B4A8
sub_806B4A8: @ 0x0806B4A8
	movs r0, #0
	bx lr

	thumb_func_start sub_806B4AC
sub_806B4AC: @ 0x0806B4AC
	push {lr}
	ldr r0, _0806B4C4 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B4BE
	bl sub_806C718
_0806B4BE:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0806B4C4: .4byte gPlaySt

	thumb_func_start sub_806B4C8
sub_806B4C8: @ 0x0806B4C8
	push {lr}
	ldr r0, _0806B4E0 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B4DA
	bl sub_806C734
_0806B4DA:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0806B4E0: .4byte gPlaySt

	thumb_func_start sub_806B4E4
sub_806B4E4: @ 0x0806B4E4
	push {lr}
	ldr r0, _0806B4FC @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806B4F6
	bl sub_806C750
_0806B4F6:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0806B4FC: .4byte gPlaySt

	thumb_func_start sub_806B500
sub_806B500: @ 0x0806B500
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806B530 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #0xc]
	str r0, [sp]
	mov r1, sp
	ldr r0, _0806B534 @ =gActiveUnit
	ldr r2, [r0]
	ldrb r0, [r2, #0xe]
	strb r0, [r1, #0x18]
	ldrb r0, [r2, #0xf]
	strb r0, [r1, #0x19]
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	bne _0806B538
	movs r0, #0
	b _0806B53A
	.align 2, 0
_0806B530: .4byte gPlaySt
_0806B534: .4byte gActiveUnit
_0806B538:
	movs r0, #1
_0806B53A:
	add sp, #0x1c
	pop {r1}
	bx r1

	thumb_func_start sub_806B540
sub_806B540: @ 0x0806B540
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806B578 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #0xc]
	str r0, [sp]
	mov r1, sp
	ldr r0, _0806B57C @ =gActiveUnit
	ldr r2, [r0]
	ldrb r0, [r2, #0xe]
	strb r0, [r1, #0x18]
	ldrb r0, [r2, #0xf]
	strb r0, [r1, #0x19]
	mov r0, sp
	bl sub_806A8CC
	cmp r0, #0
	beq _0806B572
	mov r0, sp
	bl sub_806A8AC
_0806B572:
	add sp, #0x1c
	pop {r0}
	bx r0
	.align 2, 0
_0806B578: .4byte gPlaySt
_0806B57C: .4byte gActiveUnit

	thumb_func_start sub_806B580
sub_806B580: @ 0x0806B580
	push {lr}
	ldr r0, _0806B5AC @ =gPlaySt
	ldrb r0, [r0, #0xe]
	cmp r0, #0x19
	bne _0806B59C
	movs r0, #0x72
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B59C
	movs r0, #3
	bl SetEid
_0806B59C:
	movs r0, #3
	bl CheckFlag
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0
_0806B5AC: .4byte gPlaySt

	thumb_func_start sub_806B5B0
sub_806B5B0: @ 0x0806B5B0
	push {r4, lr}
	movs r0, #3
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B5FC
	ldr r4, _0806B5E0 @ =gPlaySt
	ldrb r0, [r4, #0xe]
	cmp r0, #0x19
	bne _0806B5E4
	bl sub_806CD78
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B5FC
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterEventInfo
	ldr r0, [r0, #0x18]
	bl StartEvent
	b _0806B5FC
	.align 2, 0
_0806B5E0: .4byte gPlaySt
_0806B5E4:
	bl sub_806B404
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B5FC
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterEventInfo
	ldr r0, [r0, #0x18]
	bl StartEvent
_0806B5FC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806B604
sub_806B604: @ 0x0806B604
	push {lr}
	sub sp, #0x1c
	ldr r0, _0806B634 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #0x10]
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	bl BatchCreateUnits
	bl sub_806BAF0
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	add sp, #0x1c
	pop {r0}
	bx r0
	.align 2, 0
_0806B634: .4byte gPlaySt

	thumb_func_start sub_806B638
sub_806B638: @ 0x0806B638
	push {lr}
	ldr r0, _0806B64C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterEventInfo
	ldr r0, [r0, #0x14]
	pop {r1}
	bx r1
	.align 2, 0
_0806B64C: .4byte gPlaySt

	thumb_func_start sub_806B650
sub_806B650: @ 0x0806B650
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r4, _0806B660 @ =gUnk_086663CC
	b _0806B6A2
	.align 2, 0
_0806B660: .4byte gUnk_086663CC
_0806B664:
	ldr r0, [r4, #8]
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806B6A0
	ldrb r1, [r4]
	ldrb r0, [r4, #1]
	cmp r6, r1
	bne _0806B67C
	cmp r5, r0
	beq _0806B684
_0806B67C:
	cmp r6, r0
	bne _0806B6A0
	cmp r5, r1
	bne _0806B6A0
_0806B684:
	ldrb r0, [r4, #2]
	cmp r0, #0x2d
	beq _0806B698
	ldr r0, _0806B69C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r1, [r4, #2]
	cmp r0, r1
	bne _0806B6A0
_0806B698:
	adds r0, r4, #0
	b _0806B6AA
	.align 2, 0
_0806B69C: .4byte gPlaySt
_0806B6A0:
	adds r4, #0xc
_0806B6A2:
	ldrb r0, [r4, #1]
	cmp r0, #0
	bne _0806B664
	movs r0, #0
_0806B6AA:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_806B6B0
sub_806B6B0: @ 0x0806B6B0
	push {r4, r5, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	b _0806B6EA
_0806B6BA:
	ldr r0, [r4, #8]
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806B6E8
	ldrb r0, [r4]
	cmp r5, r0
	bne _0806B6E8
	ldrb r1, [r4, #1]
	cmp r1, #0x2d
	beq _0806B6E0
	ldr r0, _0806B6E4 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r1, [r4, #1]
	cmp r0, r1
	bne _0806B6E8
_0806B6E0:
	adds r0, r4, #0
	b _0806B6F2
	.align 2, 0
_0806B6E4: .4byte gPlaySt
_0806B6E8:
	adds r4, #0x10
_0806B6EA:
	ldrb r0, [r4]
	cmp r0, #0
	bne _0806B6BA
	movs r0, #0
_0806B6F2:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806B6F8
sub_806B6F8: @ 0x0806B6F8
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r7, r4, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r5, r1, #0
	adds r0, r4, #0
	bl sub_806B650
	cmp r0, #0
	bne _0806B740
	ldr r6, _0806B744 @ =gUnk_0866618C
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_806B6B0
	cmp r0, #0
	bne _0806B740
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_806B6B0
	cmp r0, #0
	bne _0806B740
	ldr r1, _0806B748 @ =gUnk_08666528
	adds r0, r7, #0
	bl sub_806B6B0
	cmp r0, #0
	beq _0806B74C
	bl BattleIsTriangleAttack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B74C
_0806B740:
	movs r0, #1
	b _0806B74E
	.align 2, 0
_0806B744: .4byte gUnk_0866618C
_0806B748: .4byte gUnk_08666528
_0806B74C:
	movs r0, #0
_0806B74E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806B754
sub_806B754: @ 0x0806B754
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r8, r5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r6, r1, #0
	adds r0, r5, #0
	bl sub_806B650
	adds r4, r0, #0
	cmp r4, #0
	bne _0806B790
	ldr r7, _0806B7A4 @ =gUnk_0866618C
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_806B6B0
	adds r4, r0, #0
	cmp r4, #0
	bne _0806B790
	adds r0, r6, #0
	adds r1, r7, #0
	bl sub_806B6B0
	adds r4, r0, #0
	cmp r4, #0
	beq _0806B7A8
_0806B790:
	ldr r0, [r4, #4]
	bl StartTalkEvent
	bl DisableEventSkip
	ldr r0, [r4, #8]
	bl SetEid
	b _0806B7D0
	.align 2, 0
_0806B7A4: .4byte gUnk_0866618C
_0806B7A8:
	ldr r1, _0806B7DC @ =gUnk_08666528
	mov r0, r8
	bl sub_806B6B0
	adds r4, r0, #0
	cmp r4, #0
	beq _0806B7D0
	bl BattleIsTriangleAttack
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806B7D0
	ldr r0, [r4, #4]
	bl StartTalkEvent
	bl DisableEventSkip
	ldr r0, [r4, #8]
	bl SetEid
_0806B7D0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806B7DC: .4byte gUnk_08666528

	thumb_func_start ShouldDisplayDeathQuote
ShouldDisplayDeathQuote: @ 0x0806B7E0
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, _0806B7FC @ =gUnk_08666598
	adds r0, r4, #0
	bl sub_806B6B0
	cmp r0, #0
	bne _0806B800
	cmp r4, #1
	beq _0806B800
	movs r0, #0
	b _0806B802
	.align 2, 0
_0806B7FC: .4byte gUnk_08666598
_0806B800:
	movs r0, #1
_0806B802:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806B808
sub_806B808: @ 0x0806B808
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r1, _0806B88C @ =gUnk_08666598
	adds r0, r5, #0
	bl sub_806B6B0
	adds r4, r0, #0
	cmp r4, #0
	beq _0806B848
	ldr r0, [r4, #4]
	cmp r0, #0
	beq _0806B826
	bl StartTalkEvent
_0806B826:
	bl DisableEventSkip
	ldr r0, [r4, #8]
	bl SetEid
	adds r0, r5, #0
	bl GetUnitByPid
	movs r1, #0xc0
	ldrb r0, [r0, #0xb]
	ands r1, r0
	cmp r1, #0
	bne _0806B848
	movs r0, #0x45
	movs r1, #0
	bl StartBgm
_0806B848:
	ldr r0, _0806B890 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	cmp r0, #0x19
	bne _0806B85A
	cmp r5, #0x66
	bne _0806B85A
	movs r0, #4
	bl FadeBgmOut
_0806B85A:
	cmp r5, #1
	bne _0806B884
	movs r0, #0x65
	bl SetEid
	ldr r4, _0806B890 @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	cmp r0, #0
	beq _0806B87C
	ldr r0, _0806B894 @ =gUnk_0866AAF8
	bl StartEvent
	movs r0, #0x37
	movs r1, #0
	bl StartBgm
_0806B87C:
	movs r0, #1
	ldrb r1, [r4, #0x1d]
	orrs r0, r1
	strb r0, [r4, #0x1d]
_0806B884:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806B88C: .4byte gUnk_08666598
_0806B890: .4byte gPlaySt
_0806B894: .4byte gUnk_0866AAF8

	thumb_func_start sub_806B898
sub_806B898: @ 0x0806B898
	movs r0, #0
	bx lr

	thumb_func_start nullsub_27
nullsub_27: @ 0x0806B89C
	bx lr
	.align 2, 0

	thumb_func_start nullsub_28
nullsub_28: @ 0x0806B8A0
	bx lr
	.align 2, 0

	thumb_func_start sub_806B8A4
sub_806B8A4: @ 0x0806B8A4
	movs r0, #0
	bx lr

	thumb_func_start nullsub_30
nullsub_30: @ 0x0806B8A8
	bx lr
	.align 2, 0

	thumb_func_start sub_806B8AC
sub_806B8AC: @ 0x0806B8AC
	movs r0, #0
	bx lr

	thumb_func_start sub_806B8B0
sub_806B8B0: @ 0x0806B8B0
	movs r0, #0
	bx lr

	thumb_func_start nullsub_31
nullsub_31: @ 0x0806B8B4
	bx lr
	.align 2, 0

	thumb_func_start nullsub_32
nullsub_32: @ 0x0806B8B8
	bx lr
	.align 2, 0

	thumb_func_start nullsub_33
nullsub_33: @ 0x0806B8BC
	bx lr
	.align 2, 0

	thumb_func_start nullsub_34
nullsub_34: @ 0x0806B8C0
	bx lr
	.align 2, 0

	thumb_func_start nullsub_35
nullsub_35: @ 0x0806B8C4
	bx lr
	.align 2, 0

	thumb_func_start sub_806B8C8
sub_806B8C8: @ 0x0806B8C8
	adds r3, r0, #0
	cmp r3, #0
	beq _0806B8F0
	subs r3, #1
	ldr r1, _0806B8F4 @ =0x03004898
	adds r0, r3, #0
	cmp r3, #0
	bge _0806B8DA
	adds r0, r3, #7
_0806B8DA:
	asrs r0, r0, #3
	adds r2, r0, r1
	ldr r1, _0806B8F8 @ =gUnk_08666184
	lsls r0, r0, #3
	subs r0, r3, r0
	adds r0, r0, r1
	ldrb r1, [r2]
	ldrb r0, [r0]
	orrs r1, r0
	adds r0, r1, #0
	strb r0, [r2]
_0806B8F0:
	bx lr
	.align 2, 0
_0806B8F4: .4byte 0x03004898
_0806B8F8: .4byte gUnk_08666184

	thumb_func_start CheckChapterEid
CheckChapterEid: @ 0x0806B8FC
	adds r3, r0, #0
	cmp r3, #0
	beq _0806B926
	subs r3, #1
	ldr r1, _0806B92C @ =0x03004898
	adds r0, r3, #0
	cmp r3, #0
	bge _0806B90E
	adds r0, r3, #7
_0806B90E:
	asrs r0, r0, #3
	adds r2, r0, r1
	ldr r1, _0806B930 @ =gUnk_08666184
	lsls r0, r0, #3
	subs r0, r3, r0
	adds r0, r0, r1
	ldrb r2, [r2]
	ldrb r0, [r0]
	ands r2, r0
	adds r0, r2, #0
	cmp r0, #0
	bne _0806B934
_0806B926:
	movs r0, #0
	b _0806B936
	.align 2, 0
_0806B92C: .4byte 0x03004898
_0806B930: .4byte gUnk_08666184
_0806B934:
	movs r0, #1
_0806B936:
	bx lr

	thumb_func_start sub_806B938
sub_806B938: @ 0x0806B938
	adds r2, r0, #0
	cmp r2, #0
	beq _0806B966
	subs r2, #1
	ldr r3, _0806B968 @ =gUnk_08666184
	adds r1, r2, #0
	cmp r2, #0
	bge _0806B94A
	adds r1, r2, #7
_0806B94A:
	asrs r1, r1, #3
	lsls r0, r1, #3
	subs r0, r2, r0
	adds r0, r0, r3
	ldrb r0, [r0]
	mvns r0, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0806B96C @ =0x03004898
	adds r1, r1, r0
	adds r0, r3, #0
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
_0806B966:
	bx lr
	.align 2, 0
_0806B968: .4byte gUnk_08666184
_0806B96C: .4byte 0x03004898

	thumb_func_start sub_806B970
sub_806B970: @ 0x0806B970
	ldr r1, _0806B980 @ =0x03004898
	movs r2, #0
	adds r0, r1, #3
_0806B976:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _0806B976
	bx lr
	.align 2, 0
_0806B980: .4byte 0x03004898

	thumb_func_start sub_806B984
sub_806B984: @ 0x0806B984
	adds r3, r0, #0
	cmp r3, #0x63
	ble _0806B9B0
	cmp r3, #0x64
	beq _0806B9B0
	subs r3, #0x65
	ldr r1, _0806B9B4 @ =0x03004890
	adds r0, r3, #0
	cmp r3, #0
	bge _0806B99A
	adds r0, r3, #7
_0806B99A:
	asrs r0, r0, #3
	adds r2, r0, r1
	ldr r1, _0806B9B8 @ =gUnk_08666184
	lsls r0, r0, #3
	subs r0, r3, r0
	adds r0, r0, r1
	ldrb r1, [r2]
	ldrb r0, [r0]
	orrs r1, r0
	adds r0, r1, #0
	strb r0, [r2]
_0806B9B0:
	bx lr
	.align 2, 0
_0806B9B4: .4byte 0x03004890
_0806B9B8: .4byte gUnk_08666184

	thumb_func_start CheckGlobalEid
CheckGlobalEid: @ 0x0806B9BC
	adds r3, r0, #0
	cmp r3, #0x64
	ble _0806B9E6
	subs r3, #0x65
	ldr r1, _0806B9EC @ =0x03004890
	adds r0, r3, #0
	cmp r3, #0
	bge _0806B9CE
	adds r0, r3, #7
_0806B9CE:
	asrs r0, r0, #3
	adds r2, r0, r1
	ldr r1, _0806B9F0 @ =gUnk_08666184
	lsls r0, r0, #3
	subs r0, r3, r0
	adds r0, r0, r1
	ldrb r2, [r2]
	ldrb r0, [r0]
	ands r2, r0
	adds r0, r2, #0
	cmp r0, #0
	bne _0806B9F4
_0806B9E6:
	movs r0, #0
	b _0806B9F6
	.align 2, 0
_0806B9EC: .4byte 0x03004890
_0806B9F0: .4byte gUnk_08666184
_0806B9F4:
	movs r0, #1
_0806B9F6:
	bx lr

	thumb_func_start sub_806B9F8
sub_806B9F8: @ 0x0806B9F8
	adds r2, r0, #0
	cmp r2, #0x63
	ble _0806BA2A
	cmp r2, #0x64
	beq _0806BA2A
	subs r2, #0x65
	ldr r3, _0806BA2C @ =gUnk_08666184
	adds r1, r2, #0
	cmp r2, #0
	bge _0806BA0E
	adds r1, r2, #7
_0806BA0E:
	asrs r1, r1, #3
	lsls r0, r1, #3
	subs r0, r2, r0
	adds r0, r0, r3
	ldrb r0, [r0]
	mvns r0, r0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0806BA30 @ =0x03004890
	adds r1, r1, r0
	adds r0, r3, #0
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
_0806BA2A:
	bx lr
	.align 2, 0
_0806BA2C: .4byte gUnk_08666184
_0806BA30: .4byte 0x03004890

	thumb_func_start sub_806BA34
sub_806BA34: @ 0x0806BA34
	ldr r1, _0806BA44 @ =0x03004890
	movs r2, #0
	adds r0, r1, #4
_0806BA3A:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _0806BA3A
	bx lr
	.align 2, 0
_0806BA44: .4byte 0x03004890

	thumb_func_start SetEid
SetEid: @ 0x0806BA48
	push {lr}
	cmp r0, #0x63
	bgt _0806BA54
	bl sub_806B8C8
	b _0806BA58
_0806BA54:
	bl sub_806B984
_0806BA58:
	pop {r0}
	bx r0

	thumb_func_start CheckFlag
CheckFlag: @ 0x0806BA5C
	push {lr}
	cmp r0, #0x63
	ble _0806BA68
	bl CheckGlobalEid
	b _0806BA6C
_0806BA68:
	bl CheckChapterEid
_0806BA6C:
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start ClearEid
ClearEid: @ 0x0806BA74
	push {lr}
	cmp r0, #0x63
	bgt _0806BA80
	bl sub_806B938
	b _0806BA84
_0806BA80:
	bl sub_806B9F8
_0806BA84:
	pop {r0}
	bx r0

	thumb_func_start GetGlobalEidData
GetGlobalEidData: @ 0x0806BA88
	ldr r0, _0806BA8C @ =0x03004890
	bx lr
	.align 2, 0
_0806BA8C: .4byte 0x03004890

	thumb_func_start sub_806BA90
sub_806BA90: @ 0x0806BA90
	movs r0, #5
	bx lr

	thumb_func_start GetChapterEidData
GetChapterEidData: @ 0x0806BA94
	ldr r0, _0806BA98 @ =0x03004898
	bx lr
	.align 2, 0
_0806BA98: .4byte 0x03004898

	thumb_func_start sub_806BA9C
sub_806BA9C: @ 0x0806BA9C
	movs r0, #4
	bx lr

	thumb_func_start sub_806BAA0
sub_806BAA0: @ 0x0806BAA0
	ldr r1, _0806BAB0 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _0806BAB4
	movs r0, #0
	b _0806BAB6
	.align 2, 0
_0806BAB0: .4byte gPlaySt
_0806BAB4:
	movs r0, #1
_0806BAB6:
	bx lr

	thumb_func_start sub_806BAB8
sub_806BAB8: @ 0x0806BAB8
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0806BAC4 @ =gUnk_08666C78
	b _0806BAD2
	.align 2, 0
_0806BAC4: .4byte gUnk_08666C78
_0806BAC8:
	cmp r1, r0
	bne _0806BAD0
	ldr r0, [r2, #4]
	b _0806BAE6
_0806BAD0:
	adds r2, #8
_0806BAD2:
	ldrb r1, [r2]
	cmp r1, #0
	bne _0806BAC8
	ldr r0, _0806BAEC @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterInfo
	ldrb r0, [r0, #0x13]
_0806BAE6:
	pop {r1}
	bx r1
	.align 2, 0
_0806BAEC: .4byte gPlaySt

	thumb_func_start sub_806BAF0
sub_806BAF0: @ 0x0806BAF0
	push {r4, r5, lr}
	ldr r1, _0806BB30 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0806BB2A
	movs r5, #0x81
_0806BB00:
	adds r0, r5, #0
	bl GetUnit
	adds r4, r0, #0
	cmp r4, #0
	beq _0806BB24
	ldr r0, [r4]
	cmp r0, #0
	beq _0806BB24
	ldrb r0, [r0, #4]
	bl sub_806BAB8
	adds r1, r0, #0
	cmp r1, #0
	beq _0806BB24
	adds r0, r4, #0
	bl UnitApplyBonusLevels
_0806BB24:
	adds r5, #1
	cmp r5, #0xbf
	ble _0806BB00
_0806BB2A:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806BB30: .4byte gPlaySt

	thumb_func_start sub_806BB34
sub_806BB34: @ 0x0806BB34
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xa
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BB5E
	bl sub_806C36C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BB5E
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BB60
_0806BB5E:
	movs r0, #0
_0806BB60:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BB68
sub_806BB68: @ 0x0806BB68
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #7
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BB92
	bl sub_806C294
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BB92
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BB94
_0806BB92:
	movs r0, #0
_0806BB94:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BB9C
sub_806BB9C: @ 0x0806BB9C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #7
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BBC6
	bl sub_806C294
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BBC6
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BBC8
_0806BBC6:
	movs r0, #0
_0806BBC8:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BBD0
sub_806BBD0: @ 0x0806BBD0
	push {lr}
	ldr r0, _0806BBEC @ =gPlaySt
	ldrh r0, [r0, #0x10]
	cmp r0, #3
	bls _0806BBF0
	movs r0, #0x14
	movs r1, #0
	movs r2, #0x2d
	movs r3, #0x18
	bl sub_806ACEC
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BBF2
	.align 2, 0
_0806BBEC: .4byte gPlaySt
_0806BBF0:
	movs r0, #0
_0806BBF2:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BBF8
sub_806BBF8: @ 0x0806BBF8
	push {lr}
	ldr r0, _0806BC14 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0
	bne _0806BC10
	bl RandNextB
	movs r1, #0xb
	bl DivRem
	cmp r0, #0
	beq _0806BC18
_0806BC10:
	movs r0, #0
	b _0806BC1A
	.align 2, 0
_0806BC14: .4byte gPlaySt
_0806BC18:
	movs r0, #1
_0806BC1A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BC20
sub_806BC20: @ 0x0806BC20
	push {r4, lr}
	adds r4, r0, #0
	bl sub_806C158
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BC4E
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x1d
	bl sub_806AC90
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BC52
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #1
	bl sub_806AC90
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BC52
_0806BC4E:
	movs r0, #0
	b _0806BC54
_0806BC52:
	movs r0, #1
_0806BC54:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BC5C
sub_806BC5C: @ 0x0806BC5C
	push {r4, lr}
	ldr r4, _0806BC98 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BC9C
	movs r0, #4
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BC9C
	movs r0, #5
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BC9C
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	bne _0806BC9C
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BC9C
	movs r0, #1
	b _0806BC9E
	.align 2, 0
_0806BC98: .4byte gPlaySt
_0806BC9C:
	movs r0, #0
_0806BC9E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BCA4
sub_806BCA4: @ 0x0806BCA4
	push {r4, lr}
	ldr r4, _0806BCE0 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BCE4
	movs r0, #5
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BCE4
	movs r0, #6
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BCE4
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	beq _0806BCE4
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BCE4
	movs r0, #1
	b _0806BCE6
	.align 2, 0
_0806BCE0: .4byte gPlaySt
_0806BCE4:
	movs r0, #0
_0806BCE6:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BCEC
sub_806BCEC: @ 0x0806BCEC
	push {r4, lr}
	ldr r4, _0806BD28 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BD2C
	movs r0, #6
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BD2C
	movs r0, #7
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BD2C
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	bne _0806BD2C
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BD2C
	movs r0, #1
	b _0806BD2E
	.align 2, 0
_0806BD28: .4byte gPlaySt
_0806BD2C:
	movs r0, #0
_0806BD2E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BD34
sub_806BD34: @ 0x0806BD34
	push {r4, lr}
	ldr r4, _0806BD70 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BD74
	movs r0, #7
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BD74
	movs r0, #8
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BD74
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	beq _0806BD74
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BD74
	movs r0, #1
	b _0806BD76
	.align 2, 0
_0806BD70: .4byte gPlaySt
_0806BD74:
	movs r0, #0
_0806BD76:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BD7C
sub_806BD7C: @ 0x0806BD7C
	push {r4, lr}
	ldr r4, _0806BDB8 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BDBC
	movs r0, #8
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BDBC
	movs r0, #9
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BDBC
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	bne _0806BDBC
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BDBC
	movs r0, #1
	b _0806BDBE
	.align 2, 0
_0806BDB8: .4byte gPlaySt
_0806BDBC:
	movs r0, #0
_0806BDBE:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BDC4
sub_806BDC4: @ 0x0806BDC4
	push {r4, lr}
	ldr r4, _0806BDF4 @ =gPlaySt
	ldrb r0, [r4, #0xf]
	cmp r0, #0x80
	bne _0806BDF8
	movs r0, #9
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BDF8
	movs r0, #1
	ldrh r4, [r4, #0x10]
	ands r0, r4
	cmp r0, #0
	beq _0806BDF8
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BDF8
	movs r0, #1
	b _0806BDFA
	.align 2, 0
_0806BDF4: .4byte gPlaySt
_0806BDF8:
	movs r0, #0
_0806BDFA:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BE00
sub_806BE00: @ 0x0806BE00
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #8
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BE28
	bl sub_806C36C
	cmp r0, #0
	beq _0806BE28
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BE2A
_0806BE28:
	movs r0, #0
_0806BE2A:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BE30
sub_806BE30: @ 0x0806BE30
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #5
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BE58
	bl sub_806C294
	cmp r0, #0
	beq _0806BE58
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BE5A
_0806BE58:
	movs r0, #0
_0806BE5A:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BE60
sub_806BE60: @ 0x0806BE60
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #5
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BE88
	bl sub_806C294
	cmp r0, #0
	beq _0806BE88
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BE8A
_0806BE88:
	movs r0, #0
_0806BE8A:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806BE90
sub_806BE90: @ 0x0806BE90
	push {r4, lr}
	adds r4, r0, #0
	bl sub_806C3CC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BEAE
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BEB0
_0806BEAE:
	movs r0, #0
_0806BEB0:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BEB8
sub_806BEB8: @ 0x0806BEB8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #9
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BEE2
	bl sub_806C3CC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BEE2
	adds r0, r4, #0
	movs r1, #0x31
	movs r2, #0x2e
	bl sub_806AC90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BEE4
_0806BEE2:
	movs r0, #0
_0806BEE4:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BEEC
sub_806BEEC: @ 0x0806BEEC
	push {lr}
	ldr r0, _0806BF08 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806BF0C
	movs r0, #0xa
	movs r1, #0xe
	movs r2, #0xa
	movs r3, #0xe
	bl sub_806AE7C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _0806BF0E
	.align 2, 0
_0806BF08: .4byte gPlaySt
_0806BF0C:
	movs r0, #0
_0806BF0E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806BF14
sub_806BF14: @ 0x0806BF14
	push {lr}
	movs r0, #4
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806BF32
	movs r0, #0xda
	bl sub_806C310
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806BF32
	movs r0, #1
	b _0806BF34
_0806BF32:
	movs r0, #0
_0806BF34:
	pop {r1}
	bx r1

	thumb_func_start sub_806BF38
sub_806BF38: @ 0x0806BF38
	ldr r0, _0806BF68 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0xc
	bgt _0806BF6C
	cmp r0, #2
	beq _0806BF6C
	cmp r0, #3
	beq _0806BF6C
	cmp r0, #4
	beq _0806BF6C
	cmp r0, #5
	beq _0806BF6C
	cmp r0, #6
	beq _0806BF6C
	cmp r0, #7
	beq _0806BF6C
	cmp r0, #8
	beq _0806BF6C
	cmp r0, #0x20
	beq _0806BF6C
	movs r0, #0
	b _0806BF6E
	.align 2, 0
_0806BF68: .4byte gPlaySt
_0806BF6C:
	movs r0, #1
_0806BF6E:
	bx lr

	thumb_func_start sub_806BF70
sub_806BF70: @ 0x0806BF70
	push {lr}
	movs r0, #0xfe
	bl SoftReset
	pop {r0}
	bx r0

	thumb_func_start sub_806BF7C
sub_806BF7C: @ 0x0806BF7C
	ldr r0, _0806BF90 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	bne _0806BF94
	movs r0, #1
	b _0806BF96
	.align 2, 0
_0806BF90: .4byte gKeySt
_0806BF94:
	movs r0, #0
_0806BF96:
	bx lr

	thumb_func_start sub_806BF98
sub_806BF98: @ 0x0806BF98
	push {lr}
	movs r0, #0xfe
	bl SoftReset
	pop {r0}
	bx r0

	thumb_func_start sub_806BFA4
sub_806BFA4: @ 0x0806BFA4
	ldr r0, _0806BFB8 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	bne _0806BFBC
	movs r0, #0
	b _0806BFBE
	.align 2, 0
_0806BFB8: .4byte gKeySt
_0806BFBC:
	movs r0, #1
_0806BFBE:
	bx lr

	thumb_func_start sub_806BFC0
sub_806BFC0: @ 0x0806BFC0
	push {lr}
	movs r0, #0
	bl SetFogVision
	pop {r0}
	bx r0

	thumb_func_start sub_806BFCC
sub_806BFCC: @ 0x0806BFCC
	push {lr}
	bl GetGold
	ldr r1, _0806BFE0 @ =0x00001388
	adds r0, r0, r1
	bl SetGold
	pop {r0}
	bx r0
	.align 2, 0
_0806BFE0: .4byte 0x00001388

	thumb_func_start sub_806BFE4
sub_806BFE4: @ 0x0806BFE4
	push {r4, lr}
	adds r4, r0, #0
	bl GetGold
	cmp r0, r4
	blt _0806BFFA
	bl GetGold
	subs r0, r0, r4
	bl SetGold
_0806BFFA:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806C000
sub_806C000: @ 0x0806C000
	adds r1, r0, #0
	ldrb r2, [r1, #0x10]
	movs r0, #0x10
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C010
	subs r0, r2, #1
	strb r0, [r1, #0x10]
_0806C010:
	ldrb r2, [r1, #0x12]
	movs r0, #0x12
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C01E
	subs r0, r2, #1
	strb r0, [r1, #0x12]
_0806C01E:
	ldrb r2, [r1, #0x13]
	movs r0, #0x13
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C02C
	subs r0, r2, #1
	strb r0, [r1, #0x13]
_0806C02C:
	ldrb r2, [r1, #0x14]
	movs r0, #0x14
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C03A
	subs r0, r2, #1
	strb r0, [r1, #0x14]
_0806C03A:
	ldrb r2, [r1, #0x15]
	movs r0, #0x15
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C048
	subs r0, r2, #1
	strb r0, [r1, #0x15]
_0806C048:
	ldrb r2, [r1, #0x16]
	movs r0, #0x16
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C056
	subs r0, r2, #1
	strb r0, [r1, #0x16]
_0806C056:
	ldrb r2, [r1, #0x17]
	movs r0, #0x17
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _0806C064
	subs r0, r2, #1
	strb r0, [r1, #0x17]
_0806C064:
	bx lr
	.align 2, 0

	thumb_func_start sub_806C068
sub_806C068: @ 0x0806C068
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetUnitByPid
	bl sub_806C000
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806C07C
sub_806C07C: @ 0x0806C07C
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r4, #1
_0806C084:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C0AA
	ldr r2, [r1]
	cmp r2, #0
	beq _0806C0AA
	movs r0, #0xc
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C0AA
	ldrb r2, [r2, #4]
	cmp r2, r5
	bne _0806C0AA
	movs r0, #1
	b _0806C0B2
_0806C0AA:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806C084
	movs r0, #0
_0806C0B2:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806C0B8
sub_806C0B8: @ 0x0806C0B8
	push {lr}
	movs r0, #0x26
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C0C8
sub_806C0C8: @ 0x0806C0C8
	push {lr}
	movs r0, #0x1f
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C0D8
sub_806C0D8: @ 0x0806C0D8
	push {lr}
	movs r0, #0x42
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C0E8
sub_806C0E8: @ 0x0806C0E8
	push {lr}
	movs r0, #0x2c
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C0F8
sub_806C0F8: @ 0x0806C0F8
	push {lr}
	movs r0, #0x3c
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C108
sub_806C108: @ 0x0806C108
	push {lr}
	movs r0, #4
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C118
sub_806C118: @ 0x0806C118
	push {lr}
	movs r0, #6
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C128
sub_806C128: @ 0x0806C128
	push {lr}
	movs r0, #5
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C138
sub_806C138: @ 0x0806C138
	push {lr}
	movs r0, #0x37
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C148
sub_806C148: @ 0x0806C148
	push {lr}
	movs r0, #0x32
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C158
sub_806C158: @ 0x0806C158
	push {lr}
	movs r0, #0x1d
	bl sub_806C07C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start IsCharacterInBlueTeam
IsCharacterInBlueTeam: @ 0x0806C168
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r4, #1
_0806C170:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C196
	ldr r2, [r1]
	cmp r2, #0
	beq _0806C196
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C196
	ldrb r2, [r2, #4]
	cmp r2, r5
	bne _0806C196
	movs r0, #1
	b _0806C19E
_0806C196:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806C170
	movs r0, #0
_0806C19E:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806C1A4
sub_806C1A4: @ 0x0806C1A4
	push {lr}
	movs r0, #9
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C1B4
sub_806C1B4: @ 0x0806C1B4
	push {lr}
	movs r0, #0x26
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C1C4
sub_806C1C4: @ 0x0806C1C4
	push {lr}
	movs r0, #0x11
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C1D4
sub_806C1D4: @ 0x0806C1D4
	push {lr}
	movs r0, #0x2a
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C1E4
sub_806C1E4: @ 0x0806C1E4
	push {lr}
	movs r0, #5
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C1F4
sub_806C1F4: @ 0x0806C1F4
	push {lr}
	movs r0, #0x35
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C204
sub_806C204: @ 0x0806C204
	push {lr}
	movs r0, #0x37
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C214
sub_806C214: @ 0x0806C214
	push {lr}
	movs r0, #0x32
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C224
sub_806C224: @ 0x0806C224
	push {lr}
	movs r0, #0x36
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C234
sub_806C234: @ 0x0806C234
	push {lr}
	movs r0, #0x2c
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C244
sub_806C244: @ 0x0806C244
	push {lr}
	movs r0, #0x3c
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C254
sub_806C254: @ 0x0806C254
	push {lr}
	movs r0, #0x34
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start IsItTeamFae
IsItTeamFae: @ 0x0806C264
	push {lr}
	movs r0, #3
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C274
sub_806C274: @ 0x0806C274
	push {lr}
	movs r0, #4
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C284
sub_806C284: @ 0x0806C284
	push {lr}
	movs r0, #6
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C294
sub_806C294: @ 0x0806C294
	push {lr}
	movs r0, #0xf
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C2A4
sub_806C2A4: @ 0x0806C2A4
	push {lr}
	movs r0, #0x2e
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C2B4
sub_806C2B4: @ 0x0806C2B4
	push {lr}
	movs r0, #0xb
	bl IsCharacterInBlueTeam
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C2C4
sub_806C2C4: @ 0x0806C2C4
	push {r4, lr}
	movs r4, #0x41
_0806C2C8:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C2E8
	ldr r0, [r1]
	cmp r0, #0
	beq _0806C2E8
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C2E8
	movs r0, #1
	b _0806C2F0
_0806C2E8:
	adds r4, #1
	cmp r4, #0xbf
	ble _0806C2C8
	movs r0, #0
_0806C2F0:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C2F8
sub_806C2F8: @ 0x0806C2F8
	push {lr}
	bl sub_806C2C4
	movs r1, #0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806C308
	movs r1, #1
_0806C308:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C310
sub_806C310: @ 0x0806C310
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r4, #0x41
_0806C318:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C33E
	ldr r2, [r1]
	cmp r2, #0
	beq _0806C33E
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C33E
	ldrb r2, [r2, #4]
	cmp r2, r5
	bne _0806C33E
	movs r0, #1
	b _0806C346
_0806C33E:
	adds r4, #1
	cmp r4, #0xbf
	ble _0806C318
	movs r0, #0
_0806C346:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_806C34C
sub_806C34C: @ 0x0806C34C
	push {lr}
	movs r0, #0x2e
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C35C
sub_806C35C: @ 0x0806C35C
	push {lr}
	movs r0, #0x5e
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C36C
sub_806C36C: @ 0x0806C36C
	push {lr}
	movs r0, #0xf
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C37C
sub_806C37C: @ 0x0806C37C
	push {lr}
	movs r0, #0x35
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C38C
sub_806C38C: @ 0x0806C38C
	push {lr}
	movs r0, #0x27
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C39C
sub_806C39C: @ 0x0806C39C
	push {lr}
	movs r0, #0x33
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3AC
sub_806C3AC: @ 0x0806C3AC
	push {lr}
	movs r0, #0xc4
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3BC
sub_806C3BC: @ 0x0806C3BC
	push {lr}
	movs r0, #0xc6
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3CC
sub_806C3CC: @ 0x0806C3CC
	push {lr}
	movs r0, #0xb
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3DC
sub_806C3DC: @ 0x0806C3DC
	push {lr}
	movs r0, #0x1d
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3EC
sub_806C3EC: @ 0x0806C3EC
	push {lr}
	movs r0, #0xd5
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C3FC
sub_806C3FC: @ 0x0806C3FC
	push {lr}
	movs r0, #0xd6
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C40C
sub_806C40C: @ 0x0806C40C
	push {lr}
	movs r0, #0xd7
	bl sub_806C310
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1

	thumb_func_start sub_806C41C
sub_806C41C: @ 0x0806C41C
	push {r4, r5, r6, r7, lr}
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	movs r6, #0
	adds r4, r5, #1
	b _0806C450
_0806C42A:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C44E
	ldr r2, [r1]
	cmp r2, #0
	beq _0806C44E
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C44E
	ldrb r2, [r2, #4]
	cmp r2, r7
	bne _0806C44E
	adds r6, #1
_0806C44E:
	adds r4, #1
_0806C450:
	adds r0, r5, #0
	adds r0, #0x40
	cmp r4, r0
	blt _0806C42A
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806C460
sub_806C460: @ 0x0806C460
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r6, #0
	adds r4, r5, #1
	b _0806C48C
_0806C46A:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806C488
	ldr r0, [r1]
	cmp r0, #0
	beq _0806C488
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806C488
	adds r6, #1
_0806C488:
	adds r4, #1
	adds r0, r5, #0
_0806C48C:
	adds r0, #0x40
	cmp r4, r0
	blt _0806C46A
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C49C
sub_806C49C: @ 0x0806C49C
	ldr r0, _0806C4A8 @ =gPlaySt
	ldrh r0, [r0, #0x10]
	cmp r0, #0x14
	bhi _0806C4AC
	movs r0, #0
	b _0806C4AE
	.align 2, 0
_0806C4A8: .4byte gPlaySt
_0806C4AC:
	movs r0, #1
_0806C4AE:
	bx lr

	thumb_func_start sub_806C4B0
sub_806C4B0: @ 0x0806C4B0
	ldr r0, _0806C4BC @ =gPlaySt
	ldrh r0, [r0, #0x10]
	cmp r0, #0x19
	bhi _0806C4C0
	movs r0, #0
	b _0806C4C2
	.align 2, 0
_0806C4BC: .4byte gPlaySt
_0806C4C0:
	movs r0, #1
_0806C4C2:
	bx lr

	thumb_func_start sub_806C4C4
sub_806C4C4: @ 0x0806C4C4
	ldr r0, _0806C4D0 @ =gPlaySt
	ldrh r0, [r0, #0x10]
	cmp r0, #0x1e
	bhi _0806C4D4
	movs r0, #0
	b _0806C4D6
	.align 2, 0
_0806C4D0: .4byte gPlaySt
_0806C4D4:
	movs r0, #1
_0806C4D6:
	bx lr

	thumb_func_start sub_806C4D8
sub_806C4D8: @ 0x0806C4D8
	ldr r0, _0806C4E4 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0
	bne _0806C4E8
	movs r0, #1
	b _0806C4EA
	.align 2, 0
_0806C4E4: .4byte gPlaySt
_0806C4E8:
	movs r0, #0
_0806C4EA:
	bx lr

	thumb_func_start sub_806C4EC
sub_806C4EC: @ 0x0806C4EC
	ldr r0, _0806C4F8 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806C4FC
	movs r0, #1
	b _0806C4FE
	.align 2, 0
_0806C4F8: .4byte gPlaySt
_0806C4FC:
	movs r0, #0
_0806C4FE:
	bx lr

	thumb_func_start sub_806C500
sub_806C500: @ 0x0806C500
	ldr r0, _0806C51C @ =gActiveUnit
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r2, [r0, #4]
	ldr r0, [r1, #0x28]
	ldr r1, [r2, #0x24]
	orrs r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0806C520
	movs r0, #1
	b _0806C522
	.align 2, 0
_0806C51C: .4byte gActiveUnit
_0806C520:
	movs r0, #0
_0806C522:
	bx lr

	thumb_func_start sub_806C524
sub_806C524: @ 0x0806C524
	push {lr}
	bl GetGold
	ldr r1, _0806C534 @ =9999
	cmp r0, r1
	ble _0806C538
	movs r0, #1
	b _0806C53A
	.align 2, 0
_0806C534: .4byte 9999
_0806C538:
	movs r0, #0
_0806C53A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C540
sub_806C540: @ 0x0806C540
	push {lr}
	bl GetGold
	ldr r1, _0806C550 @ =0x00001F3F
	cmp r0, r1
	ble _0806C554
	movs r0, #1
	b _0806C556
	.align 2, 0
_0806C550: .4byte 0x00001F3F
_0806C554:
	movs r0, #0
_0806C556:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C55C
sub_806C55C: @ 0x0806C55C
	push {lr}
	bl GetGold
	ldr r1, _0806C56C @ =0x0000176F
	cmp r0, r1
	ble _0806C570
	movs r0, #1
	b _0806C572
	.align 2, 0
_0806C56C: .4byte 0x0000176F
_0806C570:
	movs r0, #0
_0806C572:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C578
sub_806C578: @ 0x0806C578
	push {lr}
	bl GetGold
	ldr r1, _0806C588 @ =0x00001387
	cmp r0, r1
	ble _0806C58C
	movs r0, #1
	b _0806C58E
	.align 2, 0
_0806C588: .4byte 0x00001387
_0806C58C:
	movs r0, #0
_0806C58E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C594
sub_806C594: @ 0x0806C594
	push {lr}
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _0806C5A2
	movs r0, #0
	b _0806C5A4
_0806C5A2:
	movs r0, #1
_0806C5A4:
	pop {r1}
	bx r1

	thumb_func_start sub_806C5A8
sub_806C5A8: @ 0x0806C5A8
	push {r4, r5, lr}
	movs r0, #5
	bl sub_8084F4C
	adds r2, r0, #0
	ldrb r1, [r2, #7]
	lsrs r0, r1, #4
	ldrb r2, [r2, #8]
	lsls r5, r2, #4
	orrs r5, r0
	movs r0, #4
	bl sub_8084F4C
	adds r2, r0, #0
	ldrb r0, [r2, #7]
	lsrs r1, r0, #4
	ldrb r2, [r2, #8]
	lsls r0, r2, #4
	orrs r0, r1
	adds r5, r5, r0
	movs r0, #0x2e
	bl sub_8084F4C
	adds r2, r0, #0
	ldrb r1, [r2, #7]
	lsrs r0, r1, #4
	ldrb r2, [r2, #8]
	lsls r4, r2, #4
	orrs r4, r0
	movs r0, #0x31
	bl sub_8084F4C
	adds r2, r0, #0
	ldrb r0, [r2, #7]
	lsrs r1, r0, #4
	ldrb r2, [r2, #8]
	lsls r0, r2, #4
	orrs r0, r1
	adds r4, r4, r0
	cmp r5, r4
	bhi _0806C5FE
	movs r0, #0
	b _0806C600
_0806C5FE:
	movs r0, #1
_0806C600:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806C608
sub_806C608: @ 0x0806C608
	push {lr}
	ldr r1, _0806C628 @ =gPlaySt
	movs r0, #8
	ldrb r2, [r1, #0x14]
	ands r0, r2
	cmp r0, #0
	bne _0806C61E
	ldrb r1, [r1, #0x1d]
	lsls r0, r1, #0x1f
	cmp r0, #0
	bne _0806C624
_0806C61E:
	movs r0, #4
	bl FadeBgmOut
_0806C624:
	pop {r0}
	bx r0
	.align 2, 0
_0806C628: .4byte gPlaySt

	thumb_func_start sub_806C62C
sub_806C62C: @ 0x0806C62C
	ldr r0, _0806C644 @ =gPlaySt
	ldrb r1, [r0, #0x14]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0806C648
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0806C648
	movs r0, #0
	b _0806C64A
	.align 2, 0
_0806C644: .4byte gPlaySt
_0806C648:
	movs r0, #1
_0806C64A:
	bx lr

	thumb_func_start sub_806C64C
sub_806C64C: @ 0x0806C64C
	push {lr}
	ldr r1, _0806C668 @ =0x030048A8
	movs r0, #0
	strb r0, [r1]
	movs r0, #0x16
	bl ClearEid
	bl sub_802BA08
	ldr r1, _0806C66C @ =0x0203D358
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0806C668: .4byte 0x030048A8
_0806C66C: .4byte 0x0203D358

	thumb_func_start sub_806C670
sub_806C670: @ 0x0806C670
	push {lr}
	ldr r1, _0806C688 @ =0x030048A8
	ldrb r0, [r1]
	cmp r0, #0
	bne _0806C682
	adds r0, #1
	strb r0, [r1]
	bl sub_8041FD8
_0806C682:
	pop {r0}
	bx r0
	.align 2, 0
_0806C688: .4byte 0x030048A8

	thumb_func_start sub_806C68C
sub_806C68C: @ 0x0806C68C
	ldr r0, _0806C698 @ =0x030048A8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bx lr
	.align 2, 0
_0806C698: .4byte 0x030048A8

	thumb_func_start sub_806C69C
sub_806C69C: @ 0x0806C69C
	push {lr}
	ldr r1, _0806C6AC @ =0x030048A8
	movs r0, #0
	strb r0, [r1]
	bl sub_8041FF8
	pop {r0}
	bx r0
	.align 2, 0
_0806C6AC: .4byte 0x030048A8

	thumb_func_start sub_806C6B0
sub_806C6B0: @ 0x0806C6B0
	push {lr}
	bl sub_802B9DC
	ldr r1, _0806C6D0 @ =0x0203D354
	str r0, [r1]
	ldr r0, _0806C6D4 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0xd
	beq _0806C6F0
	cmp r0, #0xd
	bgt _0806C6D8
	cmp r0, #1
	beq _0806C6E2
	b _0806C70E
	.align 2, 0
_0806C6D0: .4byte 0x0203D354
_0806C6D4: .4byte gActiveUnit
_0806C6D8:
	cmp r0, #0x1b
	beq _0806C708
	cmp r0, #0x26
	beq _0806C6FC
	b _0806C70E
_0806C6E2:
	ldr r0, _0806C6EC @ =gUnk_0866AF5C
	bl StartEvent
	b _0806C70E
	.align 2, 0
_0806C6EC: .4byte gUnk_0866AF5C
_0806C6F0:
	ldr r0, _0806C6F8 @ =gUnk_0866AFEC
	bl StartEvent
	b _0806C70E
	.align 2, 0
_0806C6F8: .4byte gUnk_0866AFEC
_0806C6FC:
	ldr r0, _0806C704 @ =gUnk_0866B07C
	bl StartEvent
	b _0806C70E
	.align 2, 0
_0806C704: .4byte gUnk_0866B07C
_0806C708:
	ldr r0, _0806C714 @ =gUnk_0866B10C
	bl StartEvent
_0806C70E:
	pop {r0}
	bx r0
	.align 2, 0
_0806C714: .4byte gUnk_0866B10C

	thumb_func_start sub_806C718
sub_806C718: @ 0x0806C718
	push {lr}
	movs r0, #9
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806C72C
	ldr r0, _0806C730 @ =gUnk_0866AEA8
	bl StartEvent
_0806C72C:
	pop {r0}
	bx r0
	.align 2, 0
_0806C730: .4byte gUnk_0866AEA8

	thumb_func_start sub_806C734
sub_806C734: @ 0x0806C734
	push {lr}
	movs r0, #0xa
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806C748
	ldr r0, _0806C74C @ =gUnk_0866AEE0
	bl StartEvent
_0806C748:
	pop {r0}
	bx r0
	.align 2, 0
_0806C74C: .4byte gUnk_0866AEE0

	thumb_func_start sub_806C750
sub_806C750: @ 0x0806C750
	push {lr}
	movs r0, #0xb
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806C764
	ldr r0, _0806C768 @ =gUnk_0866AF28
	bl StartEvent
_0806C764:
	pop {r0}
	bx r0
	.align 2, 0
_0806C768: .4byte gUnk_0866AF28

	thumb_func_start sub_806C76C
sub_806C76C: @ 0x0806C76C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	adds r3, r2, #0
	movs r0, #8
	str r0, [sp]
	movs r0, #1
	adds r1, r4, #0
	adds r2, r5, #0
	bl Interpolate
	adds r5, r0, #0
	ldr r0, _0806C7B0 @ =gUnk_08342A98
	ldr r4, _0806C7B4 @ =gPal+0x240
	adds r1, r4, #0
	movs r2, #8
	bl CpuFastSet
	ldr r0, _0806C7B8 @ =0xFFFFFDC0
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #1
	adds r3, r5, #0
	bl sub_805B644
	bl EnablePalSync
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806C7B0: .4byte gUnk_08342A98
_0806C7B4: .4byte gPal+0x240
_0806C7B8: .4byte 0xFFFFFDC0

	thumb_func_start sub_806C7BC
sub_806C7BC: @ 0x0806C7BC
	push {lr}
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	ldr r0, _0806C7DC @ =gUnk_08342A98
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r0}
	bx r0
	.align 2, 0
_0806C7DC: .4byte gUnk_08342A98

	thumb_func_start sub_806C7E0
sub_806C7E0: @ 0x0806C7E0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov r8, r0
	ldr r0, _0806C7FC @ =0x0203D35D
	ldrb r0, [r0]
	cmp r0, #1
	beq _0806C86C
	cmp r0, #1
	bgt _0806C800
	cmp r0, #0
	beq _0806C806
	b _0806C8C6
	.align 2, 0
_0806C7FC: .4byte 0x0203D35D
_0806C800:
	cmp r0, #2
	beq _0806C8A0
	b _0806C8C6
_0806C806:
	movs r4, #0
	ldr r0, _0806C85C @ =0x0203D35C
	ldrb r0, [r0]
	cmp r4, r0
	bge _0806C8C6
	ldr r5, _0806C860 @ =gBmSt
_0806C812:
	adds r0, r4, #0
	bl GetTarget
	movs r1, #0
	ldrsb r1, [r0, r1]
	lsls r1, r1, #4
	movs r3, #0xc
	ldrsh r2, [r5, r3]
	subs r2, r1, r2
	ldrb r0, [r0, #1]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #4
	movs r3, #0xe
	ldrsh r1, [r5, r3]
	subs r3, r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r2, r1
	subs r1, #1
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r3, r2
	movs r2, #0xff
	ands r1, r2
	ldr r2, _0806C864 @ =gUnk_0866ACCC
	ldr r3, _0806C868 @ =0x00002822
	bl PutOamHiRam
	adds r4, #1
	ldr r0, _0806C85C @ =0x0203D35C
	ldrb r0, [r0]
	cmp r4, r0
	blt _0806C812
	b _0806C8C6
	.align 2, 0
_0806C85C: .4byte 0x0203D35C
_0806C860: .4byte gBmSt
_0806C864: .4byte gUnk_0866ACCC
_0806C868: .4byte 0x00002822
_0806C86C:
	ldr r1, _0806C894 @ =gBmSt
	movs r3, #0xc
	ldrsh r0, [r1, r3]
	movs r2, #0xb4
	lsls r2, r2, #2
	movs r3, #0xe
	ldrsh r1, [r1, r3]
	movs r3, #0xb8
	lsls r3, r3, #1
	subs r0, r2, r0
	subs r2, #0xd1
	ands r0, r2
	subs r1, r3, r1
	movs r2, #0xff
	ands r1, r2
	ldr r2, _0806C898 @ =gUnk_0866ACCC
	ldr r3, _0806C89C @ =0x00002822
	bl PutOamHiRam
	b _0806C8C6
	.align 2, 0
_0806C894: .4byte gBmSt
_0806C898: .4byte gUnk_0866ACCC
_0806C89C: .4byte 0x00002822
_0806C8A0:
	ldr r1, _0806C908 @ =gBmSt
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	movs r2, #0xd8
	lsls r2, r2, #2
	movs r3, #0xe
	ldrsh r1, [r1, r3]
	movs r3, #0xa0
	lsls r3, r3, #1
	subs r0, r2, r0
	ldr r2, _0806C90C @ =0x000001FF
	ands r0, r2
	subs r1, r3, r1
	movs r2, #0xff
	ands r1, r2
	ldr r2, _0806C910 @ =gUnk_0866ACCC
	ldr r3, _0806C914 @ =0x00002822
	bl PutOamHiRam
_0806C8C6:
	bl GetGameTime
	adds r5, r0, #0
	movs r0, #1
	mov sb, r0
	ands r5, r0
	cmp r5, #0
	bne _0806C93C
	mov r6, r8
	adds r6, #0x66
	movs r1, #0
	ldrsh r7, [r6, r1]
	cmp r7, #0
	beq _0806C918
	mov r4, r8
	adds r4, #0x64
	movs r3, #0
	ldrsh r2, [r4, r3]
	movs r0, #0x10
	movs r1, #0
	bl sub_806C76C
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	ble _0806C93C
	strh r5, [r4]
	strh r5, [r6]
	b _0806C93C
	.align 2, 0
_0806C908: .4byte gBmSt
_0806C90C: .4byte 0x000001FF
_0806C910: .4byte gUnk_0866ACCC
_0806C914: .4byte 0x00002822
_0806C918:
	mov r4, r8
	adds r4, #0x64
	movs r0, #0
	ldrsh r2, [r4, r0]
	movs r0, #0
	movs r1, #0x10
	bl sub_806C76C
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	ble _0806C93C
	strh r7, [r4]
	mov r1, sb
	strh r1, [r6]
_0806C93C:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_806C948
sub_806C948: @ 0x0806C948
	adds r0, #0x64
	movs r1, #0x3c
	strh r1, [r0]
	bx lr

	thumb_func_start sub_806C950
sub_806C950: @ 0x0806C950
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0806C97E
	bl sub_80718E0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806C98A
	ldr r0, _0806C990 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0806C98A
_0806C97E:
	ldr r0, _0806C994 @ =gUnk_0866ACE8
	bl Proc_EndEach
	adds r0, r4, #0
	bl Proc_Break
_0806C98A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806C990: .4byte gKeySt
_0806C994: .4byte gUnk_0866ACE8

	thumb_func_start sub_806C998
sub_806C998: @ 0x0806C998
	push {r4, r5, lr}
	ldr r1, _0806C9E8 @ =0x0203D35D
	strb r0, [r1]
	ldr r5, _0806C9EC @ =gActiveUnit
	ldr r0, [r5]
	bl sub_802BA44
	ldr r4, _0806C9F0 @ =0x0203D35C
	bl CountTargets
	strb r0, [r4]
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806C9E0
	ldr r0, _0806C9F4 @ =gUnk_0866ACE8
	movs r1, #3
	bl SpawnProc
	movs r0, #0
	bl GetTarget
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r2, #1
	ldrsb r2, [r0, r2]
	movs r0, #0
	bl CameraMoveWatchPosition
	ldr r1, [r5]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	ldrb r1, [r1, #0xf]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl SetMapCursorPosition
_0806C9E0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806C9E8: .4byte 0x0203D35D
_0806C9EC: .4byte gActiveUnit
_0806C9F0: .4byte 0x0203D35C
_0806C9F4: .4byte gUnk_0866ACE8

	thumb_func_start sub_806C9F8
sub_806C9F8: @ 0x0806C9F8
	push {r4, lr}
	bl sub_80718E0
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	cmp r4, #0
	bne _0806CA0E
	ldr r0, _0806CA18 @ =gUnk_0866AD00
	movs r1, #3
	bl SpawnProc
_0806CA0E:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806CA18: .4byte gUnk_0866AD00

	thumb_func_start sub_806CA1C
sub_806CA1C: @ 0x0806CA1C
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x19
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CA30
sub_806CA30: @ 0x0806CA30
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x1a
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CA44
sub_806CA44: @ 0x0806CA44
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x1e
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CA58
sub_806CA58: @ 0x0806CA58
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x1f
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CA6C
sub_806CA6C: @ 0x0806CA6C
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x20
	movs r3, #0
	bl sub_8071B80
	movs r0, #0
	bl sub_806C998
	pop {r0}
	bx r0

	thumb_func_start sub_806CA84
sub_806CA84: @ 0x0806CA84
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x23
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CA98
sub_806CA98: @ 0x0806CA98
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x24
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CAAC
sub_806CAAC: @ 0x0806CAAC
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x25
	movs r3, #0
	bl sub_8071B80
	movs r0, #0
	bl sub_806C998
	pop {r0}
	bx r0

	thumb_func_start sub_806CAC4
sub_806CAC4: @ 0x0806CAC4
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x29
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CAD8
sub_806CAD8: @ 0x0806CAD8
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x2a
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CAEC
sub_806CAEC: @ 0x0806CAEC
	push {lr}
	movs r0, #0x28
	movs r1, #0x68
	movs r2, #0x2b
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB00
sub_806CB00: @ 0x0806CB00
	push {lr}
	movs r0, #0x10
	movs r1, #0x10
	movs r2, #0x2d
	movs r3, #0
	bl sub_8071B80
	movs r0, #1
	bl sub_806C998
	pop {r0}
	bx r0

	thumb_func_start sub_806CB18
sub_806CB18: @ 0x0806CB18
	push {lr}
	movs r0, #0x10
	movs r1, #0x38
	movs r2, #0x2e
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB2C
sub_806CB2C: @ 0x0806CB2C
	push {lr}
	movs r0, #0x10
	movs r1, #0x10
	movs r2, #0x30
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB40
sub_806CB40: @ 0x0806CB40
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x45
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB54
sub_806CB54: @ 0x0806CB54
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x1b
	movs r3, #0
	bl sub_8071B80
	movs r0, #0
	bl sub_806C998
	pop {r0}
	bx r0

	thumb_func_start sub_806CB6C
sub_806CB6C: @ 0x0806CB6C
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x40
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB80
sub_806CB80: @ 0x0806CB80
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x3f
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CB94
sub_806CB94: @ 0x0806CB94
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x3e
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CBA8
sub_806CBA8: @ 0x0806CBA8
	push {lr}
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x42
	movs r3, #0
	bl sub_8071B80
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806CBBC
sub_806CBBC: @ 0x0806CBBC
	push {lr}
	ldr r0, _0806CBD4 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0xd
	beq _0806CBEA
	cmp r0, #0xd
	bgt _0806CBD8
	cmp r0, #1
	beq _0806CBE2
	b _0806CC04
	.align 2, 0
_0806CBD4: .4byte gActiveUnit
_0806CBD8:
	cmp r0, #0x1b
	beq _0806CBE2
	cmp r0, #0x26
	beq _0806CBF8
	b _0806CC04
_0806CBE2:
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x1c
	b _0806CBF0
_0806CBEA:
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x21
_0806CBF0:
	movs r3, #0
	bl sub_8071B80
	b _0806CC04
_0806CBF8:
	movs r0, #0x10
	movs r1, #0x68
	movs r2, #0x26
	movs r3, #0
	bl sub_8071B80
_0806CC04:
	pop {r0}
	bx r0

	thumb_func_start sub_806CC08
sub_806CC08: @ 0x0806CC08
	movs r1, #0
	ldr r0, _0806CC1C @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #1
	bne _0806CC18
	movs r1, #1
_0806CC18:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_0806CC1C: .4byte gActiveUnit

	thumb_func_start sub_806CC20
sub_806CC20: @ 0x0806CC20
	movs r1, #0
	ldr r0, _0806CC34 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0xd
	bne _0806CC30
	movs r1, #1
_0806CC30:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_0806CC34: .4byte gActiveUnit

	thumb_func_start sub_806CC38
sub_806CC38: @ 0x0806CC38
	movs r1, #0
	ldr r0, _0806CC4C @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0x26
	bne _0806CC48
	movs r1, #1
_0806CC48:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_0806CC4C: .4byte gActiveUnit

	thumb_func_start sub_806CC50
sub_806CC50: @ 0x0806CC50
	movs r1, #0
	ldr r0, _0806CC64 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0x1b
	bne _0806CC60
	movs r1, #1
_0806CC60:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_0806CC64: .4byte gActiveUnit

	thumb_func_start sub_806CC68
sub_806CC68: @ 0x0806CC68
	ldr r0, _0806CC78 @ =0x0203D354
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0806CC7C
	movs r0, #0
	b _0806CC7E
	.align 2, 0
_0806CC78: .4byte 0x0203D354
_0806CC7C:
	movs r0, #1
_0806CC7E:
	bx lr

	thumb_func_start sub_806CC80
sub_806CC80: @ 0x0806CC80
	movs r1, #0
	ldr r0, _0806CC90 @ =gAction
	ldrb r0, [r0, #0x11]
	cmp r0, #2
	bne _0806CC8C
	movs r1, #1
_0806CC8C:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_0806CC90: .4byte gAction

	thumb_func_start sub_806CC94
sub_806CC94: @ 0x0806CC94
	push {lr}
	movs r0, #0x16
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CCAA
	ldr r0, _0806CCB0 @ =gAction
	ldrb r0, [r0, #0x11]
	cmp r0, #0xe
	beq _0806CCB4
_0806CCAA:
	movs r0, #0
	b _0806CCBC
	.align 2, 0
_0806CCB0: .4byte gAction
_0806CCB4:
	movs r0, #0x16
	bl SetEid
	movs r0, #1
_0806CCBC:
	pop {r1}
	bx r1

	thumb_func_start sub_806CCC0
sub_806CCC0: @ 0x0806CCC0
	movs r0, #0
	bx lr

	thumb_func_start sub_806CCC4
sub_806CCC4: @ 0x0806CCC4
	push {lr}
	movs r0, #0x12
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CCE4
	movs r0, #0x13
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CCE4
	movs r0, #0x12
	bl SetEid
_0806CCE4:
	pop {r0}
	bx r0

	thumb_func_start sub_806CCE8
sub_806CCE8: @ 0x0806CCE8
	push {r4, r5, r6, lr}
	movs r6, #1
_0806CCEC:
	adds r0, r6, #0
	bl GetUnit
	adds r5, r0, #0
	cmp r5, #0
	beq _0806CD26
	ldr r0, [r5]
	cmp r0, #0
	beq _0806CD26
	ldrb r0, [r0, #4]
	cmp r0, #1
	beq _0806CD10
	cmp r0, #0xd
	beq _0806CD10
	cmp r0, #0x26
	beq _0806CD10
	cmp r0, #0x1b
	bne _0806CD26
_0806CD10:
	adds r0, r5, #0
	bl GetUnitCurrentHp
	adds r4, r0, #0
	adds r0, r5, #0
	bl GetUnitMaxHp
	cmp r4, r0
	bge _0806CD26
	movs r0, #1
	b _0806CD2E
_0806CD26:
	adds r6, #1
	cmp r6, #0x3f
	ble _0806CCEC
	movs r0, #0
_0806CD2E:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_806CD34
sub_806CD34: @ 0x0806CD34
	push {r4, lr}
	movs r4, #1
_0806CD38:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _0806CD68
	ldr r1, [r0]
	cmp r1, #0
	beq _0806CD68
	ldrb r1, [r1, #4]
	cmp r1, #1
	beq _0806CD5A
	cmp r1, #0xd
	beq _0806CD5A
	cmp r1, #0x26
	beq _0806CD5A
	cmp r1, #0x1b
	bne _0806CD68
_0806CD5A:
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0x10
	ble _0806CD68
	movs r0, #1
	b _0806CD70
_0806CD68:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806CD38
	movs r0, #0
_0806CD70:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CD78
sub_806CD78: @ 0x0806CD78
	push {r4, lr}
	movs r4, #0x41
_0806CD7C:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _0806CD9C
	ldr r0, [r0]
	cmp r0, #0
	beq _0806CD9C
	ldr r0, [r0, #0x28]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0806CD9C
	movs r0, #0
	b _0806CDA4
_0806CD9C:
	adds r4, #1
	cmp r4, #0xbf
	ble _0806CD7C
	movs r0, #1
_0806CDA4:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CDAC
sub_806CDAC: @ 0x0806CDAC
	ldr r0, _0806CDB8 @ =gPlaySt
	ldrh r0, [r0, #0x10]
	cmp r0, #1
	bhi _0806CDBC
	movs r0, #0
	b _0806CDBE
	.align 2, 0
_0806CDB8: .4byte gPlaySt
_0806CDBC:
	movs r0, #1
_0806CDBE:
	bx lr

	thumb_func_start sub_806CDC0
sub_806CDC0: @ 0x0806CDC0
	push {lr}
	ldr r0, _0806CDD8 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, #0xd
	beq _0806CDEA
	cmp r0, #0xd
	bgt _0806CDDC
	cmp r0, #1
	beq _0806CDE6
	b _0806CDFA
	.align 2, 0
_0806CDD8: .4byte gActiveUnit
_0806CDDC:
	cmp r0, #0x1b
	beq _0806CDE6
	cmp r0, #0x26
	beq _0806CDEE
	b _0806CDFA
_0806CDE6:
	movs r0, #0xe
	b _0806CDF0
_0806CDEA:
	movs r0, #0xf
	b _0806CDF0
_0806CDEE:
	movs r0, #0x10
_0806CDF0:
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CE06
_0806CDFA:
	ldr r0, _0806CE0C @ =0x0203D358
	ldr r0, [r0]
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	bne _0806CE10
_0806CE06:
	movs r0, #0
	b _0806CE12
	.align 2, 0
_0806CE0C: .4byte 0x0203D358
_0806CE10:
	movs r0, #1
_0806CE12:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CE18
sub_806CE18: @ 0x0806CE18
	ldr r0, _0806CE2C @ =0x0203D358
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #8
	ands r0, r1
	cmp r0, #0
	bne _0806CE30
	movs r0, #0
	b _0806CE32
	.align 2, 0
_0806CE2C: .4byte 0x0203D358
_0806CE30:
	movs r0, #1
_0806CE32:
	bx lr

	thumb_func_start sub_806CE34
sub_806CE34: @ 0x0806CE34
	ldr r0, _0806CE48 @ =0x0203D358
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #9
	ands r0, r1
	cmp r0, #0
	bne _0806CE4C
	movs r0, #0
	b _0806CE4E
	.align 2, 0
_0806CE48: .4byte 0x0203D358
_0806CE4C:
	movs r0, #1
_0806CE4E:
	bx lr

	thumb_func_start sub_806CE50
sub_806CE50: @ 0x0806CE50
	push {lr}
	movs r0, #0x12
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CE78
	ldr r0, _0806CE70 @ =0x0203D358
	ldr r0, [r0]
	ldr r1, _0806CE74 @ =0x00018002
	ands r0, r1
	cmp r0, #0
	bne _0806CE78
	movs r0, #1
	b _0806CE7A
	.align 2, 0
_0806CE70: .4byte 0x0203D358
_0806CE74: .4byte 0x00018002
_0806CE78:
	movs r0, #0
_0806CE7A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CE80
sub_806CE80: @ 0x0806CE80
	push {lr}
	movs r0, #0x14
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CE9C
	ldr r0, _0806CEA0 @ =0x0203D358
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	ands r0, r1
	cmp r0, #0
	bne _0806CEA4
_0806CE9C:
	movs r0, #0
	b _0806CEA6
	.align 2, 0
_0806CEA0: .4byte 0x0203D358
_0806CEA4:
	movs r0, #1
_0806CEA6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CEAC
sub_806CEAC: @ 0x0806CEAC
	push {lr}
	movs r0, #0x15
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806CEC8
	ldr r0, _0806CECC @ =0x0203D358
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0806CED0
_0806CEC8:
	movs r0, #0
	b _0806CED2
	.align 2, 0
_0806CECC: .4byte 0x0203D358
_0806CED0:
	movs r0, #1
_0806CED2:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CED8
sub_806CED8: @ 0x0806CED8
	push {lr}
	movs r0, #2
	bl GetUnitByPid
	ldr r1, _0806CEEC @ =0x0000FFFD
	ldrh r2, [r0, #0xc]
	ands r1, r2
	strh r1, [r0, #0xc]
	pop {r0}
	bx r0
	.align 2, 0
_0806CEEC: .4byte 0x0000FFFD

	thumb_func_start sub_806CEF0
sub_806CEF0: @ 0x0806CEF0
	push {lr}
	ldr r0, _0806CF0C @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806CF34
	movs r0, #6
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF10
	movs r0, #1
	b _0806CF36
	.align 2, 0
_0806CF0C: .4byte gPlaySt
_0806CF10:
	movs r0, #5
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF22
	movs r0, #6
	bl SetEid
_0806CF22:
	movs r0, #4
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF34
	movs r0, #5
	bl SetEid
_0806CF34:
	movs r0, #0
_0806CF36:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CF3C
sub_806CF3C: @ 0x0806CF3C
	push {lr}
	ldr r0, _0806CF58 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0x80
	bne _0806CF80
	movs r0, #0xa
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF5C
	movs r0, #1
	b _0806CF82
	.align 2, 0
_0806CF58: .4byte gPlaySt
_0806CF5C:
	movs r0, #9
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF6E
	movs r0, #0xa
	bl SetEid
_0806CF6E:
	movs r0, #8
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806CF80
	movs r0, #9
	bl SetEid
_0806CF80:
	movs r0, #0
_0806CF82:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806CF88
sub_806CF88: @ 0x0806CF88
	push {lr}
	movs r0, #6
	movs r1, #1
	bl GetTrapAt
	adds r1, r0, #0
	cmp r1, #0
	beq _0806CF9C
	movs r0, #0xa
	strb r0, [r1, #3]
_0806CF9C:
	pop {r0}
	bx r0

	thumb_func_start sub_806CFA0
sub_806CFA0: @ 0x0806CFA0
	push {lr}
	ldr r0, _0806CFB0 @ =gMpi_MainBgm
	ldr r1, _0806CFB4 @ =0x0857B774
	bl MPlayStart
	pop {r0}
	bx r0
	.align 2, 0
_0806CFB0: .4byte gMpi_MainBgm
_0806CFB4: .4byte 0x0857B774

	thumb_func_start sub_806CFB8
sub_806CFB8: @ 0x0806CFB8
	push {lr}
	ldr r0, _0806CFC8 @ =gMpi_MainBgm
	ldr r1, _0806CFCC @ =0x0857C95C
	bl MPlayStart
	pop {r0}
	bx r0
	.align 2, 0
_0806CFC8: .4byte gMpi_MainBgm
_0806CFCC: .4byte 0x0857C95C

	thumb_func_start sub_806CFD0
sub_806CFD0: @ 0x0806CFD0
	push {lr}
	ldr r0, _0806CFE0 @ =gMpi_MainBgm
	ldr r1, _0806CFE4 @ =0x0857C1E4
	bl MPlayStart
	pop {r0}
	bx r0
	.align 2, 0
_0806CFE0: .4byte gMpi_MainBgm
_0806CFE4: .4byte 0x0857C1E4

	thumb_func_start sub_806CFE8
sub_806CFE8: @ 0x0806CFE8
	push {lr}
	ldr r0, _0806CFF8 @ =gMpi_MainBgm
	ldr r1, _0806CFFC @ =0x0857A61C
	bl MPlayStart
	pop {r0}
	bx r0
	.align 2, 0
_0806CFF8: .4byte gMpi_MainBgm
_0806CFFC: .4byte 0x0857A61C

	thumb_func_start sub_806D000
sub_806D000: @ 0x0806D000
	push {lr}
	ldr r0, _0806D018 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806D012
	movs r0, #0xc4
	bl m4aSongNumStart
_0806D012:
	pop {r0}
	bx r0
	.align 2, 0
_0806D018: .4byte gPlaySt

	thumb_func_start sub_806D01C
sub_806D01C: @ 0x0806D01C
	push {lr}
	movs r0, #0
	bl sub_80030B4
	pop {r0}
	bx r0

	thumb_func_start sub_806D028
sub_806D028: @ 0x0806D028
	push {lr}
	ldr r0, _0806D054 @ =gPlaySt
	ldrb r0, [r0, #0xf]
	cmp r0, #0
	bne _0806D050
	ldr r0, _0806D058 @ =gActiveUnit
	ldr r0, [r0]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #4]
	cmp r0, #0x34
	beq _0806D05C
	cmp r0, #0x35
	beq _0806D05C
	bl RandNextB
	movs r1, #0xb
	bl DivRem
	cmp r0, #0
	beq _0806D05C
_0806D050:
	movs r0, #0
	b _0806D05E
	.align 2, 0
_0806D054: .4byte gPlaySt
_0806D058: .4byte gActiveUnit
_0806D05C:
	movs r0, #1
_0806D05E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806D064
sub_806D064: @ 0x0806D064
	push {lr}
	movs r0, #0xf
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D078
	ldr r0, _0806D0D8 @ =0x00002710
	bl sub_806BFE4
_0806D078:
	movs r0, #0x10
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D092
	movs r0, #0x27
	bl sub_806C068
	movs r0, #0xfa
	lsls r0, r0, #5
	bl sub_806BFE4
_0806D092:
	movs r0, #0x11
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D0B0
	movs r0, #0x27
	bl sub_806C068
	movs r0, #0x27
	bl sub_806C068
	ldr r0, _0806D0DC @ =0x00001770
	bl sub_806BFE4
_0806D0B0:
	movs r0, #0x12
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D0D4
	movs r0, #0x27
	bl sub_806C068
	movs r0, #0x27
	bl sub_806C068
	movs r0, #0x27
	bl sub_806C068
	ldr r0, _0806D0E0 @ =0x00001388
	bl sub_806BFE4
_0806D0D4:
	pop {r0}
	bx r0
	.align 2, 0
_0806D0D8: .4byte 0x00002710
_0806D0DC: .4byte 0x00001770
_0806D0E0: .4byte 0x00001388

	thumb_func_start sub_806D0E4
sub_806D0E4: @ 0x0806D0E4
	push {lr}
	bl sub_8073324
	movs r0, #1
	bl GetUnitByPid
	movs r1, #0xf
	bl sub_8027DB4
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D0FC
sub_806D0FC: @ 0x0806D0FC
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	bl FindSupplyItem
	cmp r0, #0
	blt _0806D10C
_0806D108:
	movs r0, #1
	b _0806D14A
_0806D10C:
	movs r6, #1
_0806D10E:
	adds r0, r6, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806D142
	ldr r0, [r1]
	cmp r0, #0
	beq _0806D142
	movs r0, #4
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _0806D142
	movs r5, #0
	adds r4, r1, #0
	adds r4, #0x1c
_0806D130:
	ldrh r0, [r4]
	bl GetItemIid
	cmp r0, r7
	beq _0806D108
	adds r4, #2
	adds r5, #1
	cmp r5, #4
	ble _0806D130
_0806D142:
	adds r6, #1
	cmp r6, #0x3f
	ble _0806D10E
	movs r0, #0
_0806D14A:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_806D150
sub_806D150: @ 0x0806D150
	push {r4, lr}
	ldr r4, _0806D158 @ =gUnk_08672458
	b _0806D16E
	.align 2, 0
_0806D158: .4byte gUnk_08672458
_0806D15C:
	ldrb r0, [r4]
	bl sub_806D0FC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806D16C
	movs r0, #0
	b _0806D176
_0806D16C:
	adds r4, #1
_0806D16E:
	ldrb r0, [r4]
	cmp r0, #0
	bne _0806D15C
	movs r0, #1
_0806D176:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806D17C
sub_806D17C: @ 0x0806D17C
	push {lr}
	movs r0, #0x16
	movs r1, #0x17
	bl GetMapChangeIdAt
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl StartMapChangeEvent
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D194
sub_806D194: @ 0x0806D194
	push {r4, lr}
	movs r4, #0
_0806D198:
	adds r0, r4, #0
	adds r0, #0xd
	bl ClearEid
	adds r4, #1
	cmp r4, #4
	ble _0806D198
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806D1AC
sub_806D1AC: @ 0x0806D1AC
	push {r4, r5, lr}
	movs r5, #0
_0806D1B0:
	adds r4, r5, #0
	adds r4, #0xd
	adds r0, r4, #0
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806D1C8
	adds r0, r4, #0
	bl SetEid
	b _0806D1CE
_0806D1C8:
	adds r5, #1
	cmp r5, #4
	ble _0806D1B0
_0806D1CE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_806D1D4
sub_806D1D4: @ 0x0806D1D4
	ldr r0, _0806D1EC @ =0x0203D360
	movs r1, #0
	strb r1, [r0]
	ldr r0, _0806D1F0 @ =0x0203D361
	strb r1, [r0]
	ldr r0, _0806D1F4 @ =0x0203D362
	strb r1, [r0]
	ldr r1, _0806D1F8 @ =0x0203D364
	movs r0, #0
	strh r0, [r1]
	bx lr
	.align 2, 0
_0806D1EC: .4byte 0x0203D360
_0806D1F0: .4byte 0x0203D361
_0806D1F4: .4byte 0x0203D362
_0806D1F8: .4byte 0x0203D364

	thumb_func_start sub_806D1FC
sub_806D1FC: @ 0x0806D1FC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0x46
	movs r0, #4
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0806D21A
	bl EndTalk
_0806D216:
	movs r0, #0
	b _0806D34C
_0806D21A:
	bl IsTalkActive
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	cmp r4, #0
	beq _0806D228
	b _0806D34A
_0806D228:
	ldr r6, _0806D23C @ =0x0203D360
	ldrb r0, [r6]
	cmp r0, #1
	beq _0806D2C0
	cmp r0, #1
	bgt _0806D240
	cmp r0, #0
	beq _0806D246
	b _0806D34A
	.align 2, 0
_0806D23C: .4byte 0x0203D360
_0806D240:
	cmp r0, #2
	beq _0806D318
	b _0806D34A
_0806D246:
	movs r5, #1
	ldr r1, _0806D2B4 @ =0x0203D361
	ldrb r0, [r1]
	cmp r0, #0
	beq _0806D252
	adds r5, r0, #0
_0806D252:
	cmp r5, #0x3f
	bgt _0806D216
	ldr r0, _0806D2B8 @ =0x0203D362
	mov r8, r0
_0806D25A:
	adds r0, r5, #0
	bl GetUnit
	adds r4, r0, #0
	adds r6, r5, #1
	cmp r4, #0
	beq _0806D2AC
	ldr r1, [r4]
	cmp r1, #0
	beq _0806D2AC
	movs r0, #0xc
	ldrh r4, [r4, #0xc]
	ands r0, r4
	cmp r0, #0
	bne _0806D2AC
	ldrb r0, [r1, #4]
	mov r1, r8
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #1
	beq _0806D2AC
	ldr r0, _0806D2BC @ =gUnk_08666598
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _0806D2AC
	adds r4, r2, #0
	adds r2, r5, #0
	movs r3, #0
	adds r1, r5, #0
_0806D298:
	adds r0, r3, #0
	ldrb r7, [r1]
	cmp r4, r7
	beq _0806D2F0
	adds r2, #0x10
	adds r3, #0x10
	adds r1, #0x10
	ldrb r0, [r2]
	cmp r0, #0
	bne _0806D298
_0806D2AC:
	adds r5, r6, #0
	cmp r5, #0x3f
	ble _0806D25A
	b _0806D216
	.align 2, 0
_0806D2B4: .4byte 0x0203D361
_0806D2B8: .4byte 0x0203D362
_0806D2BC: .4byte gUnk_08666598
_0806D2C0:
	ldr r0, _0806D2EC @ =0x0203D362
	ldrb r0, [r0]
	bl GetUnitByPid
	adds r4, r0, #0
	movs r1, #0xe
	ldrsb r1, [r4, r1]
	movs r2, #0xf
	ldrsb r2, [r4, r2]
	adds r0, r5, #0
	bl CameraMoveWatchPosition
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	movs r1, #0xf
	ldrsb r1, [r4, r1]
	bl SetMapCursorPosition
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	b _0806D34A
	.align 2, 0
_0806D2EC: .4byte 0x0203D362
_0806D2F0:
	ldr r1, _0806D30C @ =0x0203D364
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r3, r0
	ldr r0, [r0]
	strh r0, [r1]
	ldr r0, _0806D310 @ =0x0203D361
	strb r6, [r0]
	ldr r1, _0806D314 @ =0x0203D360
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0806D34A
	.align 2, 0
_0806D30C: .4byte 0x0203D364
_0806D310: .4byte 0x0203D361
_0806D314: .4byte 0x0203D360
_0806D318:
	bl SetInitTalkTextFont
	bl ClearTalkText
	bl ClearPutTalkText
	bl ClearTalk
	ldr r0, _0806D358 @ =0x0203D364
	ldrh r0, [r0]
	bl DecodeMsg
	adds r2, r0, #0
	movs r0, #0xa
	movs r1, #0xe
	adds r3, r5, #0
	bl StartTalkExt
	movs r0, #1
	bl SetTalkPrintColor
	movs r0, #1
	bl SetActiveTalkFace
	strb r4, [r6]
_0806D34A:
	movs r0, #1
_0806D34C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806D358: .4byte 0x0203D364

	thumb_func_start sub_806D35C
sub_806D35C: @ 0x0806D35C
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #0x41
_0806D362:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806D380
	ldr r0, [r1]
	cmp r0, #0
	beq _0806D380
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0806D380
	adds r5, #1
_0806D380:
	adds r4, #1
	cmp r4, #0xbf
	ble _0806D362
	cmp r5, #2
	ble _0806D38E
	movs r0, #1
	b _0806D390
_0806D38E:
	movs r0, #0
_0806D390:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806D398
sub_806D398: @ 0x0806D398
	push {lr}
	bl RandNextB
	movs r1, #5
	bl DivRem
	cmp r0, #0
	beq _0806D3AC
	movs r0, #0
	b _0806D3AE
_0806D3AC:
	movs r0, #1
_0806D3AE:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806D3B4
sub_806D3B4: @ 0x0806D3B4
	push {r4, lr}
	bl sub_806D398
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D3D8
	ldr r0, _0806D3D4 @ =0x03004898
	ldrb r4, [r0, #3]
	adds r4, #4
	movs r0, #0x80
	bl sub_806C460
	cmp r4, r0
	beq _0806D3D8
	movs r0, #1
	b _0806D3DA
	.align 2, 0
_0806D3D4: .4byte 0x03004898
_0806D3D8:
	movs r0, #0
_0806D3DA:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806D3E0
sub_806D3E0: @ 0x0806D3E0
	push {r4, lr}
	ldr r4, _0806D404 @ =0x03004898
	ldrb r0, [r4, #2]
	adds r0, #1
	strb r0, [r4, #2]
	movs r0, #0x80
	bl sub_806C460
	strb r0, [r4, #3]
	bl sub_806BAA0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D408
	ldrb r4, [r4, #2]
	cmp r4, #0xa
	beq _0806D414
	b _0806D40E
	.align 2, 0
_0806D404: .4byte 0x03004898
_0806D408:
	ldrb r4, [r4, #2]
	cmp r4, #5
	beq _0806D414
_0806D40E:
	movs r0, #6
	bl ClearEid
_0806D414:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D41C
sub_806D41C: @ 0x0806D41C
	push {lr}
	movs r0, #0xa
	movs r1, #0x16
	movs r2, #1
	movs r3, #4
	bl AddFireTrap
	movs r0, #0xe
	movs r1, #0x15
	movs r2, #2
	movs r3, #3
	bl AddFireTrap
	movs r0, #0xe
	movs r1, #0x17
	movs r2, #2
	movs r3, #5
	bl AddFireTrap
	movs r0, #0x11
	movs r1, #0x16
	movs r2, #4
	movs r3, #2
	bl AddFireTrap
	movs r0, #0x13
	movs r1, #0x15
	movs r2, #4
	movs r3, #6
	bl AddFireTrap
	movs r0, #0x17
	movs r1, #0x12
	movs r2, #6
	movs r3, #4
	bl AddFireTrap
	movs r0, #0x19
	movs r1, #0x12
	movs r2, #6
	movs r3, #3
	bl AddFireTrap
	movs r0, #0x17
	movs r1, #0x10
	movs r2, #5
	movs r3, #3
	bl AddFireTrap
	movs r0, #0x18
	movs r1, #9
	movs r2, #5
	movs r3, #2
	bl AddFireTrap
	movs r0, #0x17
	movs r1, #8
	movs r2, #6
	movs r3, #5
	bl AddFireTrap
	movs r0, #0x19
	movs r1, #8
	movs r2, #5
	movs r3, #4
	bl AddFireTrap
	movs r0, #0x14
	movs r1, #1
	movs r2, #7
	movs r3, #5
	bl AddFireTrap
	movs r0, #0x13
	movs r1, #3
	movs r2, #6
	movs r3, #6
	bl AddFireTrap
	movs r0, #0xe
	movs r1, #8
	movs r2, #9
	movs r3, #2
	bl AddFireTrap
	movs r0, #0xf
	movs r1, #9
	movs r2, #3
	movs r3, #3
	bl AddFireTrap
	movs r0, #0xd
	movs r1, #9
	movs r2, #9
	movs r3, #4
	bl AddFireTrap
	movs r0, #0xe
	movs r1, #0xa
	movs r2, #0xb
	movs r3, #3
	bl AddFireTrap
	movs r0, #0xc
	movs r1, #0xc
	movs r2, #1
	movs r3, #5
	bl AddFireTrap
	movs r0, #0xb
	movs r1, #0xb
	movs r2, #1
	movs r3, #3
	bl AddFireTrap
	movs r0, #0xb
	movs r1, #0xd
	movs r2, #7
	movs r3, #3
	bl AddFireTrap
	movs r0, #9
	movs r1, #0xd
	movs r2, #8
	movs r3, #4
	bl AddFireTrap
	movs r0, #9
	movs r1, #0xb
	movs r2, #2
	movs r3, #4
	bl AddFireTrap
	movs r0, #8
	movs r1, #0xc
	movs r2, #6
	movs r3, #2
	bl AddFireTrap
	movs r0, #7
	movs r1, #0xb
	movs r2, #5
	movs r3, #3
	bl AddFireTrap
	movs r0, #7
	movs r1, #0xd
	movs r2, #4
	movs r3, #5
	bl AddFireTrap
	movs r0, #3
	movs r1, #0xa
	movs r2, #1
	movs r3, #3
	bl AddFireTrap
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D55C
sub_806D55C: @ 0x0806D55C
	ldr r1, _0806D564 @ =gPlaySt
	movs r0, #0x20
	strb r0, [r1, #0xe]
	bx lr
	.align 2, 0
_0806D564: .4byte gPlaySt

	thumb_func_start sub_806D568
sub_806D568: @ 0x0806D568
	push {r4, lr}
	sub sp, #4
	movs r4, #8
	str r4, [sp]
	movs r0, #1
	movs r1, #2
	movs r2, #2
	movs r3, #1
	bl AddGasTrap
	str r4, [sp]
	movs r0, #1
	movs r1, #0xe
	movs r2, #1
	movs r3, #7
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0xa
	movs r1, #7
	movs r2, #0
	movs r3, #2
	bl AddGasTrap
	str r4, [sp]
	movs r0, #8
	movs r1, #0xd
	movs r2, #1
	movs r3, #3
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0xb
	movs r1, #2
	movs r2, #2
	movs r3, #5
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0xd
	movs r1, #0xd
	movs r2, #2
	movs r3, #4
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0xe
	movs r1, #0x11
	movs r2, #3
	movs r3, #1
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0xf
	movs r1, #1
	movs r2, #3
	movs r3, #5
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0x14
	movs r1, #0x12
	movs r2, #0
	movs r3, #2
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0x15
	movs r1, #9
	movs r2, #0
	movs r3, #6
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0x17
	movs r1, #0xc
	movs r2, #1
	movs r3, #3
	bl AddGasTrap
	str r4, [sp]
	movs r0, #0x17
	movs r1, #0x14
	movs r2, #1
	movs r3, #7
	bl AddGasTrap
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D620
sub_806D620: @ 0x0806D620
	push {r4, r5, lr}
	movs r4, #0
	ldr r5, _0806D644 @ =gUnk_0867507C
_0806D626:
	adds r0, r4, #0
	adds r0, #0x1a
	ldr r2, [r5]
	ldr r3, [r5, #4]
	adds r1, r4, #0
	bl sub_8026BA4
	adds r5, #8
	adds r4, #1
	cmp r4, #0x19
	ble _0806D626
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806D644: .4byte gUnk_0867507C

	thumb_func_start sub_806D648
sub_806D648: @ 0x0806D648
	push {lr}
	movs r0, #0xe
	movs r1, #3
	movs r2, #5
	bl AddArrowTrap
	movs r0, #6
	movs r1, #1
	movs r2, #9
	bl AddArrowTrap
	movs r0, #8
	movs r1, #4
	movs r2, #9
	bl AddArrowTrap
	movs r0, #4
	movs r1, #7
	movs r2, #9
	bl AddArrowTrap
	movs r0, #0xd
	movs r1, #8
	movs r2, #9
	bl AddArrowTrap
	movs r0, #0x10
	movs r1, #3
	movs r2, #5
	bl AddArrowTrap
	movs r0, #0x18
	movs r1, #2
	movs r2, #9
	bl AddArrowTrap
	movs r0, #0x1a
	movs r1, #5
	movs r2, #9
	bl AddArrowTrap
	movs r0, #0x16
	movs r1, #9
	movs r2, #9
	bl AddArrowTrap
	movs r0, #0x11
	movs r1, #6
	movs r2, #9
	bl AddArrowTrap
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D6B4
sub_806D6B4: @ 0x0806D6B4
	push {r4, lr}
	ldr r4, _0806D6D4 @ =gUnk_08675750
	bl RandNextB
	movs r1, #6
	bl DivRem
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r0, [r0]
	bl SetEid
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806D6D4: .4byte gUnk_08675750

	thumb_func_start sub_806D6D8
sub_806D6D8: @ 0x0806D6D8
	push {lr}
	movs r0, #6
	movs r1, #6
	bl sub_8026BC0
	movs r0, #7
	movs r1, #8
	bl sub_8026BC0
	movs r0, #6
	movs r1, #0xa
	bl sub_8026BC0
	movs r0, #7
	movs r1, #0xd
	bl sub_8026BC0
	movs r0, #6
	movs r1, #0xf
	bl sub_8026BC0
	movs r0, #7
	movs r1, #0x11
	bl sub_8026BC0
	movs r0, #0x18
	movs r1, #6
	bl sub_8026BC0
	movs r0, #0x17
	movs r1, #8
	bl sub_8026BC0
	movs r0, #0x18
	movs r1, #0xa
	bl sub_8026BC0
	movs r0, #0x17
	movs r1, #0xd
	bl sub_8026BC0
	movs r0, #0x18
	movs r1, #0x10
	bl sub_8026BC0
	movs r0, #0x17
	movs r1, #0x11
	bl sub_8026BC0
	movs r0, #0xc
	movs r1, #0xe
	movs r2, #3
	bl sub_8026BD0
	movs r0, #0x12
	movs r1, #0xe
	movs r2, #3
	bl sub_8026BD0
	movs r0, #0xa
	movs r1, #7
	movs r2, #1
	bl sub_8026BD0
	movs r0, #0x14
	movs r1, #7
	movs r2, #0
	bl sub_8026BD0
	movs r0, #0xe
	movs r1, #7
	movs r2, #1
	bl sub_8026BD0
	movs r0, #0x10
	movs r1, #7
	movs r2, #0
	bl sub_8026BD0
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D77C
sub_806D77C: @ 0x0806D77C
	push {r4, r5, r6, r7, lr}
	movs r6, #0
	movs r5, #0
	ldr r7, _0806D7BC @ =gUnk_08675B90
_0806D784:
	adds r0, r6, #0
	movs r1, #6
	bl __modsi3
	lsls r0, r0, #2
	adds r4, r0, r7
	ldr r0, [r4]
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806D7B6
	bl RandNextB
	movs r1, #0xb
	bl DivRem
	cmp r0, #0
	bne _0806D7B6
	ldr r0, [r4]
	bl SetEid
	adds r5, #1
	cmp r5, #3
	beq _0806D7C0
_0806D7B6:
	adds r6, #1
	b _0806D784
	.align 2, 0
_0806D7BC: .4byte gUnk_08675B90
_0806D7C0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D7C8
sub_806D7C8: @ 0x0806D7C8
	push {lr}
	bl sub_8013A64
	movs r0, #1
	bl SetNextGameAction
	ldr r0, _0806D7E0 @ =gUnk_08676220
	movs r1, #4
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806D7E0: .4byte gUnk_08676220

	thumb_func_start sub_806D7E4
sub_806D7E4: @ 0x0806D7E4
	ldr r1, _0806D7F0 @ =gPlaySt
	movs r0, #3
	ldrb r2, [r1, #0x1e]
	orrs r0, r2
	strb r0, [r1, #0x1e]
	bx lr
	.align 2, 0
_0806D7F0: .4byte gPlaySt

	thumb_func_start sub_806D7F4
sub_806D7F4: @ 0x0806D7F4
	ldr r1, _0806D804 @ =gPlaySt
	movs r0, #4
	rsbs r0, r0, #0
	ldrb r2, [r1, #0x1e]
	ands r0, r2
	strb r0, [r1, #0x1e]
	bx lr
	.align 2, 0
_0806D804: .4byte gPlaySt

	thumb_func_start sub_806D808
sub_806D808: @ 0x0806D808
	push {lr}
	bl InitUnits
	bl ClearTalk
	movs r0, #1
	bl Proc_EndEachMarked
	pop {r0}
	bx r0

	thumb_func_start sub_806D81C
sub_806D81C: @ 0x0806D81C
	push {lr}
	ldr r0, _0806D828 @ =gUnk_08676220
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0806D828: .4byte gUnk_08676220

	thumb_func_start sub_806D82C
sub_806D82C: @ 0x0806D82C
	push {lr}
	adds r2, r0, #0
	ldr r0, _0806D848 @ =gKeySt
	ldr r1, [r0]
	ldr r0, _0806D84C @ =0x0000030B
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0806D844
	adds r0, r2, #0
	bl Proc_Break
_0806D844:
	pop {r0}
	bx r0
	.align 2, 0
_0806D848: .4byte gKeySt
_0806D84C: .4byte 0x0000030B

	thumb_func_start sub_806D850
sub_806D850: @ 0x0806D850
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	bl SetNextGameAction
	adds r4, #0x4c
	movs r0, #0x1f
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806D868
sub_806D868: @ 0x0806D868
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x4c
	movs r0, #0
	ldrsh r1, [r4, r0]
	movs r0, #0x20
	subs r0, r0, r1
	bl DarkenPals
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0806D88E
	adds r0, r5, #0
	bl Proc_Break
_0806D88E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_806D894
sub_806D894: @ 0x0806D894
	push {lr}
	movs r0, #0
	bl CleanupGame
	bl SyncHiOam
	bl sub_806D808
	bl sub_806D81C
	bl KillTalkAndEvent
	pop {r0}
	bx r0

	thumb_func_start sub_806D8B0
sub_806D8B0: @ 0x0806D8B0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r2, _0806D994 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl ResetText
	bl ResetTextFont
	bl InitTalkTextFont
	ldr r0, _0806D998 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	movs r0, #0
	str r0, [sp]
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	ldr r2, _0806D99C @ =0x01000008
	mov r0, sp
	bl CpuFastSet
	ldr r0, _0806D9A0 @ =gUnk_08677FE0
	movs r1, #3
	bl SpawnProc
	adds r6, r0, #0
	movs r5, #0
	ldr r1, _0806D9A4 @ =gUnk_0867619C
	mov r8, r1
_0806D91C:
	lsls r4, r5, #3
	ldr r0, _0806D9A8 @ =0x0203D370
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #0x18
	bl InitText
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	lsls r1, r5, #2
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r0, r1
	str r4, [r0]
	lsls r1, r5, #1
	ldr r7, _0806D9AC @ =0x0203D36C
	ldr r0, [r7]
	lsls r0, r0, #2
	add r0, r8
	ldrb r0, [r0, #2]
	adds r1, r0, r1
	lsls r1, r1, #6
	ldr r0, _0806D9B0 @ =gBg0Tm+0x6
	adds r1, r1, r0
	adds r0, r4, #0
	bl PutText
	adds r5, #1
	cmp r5, #5
	ble _0806D91C
	movs r1, #0
	str r1, [r6, #0x30]
	adds r0, r6, #0
	adds r0, #0x5c
	strh r1, [r0]
	ldr r1, _0806D9A4 @ =gUnk_0867619C
	ldr r0, [r7]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	bl DecodeMsg
	str r0, [r6, #0x2c]
	ldr r0, [r7]
	adds r0, #1
	str r0, [r7]
	movs r0, #1
	bl EnableBgSync
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806D994: .4byte gDispIo
_0806D998: .4byte gBg0Tm
_0806D99C: .4byte 0x01000008
_0806D9A0: .4byte gUnk_08677FE0
_0806D9A4: .4byte gUnk_0867619C
_0806D9A8: .4byte 0x0203D370
_0806D9AC: .4byte 0x0203D36C
_0806D9B0: .4byte gBg0Tm+0x6

	thumb_func_start sub_806D9B4
sub_806D9B4: @ 0x0806D9B4
	push {lr}
	sub sp, #4
	ldr r2, _0806D9E8 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	str r0, [sp]
	ldr r1, _0806D9EC @ =0x06006000
	ldr r2, _0806D9F0 @ =0x01000800
	mov r0, sp
	bl CpuFastSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0806D9E8: .4byte gDispIo
_0806D9EC: .4byte 0x06006000
_0806D9F0: .4byte 0x01000800

	thumb_func_start sub_806D9F4
sub_806D9F4: @ 0x0806D9F4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	mov r8, r0
	adds r5, r1, #0
	adds r6, r2, #0
	bl InitUnits
	ldr r4, _0806DA4C @ =gPlaySt
	mov r0, r8
	strb r0, [r4, #0xe]
	bl sub_8029084
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	ldrb r0, [r0, #0xc]
	strb r0, [r4, #0xd]
	lsls r5, r5, #4
	adds r5, #8
	adds r0, r5, #0
	bl GetCameraCenteredX
	ldr r4, _0806DA50 @ =gBmSt
	strh r0, [r4, #0xc]
	lsls r6, r6, #4
	adds r6, #8
	adds r0, r6, #0
	bl GetCameraCenteredY
	strh r0, [r4, #0xe]
	bl RefreshEntityMaps
	bl RenderMap
	bl RefreshUnitSprites
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806DA4C: .4byte gPlaySt
_0806DA50: .4byte gBmSt

	thumb_func_start sub_806DA54
sub_806DA54: @ 0x0806DA54
	push {r4, lr}
	movs r0, #4
	movs r1, #0xb
	movs r2, #0xb
	bl sub_806D9F4
	ldr r4, _0806DA88 @ =gPal+0x160
	adds r1, r4, #0
	subs r1, #0xa0
	adds r0, r4, #0
	movs r2, #0x28
	bl CpuFastSet
	ldr r0, _0806DA8C @ =0xFFFFFEA0
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #0x1a
	movs r2, #6
	movs r3, #8
	bl sub_805B644
	bl EnablePalSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DA88: .4byte gPal+0x160
_0806DA8C: .4byte 0xFFFFFEA0

	thumb_func_start sub_806DA90
sub_806DA90: @ 0x0806DA90
	push {lr}
	movs r0, #1
	movs r1, #7
	movs r2, #5
	bl sub_806D9F4
	pop {r0}
	bx r0

	thumb_func_start sub_806DAA0
sub_806DAA0: @ 0x0806DAA0
	push {lr}
	movs r0, #0xa
	movs r1, #0
	movs r2, #0x14
	bl sub_806D9F4
	pop {r0}
	bx r0

	thumb_func_start sub_806DAB0
sub_806DAB0: @ 0x0806DAB0
	push {lr}
	movs r0, #2
	movs r1, #7
	movs r2, #0xa
	bl sub_806D9F4
	pop {r0}
	bx r0

	thumb_func_start sub_806DAC0
sub_806DAC0: @ 0x0806DAC0
	push {lr}
	movs r0, #0x16
	movs r1, #0xf
	movs r2, #9
	bl sub_806D9F4
	pop {r0}
	bx r0

	thumb_func_start sub_806DAD0
sub_806DAD0: @ 0x0806DAD0
	push {r4, lr}
	movs r0, #1
	bl GetUnitByPid
	adds r4, r0, #0
	bl GetUnitCurrentHp
	adds r1, r0, #0
	subs r1, #0xa
	adds r0, r4, #0
	bl SetUnitHp
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806DAF0
sub_806DAF0: @ 0x0806DAF0
	ldr r0, _0806DAFC @ =gUnk_08676738
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	bx lr
	.align 2, 0
_0806DAFC: .4byte gUnk_08676738

	thumb_func_start sub_806DB00
sub_806DB00: @ 0x0806DB00
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _0806DB20 @ =gUnk_08676738
	lsls r0, r4, #2
	adds r0, r0, r2
	ldr r0, [r0]
	bl StartEventLocking
	ldr r0, _0806DB24 @ =0x0203D368
	str r4, [r0]
	ldr r1, _0806DB28 @ =0x0203D36C
	movs r0, #0
	str r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DB20: .4byte gUnk_08676738
_0806DB24: .4byte 0x0203D368
_0806DB28: .4byte 0x0203D36C

	thumb_func_start sub_806DB2C
sub_806DB2C: @ 0x0806DB2C
	push {lr}
	movs r0, #1
	bl Proc_EndEachMarked
	pop {r0}
	bx r0

	thumb_func_start sub_806DB38
sub_806DB38: @ 0x0806DB38
	push {lr}
	bl GetGameTime
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0806DB50
	ldr r1, _0806DB54 @ =gBmSt
	movs r0, #2
	ldrh r2, [r1, #0xc]
	eors r0, r2
	strh r0, [r1, #0xc]
_0806DB50:
	pop {r0}
	bx r0
	.align 2, 0
_0806DB54: .4byte gBmSt

	thumb_func_start sub_806DB58
sub_806DB58: @ 0x0806DB58
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0806DB7C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806DB6C
	ldr r0, _0806DB80 @ =0x0000026A
	bl m4aSongNumStart
_0806DB6C:
	ldr r0, _0806DB84 @ =gUnk_08676844
	adds r1, r4, #0
	bl SpawnProc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DB7C: .4byte gPlaySt
_0806DB80: .4byte 0x0000026A
_0806DB84: .4byte gUnk_08676844

	thumb_func_start sub_806DB88
sub_806DB88: @ 0x0806DB88
	push {lr}
	ldr r0, _0806DB9C @ =gUnk_08676844
	bl Proc_EndEach
	movs r0, #4
	bl sub_80030B4
	pop {r0}
	bx r0
	.align 2, 0
_0806DB9C: .4byte gUnk_08676844

	thumb_func_start sub_806DBA0
sub_806DBA0: @ 0x0806DBA0
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_806DBA8
sub_806DBA8: @ 0x0806DBA8
	push {r4, lr}
	adds r4, r0, #0
	bl GetGameTime
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0806DBDA
	ldr r1, _0806DC20 @ =gBmSt
	movs r0, #2
	ldrh r2, [r1, #0xc]
	eors r0, r2
	strh r0, [r1, #0xc]
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #5
	ble _0806DBDA
	adds r0, r4, #0
	bl Proc_Break
_0806DBDA:
	ldr r4, _0806DC20 @ =gBmSt
	ldrh r0, [r4, #0x24]
	lsls r1, r0, #4
	ldrh r2, [r4, #0xc]
	subs r1, r2, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r0, [r4, #0x26]
	lsls r2, r0, #4
	ldrh r0, [r4, #0xe]
	subs r2, r0, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	bl SetBgOffset
	ldrh r2, [r4, #0x24]
	lsls r1, r2, #4
	ldrh r0, [r4, #0xc]
	subs r1, r0, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r0, [r4, #0x26]
	lsls r2, r0, #4
	ldrh r4, [r4, #0xe]
	subs r2, r4, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #3
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DC20: .4byte gBmSt

	thumb_func_start sub_806DC24
sub_806DC24: @ 0x0806DC24
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806DC34 @ =gUnk_08676854
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806DC34: .4byte gUnk_08676854

	thumb_func_start sub_806DC38
sub_806DC38: @ 0x0806DC38
	push {lr}
	ldr r0, _0806DC44 @ =gUnk_08676854
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0806DC44: .4byte gUnk_08676854

	thumb_func_start sub_806DC48
sub_806DC48: @ 0x0806DC48
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_806DC50
sub_806DC50: @ 0x0806DC50
	push {r4, lr}
	adds r4, r0, #0
	bl GetGameTime
	movs r1, #7
	ands r1, r0
	cmp r1, #0
	bne _0806DC8A
	adds r0, r4, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r2, r1, #1
	strh r2, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #0xb
	ble _0806DC78
	adds r0, r4, #0
	bl Proc_Break
_0806DC78:
	movs r3, #1
	rsbs r3, r3, #0
	movs r0, #0
	movs r1, #0x20
	movs r2, #0x20
	bl sub_8001E68
	bl sub_80024A4
_0806DC8A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806DC90
sub_806DC90: @ 0x0806DC90
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806DCA0 @ =gUnk_0867686C
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806DCA0: .4byte gUnk_0867686C

	thumb_func_start sub_806DCA4
sub_806DCA4: @ 0x0806DCA4
	push {r4, lr}
	sub sp, #8
	movs r0, #0
	bl InitBgs
	ldr r2, _0806DCF8 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r4, #0
	str r4, [sp]
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	ldr r2, _0806DCFC @ =0x01000008
	mov r0, sp
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _0806DD00 @ =0x06006000
	ldr r2, _0806DD04 @ =0x01000800
	bl CpuFastSet
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DCF8: .4byte gDispIo
_0806DCFC: .4byte 0x01000008
_0806DD00: .4byte 0x06006000
_0806DD04: .4byte 0x01000800

	thumb_func_start sub_806DD08
sub_806DD08: @ 0x0806DD08
	push {r4, r5, lr}
	sub sp, #8
	ldr r2, _0806DD74 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _0806DD78 @ =gBg0Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	bl ResetText
	bl InitTalkTextFont
	ldr r5, _0806DD7C @ =0x0203D3A0
	adds r0, r5, #0
	movs r1, #0xe
	bl InitText
	ldr r0, _0806DD80 @ =0x0000024A
	bl DecodeMsg
	movs r1, #0x94
	lsls r1, r1, #2
	adds r4, r4, r1
	movs r1, #0
	str r1, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806DD74: .4byte gDispIo
_0806DD78: .4byte gBg0Tm
_0806DD7C: .4byte 0x0203D3A0
_0806DD80: .4byte 0x0000024A

	thumb_func_start sub_806DD84
sub_806DD84: @ 0x0806DD84
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806DD94 @ =gUnk_0867688C
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806DD94: .4byte gUnk_0867688C

	thumb_func_start sub_806DD98
sub_806DD98: @ 0x0806DD98
	push {lr}
	ldr r0, _0806DDB4 @ =gUnk_0867688C
	bl Proc_Find
	cmp r0, #0
	bne _0806DDBC
	ldr r0, _0806DDB8 @ =gUnk_08677FE0
	bl Proc_EndEach
	bl sub_806DCA4
	movs r0, #0
	b _0806DDBE
	.align 2, 0
_0806DDB4: .4byte gUnk_0867688C
_0806DDB8: .4byte gUnk_08677FE0
_0806DDBC:
	movs r0, #1
_0806DDBE:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806DDC4
sub_806DDC4: @ 0x0806DDC4
	adds r0, #0x44
	movs r1, #0xff
	strb r1, [r0]
	bx lr

	thumb_func_start sub_806DDCC
sub_806DDCC: @ 0x0806DDCC
	adds r0, #0x45
	movs r1, #1
	strb r1, [r0]
	bx lr

	thumb_func_start sub_806DDD4
sub_806DDD4: @ 0x0806DDD4
	push {lr}
	movs r0, #0
	bl SetWeather
	pop {r0}
	bx r0

	thumb_func_start sub_806DDE0
sub_806DDE0: @ 0x0806DDE0
	push {lr}
	ldr r0, _0806DDFC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806DDF2
	movs r0, #0xc4
	bl m4aSongNumStart
_0806DDF2:
	movs r0, #6
	bl SetWeather
	pop {r0}
	bx r0
	.align 2, 0
_0806DDFC: .4byte gPlaySt

	thumb_func_start sub_806DE00
sub_806DE00: @ 0x0806DE00
	push {lr}
	ldr r0, _0806DE18 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806DE12
	ldr r0, _0806DE1C @ =0x00000269
	bl m4aSongNumStart
_0806DE12:
	pop {r0}
	bx r0
	.align 2, 0
_0806DE18: .4byte gPlaySt
_0806DE1C: .4byte 0x00000269

	thumb_func_start sub_806DE20
sub_806DE20: @ 0x0806DE20
	push {lr}
	ldr r0, _0806DE38 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806DE32
	ldr r0, _0806DE3C @ =0x00000269
	bl m4aSongNumStart
_0806DE32:
	pop {r0}
	bx r0
	.align 2, 0
_0806DE38: .4byte gPlaySt
_0806DE3C: .4byte 0x00000269

	thumb_func_start sub_806DE40
sub_806DE40: @ 0x0806DE40
	push {lr}
	ldr r0, _0806DE58 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806DE52
	movs r0, #0x6a
	bl m4aSongNumStart
_0806DE52:
	pop {r0}
	bx r0
	.align 2, 0
_0806DE58: .4byte gPlaySt

	thumb_func_start sub_806DE5C
sub_806DE5C: @ 0x0806DE5C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x43
	movs r1, #0
	bl StartBgm
	adds r4, #0x64
	ldr r0, _0806DE74 @ =0x000044C0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DE74: .4byte 0x000044C0

	thumb_func_start sub_806DE78
sub_806DE78: @ 0x0806DE78
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806DE9A
	movs r0, #0x34
	movs r1, #0
	bl StartBgm
	adds r0, r4, #0
	bl Proc_Break
_0806DE9A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806DEA0
sub_806DEA0: @ 0x0806DEA0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806DEB0 @ =gUnk_086768C4
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806DEB0: .4byte gUnk_086768C4

	thumb_func_start sub_806DEB4
sub_806DEB4: @ 0x0806DEB4
	push {lr}
	ldr r0, _0806DEC0 @ =gUnk_086768C4
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0806DEC0: .4byte gUnk_086768C4

	thumb_func_start sub_806DEC4
sub_806DEC4: @ 0x0806DEC4
	push {r4, lr}
	ldr r0, _0806DEEC @ =sub_806C1B4
	cmp r0, #0
	beq _0806DEF0
	movs r0, #1
	bl GetUnitByPid
	adds r4, r0, #0
	movs r1, #0x26
	bl GetUnitSupportNumByPid
	adds r1, r0, #0
	adds r0, r4, #0
	bl GetUnitSupportLevel
	cmp r0, #2
	ble _0806DEF0
	movs r0, #1
	b _0806DEF2
	.align 2, 0
_0806DEEC: .4byte sub_806C1B4
_0806DEF0:
	movs r0, #0
_0806DEF2:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_806DEF8
sub_806DEF8: @ 0x0806DEF8
	push {lr}
	bl RenderMapForFade
	ldr r1, _0806DF14 @ =gPlaySt
	movs r0, #0
	strb r0, [r1, #0xd]
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	bl RenderMap
	pop {r0}
	bx r0
	.align 2, 0
_0806DF14: .4byte gPlaySt

	thumb_func_start sub_806DF18
sub_806DF18: @ 0x0806DF18
	push {r4, lr}
	adds r4, r0, #0
	adds r4, #0x64
	movs r0, #1
	strh r0, [r4]
	movs r0, #0x7b
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806DF34
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_0806DF34:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806DF3C
sub_806DF3C: @ 0x0806DF3C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
_0806DF40:
	bl CanStartMu
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806DF8E
	adds r5, r6, #0
	adds r5, #0x64
	movs r1, #0
	ldrsh r0, [r5, r1]
	bl GetNextAvailableBlueUnitId
	strh r0, [r5]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0806DF88
	ldr r4, [r6, #0x4c]
	movs r1, #0
	ldrsh r0, [r5, r1]
	bl GetUnit
	adds r1, r0, #0
	ldr r0, _0806DF84 @ =gBmSt
	ldrh r0, [r0, #0xc]
	lsls r3, r0, #0x10
	asrs r3, r3, #0x14
	adds r3, #0xd
	adds r0, r4, #0
	movs r2, #8
	bl TryMoveUnitDisplayed
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0806DF40
	.align 2, 0
_0806DF84: .4byte gBmSt
_0806DF88:
	adds r0, r6, #0
	bl Proc_Break
_0806DF8E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_806DF94
sub_806DF94: @ 0x0806DF94
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0806DFA8 @ =gUnk_086768DC
	adds r1, r4, #0
	bl SpawnProc
	str r4, [r0, #0x4c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806DFA8: .4byte gUnk_086768DC

	thumb_func_start sub_806DFAC
sub_806DFAC: @ 0x0806DFAC
	push {lr}
	ldr r0, _0806DFC0 @ =gUnk_086768DC
	bl Proc_Find
	cmp r0, #0
	beq _0806DFBA
	movs r0, #1
_0806DFBA:
	pop {r1}
	bx r1
	.align 2, 0
_0806DFC0: .4byte gUnk_086768DC

	thumb_func_start sub_806DFC4
sub_806DFC4: @ 0x0806DFC4
	adds r0, #0x64
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_806DFD0
sub_806DFD0: @ 0x0806DFD0
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_806DFD8
sub_806DFD8: @ 0x0806DFD8
	push {r4, lr}
	adds r1, r0, #0
	adds r4, r1, #0
	adds r4, #0x64
	ldrh r0, [r4]
	subs r0, #3
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _0806DFF6
	movs r0, #0
	strh r0, [r4]
	adds r0, r1, #0
	bl Proc_Break
_0806DFF6:
	movs r1, #0
	ldrsh r0, [r4, r1]
	bl SetBgmVolume
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806E004
sub_806E004: @ 0x0806E004
	push {r4, lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x66
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _0806E03A
	adds r4, r2, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	ble _0806E032
	adds r0, r2, #0
	bl Proc_Break
_0806E032:
	movs r1, #0
	ldrsh r0, [r4, r1]
	bl SetBgmVolume
_0806E03A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_806E040
sub_806E040: @ 0x0806E040
	push {lr}
	movs r0, #0
	bl sub_80030B4
	pop {r0}
	bx r0

	thumb_func_start sub_806E04C
sub_806E04C: @ 0x0806E04C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806E05C @ =gUnk_086768FC
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E05C: .4byte gUnk_086768FC

	thumb_func_start sub_806E060
sub_806E060: @ 0x0806E060
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806E070 @ =gUnk_08676914
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_0806E070: .4byte gUnk_08676914

	thumb_func_start sub_806E074
sub_806E074: @ 0x0806E074
	push {r4, r5, lr}
	movs r4, #0
	ldr r0, _0806E0B4 @ =0x0000FFF4
	adds r5, r0, #0
_0806E07C:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806E09E
	ldr r0, [r1]
	cmp r0, #0
	beq _0806E09E
	ldrh r2, [r1, #0xc]
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	bne _0806E09E
	adds r0, r2, #0
	ands r0, r5
	strh r0, [r1, #0xc]
_0806E09E:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806E07C
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806E0B4: .4byte 0x0000FFF4

	thumb_func_start sub_806E0B8
sub_806E0B8: @ 0x0806E0B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r6, #1
	movs r4, #1
	movs r0, #1
	rsbs r0, r0, #0
	mov sb, r0
	ldr r1, _0806E10C @ =gUnk_0867692C
	mov r8, r1
_0806E0D0:
	adds r0, r4, #0
	bl GetUnit
	adds r2, r0, #0
	adds r7, r4, #1
	mov ip, r7
	cmp r2, #0
	beq _0806E154
	ldr r1, [r2]
	cmp r1, #0
	beq _0806E154
	ldrh r3, [r2, #0xc]
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	bne _0806E154
	ldrb r1, [r1, #4]
	cmp r1, #1
	bne _0806E114
	ldr r1, _0806E110 @ =0x0000FFF6
	adds r0, r1, #0
	ands r0, r3
	strh r0, [r2, #0xc]
	mov r7, r8
	ldrb r0, [r7]
	strb r0, [r2, #0xe]
	ldrb r0, [r7, #1]
	strb r0, [r2, #0xf]
	b _0806E154
	.align 2, 0
_0806E10C: .4byte gUnk_0867692C
_0806E110: .4byte 0x0000FFF6
_0806E114:
	ldr r1, _0806E170 @ =0x0203DCA7
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, sb
	beq _0806E154
	ldr r0, _0806E174 @ =0x0000FFF6
	mov sl, r0
	movs r5, #1
	rsbs r5, r5, #0
	adds r3, r1, #0
	lsls r0, r6, #2
	mov r7, r8
	adds r1, r0, r7
_0806E12E:
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, r4
	bne _0806E14A
	mov r0, sl
	ldrh r7, [r2, #0xc]
	ands r0, r7
	strh r0, [r2, #0xc]
	ldrb r0, [r1]
	strb r0, [r2, #0xe]
	ldrb r0, [r1, #1]
	strb r0, [r2, #0xf]
	adds r1, #4
	adds r6, #1
_0806E14A:
	adds r3, #1
	movs r0, #0
	ldrsb r0, [r3, r0]
	cmp r0, r5
	bne _0806E12E
_0806E154:
	mov r4, ip
	cmp r4, #0x3f
	ble _0806E0D0
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E170: .4byte 0x0203DCA7
_0806E174: .4byte 0x0000FFF6

	thumb_func_start sub_806E178
sub_806E178: @ 0x0806E178
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r5, #1
	movs r0, #1
	rsbs r0, r0, #0
	mov sb, r0
	ldr r7, _0806E1CC @ =gUnk_0867695C
	adds r6, r7, #0
	adds r6, #8
	ldr r1, _0806E1D0 @ =0x0000FFF6
	mov r8, r1
_0806E192:
	adds r0, r5, #0
	bl GetUnit
	adds r2, r0, #0
	adds r0, r5, #1
	mov ip, r0
	cmp r2, #0
	beq _0806E224
	ldr r3, [r2]
	cmp r3, #0
	beq _0806E224
	ldrh r1, [r2, #0xc]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0806E224
	ldrb r0, [r3, #4]
	cmp r0, #1
	beq _0806E1D8
	cmp r0, #0x42
	beq _0806E1E8
	movs r3, #0
	ldr r0, _0806E1D4 @ =0x0203DCA7
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r4, r0, #0
	cmp r1, sb
	beq _0806E224
	b _0806E1F8
	.align 2, 0
_0806E1CC: .4byte gUnk_0867695C
_0806E1D0: .4byte 0x0000FFF6
_0806E1D4: .4byte 0x0203DCA7
_0806E1D8:
	movs r0, #1
	orrs r0, r1
	strh r0, [r2, #0xc]
	ldrb r0, [r7]
	strb r0, [r2, #0xe]
	ldrb r0, [r7, #1]
	strb r0, [r2, #0xf]
	b _0806E224
_0806E1E8:
	mov r0, r8
	ands r0, r1
	strh r0, [r2, #0xc]
	ldrb r0, [r7, #4]
	strb r0, [r2, #0xe]
	ldrb r0, [r7, #5]
	strb r0, [r2, #0xf]
	b _0806E224
_0806E1F8:
	adds r0, r3, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r5
	bne _0806E216
	mov r0, r8
	ldrh r1, [r2, #0xc]
	ands r0, r1
	strh r0, [r2, #0xc]
	ldrb r0, [r6]
	strb r0, [r2, #0xe]
	ldrb r0, [r6, #1]
	strb r0, [r2, #0xf]
	adds r6, #4
_0806E216:
	adds r3, #1
	adds r0, r3, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, sb
	bne _0806E1F8
_0806E224:
	mov r5, ip
	cmp r5, #0x3f
	ble _0806E192
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806E240
sub_806E240: @ 0x0806E240
	push {r4, r5, lr}
	movs r4, #1
	ldr r0, _0806E268 @ =0x0000FFF6
	adds r5, r0, #0
_0806E248:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806E26C
	ldr r0, [r1]
	cmp r0, #0
	beq _0806E26C
	ldrb r0, [r0, #4]
	cmp r0, #1
	bne _0806E26C
	ldrh r0, [r1, #0xc]
	ands r0, r5
	strh r0, [r1, #0xc]
	b _0806E272
	.align 2, 0
_0806E268: .4byte 0x0000FFF6
_0806E26C:
	adds r4, #1
	cmp r4, #0x3f
	ble _0806E248
_0806E272:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_806E278
sub_806E278: @ 0x0806E278
	push {lr}
	ldr r0, _0806E2A0 @ =gBattleUnitA
	adds r0, #0x4a
	ldrh r0, [r0]
	bl GetItemIid
	cmp r0, #0xf
	beq _0806E296
	ldr r0, _0806E2A4 @ =gBattleUnitB
	adds r0, #0x4a
	ldrh r0, [r0]
	bl GetItemIid
	cmp r0, #0xf
	bne _0806E29C
_0806E296:
	movs r0, #0x7b
	bl SetEid
_0806E29C:
	pop {r0}
	bx r0
	.align 2, 0
_0806E2A0: .4byte gBattleUnitA
_0806E2A4: .4byte gBattleUnitB

	thumb_func_start UpdateEndingId
UpdateEndingId: @ 0x0806E2A8
	push {lr}
	ldr r0, _0806E2D0 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	cmp r0, #0x19
	bne _0806E2E4
	movs r0, #0x7b
	bl CheckFlag
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806E2D8
	bl IsItTeamFae
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806E2D8
	ldr r1, _0806E2D4 @ =0x0203D3D9
	movs r0, #0
	b _0806E2E8
	.align 2, 0
_0806E2D0: .4byte gPlaySt
_0806E2D4: .4byte 0x0203D3D9
_0806E2D8:
	ldr r1, _0806E2E0 @ =0x0203D3D9
	movs r0, #1
	b _0806E2E8
	.align 2, 0
_0806E2E0: .4byte 0x0203D3D9
_0806E2E4:
	ldr r1, _0806E2F0 @ =0x0203D3D9
	movs r0, #2
_0806E2E8:
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0806E2F0: .4byte 0x0203D3D9

	thumb_func_start GetEndingId
GetEndingId: @ 0x0806E2F4
	push {lr}
	bl UpdateEndingId
	ldr r0, _0806E304 @ =0x0203D3D9
	ldrb r0, [r0]
	pop {r1}
	bx r1
	.align 2, 0
_0806E304: .4byte 0x0203D3D9

	thumb_func_start StartGameEndingScene
StartGameEndingScene: @ 0x0806E308
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, _0806E328 @ =gUnk_086770D4
	bl GetEndingId
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r0, [r0]
	adds r1, r5, #0
	bl StartEventLocking
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806E328: .4byte gUnk_086770D4

	thumb_func_start sub_806E32C
sub_806E32C: @ 0x0806E32C
	push {lr}
	bl GetEndingId
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	beq _0806E34A
	cmp r1, #1
	bgt _0806E344
	cmp r1, #0
	beq _0806E34A
	b _0806E362
_0806E344:
	cmp r1, #2
	beq _0806E358
	b _0806E362
_0806E34A:
	ldr r0, _0806E354 @ =0x0203D3D8
	strb r1, [r0]
	bl sub_80914DC
	b _0806E362
	.align 2, 0
_0806E354: .4byte 0x0203D3D8
_0806E358:
	ldr r1, _0806E368 @ =0x0203D3D8
	movs r0, #0x80
	strb r0, [r1]
	bl sub_809154C
_0806E362:
	pop {r0}
	bx r0
	.align 2, 0
_0806E368: .4byte 0x0203D3D8

	thumb_func_start sub_806E36C
sub_806E36C: @ 0x0806E36C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0806E38C @ =0x030048A4
	ldrb r0, [r0]
	cmp r0, #0
	bne _0806E39C
	ldr r0, _0806E390 @ =gUnk_0834B69C
	ldr r1, _0806E394 @ =0x06000020
	bl Decompress
	ldr r0, _0806E398 @ =gUnk_086772FC
	str r0, [r4, #0x3c]
	movs r0, #0x1c
	rsbs r0, r0, #0
	b _0806E3F8
	.align 2, 0
_0806E38C: .4byte 0x030048A4
_0806E390: .4byte gUnk_0834B69C
_0806E394: .4byte 0x06000020
_0806E398: .4byte gUnk_086772FC
_0806E39C:
	cmp r0, #1
	bne _0806E3C0
	ldr r0, _0806E3B4 @ =gUnk_0834B69C
	ldr r1, _0806E3B8 @ =0x06000020
	bl Decompress
	ldr r0, _0806E3BC @ =gUnk_0867730C
	str r0, [r4, #0x3c]
	movs r0, #0x1c
	rsbs r0, r0, #0
	b _0806E3F8
	.align 2, 0
_0806E3B4: .4byte gUnk_0834B69C
_0806E3B8: .4byte 0x06000020
_0806E3BC: .4byte gUnk_0867730C
_0806E3C0:
	cmp r0, #2
	bne _0806E3E4
	ldr r0, _0806E3D8 @ =gUnk_08349A98
	ldr r1, _0806E3DC @ =0x06000020
	bl Decompress
	ldr r0, _0806E3E0 @ =gUnk_0867731C
	str r0, [r4, #0x3c]
	movs r0, #0x30
	rsbs r0, r0, #0
	b _0806E3F8
	.align 2, 0
_0806E3D8: .4byte gUnk_08349A98
_0806E3DC: .4byte 0x06000020
_0806E3E0: .4byte gUnk_0867731C
_0806E3E4:
	cmp r0, #3
	bne _0806E3FA
	ldr r0, _0806E424 @ =gUnk_0834E1D4
	ldr r1, _0806E428 @ =0x06000020
	bl Decompress
	ldr r0, _0806E42C @ =gUnk_08677327
	str r0, [r4, #0x3c]
	movs r0, #0x18
	rsbs r0, r0, #0
_0806E3F8:
	str r0, [r4, #0x38]
_0806E3FA:
	movs r1, #0
	str r1, [r4, #0x30]
	movs r0, #0x90
	rsbs r0, r0, #0
	str r0, [r4, #0x2c]
	str r1, [r4, #0x34]
	str r1, [r4, #0x40]
	ldr r0, [r4, #0x3c]
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #0
	bl sub_806E684
	ldrh r1, [r4, #0x38]
	ldrh r2, [r4, #0x2c]
	movs r0, #0
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806E424: .4byte gUnk_0834E1D4
_0806E428: .4byte 0x06000020
_0806E42C: .4byte gUnk_08677327

	thumb_func_start sub_806E430
sub_806E430: @ 0x0806E430
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x30]
	adds r0, #1
	str r0, [r5, #0x30]
	cmp r0, #6
	ble _0806E4F6
	movs r0, #0
	str r0, [r5, #0x30]
	ldr r2, [r5, #0x2c]
	adds r2, #1
	str r2, [r5, #0x2c]
	ldrh r1, [r5, #0x38]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	bl SetBgOffset
	ldr r6, [r5, #0x34]
	adds r4, r6, #1
	str r4, [r5, #0x34]
	adds r0, r4, #0
	movs r1, #0x18
	bl __modsi3
	cmp r0, #0
	bne _0806E4F6
	ldr r0, [r5, #0x40]
	cmp r0, #0
	beq _0806E480
	adds r0, r4, #0
	cmp r0, #0
	bge _0806E474
	adds r0, r6, #0
	adds r0, #8
_0806E474:
	asrs r0, r0, #3
	movs r1, #3
	rsbs r1, r1, #0
	bl sub_806E684
	b _0806E4C8
_0806E480:
	adds r0, r4, #0
	movs r1, #0x18
	bl __divsi3
	ldr r2, [r5, #0x3c]
	adds r0, r2, r0
	movs r1, #0
	ldrsb r1, [r0, r1]
	movs r0, #2
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0806E4A6
	ldr r0, _0806E4FC @ =gUnk_08677327
	cmp r2, r0
	bne _0806E4A6
	ldr r0, _0806E500 @ =gUnk_08352160
	ldr r1, _0806E504 @ =0x06000020
	bl Decompress
_0806E4A6:
	ldr r0, [r5, #0x34]
	adds r4, r0, #0
	cmp r0, #0
	bge _0806E4B0
	adds r4, r0, #7
_0806E4B0:
	asrs r4, r4, #3
	movs r1, #0x18
	bl __divsi3
	ldr r1, [r5, #0x3c]
	adds r1, r1, r0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_806E684
_0806E4C8:
	ldr r4, [r5, #0x40]
	cmp r4, #0
	bne _0806E4E8
	ldr r0, [r5, #0x34]
	movs r1, #0x18
	bl __divsi3
	ldr r1, [r5, #0x3c]
	adds r1, r1, r0
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	movs r0, #3
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0806E4F6
_0806E4E8:
	adds r0, r4, #1
	str r0, [r5, #0x40]
	cmp r0, #4
	bne _0806E4F6
	ldr r1, _0806E508 @ =0x030048B8
	movs r0, #1
	strb r0, [r1]
_0806E4F6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806E4FC: .4byte gUnk_08677327
_0806E500: .4byte gUnk_08352160
_0806E504: .4byte 0x06000020
_0806E508: .4byte 0x030048B8

	thumb_func_start sub_806E50C
sub_806E50C: @ 0x0806E50C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806E51C @ =gUnk_08677348
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E51C: .4byte gUnk_08677348

	thumb_func_start sub_806E520
sub_806E520: @ 0x0806E520
	push {r4, lr}
	sub sp, #4
	ldr r0, _0806E648 @ =gUnk_08677360
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r3, _0806E64C @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r3]
	ands r0, r1
	strb r0, [r3]
	movs r0, #1
	ldrb r2, [r3, #1]
	orrs r0, r2
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #8
	ands r0, r1
	subs r1, #0x10
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r3, #1]
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _0806E650 @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #1
	orrs r0, r1
	ldr r1, _0806E654 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	bl LoadUiFrameGraphics
	ldr r0, _0806E658 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0806E65C @ =gBg1Tm
	movs r1, #0
	bl TmFill
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _0806E660 @ =gUnk_0836F6D4
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0806E664 @ =gUnk_08373F80
	ldr r1, _0806E668 @ =gBg2Tm
	bl Decompress
	ldr r0, _0806E66C @ =gUnk_08374670
	ldr r1, _0806E670 @ =gBuf
	bl Decompress
	movs r4, #0
_0806E5E6:
	ldr r0, _0806E670 @ =gBuf
	adds r1, r4, #0
	movs r2, #1
	movs r3, #2
	bl sub_805B5C8
	adds r4, #1
	cmp r4, #7
	ble _0806E5E6
	ldr r0, _0806E670 @ =gBuf
	movs r2, #0x80
	lsls r2, r2, #2
	movs r1, #0
	bl ApplyPaletteExt
	ldr r1, _0806E674 @ =gPal
	movs r4, #0
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0806E678 @ =gUnk_08353308
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #1
	str r0, [sp]
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_809892C
	bl sub_8069C34
	ldr r0, _0806E67C @ =sub_8069FD8
	bl SetOnHBlankA
	bl sub_806A7AC
	ldr r0, _0806E680 @ =0x030048B8
	strb r4, [r0]
	movs r0, #0xf
	bl EnableBgSync
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806E648: .4byte gUnk_08677360
_0806E64C: .4byte gDispIo
_0806E650: .4byte 0x0000FFE0
_0806E654: .4byte 0x0000E0FF
_0806E658: .4byte gBg0Tm
_0806E65C: .4byte gBg1Tm
_0806E660: .4byte gUnk_0836F6D4
_0806E664: .4byte gUnk_08373F80
_0806E668: .4byte gBg2Tm
_0806E66C: .4byte gUnk_08374670
_0806E670: .4byte gBuf
_0806E674: .4byte gPal
_0806E678: .4byte gUnk_08353308
_0806E67C: .4byte sub_8069FD8
_0806E680: .4byte 0x030048B8

	thumb_func_start sub_806E684
sub_806E684: @ 0x0806E684
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	movs r0, #2
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0806E694
	movs r5, #0
_0806E694:
	movs r4, #1
	rsbs r4, r4, #0
	ldr r0, _0806E6C4 @ =gBg0Tm
	mov ip, r0
	adds r6, r4, #0
_0806E69E:
	adds r0, r7, r4
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	mov r1, ip
	adds r3, r0, r1
	cmp r4, r6
	beq _0806E6B2
	cmp r4, #2
	bne _0806E6C8
_0806E6B2:
	adds r4, #1
	movs r0, #0
	movs r2, #0x1f
_0806E6B8:
	strh r0, [r3]
	adds r3, #2
	subs r2, #1
	cmp r2, #0
	bge _0806E6B8
	b _0806E700
	.align 2, 0
_0806E6C4: .4byte gBg0Tm
_0806E6C8:
	cmp r5, r6
	beq _0806E6D4
	movs r0, #3
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0806E6E6
_0806E6D4:
	adds r4, #1
	movs r0, #0
	movs r2, #0x1f
_0806E6DA:
	strh r0, [r3]
	adds r3, #2
	subs r2, #1
	cmp r2, #0
	bge _0806E6DA
	b _0806E700
_0806E6E6:
	lsls r0, r5, #6
	lsls r1, r4, #5
	adds r0, r0, r1
	ldr r2, _0806E710 @ =0x0000F001
	adds r1, r0, r2
	movs r2, #0
	adds r4, #1
_0806E6F4:
	adds r0, r1, r2
	strh r0, [r3]
	adds r3, #2
	adds r2, #1
	cmp r2, #0x1f
	ble _0806E6F4
_0806E700:
	cmp r4, #2
	ble _0806E69E
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E710: .4byte 0x0000F001

	thumb_func_start sub_806E714
sub_806E714: @ 0x0806E714
	push {lr}
	adds r1, r0, #0
	ldr r0, _0806E72C @ =0x030048B8
	ldrb r0, [r0]
	cmp r0, #0
	beq _0806E726
	adds r0, r1, #0
	bl Proc_Break
_0806E726:
	pop {r0}
	bx r0
	.align 2, 0
_0806E72C: .4byte 0x030048B8

	thumb_func_start sub_806E730
sub_806E730: @ 0x0806E730
	push {lr}
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0

	thumb_func_start sub_806E73C
sub_806E73C: @ 0x0806E73C
	push {r4, lr}
	sub sp, #8
	movs r0, #0
	bl InitBgs
	ldr r2, _0806E790 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r4, #0
	str r4, [sp]
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	ldr r2, _0806E794 @ =0x01000008
	mov r0, sp
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _0806E798 @ =0x06006000
	ldr r2, _0806E79C @ =0x01000800
	bl CpuFastSet
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806E790: .4byte gDispIo
_0806E794: .4byte 0x01000008
_0806E798: .4byte 0x06006000
_0806E79C: .4byte 0x01000800

	thumb_func_start sub_806E7A0
sub_806E7A0: @ 0x0806E7A0
	push {lr}
	adds r1, r0, #0
	ldr r2, _0806E7B4 @ =0x030048A4
	movs r0, #0
	strb r0, [r2]
	ldr r0, _0806E7B8 @ =gUnk_08677378
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E7B4: .4byte 0x030048A4
_0806E7B8: .4byte gUnk_08677378

	thumb_func_start sub_806E7BC
sub_806E7BC: @ 0x0806E7BC
	push {lr}
	adds r1, r0, #0
	ldr r2, _0806E7D0 @ =0x030048A4
	movs r0, #1
	strb r0, [r2]
	ldr r0, _0806E7D4 @ =gUnk_08677378
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E7D0: .4byte 0x030048A4
_0806E7D4: .4byte gUnk_08677378

	thumb_func_start sub_806E7D8
sub_806E7D8: @ 0x0806E7D8
	push {lr}
	adds r1, r0, #0
	ldr r2, _0806E7EC @ =0x030048A4
	movs r0, #2
	strb r0, [r2]
	ldr r0, _0806E7F0 @ =gUnk_08677378
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E7EC: .4byte 0x030048A4
_0806E7F0: .4byte gUnk_08677378

	thumb_func_start sub_806E7F4
sub_806E7F4: @ 0x0806E7F4
	push {lr}
	adds r1, r0, #0
	ldr r2, _0806E808 @ =0x030048A4
	movs r0, #3
	strb r0, [r2]
	ldr r0, _0806E80C @ =gUnk_08677378
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0806E808: .4byte 0x030048A4
_0806E80C: .4byte gUnk_08677378

	thumb_func_start sub_806E810
sub_806E810: @ 0x0806E810
	push {lr}
	ldr r0, _0806E82C @ =gUnk_08677378
	bl Proc_Find
	cmp r0, #0
	bne _0806E834
	ldr r0, _0806E830 @ =gUnk_08677348
	bl Proc_EndEach
	bl sub_806DCA4
	movs r0, #0
	b _0806E836
	.align 2, 0
_0806E82C: .4byte gUnk_08677378
_0806E830: .4byte gUnk_08677348
_0806E834:
	movs r0, #1
_0806E836:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_806E83C
sub_806E83C: @ 0x0806E83C
	push {r4, r5, lr}
	adds r3, r1, r2
	adds r3, r0, r3
	movs r4, #4
	strb r4, [r3]
	lsls r4, r1, #1
	adds r3, r4, r2
	adds r3, r0, r3
	movs r5, #0xe
	strb r5, [r3]
	adds r4, r4, r1
	adds r4, r4, r2
	adds r0, r0, r4
	movs r1, #3
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_806E860
sub_806E860: @ 0x0806E860
	push {r4, r5, lr}
	adds r4, r0, r2
	movs r3, #4
	strb r3, [r4]
	adds r3, r1, r2
	adds r3, r0, r3
	movs r5, #0xe
	strb r5, [r3]
	lsls r4, r1, #1
	adds r3, r4, r2
	adds r3, r0, r3
	strb r5, [r3]
	adds r4, r4, r1
	adds r4, r4, r2
	adds r4, r0, r4
	strb r5, [r4]
	lsls r1, r1, #2
	adds r1, r1, r2
	adds r0, r0, r1
	movs r1, #3
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_806E890
sub_806E890: @ 0x0806E890
	push {r4, lr}
	adds r3, r1, r2
	adds r3, r0, r3
	movs r4, #1
	strb r4, [r3]
	lsls r1, r1, #1
	adds r1, r1, r2
	adds r0, r0, r1
	movs r1, #5
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806E8AC
sub_806E8AC: @ 0x0806E8AC
	push {r4, lr}
	adds r3, r1, r2
	adds r3, r0, r3
	movs r4, #0xd
	strb r4, [r3]
	lsls r1, r1, #1
	adds r1, r1, r2
	adds r0, r0, r1
	movs r1, #0xc
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806E8C8
sub_806E8C8: @ 0x0806E8C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp, #4]
	mov sb, r1
	adds r6, r2, #0
	adds r5, r3, #0
	ldr r0, [sp, #0x28]
	mov sl, r0
	ldr r1, _0806E990 @ =gBuf
	mov r8, r1
	movs r0, #0
	str r0, [sp]
	lsls r2, r6, #4
	ldr r0, _0806E994 @ =0x001FFFFF
	ands r2, r0
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	bl CpuFastSet
	lsls r4, r6, #3
	mov r0, r8
	adds r1, r4, #0
	mov r2, sb
	bl sub_806E83C
	mov r0, sb
	adds r2, r0, r5
	adds r2, #3
	mov r0, r8
	adds r1, r4, #0
	bl sub_806E83C
	movs r4, #0
	adds r5, #2
	cmp r4, r5
	bge _0806E930
	mov r7, sb
	adds r7, #1
_0806E920:
	adds r2, r4, r7
	mov r0, r8
	lsls r1, r6, #3
	bl sub_806E860
	adds r4, #1
	cmp r4, r5
	blt _0806E920
_0806E930:
	movs r4, #0
	ldr r1, [sp, #4]
	lsls r7, r1, #5
	cmp r4, sl
	bge _0806E94E
	mov r5, sb
	adds r5, #2
_0806E93E:
	adds r2, r4, r5
	mov r0, r8
	lsls r1, r6, #3
	bl sub_806E890
	adds r4, #1
	cmp r4, sl
	blt _0806E93E
_0806E94E:
	ldr r0, [sp, #0x2c]
	cmp r0, #0
	ble _0806E970
	mov r0, sb
	adds r0, #2
	mov r1, sl
	adds r5, r1, r0
	ldr r4, [sp, #0x2c]
_0806E95E:
	mov r0, r8
	lsls r1, r6, #3
	adds r2, r5, #0
	bl sub_806E8AC
	adds r5, #1
	subs r4, #1
	cmp r4, #0
	bne _0806E95E
_0806E970:
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r7, r0
	mov r0, r8
	adds r2, r6, #0
	movs r3, #1
	bl sub_8013DAC
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806E990: .4byte gBuf
_0806E994: .4byte 0x001FFFFF

	thumb_func_start sub_806E998
sub_806E998: @ 0x0806E998
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r3, [sp, #0x1c]
	ldr r0, [sp, #0x20]
	ldr r1, [sp, #0x24]
	str r0, [sp]
	str r1, [sp, #4]
	adds r0, r5, #0
	movs r1, #2
	adds r2, r6, #0
	bl sub_806E8C8
	ldr r0, _0806E9DC @ =0x000003FF
	ands r0, r5
	adds r4, r4, r0
	mov r0, r8
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #1
	bl PutIncrTileref
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806E9DC: .4byte 0x000003FF

	thumb_func_start sub_806E9E0
sub_806E9E0: @ 0x0806E9E0
	adds r0, #0x4c
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_806E9E8
sub_806E9E8: @ 0x0806E9E8
	push {r4, lr}
	adds r4, r0, #0
	adds r4, #0x4c
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r0, #0
	ldrsh r1, [r4, r0]
	cmp r1, #0
	bge _0806E9FE
	adds r1, #3
_0806E9FE:
	lsls r1, r1, #0xe
	lsrs r1, r1, #0x10
	movs r0, #3
	movs r2, #0
	bl SetBgOffset
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _0806EA14
	adds r0, #3
_0806EA14:
	asrs r1, r0, #2
	ldr r0, _0806EA20 @ =0x0400001C
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806EA20: .4byte 0x0400001C

	thumb_func_start sub_806EA24
sub_806EA24: @ 0x0806EA24
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	ldr r6, _0806EA5C @ =gBg3Tm
	cmp r4, #0
	bne _0806EA3E
	movs r0, #3
	bl GetBgChrOffset
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r4, r0, r1
_0806EA3E:
	cmp r5, #0
	bge _0806EA44
	movs r5, #0xe
_0806EA44:
	ldr r1, _0806EA60 @ =gBmSt
	movs r0, #0x40
	ldrb r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0806EA68
	ldr r0, _0806EA64 @ =gUnk_08109C80
	lsls r1, r5, #5
	movs r2, #0x40
	bl ApplyPaletteExt
	b _0806EA72
	.align 2, 0
_0806EA5C: .4byte gBg3Tm
_0806EA60: .4byte gBmSt
_0806EA64: .4byte gUnk_08109C80
_0806EA68:
	ldr r0, _0806EAAC @ =gUnk_0833BFDC
	lsls r1, r5, #5
	movs r2, #0x40
	bl ApplyPaletteExt
_0806EA72:
	ldr r0, _0806EAB0 @ =gUnk_08336D5C
	adds r1, r4, #0
	bl Decompress
	movs r0, #3
	bl GetBgChrOffset
	subs r0, r4, r0
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x14
	movs r1, #0xf
	ands r1, r5
	lsls r1, r1, #0xc
	adds r1, r0, r1
	movs r2, #0
	ldr r3, _0806EAB4 @ =0x0000027F
_0806EA92:
	adds r0, r2, r1
	strh r0, [r6]
	adds r6, #2
	adds r2, #1
	cmp r2, r3
	ble _0806EA92
	ldr r0, _0806EAB8 @ =gUnk_086773D8
	adds r1, r7, #0
	bl SpawnProc
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806EAAC: .4byte gUnk_0833BFDC
_0806EAB0: .4byte gUnk_08336D5C
_0806EAB4: .4byte 0x0000027F
_0806EAB8: .4byte gUnk_086773D8

	thumb_func_start sub_806EABC
sub_806EABC: @ 0x0806EABC
	push {lr}
	ldr r0, _0806EAC8 @ =gUnk_086773D8
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0806EAC8: .4byte gUnk_086773D8

	thumb_func_start sub_806EACC
sub_806EACC: @ 0x0806EACC
	ldr r0, _0806EAD4 @ =0x0203D3DC
	ldrb r0, [r0, #1]
	bx lr
	.align 2, 0
_0806EAD4: .4byte 0x0203D3DC

	thumb_func_start sub_806EAD8
sub_806EAD8: @ 0x0806EAD8
	ldr r1, _0806EAE0 @ =0x0203D3DC
	strb r0, [r1, #1]
	bx lr
	.align 2, 0
_0806EAE0: .4byte 0x0203D3DC

	thumb_func_start sub_806EAE4
sub_806EAE4: @ 0x0806EAE4
	ldr r1, _0806EAEC @ =0x0203D3DC
	strh r0, [r1, #2]
	bx lr
	.align 2, 0
_0806EAEC: .4byte 0x0203D3DC

	thumb_func_start sub_806EAF0
sub_806EAF0: @ 0x0806EAF0
	push {lr}
	ldr r0, _0806EAFC @ =gUnk_086773F0
	bl InitTextList
	pop {r0}
	bx r0
	.align 2, 0
_0806EAFC: .4byte gUnk_086773F0

	thumb_func_start sub_806EB00
sub_806EB00: @ 0x0806EB00
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	b _0806EB3A
_0806EB08:
	ldr r0, [r6, #0xc]
	cmp r0, #0
	beq _0806EB30
	bl GetLang
	ldr r1, [r6, #0xc]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r5, [r6]
	ldr r1, [r6, #4]
	ldrb r2, [r6, #8]
	ldrb r3, [r6, #9]
	movs r4, #0
	str r4, [sp]
	ldr r0, [r0]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl PutDrawText
	b _0806EB38
_0806EB30:
	ldr r0, [r6]
	ldr r1, [r6, #4]
	bl PutText
_0806EB38:
	adds r6, #0x10
_0806EB3A:
	ldr r0, [r6]
	cmp r0, #0
	bne _0806EB08
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_806EB48
sub_806EB48: @ 0x0806EB48
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r7, _0806EC48 @ =0x02003108
	ldr r0, [r7, #0xc]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r6, r0, #0
	movs r0, #0x38
	adds r1, r6, #0
	bl GetStringTextCenteredPos
	mov r8, r0
	ldr r5, _0806EC4C @ =gBg0Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r4, [r7, #0xc]
	adds r0, r4, #0
	bl GetUnitEquippedWeaponSlot
	adds r1, r0, #0
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r4, #0
	bl BattleGenerateDisplayStats
	adds r0, r7, #0
	adds r0, #0x18
	movs r2, #0xa2
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r4, #0
	str r4, [sp]
	str r6, [sp, #4]
	movs r2, #0
	mov r3, r8
	bl PutDrawText
	ldr r0, [r7, #0xc]
	ldr r0, [r0, #4]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r2, r7, #0
	adds r2, #0x20
	ldr r3, _0806EC50 @ =0x00000342
	adds r1, r5, r3
	str r4, [sp]
	str r0, [sp, #4]
	adds r0, r2, #0
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	ldr r1, _0806EC54 @ =0x000003C2
	adds r0, r5, r1
	movs r1, #3
	movs r2, #0x24
	movs r3, #0x25
	bl PutTwoSpecialChar
	ldr r2, _0806EC58 @ =0x000003CA
	adds r0, r5, r2
	movs r1, #3
	movs r2, #0x1f
	bl PutSpecialChar
	ldr r3, _0806EC5C @ =0x00000442
	adds r0, r5, r3
	movs r1, #3
	movs r2, #0x22
	movs r3, #0x23
	bl PutTwoSpecialChar
	ldr r1, _0806EC60 @ =0x0000044A
	adds r0, r5, r1
	movs r1, #3
	movs r2, #0x16
	bl PutSpecialChar
	movs r2, #0xf2
	lsls r2, r2, #2
	adds r0, r5, r2
	ldr r1, [r7, #0xc]
	movs r2, #8
	ldrsb r2, [r1, r2]
	movs r1, #2
	bl PutNumberOrBlank
	ldr r3, _0806EC64 @ =0x000003CE
	adds r0, r5, r3
	ldr r1, [r7, #0xc]
	ldrb r2, [r1, #9]
	movs r1, #2
	bl PutNumberOrBlank
	movs r0, #0x89
	lsls r0, r0, #3
	adds r4, r5, r0
	ldr r0, [r7, #0xc]
	bl GetUnitCurrentHp
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl PutNumberOrBlank
	ldr r1, _0806EC68 @ =0x0000044E
	adds r5, r5, r1
	ldr r0, [r7, #0xc]
	bl GetUnitMaxHp
	adds r2, r0, #0
	adds r0, r5, #0
	movs r1, #2
	bl PutNumberOrBlank
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806EC48: .4byte 0x02003108
_0806EC4C: .4byte gBg0Tm
_0806EC50: .4byte 0x00000342
_0806EC54: .4byte 0x000003C2
_0806EC58: .4byte 0x000003CA
_0806EC5C: .4byte 0x00000442
_0806EC60: .4byte 0x0000044A
_0806EC64: .4byte 0x000003CE
_0806EC68: .4byte 0x0000044E

	thumb_func_start sub_806EC6C
sub_806EC6C: @ 0x0806EC6C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sl, r0
	mov r8, r1
	str r2, [sp, #0xc]
	adds r7, r3, #0
	ldr r5, [sp, #0x30]
	subs r0, r5, r7
	mov sb, r0
	lsls r6, r2, #5
	adds r0, r6, r1
	lsls r0, r0, #1
	ldr r4, _0806ED28 @ =0x02003238
	adds r0, r0, r4
	movs r1, #2
	ldr r2, [sp, #0x34]
	cmp r7, r2
	bne _0806EC9A
	movs r1, #4
_0806EC9A:
	adds r2, r7, #0
	bl PutNumberOrBlank
	adds r1, r6, #1
	add r1, r8
	lsls r1, r1, #1
	adds r1, r1, r4
	mov r0, sb
	bl PutNumberBonus
	cmp r5, #0x1e
	ble _0806ECB8
	movs r5, #0x1e
	subs r5, r5, r7
	mov sb, r5
_0806ECB8:
	mov r0, sl
	lsls r5, r0, #1
	add r5, sl
	lsls r5, r5, #1
	ldr r1, _0806ED2C @ =0x00000401
	adds r5, r5, r1
	ldr r4, [sp, #0xc]
	adds r4, #1
	lsls r4, r4, #5
	subs r4, #2
	add r4, r8
	lsls r4, r4, #1
	ldr r0, _0806ED30 @ =0x02003C38
	adds r4, r4, r0
	movs r6, #0xc0
	lsls r6, r6, #7
	ldr r2, [sp, #0x34]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #3
	adds r0, r0, r2
	movs r1, #0x1e
	bl __divsi3
	str r0, [sp]
	lsls r0, r7, #2
	adds r0, r0, r7
	lsls r0, r0, #3
	adds r0, r0, r7
	movs r1, #0x1e
	bl __divsi3
	str r0, [sp, #4]
	mov r1, sb
	lsls r0, r1, #2
	add r0, sb
	lsls r0, r0, #3
	add r0, sb
	movs r1, #0x1e
	bl __divsi3
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #6
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_806E998
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806ED28: .4byte 0x02003238
_0806ED2C: .4byte 0x00000401
_0806ED30: .4byte 0x02003C38

	thumb_func_start sub_806ED34
sub_806ED34: @ 0x0806ED34
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _0806ED80 @ =gUnk_08307D58
	ldr r4, _0806ED84 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0806ED88 @ =0x02003738
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r4, #0
	bl TmApplyTsa_t
	ldr r0, _0806ED8C @ =gUnk_083193EC
	bl sub_806EB00
	ldr r4, _0806ED90 @ =0x02003108
	ldr r0, [r4, #0xc]
	bl UnitKnowsMagic
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _0806ED9C
	adds r0, r4, #0
	adds r0, #0x30
	ldr r1, _0806ED94 @ =0x0200327A
	movs r2, #0
	str r2, [sp]
	ldr r2, _0806ED98 @ =gUnk_083195AC
	str r2, [sp, #4]
	movs r2, #3
	movs r3, #0
	bl PutDrawText
	b _0806EDB0
	.align 2, 0
_0806ED80: .4byte gUnk_08307D58
_0806ED84: .4byte gBuf
_0806ED88: .4byte 0x02003738
_0806ED8C: .4byte gUnk_083193EC
_0806ED90: .4byte 0x02003108
_0806ED94: .4byte 0x0200327A
_0806ED98: .4byte gUnk_083195AC
_0806ED9C:
	adds r0, r4, #0
	adds r0, #0x30
	ldr r1, _0806EFD0 @ =0x0200327A
	str r2, [sp]
	ldr r2, _0806EFD4 @ =gUnk_083195B4
	str r2, [sp, #4]
	movs r2, #3
	movs r3, #4
	bl PutDrawText
_0806EDB0:
	ldr r6, _0806EFD8 @ =0x02003108
	ldr r0, [r6, #0xc]
	bl GetUnitPower
	ldr r1, [r6, #0xc]
	movs r3, #0x12
	ldrsb r3, [r1, r3]
	str r0, [sp]
	ldr r0, [r1, #4]
	ldrb r0, [r0, #0x14]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #5
	movs r2, #1
	bl sub_806EC6C
	ldr r0, [r6, #0xc]
	bl GetUnitSkill
	adds r4, r0, #0
	ldr r2, [r6, #0xc]
	ldrb r1, [r2, #0x13]
	movs r5, #0x10
	adds r0, r5, #0
	ldrh r3, [r2, #0xc]
	ands r0, r3
	cmp r0, #0
	beq _0806EDF6
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	lsrs r0, r0, #0x1f
	adds r1, r1, r0
	lsrs r1, r1, #1
_0806EDF6:
	lsls r0, r1, #0x18
	asrs r3, r0, #0x18
	str r4, [sp]
	ldr r0, [r2, #4]
	ldrb r1, [r0, #0x15]
	adds r0, r5, #0
	ldrh r2, [r2, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _0806EE14
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	lsrs r0, r0, #0x1f
	adds r1, r1, r0
	lsrs r1, r1, #1
_0806EE14:
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #5
	movs r2, #3
	bl sub_806EC6C
	ldr r0, [r6, #0xc]
	bl GetUnitSpeed
	adds r4, r0, #0
	ldr r2, [r6, #0xc]
	ldrb r1, [r2, #0x14]
	adds r0, r5, #0
	ldrh r3, [r2, #0xc]
	ands r0, r3
	cmp r0, #0
	beq _0806EE44
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	lsrs r0, r0, #0x1f
	adds r1, r1, r0
	lsrs r1, r1, #1
_0806EE44:
	lsls r0, r1, #0x18
	asrs r3, r0, #0x18
	str r4, [sp]
	ldr r0, [r2, #4]
	ldrb r1, [r0, #0x16]
	adds r0, r5, #0
	ldrh r2, [r2, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _0806EE62
	lsls r0, r1, #0x18
	asrs r1, r0, #0x18
	lsrs r0, r0, #0x1f
	adds r1, r1, r0
	lsrs r1, r1, #1
_0806EE62:
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #5
	movs r2, #5
	bl sub_806EC6C
	ldr r0, [r6, #0xc]
	bl GetUnitLuck
	ldr r1, [r6, #0xc]
	movs r3, #0x17
	ldrsb r3, [r1, r3]
	str r0, [sp]
	movs r0, #0x1e
	str r0, [sp, #4]
	movs r0, #3
	movs r1, #5
	movs r2, #7
	bl sub_806EC6C
	ldr r0, [r6, #0xc]
	bl GetUnitDefense
	ldr r1, [r6, #0xc]
	movs r3, #0x15
	ldrsb r3, [r1, r3]
	str r0, [sp]
	ldr r0, [r1, #4]
	ldrb r0, [r0, #0x17]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #4
	movs r1, #5
	movs r2, #9
	bl sub_806EC6C
	ldr r0, [r6, #0xc]
	bl GetUnitResistance
	ldr r1, [r6, #0xc]
	movs r3, #0x16
	ldrsb r3, [r1, r3]
	str r0, [sp]
	ldr r0, [r1, #4]
	ldrb r0, [r0, #0x18]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #5
	movs r1, #5
	movs r2, #0xb
	bl sub_806EC6C
	ldr r1, [r6, #0xc]
	ldr r0, [r1, #4]
	movs r3, #0x12
	ldrsb r3, [r0, r3]
	movs r0, #0x1a
	ldrsb r0, [r1, r0]
	adds r0, r0, r3
	str r0, [sp]
	movs r5, #0xf
	str r5, [sp, #4]
	movs r0, #6
	movs r1, #0xd
	movs r2, #1
	bl sub_806EC6C
	ldr r1, [r6, #0xc]
	ldr r0, [r1, #4]
	movs r3, #0x11
	ldrsb r3, [r0, r3]
	ldr r0, [r1]
	ldrb r0, [r0, #0x13]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r3, r3, r0
	movs r0, #0x18
	ldrsb r0, [r1, r0]
	adds r0, r3, r0
	str r0, [sp]
	ldr r0, [r1, #4]
	ldrb r0, [r0, #0x19]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp, #4]
	movs r0, #7
	movs r1, #0xd
	movs r2, #3
	bl sub_806EC6C
	ldr r7, _0806EFDC @ =0x02003392
	ldr r0, [r6, #0xc]
	bl GetUnitAid
	adds r2, r0, #0
	adds r0, r7, #0
	movs r1, #2
	bl PutNumber
	adds r4, r7, #2
	ldr r0, [r6, #0xc]
	ldr r1, [r0]
	ldr r2, [r0, #4]
	ldr r0, [r1, #0x28]
	ldr r1, [r2, #0x24]
	orrs r0, r1
	bl GetAidIconFromAttributes
	adds r1, r0, #0
	movs r0, #0xa0
	lsls r0, r0, #7
	mov r8, r0
	adds r0, r4, #0
	mov r2, r8
	bl PutIcon
	adds r4, r6, #0
	adds r4, #0x78
	ldr r0, [r6, #0xc]
	bl GetUnitRescueName
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x18
	movs r2, #2
	bl Text_InsertDrawString
	adds r4, #0x10
	ldr r0, [r6, #0xc]
	bl GetUnitStatusName
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x18
	movs r2, #2
	bl Text_InsertDrawString
	ldr r0, [r6, #0xc]
	adds r0, #0x2e
	ldrb r2, [r0]
	ands r5, r2
	cmp r5, #0
	beq _0806EF96
	movs r1, #0xc3
	lsls r1, r1, #1
	adds r0, r7, r1
	lsrs r2, r2, #4
	movs r1, #0
	bl PutNumberSmall
_0806EF96:
	adds r4, r7, #0
	adds r4, #0xfe
	ldr r0, [r6, #0xc]
	bl GetUnitAffinityIcon
	adds r1, r0, #0
	adds r0, r4, #0
	mov r2, r8
	bl PutIcon
	adds r4, r6, #0
	adds r4, #0x80
	ldr r0, [r6, #0xc]
	ldr r0, [r0]
	ldrb r0, [r0, #9]
	bl GetAffinityName
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x28
	movs r2, #2
	bl Text_InsertDrawString
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806EFD0: .4byte 0x0200327A
_0806EFD4: .4byte gUnk_083195B4
_0806EFD8: .4byte 0x02003108
_0806EFDC: .4byte 0x02003392

	thumb_func_start sub_806EFE0
sub_806EFE0: @ 0x0806EFE0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0806F130 @ =gUnk_08307DD4
	ldr r4, _0806F134 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0806F138 @ =0x02003738
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r4, #0
	bl TmApplyTsa_t
	ldr r0, _0806F13C @ =gUnk_08308070
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0806F140 @ =0x02003EFA
	ldr r2, _0806F144 @ =0x00007060
	adds r1, r4, #0
	bl TmApplyTsa_t
	ldr r0, _0806F148 @ =gUnk_083194AC
	bl sub_806EB00
	movs r4, #0
	ldr r1, _0806F14C @ =0x02003108
	ldr r0, [r1, #0xc]
	ldrh r5, [r0, #0x1c]
	cmp r5, #0
	beq _0806F064
	mov sb, r1
	mov r8, r4
	movs r7, #0x40
	mov r6, sb
	adds r6, #0x90
_0806F02C:
	mov r1, sb
	ldr r0, [r1, #0xc]
	adds r1, r5, #0
	bl IsItemDisplayUseable
	adds r2, r0, #0
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	ldr r3, _0806F150 @ =0x0200323A
	adds r3, r7, r3
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_8016860
	movs r3, #2
	add r8, r3
	adds r7, #0x80
	adds r6, #8
	adds r4, #1
	cmp r4, #4
	bgt _0806F064
	mov r1, sb
	ldr r0, [r1, #0xc]
	adds r0, #0x1c
	add r0, r8
	ldrh r5, [r0]
	cmp r5, #0
	bne _0806F02C
_0806F064:
	ldr r7, _0806F14C @ =0x02003108
	ldr r0, [r7, #0xc]
	bl GetUnitEquippedWeaponSlot
	adds r4, r0, #0
	movs r5, #0
	cmp r4, #0
	blt _0806F09E
	lsls r4, r4, #1
	adds r0, r4, #1
	lsls r0, r0, #6
	ldr r1, _0806F154 @ =0x02003258
	adds r0, r0, r1
	movs r1, #0
	movs r2, #0x1f
	bl PutSpecialChar
	adds r0, r4, #2
	lsls r0, r0, #6
	ldr r1, _0806F158 @ =0x02003C3A
	adds r0, r0, r1
	ldr r1, _0806F15C @ =gUnk_083080AC
	ldr r2, _0806F144 @ =0x00007060
	bl TmApplyTsa_t
	ldr r0, [r7, #0xc]
	adds r0, #0x1c
	adds r0, r0, r4
	ldrh r5, [r0]
_0806F09E:
	ldr r6, _0806F160 @ =0x02003588
	ldr r4, _0806F164 @ =gBattleUnitA
	adds r0, r4, #0
	adds r0, #0x58
	movs r3, #0
	ldrsh r2, [r0, r3]
	adds r0, r6, #0
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x80
	adds r1, r4, #0
	adds r1, #0x5e
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0xe
	adds r1, r4, #0
	adds r1, #0x64
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x8e
	adds r1, r4, #0
	adds r1, #0x60
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r1, #2
	bl PutNumberOrBlank
	adds r4, r7, #0
	adds r4, #0xb8
	adds r0, r5, #0
	bl GetItemRangeString
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #2
	bl Text_InsertDrawString
	movs r4, #0
	ldr r0, _0806F168 @ =0x00005278
	adds r5, r0, #0
	adds r2, r6, #0
	subs r2, #0x8c
	ldr r1, _0806F16C @ =0x00005270
	adds r3, r1, #0
	adds r1, r6, #0
	subs r1, #0x4c
_0806F110:
	adds r0, r4, r5
	strh r0, [r2]
	adds r0, r4, r3
	strh r0, [r1]
	adds r2, #2
	adds r1, #2
	adds r4, #1
	cmp r4, #7
	ble _0806F110
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F130: .4byte gUnk_08307DD4
_0806F134: .4byte gBuf
_0806F138: .4byte 0x02003738
_0806F13C: .4byte gUnk_08308070
_0806F140: .4byte 0x02003EFA
_0806F144: .4byte 0x00007060
_0806F148: .4byte gUnk_083194AC
_0806F14C: .4byte 0x02003108
_0806F150: .4byte 0x0200323A
_0806F154: .4byte 0x02003258
_0806F158: .4byte 0x02003C3A
_0806F15C: .4byte gUnk_083080AC
_0806F160: .4byte 0x02003588
_0806F164: .4byte gBattleUnitA
_0806F168: .4byte 0x00005278
_0806F16C: .4byte 0x00005270

	thumb_func_start sub_806F170
sub_806F170: @ 0x0806F170
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	movs r0, #6
	str r0, [sp, #8]
	ldr r4, _0806F258 @ =0x02003108
	ldr r0, [r4, #0xc]
	bl GetUnitTotalSupportLevel
	movs r1, #0
	str r1, [sp, #0xc]
	cmp r0, #5
	bne _0806F194
	movs r0, #4
	str r0, [sp, #0xc]
_0806F194:
	ldr r0, [r4, #0xc]
	bl GetUnitSupportCount
	mov sl, r0
	movs r1, #0
	mov sb, r1
	movs r0, #0
	cmp r0, sl
	bge _0806F248
	movs r1, #0x80
	lsls r1, r1, #1
	ldr r0, _0806F258 @ =0x02003108
	adds r1, r0, r1
	str r1, [sp, #0x10]
_0806F1B0:
	ldr r1, _0806F258 @ =0x02003108
	ldr r0, [r1, #0xc]
	mov r1, sb
	bl GetUnitSupportLevel
	adds r7, r0, #0
	cmp r7, #0
	beq _0806F240
	ldr r1, _0806F258 @ =0x02003108
	ldr r0, [r1, #0xc]
	mov r1, sb
	bl GetUnitSupportPid
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, [sp, #8]
	lsls r6, r0, #6
	ldr r1, _0806F25C @ =0x02003240
	mov r8, r1
	adds r5, r6, r1
	adds r0, r4, #0
	bl GetAffinityIconByPid
	adds r1, r0, #0
	adds r0, r5, #0
	movs r2, #0xa0
	lsls r2, r2, #7
	bl PutIcon
	adds r0, r4, #0
	bl GetPersonInfo
	ldrh r0, [r0]
	bl DecodeMsg
	mov r1, r8
	adds r1, #6
	adds r1, r6, r1
	movs r2, #0
	str r2, [sp]
	str r0, [sp, #4]
	ldr r0, [sp, #0x10]
	ldr r2, [sp, #0xc]
	movs r3, #0
	bl PutDrawText
	movs r5, #2
	cmp r7, #3
	bne _0806F216
	movs r5, #4
_0806F216:
	ldr r0, [sp, #0xc]
	cmp r0, #4
	bne _0806F21E
	movs r5, #4
_0806F21E:
	mov r4, r8
	adds r4, #0x12
	adds r4, r6, r4
	adds r0, r7, #0
	bl GetSupportLevelSpecialChar
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl PutSpecialChar
	ldr r1, [sp, #8]
	adds r1, #2
	str r1, [sp, #8]
	ldr r0, [sp, #0x10]
	adds r0, #8
	str r0, [sp, #0x10]
_0806F240:
	movs r1, #1
	add sb, r1
	cmp sb, sl
	blt _0806F1B0
_0806F248:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F258: .4byte 0x02003108
_0806F25C: .4byte 0x02003240

	thumb_func_start sub_806F260
sub_806F260: @ 0x0806F260
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sb, r0
	adds r6, r1, #0
	mov sl, r2
	adds r1, r3, #0
	ldr r0, _0806F314 @ =0x02003108
	ldr r0, [r0, #0xc]
	adds r0, #0x26
	adds r0, r0, r1
	ldrb r7, [r0]
	lsls r4, r2, #5
	adds r0, r4, r6
	lsls r0, r0, #1
	ldr r2, _0806F318 @ =0x02003238
	mov r8, r2
	add r0, r8
	adds r1, #0x70
	movs r2, #0xa0
	lsls r2, r2, #7
	bl PutIcon
	movs r5, #2
	cmp r7, #0xfa
	ble _0806F29C
	movs r5, #4
_0806F29C:
	adds r4, #5
	adds r4, r4, r6
	lsls r4, r4, #1
	add r4, r8
	adds r0, r7, #0
	bl GetWeaponLevelSpecialCharFromExp
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl PutSpecialChar
	cmp r7, #0
	beq _0806F2BA
	subs r7, #1
_0806F2BA:
	mov r0, sb
	lsls r5, r0, #1
	add r5, sb
	lsls r5, r5, #1
	ldr r2, _0806F31C @ =0x00000401
	adds r5, r5, r2
	mov r4, sl
	adds r4, #1
	lsls r4, r4, #5
	adds r4, #3
	adds r4, r4, r6
	lsls r4, r4, #1
	ldr r0, _0806F320 @ =0x02003C38
	adds r4, r4, r0
	movs r6, #0xc0
	lsls r6, r6, #7
	movs r0, #0x22
	str r0, [sp]
	adds r0, r7, #0
	movs r1, #0x32
	bl __modsi3
	adds r1, r0, #0
	lsls r0, r1, #5
	adds r0, r0, r1
	movs r1, #0x30
	bl __divsi3
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #5
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_806E998
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F314: .4byte 0x02003108
_0806F318: .4byte 0x02003238
_0806F31C: .4byte 0x00000401
_0806F320: .4byte 0x02003C38

	thumb_func_start sub_806F324
sub_806F324: @ 0x0806F324
	push {r4, lr}
	ldr r0, _0806F384 @ =gUnk_08307E50
	ldr r4, _0806F388 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0806F38C @ =0x02003738
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r4, #0
	bl TmApplyTsa_t
	ldr r0, _0806F390 @ =0x02003108
	ldr r0, [r0, #0xc]
	bl UnitKnowsMagic
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806F398
	ldr r0, _0806F394 @ =gUnk_0831955C
	bl sub_806EB00
	movs r0, #0
	movs r1, #1
	movs r2, #1
	movs r3, #5
	bl sub_806F260
	movs r0, #1
	movs r1, #1
	movs r2, #3
	movs r3, #6
	bl sub_806F260
	movs r0, #2
	movs r1, #9
	movs r2, #1
	movs r3, #7
	bl sub_806F260
	movs r0, #3
	movs r1, #9
	movs r2, #3
	movs r3, #4
	bl sub_806F260
	b _0806F3CE
	.align 2, 0
_0806F384: .4byte gUnk_08307E50
_0806F388: .4byte gBuf
_0806F38C: .4byte 0x02003738
_0806F390: .4byte 0x02003108
_0806F394: .4byte gUnk_0831955C
_0806F398:
	ldr r0, _0806F3D8 @ =gUnk_0831950C
	bl sub_806EB00
	movs r0, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0
	bl sub_806F260
	movs r0, #1
	movs r1, #1
	movs r2, #3
	movs r3, #1
	bl sub_806F260
	movs r0, #2
	movs r1, #9
	movs r2, #1
	movs r3, #2
	bl sub_806F260
	movs r0, #3
	movs r1, #9
	movs r2, #3
	movs r3, #3
	bl sub_806F260
_0806F3CE:
	bl sub_806F170
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806F3D8: .4byte gUnk_0831950C

	thumb_func_start sub_806F3DC
sub_806F3DC: @ 0x0806F3DC
	push {r4, r5, lr}
	sub sp, #0x18
	adds r4, r0, #0
	mov r1, sp
	ldr r0, _0806F41C @ =gUnk_083195B8
	ldm r0!, {r2, r3, r5}
	stm r1!, {r2, r3, r5}
	ldr r0, [r0]
	str r0, [r1]
	movs r5, #0
	str r5, [sp, #0x10]
	add r0, sp, #0x10
	ldr r1, _0806F420 @ =0x02003238
	ldr r2, _0806F424 @ =0x01000140
	bl CpuFastSet
	str r5, [sp, #0x14]
	add r0, sp, #0x14
	ldr r1, _0806F428 @ =0x02003C38
	ldr r2, _0806F42C @ =0x01000120
	bl CpuFastSet
	lsls r4, r4, #2
	mov r1, sp
	adds r0, r1, r4
	ldr r0, [r0]
	bl _call_via_r0
	add sp, #0x18
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806F41C: .4byte gUnk_083195B8
_0806F420: .4byte 0x02003238
_0806F424: .4byte 0x01000140
_0806F428: .4byte 0x02003C38
_0806F42C: .4byte 0x01000120

	thumb_func_start sub_806F430
sub_806F430: @ 0x0806F430
	push {r4, r5, r6, r7, lr}
	adds r6, r1, #0
	ldrb r0, [r0, #0xb]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r5, #0xc0
	ands r5, r0
	adds r4, r0, #0
	ldr r7, _0806F46C @ =0x0203D3DC
_0806F442:
	adds r4, r4, r6
	movs r0, #0x3f
	ands r4, r0
	adds r0, r5, r4
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0806F442
	ldr r0, [r1]
	cmp r0, #0
	beq _0806F442
	ldrh r0, [r1, #0xc]
	ldrh r2, [r7, #2]
	ands r0, r2
	cmp r0, #0
	bne _0806F442
	adds r0, r1, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806F46C: .4byte 0x0203D3DC

	thumb_func_start sub_806F470
sub_806F470: @ 0x0806F470
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r0, _0806F4F0 @ =gBg0Tm+0x98
	movs r1, #0x12
	movs r2, #0x12
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0806F4F4 @ =gBg1Tm+0x98
	movs r1, #0x12
	movs r2, #0x12
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0806F4F8 @ =gBg2Tm+0x98
	movs r1, #0x12
	movs r2, #0x12
	movs r3, #0
	bl TmFillRect_t
	ldr r6, _0806F4FC @ =gUnk_08677510
	adds r4, r7, #0
	adds r4, #0x4c
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r6
	movs r5, #0
	ldrsb r5, [r0, r5]
	cmp r5, #0x7f
	bne _0806F4C8
	adds r0, r7, #0
	adds r0, #0x4a
	movs r2, #0
	ldrsh r0, [r0, r2]
	bl sub_806F3DC
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r6
	movs r5, #0
	ldrsb r5, [r0, r5]
_0806F4C8:
	adds r1, r7, #0
	adds r1, #0x52
	movs r0, #0x20
	ldrh r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0806F4D8
	rsbs r5, r5, #0
_0806F4D8:
	adds r2, r5, #0
	cmp r5, #0
	bge _0806F4E0
	rsbs r2, r5, #0
_0806F4E0:
	movs r0, #0x12
	subs r6, r0, r2
	cmp r5, #0
	bge _0806F500
	movs r4, #0
	rsbs r5, r5, #0
	b _0806F504
	.align 2, 0
_0806F4F0: .4byte gBg0Tm+0x98
_0806F4F4: .4byte gBg1Tm+0x98
_0806F4F8: .4byte gBg2Tm+0x98
_0806F4FC: .4byte gUnk_08677510
_0806F500:
	adds r4, r5, #0
	movs r5, #0
_0806F504:
	lsls r5, r5, #1
	ldr r0, _0806F56C @ =0x02003238
	adds r0, r5, r0
	lsls r4, r4, #1
	ldr r1, _0806F570 @ =gBg0Tm+0x98
	adds r1, r4, r1
	adds r2, r6, #0
	movs r3, #0x12
	bl TmCopyRect_t
	ldr r0, _0806F574 @ =0x02003738
	adds r0, r5, r0
	ldr r1, _0806F578 @ =gBg1Tm+0x98
	adds r1, r4, r1
	adds r2, r6, #0
	movs r3, #0x12
	bl TmCopyRect_t
	ldr r0, _0806F57C @ =0x02003C38
	adds r5, r5, r0
	ldr r0, _0806F580 @ =gBg2Tm+0x98
	adds r4, r4, r0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0x12
	bl TmCopyRect_t
	movs r0, #7
	bl EnableBgSync
	adds r0, r7, #0
	adds r0, #0x4c
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	ldr r1, _0806F584 @ =gUnk_08677510
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0806F566
	adds r0, r7, #0
	bl Proc_Break
_0806F566:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F56C: .4byte 0x02003238
_0806F570: .4byte gBg0Tm+0x98
_0806F574: .4byte 0x02003738
_0806F578: .4byte gBg1Tm+0x98
_0806F57C: .4byte 0x02003C38
_0806F580: .4byte gBg2Tm+0x98
_0806F584: .4byte gUnk_08677510

	thumb_func_start sub_806F588
sub_806F588: @ 0x0806F588
	ldr r1, _0806F590 @ =0x02003108
	movs r0, #0
	strb r0, [r1, #8]
	bx lr
	.align 2, 0
_0806F590: .4byte 0x02003108

	thumb_func_start sub_806F594
sub_806F594: @ 0x0806F594
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r1
	adds r6, r2, #0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r7, _0806F5EC @ =gUnk_08677520
	adds r0, r7, #0
	bl Proc_Find
	adds r4, r0, #0
	cmp r4, #0
	bne _0806F5E2
	ldr r0, _0806F5F0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806F5C0
	movs r0, #0x6f
	bl m4aSongNumStart
_0806F5C0:
	adds r0, r7, #0
	adds r1, r6, #0
	bl SpawnProcLocking
	adds r1, r0, #0
	adds r0, #0x4c
	strh r4, [r0]
	subs r0, #2
	mov r2, r8
	strh r2, [r0]
	adds r0, #8
	strh r5, [r0]
	ldr r0, _0806F5F4 @ =0x02003108
	strh r5, [r0, #2]
	str r4, [r0, #0x14]
	movs r1, #1
	strb r1, [r0, #8]
_0806F5E2:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F5EC: .4byte gUnk_08677520
_0806F5F0: .4byte gPlaySt
_0806F5F4: .4byte 0x02003108

	thumb_func_start sub_806F5F8
sub_806F5F8: @ 0x0806F5F8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r1, _0806F66C @ =0x02003108
	movs r6, #0
	movs r4, #1
	movs r0, #1
	strb r0, [r1, #8]
	adds r1, r5, #0
	adds r1, #0x4c
	movs r0, #4
	strh r0, [r1]
	ldr r3, _0806F670 @ =gDispIo
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r2, #0
	ldrb r1, [r3, #0xc]
	ands r0, r1
	orrs r0, r4
	strb r0, [r3, #0xc]
	movs r0, #3
	ldrb r1, [r3, #0x10]
	orrs r0, r1
	strb r0, [r3, #0x10]
	adds r0, r2, #0
	ldrb r1, [r3, #0x14]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r3, #0x14]
	ldrb r0, [r3, #0x18]
	ands r2, r0
	strb r2, [r3, #0x18]
	ldr r0, _0806F674 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	ldr r1, _0806F678 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0xb8
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	adds r3, #0x3d
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r3]
	ands r0, r1
	strb r0, [r3]
	ldr r0, [r5, #0x38]
	cmp r0, #0
	ble _0806F67C
	str r6, [r5, #0x3c]
	movs r0, #0x3c
	rsbs r0, r0, #0
	b _0806F680
	.align 2, 0
_0806F66C: .4byte 0x02003108
_0806F670: .4byte gDispIo
_0806F674: .4byte 0x0000FFE0
_0806F678: .4byte 0x0000E0FF
_0806F67C:
	str r6, [r5, #0x3c]
	movs r0, #0x3c
_0806F680:
	str r0, [r5, #0x40]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_806F688
sub_806F688: @ 0x0806F688
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r3, _0806F700 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r5, r6, #0
	adds r5, #0x4c
	ldrh r1, [r5]
	adds r0, r3, #0
	adds r0, #0x44
	movs r2, #0
	strb r1, [r0]
	movs r0, #0x10
	subs r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	ldr r4, _0806F704 @ =0x02003108
	ldr r0, [r4, #0x10]
	movs r1, #6
	ldrsh r2, [r4, r1]
	adds r2, #0x8a
	movs r1, #0x50
	bl SetMuScreenPosition
	ldr r1, [r6, #0x3c]
	ldr r2, [r6, #0x40]
	movs r0, #0
	ldrsh r3, [r5, r0]
	movs r0, #0x10
	str r0, [sp]
	movs r0, #2
	bl Interpolate
	strh r0, [r4, #6]
	ldrh r0, [r5]
	adds r0, #3
	strh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	ble _0806F6F6
	adds r0, r6, #0
	bl Proc_Break
_0806F6F6:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806F700: .4byte gDispIo
_0806F704: .4byte 0x02003108

	thumb_func_start sub_806F708
sub_806F708: @ 0x0806F708
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x4c
	movs r5, #0
	movs r0, #1
	strh r0, [r1]
	ldr r3, _0806F764 @ =gDispIo
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r2, #0
	ldrb r1, [r3, #0xc]
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strb r0, [r3, #0xc]
	movs r0, #3
	ldrb r1, [r3, #0x10]
	orrs r0, r1
	strb r0, [r3, #0x10]
	adds r0, r2, #0
	ldrb r1, [r3, #0x14]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strb r0, [r3, #0x14]
	ldrb r0, [r3, #0x18]
	ands r2, r0
	strb r2, [r3, #0x18]
	ldr r0, _0806F768 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	ldr r1, _0806F76C @ =0x0000E0FF
	ands r0, r1
	movs r2, #0xb8
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	ldr r0, [r4, #0x38]
	cmp r0, #0
	ble _0806F770
	movs r0, #0x3c
	b _0806F774
	.align 2, 0
_0806F764: .4byte gDispIo
_0806F768: .4byte 0x0000FFE0
_0806F76C: .4byte 0x0000E0FF
_0806F770:
	movs r0, #0x3c
	rsbs r0, r0, #0
_0806F774:
	str r0, [r4, #0x3c]
	str r5, [r4, #0x40]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806F780
sub_806F780: @ 0x0806F780
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r4, _0806F7F4 @ =gDispIo
	adds r2, r4, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r5, r6, #0
	adds r5, #0x4c
	ldrh r2, [r5]
	movs r0, #0x10
	subs r0, r0, r2
	adds r1, r4, #0
	adds r1, #0x44
	movs r3, #0
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r3, [r0]
	ldr r4, _0806F7F8 @ =0x02003108
	ldr r0, [r4, #0x10]
	movs r1, #6
	ldrsh r2, [r4, r1]
	adds r2, #0x8a
	movs r1, #0x50
	bl SetMuScreenPosition
	ldr r1, [r6, #0x3c]
	ldr r2, [r6, #0x40]
	movs r0, #0
	ldrsh r3, [r5, r0]
	movs r0, #0x10
	str r0, [sp]
	movs r0, #5
	bl Interpolate
	strh r0, [r4, #6]
	ldrh r0, [r5]
	adds r0, #3
	strh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _0806F7EC
	adds r0, r6, #0
	bl Proc_Break
_0806F7EC:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806F7F4: .4byte gDispIo
_0806F7F8: .4byte 0x02003108

	thumb_func_start sub_806F7FC
sub_806F7FC: @ 0x0806F7FC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x4a
	movs r1, #0
	ldrsh r0, [r0, r1]
	bl GetUnit
	ldr r1, _0806F820 @ =0x02003108
	str r0, [r1, #0xc]
	movs r0, #0
	bl sub_806FFDC
	adds r0, r4, #0
	bl Proc_Break
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806F820: .4byte 0x02003108

	thumb_func_start sub_806F824
sub_806F824: @ 0x0806F824
	push {r4, r5, lr}
	ldr r4, _0806F8A8 @ =0x02003108
	ldr r0, [r4, #0x10]
	cmp r0, #0
	beq _0806F836
	movs r1, #0x50
	movs r2, #0x8a
	bl SetMuScreenPosition
_0806F836:
	ldr r3, _0806F8AC @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r3, #0xc]
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r3, #0xc]
	movs r2, #3
	ldrb r0, [r3, #0x10]
	orrs r0, r2
	strb r0, [r3, #0x10]
	ldrb r5, [r3, #0x14]
	ands r1, r5
	movs r0, #2
	orrs r1, r0
	strb r1, [r3, #0x14]
	ldrb r0, [r3, #0x18]
	orrs r2, r0
	strb r2, [r3, #0x18]
	adds r2, r3, #0
	adds r2, #0x3c
	ldr r0, _0806F8B0 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	ldr r1, _0806F8B4 @ =0x0000E0FF
	ands r0, r1
	movs r5, #0x80
	lsls r5, r5, #4
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #6
	strb r0, [r1]
	adds r1, #1
	movs r0, #8
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	strb r2, [r4, #8]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806F8A8: .4byte 0x02003108
_0806F8AC: .4byte gDispIo
_0806F8B0: .4byte 0x0000FFE0
_0806F8B4: .4byte 0x0000E0FF

	thumb_func_start sub_806F8B8
sub_806F8B8: @ 0x0806F8B8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r1, r2, #0
	ldr r0, _0806F8E8 @ =gUnk_08677538
	bl SpawnProcLocking
	movs r1, #0xb
	ldrsb r1, [r4, r1]
	adds r2, r0, #0
	adds r2, #0x4a
	strh r1, [r2]
	str r5, [r0, #0x38]
	ldr r0, _0806F8EC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0806F8E2
	movs r0, #0xc8
	bl m4aSongNumStart
_0806F8E2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806F8E8: .4byte gUnk_08677538
_0806F8EC: .4byte gPlaySt

	thumb_func_start sub_806F8F0
sub_806F8F0: @ 0x0806F8F0
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _0806F948 @ =0x02003108
	movs r2, #4
	ldrsh r1, [r0, r2]
	adds r1, #0x69
	movs r3, #6
	ldrsh r2, [r0, r3]
	adds r2, #5
	ldr r3, _0806F94C @ =gUnk_08677578
	ldr r4, _0806F950 @ =gUnk_0867758C
	lsls r0, r5, #1
	adds r0, r0, r4
	ldrh r0, [r0]
	movs r4, #0xf9
	lsls r4, r4, #6
	adds r0, r0, r4
	str r0, [sp]
	movs r0, #4
	bl PutSprite
	bl GetGameTime
	lsrs r0, r0, #2
	movs r1, #0xf
	ands r0, r1
	lsls r5, r5, #6
	lsls r0, r0, #1
	ldr r1, _0806F954 @ =gUnk_083087C8
	adds r0, r0, r1
	adds r5, r5, r0
	ldr r1, _0806F958 @ =gPal+0x268
	adds r0, r5, #0
	movs r2, #0xb
	bl CpuSet
	bl EnablePalSync
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806F948: .4byte 0x02003108
_0806F94C: .4byte gUnk_08677578
_0806F950: .4byte gUnk_0867758C
_0806F954: .4byte gUnk_083087C8
_0806F958: .4byte gPal+0x268

	thumb_func_start sub_806F95C
sub_806F95C: @ 0x0806F95C
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	mov sb, r0
	ldr r4, _0806F9EC @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sl, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov r8, r2
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sl
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r0, _0806F9F0 @ =0x02003108
	ldrb r0, [r0]
	movs r1, #0x36
	add sb, r1
	mov r2, sb
	strb r0, [r2]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806F9EC: .4byte gSinLut
_0806F9F0: .4byte 0x02003108

	thumb_func_start sub_806F9F4
sub_806F9F4: @ 0x0806F9F4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x36
	ldrb r0, [r5]
	bl sub_806F8F0
	ldr r1, _0806FA18 @ =0x02003108
	ldrh r0, [r1, #2]
	cmp r0, #0
	beq _0806FA1C
	movs r0, #5
	strh r0, [r4, #0x38]
	adds r0, r4, #0
	bl Proc_Break
	b _0806FA20
	.align 2, 0
_0806FA18: .4byte 0x02003108
_0806FA1C:
	ldrb r0, [r1]
	strb r0, [r5]
_0806FA20:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_806FA28
sub_806FA28: @ 0x0806FA28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r5, _0806FAEC @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r5
	mov sl, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov sb, r2
	mov r1, sb
	bl Div
	mov r8, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	movs r1, #0
	ldrsh r4, [r5, r1]
	rsbs r4, r4, #0
	lsls r4, r4, #4
	movs r2, #0x38
	ldrsh r0, [r7, r2]
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r5, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r2, sl
	movs r0, #0
	ldrsh r4, [r2, r0]
	lsls r4, r4, #4
	movs r1, #0x38
	ldrsh r0, [r7, r1]
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #8
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl SetObjAffine
	adds r0, r7, #0
	adds r0, #0x36
	ldrb r0, [r0]
	bl sub_806F8F0
	ldrh r0, [r7, #0x38]
	subs r0, #1
	strh r0, [r7, #0x38]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806FADA
	movs r0, #1
	strh r0, [r7, #0x38]
	adds r0, r7, #0
	bl Proc_Break
_0806FADA:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806FAEC: .4byte gSinLut

	thumb_func_start sub_806FAF0
sub_806FAF0: @ 0x0806FAF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r5, _0806FBB8 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r5
	mov sl, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov sb, r2
	mov r1, sb
	bl Div
	mov r8, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	movs r1, #0
	ldrsh r4, [r5, r1]
	rsbs r4, r4, #0
	lsls r4, r4, #4
	movs r2, #0x38
	ldrsh r0, [r7, r2]
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r5, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r2, sl
	movs r0, #0
	ldrsh r4, [r2, r0]
	lsls r4, r4, #4
	movs r1, #0x38
	ldrsh r0, [r7, r1]
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #8
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl SetObjAffine
	ldr r4, _0806FBBC @ =0x02003108
	ldrb r0, [r4]
	bl sub_806F8F0
	ldrh r0, [r7, #0x38]
	adds r0, #1
	strh r0, [r7, #0x38]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #6
	ble _0806FBA6
	ldrb r0, [r4]
	adds r1, r7, #0
	adds r1, #0x36
	strb r0, [r1]
	adds r0, r7, #0
	bl Proc_Break
_0806FBA6:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806FBB8: .4byte gSinLut
_0806FBBC: .4byte 0x02003108

	thumb_func_start sub_806FBC0
sub_806FBC0: @ 0x0806FBC0
	movs r2, #0
	movs r1, #0x65
	strh r1, [r0, #0x2a]
	movs r1, #0xc6
	strh r1, [r0, #0x2c]
	strh r2, [r0, #0x30]
	strh r2, [r0, #0x2e]
	movs r1, #4
	strh r1, [r0, #0x34]
	strh r1, [r0, #0x32]
	bx lr
	.align 2, 0

	thumb_func_start sub_806FBD8
sub_806FBD8: @ 0x0806FBD8
	adds r1, r0, #0
	ldr r2, _0806FC08 @ =0x02003108
	movs r0, #0x20
	ldrh r3, [r2, #2]
	ands r0, r3
	cmp r0, #0
	beq _0806FBEE
	movs r0, #0x1f
	strh r0, [r1, #0x32]
	movs r0, #0x5f
	strh r0, [r1, #0x2a]
_0806FBEE:
	movs r0, #0x10
	ldrh r3, [r2, #2]
	ands r0, r3
	cmp r0, #0
	beq _0806FC00
	movs r0, #0x1f
	strh r0, [r1, #0x34]
	movs r0, #0xcc
	strh r0, [r1, #0x2c]
_0806FC00:
	movs r0, #0
	strh r0, [r2, #2]
	bx lr
	.align 2, 0
_0806FC08: .4byte 0x02003108

	thumb_func_start sub_806FC0C
sub_806FC0C: @ 0x0806FC0C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _0806FCE4 @ =0x00004E40
	mov sb, r0
	ldrh r1, [r7, #0x32]
	ldrh r2, [r7, #0x2e]
	adds r0, r1, r2
	strh r0, [r7, #0x2e]
	ldrh r3, [r7, #0x30]
	ldrh r2, [r7, #0x34]
	adds r0, r3, r2
	strh r0, [r7, #0x30]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _0806FC38
	subs r0, r1, #1
	strh r0, [r7, #0x32]
_0806FC38:
	ldrh r1, [r7, #0x34]
	movs r3, #0x34
	ldrsh r0, [r7, r3]
	cmp r0, #4
	ble _0806FC46
	subs r0, r1, #1
	strh r0, [r7, #0x34]
_0806FC46:
	bl GetGameTime
	movs r1, #3
	ands r1, r0
	cmp r1, #0
	bne _0806FC6E
	ldrh r1, [r7, #0x2a]
	movs r2, #0x2a
	ldrsh r0, [r7, r2]
	cmp r0, #0x64
	bgt _0806FC60
	adds r0, r1, #1
	strh r0, [r7, #0x2a]
_0806FC60:
	ldrh r1, [r7, #0x2c]
	movs r3, #0x2c
	ldrsh r0, [r7, r3]
	cmp r0, #0xc6
	ble _0806FC6E
	subs r0, r1, #1
	strh r0, [r7, #0x2c]
_0806FC6E:
	ldr r6, _0806FCE8 @ =0x02003108
	movs r0, #4
	ldrsh r5, [r6, r0]
	movs r1, #0x2a
	ldrsh r0, [r7, r1]
	adds r5, r5, r0
	movs r2, #6
	ldrsh r4, [r6, r2]
	adds r4, #6
	ldr r3, _0806FCEC @ =Sprite_8x16
	mov r8, r3
	ldrh r1, [r7, #0x2e]
	lsrs r0, r1, #5
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, #0x4a
	add r0, sb
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r4, #0
	mov r3, r8
	bl PutSprite
	movs r2, #4
	ldrsh r5, [r6, r2]
	movs r3, #0x2c
	ldrsh r0, [r7, r3]
	adds r5, r5, r0
	movs r0, #6
	ldrsh r4, [r6, r0]
	adds r4, #6
	ldr r6, _0806FCF0 @ =Sprite_8x16_HFlipped
	ldrh r7, [r7, #0x30]
	lsrs r0, r7, #5
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, #0x4a
	add r0, sb
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r4, #0
	adds r3, r6, #0
	bl PutSprite
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806FCE4: .4byte 0x00004E40
_0806FCE8: .4byte 0x02003108
_0806FCEC: .4byte Sprite_8x16
_0806FCF0: .4byte Sprite_8x16_HFlipped

	thumb_func_start sub_806FCF4
sub_806FCF4: @ 0x0806FCF4
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r4, _0806FD54 @ =0x02003108
	movs r0, #4
	ldrsh r1, [r4, r0]
	adds r1, #0xe3
	movs r3, #6
	ldrsh r2, [r4, r3]
	adds r2, #0xc
	ldr r5, _0806FD58 @ =Sprite_8x8
	ldrb r6, [r4, #1]
	ldr r3, _0806FD5C @ =0x00004EA4
	adds r0, r6, r3
	str r0, [sp]
	movs r0, #2
	adds r3, r5, #0
	bl PutSprite
	movs r6, #4
	ldrsh r1, [r4, r6]
	adds r1, #0xdd
	movs r0, #6
	ldrsh r2, [r4, r0]
	adds r2, #0xc
	ldr r0, _0806FD60 @ =0x00004E45
	str r0, [sp]
	movs r0, #2
	adds r3, r5, #0
	bl PutSprite
	movs r3, #4
	ldrsh r1, [r4, r3]
	adds r1, #0xd6
	movs r6, #6
	ldrsh r2, [r4, r6]
	adds r2, #0xc
	ldrb r4, [r4]
	ldr r3, _0806FD64 @ =0x00004EA5
	adds r0, r4, r3
	str r0, [sp]
	movs r0, #2
	adds r3, r5, #0
	bl PutSprite
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806FD54: .4byte 0x02003108
_0806FD58: .4byte Sprite_8x8
_0806FD5C: .4byte 0x00004EA4
_0806FD60: .4byte 0x00004E45
_0806FD64: .4byte 0x00004EA5

	thumb_func_start sub_806FD68
sub_806FD68: @ 0x0806FD68
	push {r4, lr}
	sub sp, #4
	ldr r4, _0806FDA4 @ =0x02003108
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r0, #6
	ldrsh r2, [r4, r0]
	ldr r3, _0806FDA8 @ =gUnk_086775D4
	movs r0, #0xb9
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #0xc
	bl PutSprite
	movs r0, #4
	ldrsh r1, [r4, r0]
	adds r1, #0x40
	movs r0, #6
	ldrsh r2, [r4, r0]
	adds r2, #0x83
	ldr r3, _0806FDAC @ =Sprite_32x16
	ldr r0, _0806FDB0 @ =0x00004E90
	str r0, [sp]
	movs r0, #0xb
	bl PutSprite
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806FDA4: .4byte 0x02003108
_0806FDA8: .4byte gUnk_086775D4
_0806FDAC: .4byte Sprite_32x16
_0806FDB0: .4byte 0x00004E90

	thumb_func_start sub_806FDB4
sub_806FDB4: @ 0x0806FDB4
	push {r4, r5, lr}
	sub sp, #0xc
	bl GetGameTime
	movs r2, #0
	movs r1, #0x1f
	ands r1, r0
	cmp r1, #0x13
	bhi _0806FDC8
	movs r2, #1
_0806FDC8:
	adds r5, r2, #0
	ldr r1, _0806FE70 @ =gUnk_083195C8
	add r0, sp, #4
	movs r2, #6
	bl memcpy
	ldr r4, _0806FE74 @ =0x02003108
	movs r0, #8
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _0806FE68
	ldrb r0, [r4]
	cmp r0, #0
	bne _0806FE30
	ldr r1, [r4, #0xc]
	movs r0, #0x10
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _0806FE30
	movs r0, #0x78
	movs r1, #0x28
	movs r2, #1
	bl PutSysArrow
	movs r0, #0x78
	movs r1, #0x38
	movs r2, #1
	bl PutSysArrow
	cmp r5, #0
	beq _0806FE30
	ldr r3, _0806FE78 @ =Sprite_8x8
	ldr r0, [r4, #0xc]
	ldrb r0, [r0, #0x19]
	lsrs r0, r0, #6
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #4
	movs r0, #0xf
	ldrh r1, [r1]
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _0806FE7C @ =0x00000803
	adds r0, r0, r1
	str r0, [sp]
	movs r0, #4
	movs r1, #0xb8
	movs r2, #0x4e
	bl PutSprite
_0806FE30:
	ldr r0, _0806FE74 @ =0x02003108
	ldr r1, [r0, #0xc]
	movs r0, #0x20
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _0806FE68
	cmp r5, #0
	beq _0806FE68
	ldr r3, _0806FE78 @ =Sprite_8x8
	ldrb r1, [r1, #0x19]
	lsrs r0, r1, #6
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #4
	movs r0, #0xf
	ldrh r1, [r1]
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _0806FE7C @ =0x00000803
	adds r0, r0, r1
	str r0, [sp]
	movs r0, #4
	movs r1, #0x20
	movs r2, #0x56
	bl PutSprite
_0806FE68:
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806FE70: .4byte gUnk_083195C8
_0806FE74: .4byte 0x02003108
_0806FE78: .4byte Sprite_8x8
_0806FE7C: .4byte 0x00000803

	thumb_func_start sub_806FE80
sub_806FE80: @ 0x0806FE80
	push {r4, lr}
	ldr r3, _0806FEDC @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r3, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0xc0
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x44
	movs r2, #0
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	movs r4, #0x46
	movs r0, #0x10
	strb r0, [r4, r3]
	ldr r0, _0806FEE0 @ =0x0000FFE0
	ldrh r4, [r3, #0x3c]
	ands r0, r4
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r3, [r1]
	orrs r0, r3
	strb r0, [r1]
	ldr r0, _0806FEE4 @ =gPal
	strh r2, [r0]
	bl EnablePalSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806FEDC: .4byte gDispIo
_0806FEE0: .4byte 0x0000FFE0
_0806FEE4: .4byte gPal

	thumb_func_start sub_806FEE8
sub_806FEE8: @ 0x0806FEE8
	push {r4, r5, lr}
	sub sp, #0x18
	adds r5, r0, #0
	ldr r1, _0806FFA0 @ =gUnk_083195CE
	mov r0, sp
	movs r2, #0x18
	bl memcpy
	mov r0, sp
	bl InitBgs
	movs r0, #0x80
	lsls r0, r0, #3
	bl SetBlankChr
	ldr r0, _0806FFA4 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	movs r0, #4
	bl EnableBgSync
	bl ApplySystemGraphics
	bl ApplyUnitSpritePalettes
	ldr r1, _0806FFA8 @ =0x0600B000
	movs r2, #1
	rsbs r2, r2, #0
	movs r0, #0
	bl sub_806EA24
	ldr r0, _0806FFAC @ =gUnk_083080D0
	ldr r1, _0806FFB0 @ =0x06014800
	bl Decompress
	movs r0, #4
	bl ApplyIconPalettes
	movs r0, #6
	bl sub_80412DC
	movs r0, #1
	movs r1, #0x13
	bl ApplyIconPalette
	ldr r0, _0806FFB4 @ =gUnk_08307CEC
	ldr r4, _0806FFB8 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0806FFBC @ =gBg1Tm
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r4, #0
	bl TmApplyTsa_t
	ldr r0, _0806FFC0 @ =gUnk_08307ED4
	ldr r1, _0806FFC4 @ =0x06008C00
	bl Decompress
	ldr r0, _0806FFC8 @ =gUnk_08308050
	movs r1, #0xe0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0806FFCC @ =gPal+0x20
	movs r2, #0x88
	lsls r2, r2, #2
	adds r1, r0, r2
	movs r2, #8
	bl CpuFastSet
	movs r0, #1
	movs r1, #0x14
	bl ApplyIconPalette
	ldr r0, _0806FFD0 @ =gUnk_08308920
	ldr r1, _0806FFD4 @ =0x06004E00
	bl Decompress
	ldr r1, _0806FFD8 @ =0x02003108
	movs r0, #0
	str r0, [r1, #0x10]
	adds r0, r5, #0
	bl sub_806F824
	add sp, #0x18
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0806FFA0: .4byte gUnk_083195CE
_0806FFA4: .4byte gBg2Tm
_0806FFA8: .4byte 0x0600B000
_0806FFAC: .4byte gUnk_083080D0
_0806FFB0: .4byte 0x06014800
_0806FFB4: .4byte gUnk_08307CEC
_0806FFB8: .4byte gBuf
_0806FFBC: .4byte gBg1Tm
_0806FFC0: .4byte gUnk_08307ED4
_0806FFC4: .4byte 0x06008C00
_0806FFC8: .4byte gUnk_08308050
_0806FFCC: .4byte gPal+0x20
_0806FFD0: .4byte gUnk_08308920
_0806FFD4: .4byte 0x06004E00
_0806FFD8: .4byte 0x02003108

	thumb_func_start sub_806FFDC
sub_806FFDC: @ 0x0806FFDC
	push {r4, r5, lr}
	ldr r2, _08070000 @ =0x02003108
	ldr r1, [r2, #0xc]
	movs r0, #0xc0
	ldrb r1, [r1, #0xb]
	ands r0, r1
	cmp r0, #0
	beq _0806FFF8
	ldr r1, _08070004 @ =gBmSt
	movs r0, #0x40
	ldrb r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _08070008
_0806FFF8:
	movs r0, #3
	strb r0, [r2, #1]
	b _08070016
	.align 2, 0
_08070000: .4byte 0x02003108
_08070004: .4byte gBmSt
_08070008:
	movs r0, #2
	strb r0, [r2, #1]
	ldrb r0, [r2]
	cmp r0, #2
	bne _08070016
	movs r0, #1
	strb r0, [r2]
_08070016:
	bl ResetText
	bl InitIcons
	bl sub_806EAF0
	ldr r5, _08070088 @ =gBg2Tm+0x42
	ldr r4, _0807008C @ =0x02003108
	ldr r0, [r4, #0xc]
	bl GetUnitFid
	adds r1, r0, #0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r5, #0
	movs r3, #0xd
	bl PutFace80x72
	bl EndAllMus
	ldr r0, [r4, #0xc]
	movs r1, #0x50
	movs r2, #0x8a
	bl StartUiMu
	str r0, [r4, #0x10]
	bl sub_806EB48
	ldrb r0, [r4]
	bl sub_806F3DC
	ldr r0, _08070090 @ =0x02003238
	ldr r1, _08070094 @ =gBg0Tm+0x98
	movs r2, #0x12
	movs r3, #0x12
	bl TmCopyRect_t
	ldr r0, _08070098 @ =0x02003738
	ldr r1, _0807009C @ =gBg1Tm+0x98
	movs r2, #0x12
	movs r3, #0x12
	bl TmCopyRect_t
	ldr r0, _080700A0 @ =0x02003C38
	adds r5, #0x56
	adds r1, r5, #0
	movs r2, #0x12
	movs r3, #0x12
	bl TmCopyRect_t
	movs r0, #7
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08070088: .4byte gBg2Tm+0x42
_0807008C: .4byte 0x02003108
_08070090: .4byte 0x02003238
_08070094: .4byte gBg0Tm+0x98
_08070098: .4byte 0x02003738
_0807009C: .4byte gBg1Tm+0x98
_080700A0: .4byte 0x02003C38

	thumb_func_start sub_80700A4
sub_80700A4: @ 0x080700A4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r1, _08070128 @ =gKeySt
	ldr r2, [r1]
	movs r0, #2
	ldrh r3, [r2, #8]
	ands r0, r3
	adds r3, r1, #0
	cmp r0, #0
	beq _0807013C
	ldr r3, _0807012C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r4, [r3, #1]
	ands r0, r4
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0xc0
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x44
	movs r2, #0
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r4, r3, #0
	adds r4, #0x46
	movs r0, #0x10
	strb r0, [r4]
	ldr r0, _08070130 @ =0x0000FFE0
	ldrh r4, [r3, #0x3c]
	ands r0, r4
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r3, [r1]
	orrs r0, r3
	strb r0, [r1]
	ldr r0, _08070134 @ =gPal
	strh r2, [r0]
	bl EnablePalSync
	adds r0, r5, #0
	bl Proc_Break
	ldr r0, _08070138 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _08070120
	b _08070220
_08070120:
	movs r0, #0x6b
	bl m4aSongNumStart
	b _08070220
	.align 2, 0
_08070128: .4byte gKeySt
_0807012C: .4byte gDispIo
_08070130: .4byte 0x0000FFE0
_08070134: .4byte gPal
_08070138: .4byte gPlaySt
_0807013C:
	ldrh r1, [r2, #6]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08070160
	ldr r4, _0807015C @ =0x02003108
	ldrb r1, [r4, #1]
	ldrb r2, [r4]
	adds r0, r2, r1
	subs r0, #1
	bl __modsi3
	strb r0, [r4]
	ldrb r1, [r4]
	movs r0, #0x20
	b _0807017E
	.align 2, 0
_0807015C: .4byte 0x02003108
_08070160:
	movs r6, #0x10
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _0807018C
	ldr r4, _08070188 @ =0x02003108
	ldrb r1, [r4, #1]
	ldrb r3, [r4]
	adds r0, r3, r1
	adds r0, #1
	bl __modsi3
	strb r0, [r4]
	ldrb r1, [r4]
	movs r0, #0x10
_0807017E:
	adds r2, r5, #0
	bl sub_806F594
	b _08070220
	.align 2, 0
_08070188: .4byte 0x02003108
_0807018C:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080701AC
	ldr r0, _080701A8 @ =0x02003108
	ldr r0, [r0, #0xc]
	movs r4, #1
	rsbs r4, r4, #0
	adds r1, r4, #0
	bl sub_806F430
	adds r2, r0, #0
	adds r1, r4, #0
	b _080701F4
	.align 2, 0
_080701A8: .4byte 0x02003108
_080701AC:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080701C8
	ldr r0, _080701C4 @ =0x02003108
	ldr r0, [r0, #0xc]
	movs r1, #1
	bl sub_806F430
	adds r2, r0, #0
	movs r1, #1
	b _080701F4
	.align 2, 0
_080701C4: .4byte 0x02003108
_080701C8:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08070200
	ldr r4, _080701FC @ =0x02003108
	ldr r2, [r4, #0xc]
	ldrb r0, [r2, #0x19]
	cmp r0, #0
	beq _08070200
	bl GetUnit
	adds r2, r0, #0
	ldr r1, [r4, #0xc]
	adds r0, r6, #0
	ldrh r1, [r1, #0xc]
	ands r0, r1
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, #0
	beq _080701F2
	movs r1, #1
_080701F2:
	adds r0, r2, #0
_080701F4:
	adds r2, r5, #0
	bl sub_806F8B8
	b _08070220
	.align 2, 0
_080701FC: .4byte 0x02003108
_08070200:
	ldr r1, [r3]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08070220
	adds r0, r5, #0
	movs r1, #0
	bl Proc_Goto
	ldr r0, _08070228 @ =0x02003108
	ldrb r0, [r0]
	adds r1, r5, #0
	bl sub_807030C
_08070220:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08070228: .4byte 0x02003108

	thumb_func_start sub_807022C
sub_807022C: @ 0x0807022C
	push {r4, lr}
	ldr r3, _08070258 @ =gPlaySt
	movs r1, #0xfc
	ldrb r0, [r3, #0x14]
	ands r1, r0
	ldr r2, _0807025C @ =0x02003108
	movs r0, #3
	ldrb r4, [r2]
	ands r0, r4
	orrs r1, r0
	strb r1, [r3, #0x14]
	ldr r1, _08070260 @ =0x0203D3DC
	ldr r0, [r2, #0xc]
	ldrb r0, [r0, #0xb]
	strb r0, [r1, #1]
	movs r0, #0
	bl SetOnVMatch
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08070258: .4byte gPlaySt
_0807025C: .4byte 0x02003108
_08070260: .4byte 0x0203D3DC

	thumb_func_start sub_8070264
sub_8070264: @ 0x08070264
	push {lr}
	bl sub_8070CA8
	ldr r1, _08070274 @ =0x02003108
	str r0, [r1, #0x14]
	pop {r0}
	bx r0
	.align 2, 0
_08070274: .4byte 0x02003108

	thumb_func_start sub_8070278
sub_8070278: @ 0x08070278
	push {r4, lr}
	ldr r0, _080702AC @ =0x02003108
	movs r1, #6
	ldrsh r4, [r0, r1]
	rsbs r4, r4, #0
	movs r0, #0xff
	ands r4, r0
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	adds r2, r4, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	adds r2, r4, #0
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080702AC: .4byte 0x02003108

	thumb_func_start sub_80702B0
sub_80702B0: @ 0x080702B0
	push {lr}
	bl sub_806EABC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80702BC
sub_80702BC: @ 0x080702BC
	push {r4, r5, r6, r7, lr}
	adds r6, r1, #0
	ldr r2, _08070300 @ =0x02003108
	movs r5, #0
	movs r3, #0
	strh r3, [r2, #4]
	strh r3, [r2, #6]
	ldr r4, _08070304 @ =gPlaySt
	movs r1, #3
	ldrb r7, [r4, #0x14]
	ands r1, r7
	strb r1, [r2]
	str r0, [r2, #0xc]
	str r3, [r2, #0x14]
	strh r3, [r2, #2]
	strb r5, [r2, #8]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	bl sub_8084BB8
	ldrb r4, [r4, #0x1d]
	lsls r0, r4, #0x1e
	cmp r0, #0
	blt _080702F2
	movs r0, #0x6a
	bl m4aSongNumStart
_080702F2:
	ldr r0, _08070308 @ =gUnk_08677680
	adds r1, r6, #0
	bl SpawnProcLocking
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070300: .4byte 0x02003108
_08070304: .4byte gPlaySt
_08070308: .4byte gUnk_08677680

	thumb_func_start sub_807030C
sub_807030C: @ 0x0807030C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	ldr r1, _08070334 @ =0x02003108
	ldr r0, [r1, #0x14]
	cmp r0, #0
	bne _08070354
	cmp r4, #1
	beq _08070348
	cmp r4, #1
	bgt _08070338
	cmp r4, #0
	beq _0807033E
	b _08070354
	.align 2, 0
_08070334: .4byte 0x02003108
_08070338:
	cmp r4, #2
	beq _08070350
	b _08070354
_0807033E:
	ldr r0, _08070344 @ =gUnk_08677824
	b _08070352
	.align 2, 0
_08070344: .4byte gUnk_08677824
_08070348:
	ldr r0, _0807034C @ =gUnk_08677A00
	b _08070352
	.align 2, 0
_0807034C: .4byte gUnk_08677A00
_08070350:
	ldr r0, _08070364 @ =gUnk_08677BA4
_08070352:
	str r0, [r1, #0x14]
_08070354:
	ldr r0, _08070368 @ =0x02003108
	ldr r0, [r0, #0x14]
	adds r1, r5, #0
	bl StartMovingHelpBox
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08070364: .4byte gUnk_08677BA4
_08070368: .4byte 0x02003108

	thumb_func_start sub_807036C
sub_807036C: @ 0x0807036C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08070394 @ =0x02003108
	ldr r0, [r0, #0xc]
	ldr r1, [r4, #0x2c]
	ldrh r1, [r1, #0x12]
	lsls r1, r1, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r1, r4, #0
	adds r1, #0x4e
	strh r0, [r1]
	bl GetItemDescMsg
	adds r4, #0x4c
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08070394: .4byte 0x02003108

	thumb_func_start sub_8070398
sub_8070398: @ 0x08070398
	adds r2, r0, #0
	ldr r0, _080703B4 @ =0x02003108
	ldr r0, [r0, #0xc]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #4
	bhi _08070408
	lsls r0, r0, #2
	ldr r1, _080703B8 @ =_080703BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080703B4: .4byte 0x02003108
_080703B8: .4byte _080703BC
_080703BC: @ jump table
	.4byte _080703D0 @ case 0
	.4byte _080703DA @ case 1
	.4byte _080703E8 @ case 2
	.4byte _080703F4 @ case 3
	.4byte _08070400 @ case 4
_080703D0:
	adds r1, r2, #0
	adds r1, #0x4c
	movs r0, #0xb5
	lsls r0, r0, #3
	b _08070406
_080703DA:
	adds r1, r2, #0
	adds r1, #0x4c
	ldr r0, _080703E4 @ =0x000005A9
	b _08070406
	.align 2, 0
_080703E4: .4byte 0x000005A9
_080703E8:
	adds r1, r2, #0
	adds r1, #0x4c
	ldr r0, _080703F0 @ =0x000005AA
	b _08070406
	.align 2, 0
_080703F0: .4byte 0x000005AA
_080703F4:
	adds r1, r2, #0
	adds r1, #0x4c
	ldr r0, _080703FC @ =0x000005AC
	b _08070406
	.align 2, 0
_080703FC: .4byte 0x000005AC
_08070400:
	adds r1, r2, #0
	adds r1, #0x4c
	ldr r0, _0807040C @ =0x000005AB
_08070406:
	strh r0, [r1]
_08070408:
	bx lr
	.align 2, 0
_0807040C: .4byte 0x000005AB

	thumb_func_start sub_8070410
sub_8070410: @ 0x08070410
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0807042C @ =0x02003108
	ldr r0, [r0, #0xc]
	bl UnitKnowsMagic
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070434
	adds r1, r4, #0
	adds r1, #0x4c
	ldr r0, _08070430 @ =0x0000059D
	b _0807043A
	.align 2, 0
_0807042C: .4byte 0x02003108
_08070430: .4byte 0x0000059D
_08070434:
	adds r1, r4, #0
	adds r1, #0x4c
	ldr r0, _08070444 @ =0x0000059C
_0807043A:
	strh r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08070444: .4byte 0x0000059C

	thumb_func_start sub_8070448
sub_8070448: @ 0x08070448
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, _08070488 @ =0x02003108
	ldr r0, [r5, #0xc]
	ldrh r0, [r0, #0x1c]
	cmp r0, #0
	bne _0807045C
	adds r0, r4, #0
	bl sub_8070BEC
_0807045C:
	ldr r0, [r5, #0xc]
	ldr r1, [r4, #0x2c]
	ldrh r1, [r1, #0x12]
	lsls r1, r1, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0
	bne _08070496
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r0, [r0]
	cmp r0, #0
	beq _08070480
	cmp r0, #0x10
	beq _08070480
	cmp r0, #0x40
	bne _0807048C
_08070480:
	adds r0, r4, #0
	bl sub_8070B8C
	b _08070496
	.align 2, 0
_08070488: .4byte 0x02003108
_0807048C:
	cmp r0, #0x80
	bne _08070496
	adds r0, r4, #0
	bl sub_8070BBC
_08070496:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_807049C
sub_807049C: @ 0x0807049C
	push {r4, r5, lr}
	sub sp, #0x10
	adds r5, r0, #0
	ldr r1, _080704D4 @ =gUnk_083195E6
	mov r0, sp
	movs r2, #0x10
	bl memcpy
	ldr r0, [r5, #0x2c]
	ldrh r4, [r0, #0x12]
	ldr r0, _080704D8 @ =0x02003108
	ldr r0, [r0, #0xc]
	bl UnitKnowsMagic
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080704C0
	adds r4, #4
_080704C0:
	lsls r0, r4, #1
	add r0, sp
	ldrh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x4c
	strh r1, [r0]
	add sp, #0x10
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080704D4: .4byte gUnk_083195E6
_080704D8: .4byte 0x02003108

	thumb_func_start sub_80704DC
sub_80704DC: @ 0x080704DC
	adds r1, r0, #0
	ldr r0, _080704F4 @ =0x02003108
	ldr r0, [r0, #0xc]
	ldr r0, [r0]
	ldrh r2, [r0, #2]
	cmp r2, #0
	beq _080704F8
	adds r0, r1, #0
	adds r0, #0x4c
	strh r2, [r0]
	b _080704FE
	.align 2, 0
_080704F4: .4byte 0x02003108
_080704F8:
	adds r1, #0x4c
	ldr r0, _08070500 @ =0x0000066D
	strh r0, [r1]
_080704FE:
	bx lr
	.align 2, 0
_08070500: .4byte 0x0000066D

	thumb_func_start sub_8070504
sub_8070504: @ 0x08070504
	ldr r1, _08070514 @ =0x02003108
	ldr r1, [r1, #0xc]
	ldr r1, [r1, #4]
	ldrh r1, [r1, #2]
	adds r0, #0x4c
	strh r1, [r0]
	bx lr
	.align 2, 0
_08070514: .4byte 0x02003108

	thumb_func_start sub_8070518
sub_8070518: @ 0x08070518
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0807053C @ =0x02003108
	ldr r0, [r0, #0xc]
	bl GetUnitTotalSupportLevel
	cmp r0, #0
	bne _08070546
	adds r0, r4, #0
	adds r0, #0x50
	ldrh r0, [r0]
	cmp r0, #0x80
	bne _08070540
	adds r0, r4, #0
	bl sub_8070BBC
	b _08070546
	.align 2, 0
_0807053C: .4byte 0x02003108
_08070540:
	adds r0, r4, #0
	bl sub_8070B8C
_08070546:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_807054C
sub_807054C: @ 0x0807054C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r5, r1, #0
	movs r0, #0x38
	ldrsh r1, [r6, r0]
	movs r3, #0x3c
	ldrsh r2, [r6, r3]
	adds r4, r6, #0
	adds r4, #0x48
	movs r3, #0
	ldrsh r0, [r4, r3]
	mov ip, r0
	adds r7, r6, #0
	adds r7, #0x4a
	movs r3, #0
	ldrsh r0, [r7, r3]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, ip
	bl Interpolate
	strh r0, [r6, #0x30]
	movs r0, #0x3a
	ldrsh r1, [r6, r0]
	movs r3, #0x3e
	ldrsh r2, [r6, r3]
	movs r3, #0
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0
	ldrsh r0, [r7, r3]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, ip
	bl Interpolate
	strh r0, [r6, #0x32]
	adds r0, r6, #0
	adds r0, #0x40
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, #4
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r3, #0
	ldrsh r0, [r4, r3]
	mov ip, r0
	movs r3, #0
	ldrsh r0, [r7, r3]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, ip
	bl Interpolate
	strh r0, [r6, #0x34]
	adds r0, r6, #0
	adds r0, #0x42
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, #4
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r4, #0
	ldrsh r0, [r7, r4]
	str r0, [sp]
	adds r0, r5, #0
	bl Interpolate
	strh r0, [r6, #0x36]
	movs r1, #0x30
	ldrsh r0, [r6, r1]
	movs r2, #0x32
	ldrsh r1, [r6, r2]
	movs r3, #0x34
	ldrsh r2, [r6, r3]
	movs r4, #0x36
	ldrsh r3, [r6, r4]
	bl sub_8070F64
	adds r0, r6, #0
	adds r0, #0x52
	ldrb r0, [r0]
	cmp r0, #0
	bne _08070610
	movs r0, #0x30
	ldrsh r1, [r6, r0]
	movs r3, #0x32
	ldrsh r2, [r6, r3]
	subs r2, #0xb
	ldr r3, _08070618 @ =Sprite_32x16
	movs r0, #0xb
	str r0, [sp]
	movs r0, #0
	bl PutSprite
_08070610:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070618: .4byte Sprite_32x16

	thumb_func_start sub_807061C
sub_807061C: @ 0x0807061C
	push {lr}
	adds r0, #0x52
	ldrb r0, [r0]
	cmp r0, #0
	bne _08070636
	ldr r0, _0807063C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08070636
	movs r0, #0x70
	bl m4aSongNumStart
_08070636:
	pop {r0}
	bx r0
	.align 2, 0
_0807063C: .4byte gPlaySt

	thumb_func_start sub_8070640
sub_8070640: @ 0x08070640
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r1, #5
	bl sub_807054C
	adds r2, r4, #0
	adds r2, #0x48
	adds r4, #0x4a
	ldrh r3, [r2]
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r1, r0
	bge _08070662
	adds r0, r3, #1
	strh r0, [r2]
_08070662:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8070668
sub_8070668: @ 0x08070668
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x52
	ldrb r0, [r0]
	cmp r0, #0
	bne _08070696
	ldr r0, _0807069C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08070684
	movs r0, #0x71
	bl m4aSongNumStart
_08070684:
	adds r0, r4, #0
	bl sub_8070B20
	ldr r0, [r4, #0x2c]
	ldrb r1, [r0, #0x10]
	ldrb r2, [r0, #0x11]
	adds r0, r4, #0
	bl sub_8070AFC
_08070696:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807069C: .4byte gPlaySt

	thumb_func_start sub_80706A0
sub_80706A0: @ 0x080706A0
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	bl sub_807054C
	adds r1, r4, #0
	adds r1, #0x48
	ldrh r0, [r1]
	subs r0, #3
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080706C0
	adds r0, r4, #0
	bl Proc_Break
_080706C0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80706C8
sub_80706C8: @ 0x080706C8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080706F4 @ =0x0203D3E0
	movs r3, #0
	str r3, [r0]
	str r3, [r0, #4]
	str r3, [r0, #8]
	str r3, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r1, [r0, #0x11]
	strh r2, [r0, #0x12]
	str r3, [r0, #0x14]
	str r3, [r0, #0x18]
	ldr r1, _080706F8 @ =0x0203D400
	strh r3, [r1]
	strh r3, [r1, #2]
	movs r1, #0
	bl sub_8070738
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080706F4: .4byte 0x0203D3E0
_080706F8: .4byte 0x0203D400

	thumb_func_start sub_80706FC
sub_80706FC: @ 0x080706FC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0807072C @ =0x0203D3E0
	movs r3, #0
	str r3, [r0]
	str r3, [r0, #4]
	str r3, [r0, #8]
	str r3, [r0, #0xc]
	strb r4, [r0, #0x10]
	strb r1, [r0, #0x11]
	strh r2, [r0, #0x12]
	str r3, [r0, #0x14]
	ldr r1, _08070730 @ =sub_8070B70
	str r1, [r0, #0x18]
	ldr r1, _08070734 @ =0x0203D400
	strh r3, [r1]
	strh r3, [r1, #2]
	movs r1, #0
	bl sub_8070738
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807072C: .4byte 0x0203D3E0
_08070730: .4byte sub_8070B70
_08070734: .4byte 0x0203D400

	thumb_func_start sub_8070738
sub_8070738: @ 0x08070738
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	ldr r6, _08070770 @ =gUnk_08677720
	adds r0, r6, #0
	bl Proc_Find
	adds r4, r0, #0
	cmp r4, #0
	bne _08070774
	adds r0, r6, #0
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	adds r0, #0x52
	strb r7, [r0]
	ldrb r1, [r5, #0x10]
	ldrb r2, [r5, #0x11]
	adds r0, r4, #0
	bl sub_8070AFC
	adds r0, r4, #0
	bl sub_8070B20
	b _0807078C
	.align 2, 0
_08070770: .4byte gUnk_08677720
_08070774:
	ldrh r0, [r4, #0x30]
	strh r0, [r4, #0x38]
	ldrh r0, [r4, #0x32]
	strh r0, [r4, #0x3a]
	ldrh r1, [r4, #0x34]
	adds r0, r4, #0
	adds r0, #0x40
	strh r1, [r0]
	ldrh r0, [r4, #0x36]
	adds r1, r4, #0
	adds r1, #0x42
	strh r0, [r1]
_0807078C:
	str r5, [r4, #0x2c]
	adds r0, r4, #0
	adds r0, #0x48
	movs r1, #0
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x4a
	movs r0, #0xc
	strh r0, [r2]
	adds r7, r4, #0
	adds r7, #0x4e
	strh r1, [r7]
	ldrh r0, [r5, #0x12]
	adds r6, r4, #0
	adds r6, #0x4c
	strh r0, [r6]
	ldr r0, [r4, #0x2c]
	ldr r1, [r0, #0x18]
	cmp r1, #0
	beq _080707BA
	adds r0, r4, #0
	bl _call_via_r1
_080707BA:
	movs r0, #1
	bl SetTextFontGlyphs
	ldrh r0, [r6]
	bl DecodeMsg
	add r2, sp, #4
	mov r1, sp
	bl GetStringTextBox
	movs r0, #0
	bl SetTextFontGlyphs
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r4, #0
	bl sub_8070A30
	ldrb r1, [r5, #0x10]
	ldrb r2, [r5, #0x11]
	adds r0, r4, #0
	bl sub_8070A70
	bl sub_8071514
	ldrh r0, [r7]
	ldrh r1, [r6]
	bl sub_80714F8
	ldr r0, _08070800 @ =0x0203D3FC
	str r5, [r0]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070800: .4byte 0x0203D3FC

	thumb_func_start sub_8070804
sub_8070804: @ 0x08070804
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	ldr r0, _08070898 @ =gUnk_08677720
	movs r1, #3
	bl SpawnProc
	adds r7, r0, #0
	adds r2, r7, #0
	adds r2, #0x52
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0x48
	strh r1, [r0]
	subs r2, #8
	movs r0, #0xc
	strh r0, [r2]
	movs r0, #0x4e
	adds r0, r0, r7
	mov sb, r0
	strh r1, [r0]
	adds r4, r7, #0
	adds r4, #0x4c
	mov r1, r8
	strh r1, [r4]
	movs r0, #1
	bl SetTextFontGlyphs
	ldrh r0, [r4]
	bl DecodeMsg
	add r2, sp, #4
	mov r1, sp
	bl GetStringTextBox
	movs r0, #0
	bl SetTextFontGlyphs
	adds r0, r7, #0
	bl sub_8070B20
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r7, #0
	bl sub_8070A30
	adds r5, #8
	strh r5, [r7, #0x38]
	adds r6, #8
	strh r6, [r7, #0x3a]
	strh r5, [r7, #0x3c]
	strh r6, [r7, #0x3e]
	bl sub_8071514
	mov r1, sb
	ldrh r0, [r1]
	ldrh r1, [r4]
	bl sub_80714F8
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070898: .4byte gUnk_08677720

	thumb_func_start sub_807089C
sub_807089C: @ 0x0807089C
	push {r4, lr}
	ldr r0, _080708BC @ =gUnk_08677720
	bl Proc_Find
	adds r4, r0, #0
	cmp r4, #0
	beq _080708B6
	bl sub_8071514
	adds r0, r4, #0
	movs r1, #0x63
	bl Proc_Goto
_080708B6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080708BC: .4byte gUnk_08677720

	thumb_func_start sub_80708C0
sub_80708C0: @ 0x080708C0
	push {r4, lr}
	ldr r0, _080708E0 @ =gUnk_08677720
	bl Proc_Find
	adds r4, r0, #0
	cmp r4, #0
	beq _080708D8
	bl sub_8071514
	adds r0, r4, #0
	bl Proc_End
_080708D8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080708E0: .4byte gUnk_08677720

	thumb_func_start sub_80708E4
sub_80708E4: @ 0x080708E4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	ldr r0, [r4, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _080708FC
	adds r0, r4, #0
	bl _call_via_r1
_080708FC:
	ldr r0, [r4, #0x2c]
	movs r1, #0
	bl sub_8070738
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807090C
sub_807090C: @ 0x0807090C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r4, #0
	ldr r1, _080709A4 @ =0x0203D400
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #3
	ldr r2, [r5, #0x2c]
	ldrb r3, [r2, #0x10]
	adds r0, r3, r0
	movs r3, #2
	ldrsh r1, [r1, r3]
	lsls r1, r1, #3
	ldrb r2, [r2, #0x11]
	adds r1, r2, r1
	bl sub_80415CC
	ldr r6, _080709A8 @ =gKeySt
	ldr r1, [r6]
	movs r0, #0x40
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08070946
	adds r0, r5, #0
	bl sub_8070B8C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_08070946:
	ldr r1, [r6]
	movs r0, #0x80
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807095E
	adds r0, r5, #0
	bl sub_8070BBC
	orrs r4, r0
	lsls r0, r4, #0x18
	lsrs r4, r0, #0x18
_0807095E:
	ldr r1, [r6]
	movs r0, #0x20
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08070976
	adds r0, r5, #0
	bl sub_8070BEC
	orrs r4, r0
	lsls r0, r4, #0x18
	lsrs r4, r0, #0x18
_08070976:
	ldr r1, [r6]
	movs r0, #0x10
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807098E
	adds r0, r5, #0
	bl sub_8070C1C
	orrs r4, r0
	lsls r0, r4, #0x18
	lsrs r4, r0, #0x18
_0807098E:
	ldr r1, [r6]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080709AC
	adds r0, r5, #0
	bl Proc_Break
	b _080709C8
	.align 2, 0
_080709A4: .4byte 0x0203D400
_080709A8: .4byte gKeySt
_080709AC:
	cmp r4, #0
	beq _080709C8
	ldr r0, _080709D0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080709C0
	movs r0, #0x67
	bl m4aSongNumStart
_080709C0:
	adds r0, r5, #0
	movs r1, #0
	bl Proc_Goto
_080709C8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080709D0: .4byte gPlaySt

	thumb_func_start sub_80709D4
sub_80709D4: @ 0x080709D4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_807089C
	adds r0, r4, #0
	bl Proc_End
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start StartMovingHelpBox
StartMovingHelpBox: @ 0x080709E8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08070A04 @ =gUnk_08677758
	bl SpawnProcLocking
	ldr r2, _08070A08 @ =0x0203D400
	movs r1, #0
	strh r1, [r2]
	strh r1, [r2, #2]
	str r4, [r0, #0x2c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08070A04: .4byte gUnk_08677758
_08070A08: .4byte 0x0203D400

	thumb_func_start StartMovingHelpBoxExt
StartMovingHelpBoxExt: @ 0x08070A0C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r2, #0
	adds r5, r3, #0
	ldr r0, _08070A28 @ =gUnk_08677758
	bl SpawnProcLocking
	ldr r1, _08070A2C @ =0x0203D400
	strh r4, [r1]
	strh r5, [r1, #2]
	str r6, [r0, #0x2c]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08070A28: .4byte gUnk_08677758
_08070A2C: .4byte 0x0203D400

	thumb_func_start sub_8070A30
sub_8070A30: @ 0x08070A30
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r4, #0x1f
	movs r0, #0xe0
	ands r4, r0
	adds r0, r6, #0
	adds r0, #0x4e
	ldrh r0, [r0]
	bl sub_8070B30
	cmp r0, #1
	beq _08070A52
	cmp r0, #2
	beq _08070A58
	b _08070A60
_08070A52:
	movs r4, #0xa0
	adds r5, #0x20
	b _08070A60
_08070A58:
	cmp r4, #0x5f
	bgt _08070A5E
	movs r4, #0x60
_08070A5E:
	adds r5, #0x10
_08070A60:
	adds r0, r6, #0
	adds r0, #0x44
	strh r4, [r0]
	adds r0, #2
	strh r5, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8070A70
sub_8070A70: @ 0x08070A70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r4, r1, #0
	adds r7, r2, #0
	adds r0, #0x44
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r6, r0, #0
	adds r6, #0x10
	adds r0, r5, #0
	adds r0, #0x46
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #0x10
	mov r8, r0
	ldr r1, _08070AF8 @ =0x0203D400
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #3
	adds r4, r4, r0
	movs r2, #2
	ldrsh r0, [r1, r2]
	lsls r0, r0, #3
	adds r7, r7, r0
	adds r0, r6, #0
	movs r1, #6
	bl __divsi3
	adds r0, #0x10
	subs r4, r4, r0
	strh r4, [r5, #0x3c]
	lsls r4, r4, #0x10
	cmp r4, #0
	bge _08070ABC
	movs r0, #0
	strh r0, [r5, #0x3c]
_08070ABC:
	movs r1, #0x3c
	ldrsh r0, [r5, r1]
	adds r0, r0, r6
	cmp r0, #0xf0
	ble _08070ACC
	movs r0, #0xf0
	subs r0, r0, r6
	strh r0, [r5, #0x3c]
_08070ACC:
	adds r0, r7, #0
	adds r0, #0x10
	strh r0, [r5, #0x3e]
	movs r2, #0x3e
	ldrsh r0, [r5, r2]
	add r0, r8
	cmp r0, #0xa0
	ble _08070AE2
	mov r1, r8
	subs r0, r7, r1
	strh r0, [r5, #0x3e]
_08070AE2:
	ldrh r0, [r5, #0x3c]
	adds r0, #8
	strh r0, [r5, #0x3c]
	ldrh r0, [r5, #0x3e]
	adds r0, #8
	strh r0, [r5, #0x3e]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070AF8: .4byte 0x0203D400

	thumb_func_start sub_8070AFC
sub_8070AFC: @ 0x08070AFC
	push {r4, r5, lr}
	ldr r4, _08070B1C @ =0x0203D400
	movs r5, #0
	ldrsh r3, [r4, r5]
	lsls r3, r3, #3
	adds r1, r1, r3
	movs r5, #2
	ldrsh r3, [r4, r5]
	lsls r3, r3, #3
	adds r2, r2, r3
	strh r1, [r0, #0x38]
	strh r2, [r0, #0x3a]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08070B1C: .4byte 0x0203D400

	thumb_func_start sub_8070B20
sub_8070B20: @ 0x08070B20
	adds r2, r0, #0
	adds r2, #0x40
	movs r1, #0x20
	strh r1, [r2]
	adds r0, #0x42
	movs r1, #0x10
	strh r1, [r0]
	bx lr

	thumb_func_start sub_8070B30
sub_8070B30: @ 0x08070B30
	push {r4, lr}
	adds r4, r0, #0
	bl GetItemAttributes
	movs r1, #0x80
	lsls r1, r1, #3
	ands r1, r0
	cmp r1, #0
	bne _08070B62
	adds r0, r4, #0
	bl GetItemAttributes
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _08070B54
	movs r0, #1
	b _08070B68
_08070B54:
	adds r0, r4, #0
	bl GetItemAttributes
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _08070B66
_08070B62:
	movs r0, #0
	b _08070B68
_08070B66:
	movs r0, #2
_08070B68:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8070B70
sub_8070B70: @ 0x08070B70
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x2c]
	ldrh r0, [r0, #0x12]
	adds r1, r4, #0
	adds r1, #0x4e
	strh r0, [r1]
	bl GetItemDescMsg
	adds r4, #0x4c
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8070B8C
sub_8070B8C: @ 0x08070B8C
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	ldr r0, [r0]
	cmp r0, #0
	bne _08070B9C
	movs r0, #0
	b _08070BB6
_08070B9C:
	str r0, [r2, #0x2c]
	adds r0, r2, #0
	adds r0, #0x50
	movs r1, #0x40
	strh r1, [r0]
	ldr r0, [r2, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _08070BB4
	adds r0, r2, #0
	bl _call_via_r1
_08070BB4:
	movs r0, #1
_08070BB6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8070BBC
sub_8070BBC: @ 0x08070BBC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	ldr r0, [r0, #4]
	cmp r0, #0
	bne _08070BCC
	movs r0, #0
	b _08070BE6
_08070BCC:
	str r0, [r2, #0x2c]
	adds r0, r2, #0
	adds r0, #0x50
	movs r1, #0x80
	strh r1, [r0]
	ldr r0, [r2, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _08070BE4
	adds r0, r2, #0
	bl _call_via_r1
_08070BE4:
	movs r0, #1
_08070BE6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8070BEC
sub_8070BEC: @ 0x08070BEC
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	ldr r0, [r0, #8]
	cmp r0, #0
	bne _08070BFC
	movs r0, #0
	b _08070C16
_08070BFC:
	str r0, [r2, #0x2c]
	adds r0, r2, #0
	adds r0, #0x50
	movs r1, #0x20
	strh r1, [r0]
	ldr r0, [r2, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _08070C14
	adds r0, r2, #0
	bl _call_via_r1
_08070C14:
	movs r0, #1
_08070C16:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8070C1C
sub_8070C1C: @ 0x08070C1C
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	ldr r0, [r0, #0xc]
	cmp r0, #0
	bne _08070C2C
	movs r0, #0
	b _08070C46
_08070C2C:
	str r0, [r2, #0x2c]
	adds r0, r2, #0
	adds r0, #0x50
	movs r1, #0x10
	strh r1, [r0]
	ldr r0, [r2, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _08070C44
	adds r0, r2, #0
	bl _call_via_r1
_08070C44:
	movs r0, #1
_08070C46:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8070C4C
sub_8070C4C: @ 0x08070C4C
	push {lr}
	adds r2, r0, #0
	ldr r0, _08070C6C @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08070C66
	adds r0, r2, #0
	bl Proc_Break
_08070C66:
	pop {r0}
	bx r0
	.align 2, 0
_08070C6C: .4byte gKeySt

	thumb_func_start sub_8070C70
sub_8070C70: @ 0x08070C70
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	bl sub_8041660
	adds r4, r0, #0
	bl sub_804166C
	adds r1, r0, #0
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_80706C8
	ldr r0, _08070CA4 @ =gUnk_08677788
	adds r1, r6, #0
	bl SpawnProcLocking
	movs r0, #1
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08070CA4: .4byte gUnk_08677788

	thumb_func_start sub_8070CA8
sub_8070CA8: @ 0x08070CA8
	ldr r0, _08070CB0 @ =0x0203D3FC
	ldr r0, [r0]
	bx lr
	.align 2, 0
_08070CB0: .4byte 0x0203D3FC

	thumb_func_start sub_8070CB4
sub_8070CB4: @ 0x08070CB4
	push {lr}
	adds r2, r0, #0
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _08070CD0
	ldr r0, _08070CCC @ =gUnk_0830D5E4
	lsls r1, r1, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	b _08070CFA
	.align 2, 0
_08070CCC: .4byte gUnk_0830D5E4
_08070CD0:
	movs r0, #1
	ands r0, r2
	ldr r3, _08070D00 @ =gUnk_083094F4
	cmp r0, #0
	beq _08070CDC
	ldr r3, _08070D04 @ =gUnk_08309474
_08070CDC:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08070CE6
	adds r3, #0x20
_08070CE6:
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	beq _08070CF0
	adds r3, #0x40
_08070CF0:
	lsls r1, r1, #5
	adds r0, r3, #0
	movs r2, #0x20
	bl ApplyPaletteExt
_08070CFA:
	pop {r0}
	bx r0
	.align 2, 0
_08070D00: .4byte gUnk_083094F4
_08070D04: .4byte gUnk_08309474

	thumb_func_start sub_8070D08
sub_8070D08: @ 0x08070D08
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	cmp r3, #0x2c
	bls _08070D14
	movs r3, #0x26
_08070D14:
	ldr r2, _08070D3C @ =0x0203D404
	ldr r0, _08070D40 @ =0x000003FF
	adds r1, r0, #0
	adds r0, r4, #0
	ands r0, r1
	strh r0, [r2, #2]
	ldr r1, _08070D44 @ =gUnk_08677F20
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r1, r4, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl Decompress
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08070D3C: .4byte 0x0203D404
_08070D40: .4byte 0x000003FF
_08070D44: .4byte gUnk_08677F20

	thumb_func_start sub_8070D48
sub_8070D48: @ 0x08070D48
	push {lr}
	adds r1, r0, #0
	ldr r3, _08070D6C @ =0x0203D404
	ldr r0, _08070D70 @ =0x000003FF
	adds r2, r0, #0
	adds r0, r1, #0
	ands r0, r2
	strh r0, [r3]
	ldr r0, _08070D74 @ =gUnk_0830C804
	lsls r1, r1, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl Decompress
	pop {r0}
	bx r0
	.align 2, 0
_08070D6C: .4byte 0x0203D404
_08070D70: .4byte 0x000003FF
_08070D74: .4byte gUnk_0830C804

	thumb_func_start sub_8070D78
sub_8070D78: @ 0x08070D78
	push {lr}
	adds r1, r0, #0
	ldr r3, _08070D9C @ =0x0203D404
	ldr r0, _08070DA0 @ =0x000003FF
	adds r2, r0, #0
	adds r0, r1, #0
	ands r0, r2
	strh r0, [r3]
	ldr r0, _08070DA4 @ =gUnk_0830CFE0
	lsls r1, r1, #5
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	bl Decompress
	pop {r0}
	bx r0
	.align 2, 0
_08070D9C: .4byte 0x0203D404
_08070DA0: .4byte 0x000003FF
_08070DA4: .4byte gUnk_0830CFE0

	thumb_func_start sub_8070DA8
sub_8070DA8: @ 0x08070DA8
	adds r2, r0, #0
	ldr r0, _08070DC4 @ =0x0203D404
	lsls r1, r1, #0xc
	ldrh r0, [r0, #2]
	adds r0, r0, r1
	movs r1, #0x3f
_08070DB4:
	strh r0, [r2]
	adds r0, #1
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bge _08070DB4
	bx lr
	.align 2, 0
_08070DC4: .4byte 0x0203D404

	thumb_func_start sub_8070DC8
sub_8070DC8: @ 0x08070DC8
	adds r2, r0, #0
	ldr r0, _08070DE4 @ =0x0203D404
	lsls r1, r1, #0xc
	ldrh r0, [r0]
	adds r0, r0, r1
	movs r1, #0x7f
_08070DD4:
	strh r0, [r2]
	adds r0, #1
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bge _08070DD4
	bx lr
	.align 2, 0
_08070DE4: .4byte 0x0203D404

	thumb_func_start sub_8070DE8
sub_8070DE8: @ 0x08070DE8
	push {lr}
	adds r2, r1, #0
	ldr r1, _08070E04 @ =gUnk_0830D4F0
	ldr r3, _08070E08 @ =0x0203D404
	lsls r2, r2, #0xc
	ldrh r3, [r3]
	adds r2, r3, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	bl TmApplyTsa_t
	pop {r0}
	bx r0
	.align 2, 0
_08070E04: .4byte gUnk_0830D4F0
_08070E08: .4byte 0x0203D404

	thumb_func_start sub_8070E0C
sub_8070E0C: @ 0x08070E0C
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _08070E18
	movs r0, #0x26
	b _08070E6C
_08070E18:
	movs r0, #1
	rsbs r0, r0, #0
	movs r2, #0xe
	ldrsb r2, [r1, r2]
	cmp r2, r0
	beq _08070E30
	cmp r2, r0
	blt _08070E34
	cmp r2, #0x2c
	bgt _08070E34
	cmp r2, #0x28
	blt _08070E34
_08070E30:
	movs r0, #0x2b
	b _08070E6C
_08070E34:
	movs r0, #0x20
	ldrb r3, [r1, #0x14]
	ands r0, r3
	cmp r0, #0
	beq _08070E64
	ldrb r1, [r1, #0x19]
	lsls r0, r1, #0x1c
	lsrs r0, r0, #0x1c
	cmp r0, #1
	beq _08070E5C
	cmp r0, #1
	bgt _08070E52
	cmp r0, #0
	beq _08070E58
	b _08070E64
_08070E52:
	cmp r0, #2
	beq _08070E60
	b _08070E64
_08070E58:
	movs r0, #0x2a
	b _08070E6C
_08070E5C:
	movs r0, #0x29
	b _08070E6C
_08070E60:
	movs r0, #0x28
	b _08070E6C
_08070E64:
	adds r0, r2, #0
	bl GetChapterInfo
	ldrb r0, [r0, #0xe]
_08070E6C:
	pop {r1}
	bx r1

	thumb_func_start sub_8070E70
sub_8070E70: @ 0x08070E70
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	cmp r7, #0
	bne _08070E7C
	ldr r7, _08070EDC @ =0x06013000
_08070E7C:
	cmp r5, #0
	bge _08070E82
	movs r5, #5
_08070E82:
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r5
	adds r5, r0, #0
	adds r5, #0x10
	ldr r0, _08070EE0 @ =gUnk_08308A78
	adds r1, r7, #0
	bl Decompress
	ldr r6, _08070EE4 @ =0x0203D40C
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl InitSpriteTextFont
	adds r0, r6, #0
	adds r0, #0x18
	bl InitSpriteText
	adds r0, r6, #0
	adds r0, #0x20
	bl InitSpriteText
	adds r0, r6, #0
	adds r0, #0x28
	bl InitSpriteText
	movs r0, #0
	bl SetTextFont
	ldr r0, _08070EE8 @ =Pal_08100A48
	lsls r1, r5, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	lsls r0, r7, #0x11
	lsrs r0, r0, #0x16
	ands r5, r4
	lsls r1, r5, #0xc
	adds r0, r0, r1
	strh r0, [r6, #0x30]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070EDC: .4byte 0x06013000
_08070EE0: .4byte gUnk_08308A78
_08070EE4: .4byte 0x0203D40C
_08070EE8: .4byte Pal_08100A48

	thumb_func_start sub_8070EEC
sub_8070EEC: @ 0x08070EEC
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	cmp r7, #0
	bne _08070EF8
	ldr r7, _08070F54 @ =0x06013000
_08070EF8:
	cmp r5, #0
	bge _08070EFE
	movs r5, #5
_08070EFE:
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r5
	adds r5, r0, #0
	adds r5, #0x10
	ldr r0, _08070F58 @ =gUnk_08308A78
	adds r1, r7, #0
	bl Decompress
	ldr r6, _08070F5C @ =0x0203D40C
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl InitSpriteTextFont
	adds r0, r6, #0
	adds r0, #0x18
	bl InitSpriteText
	adds r0, r6, #0
	adds r0, #0x20
	bl InitSpriteText
	adds r1, r6, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	bl SetTextFont
	ldr r0, _08070F60 @ =Pal_08100A48
	lsls r1, r5, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	lsls r0, r7, #0x11
	lsrs r0, r0, #0x16
	ands r5, r4
	lsls r1, r5, #0xc
	adds r0, r0, r1
	strh r0, [r6, #0x30]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070F54: .4byte 0x06013000
_08070F58: .4byte gUnk_08308A78
_08070F5C: .4byte 0x0203D40C
_08070F60: .4byte Pal_08100A48

	thumb_func_start sub_8070F64
sub_8070F64: @ 0x08070F64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	mov sl, r1
	adds r7, r2, #0
	mov r8, r3
	cmp r7, #0x1f
	bgt _08070F7E
	movs r7, #0x20
_08070F7E:
	cmp r7, #0xc0
	ble _08070F84
	movs r7, #0xc0
_08070F84:
	mov r0, r8
	cmp r0, #0xf
	bgt _08070F8E
	movs r1, #0x10
	mov r8, r1
_08070F8E:
	mov r3, r8
	cmp r3, #0x30
	ble _08070F98
	movs r0, #0x30
	mov r8, r0
_08070F98:
	adds r0, r7, #0
	adds r0, #0x1f
	cmp r0, #0
	bge _08070FA2
	adds r0, #0x1f
_08070FA2:
	asrs r0, r0, #5
	mov r1, r8
	adds r1, #0xf
	cmp r1, #0
	bge _08070FAE
	adds r1, #0xf
_08070FAE:
	asrs r1, r1, #4
	str r1, [sp, #4]
	subs r6, r0, #1
	str r6, [sp, #8]
	mov r1, sl
	subs r1, #8
	str r1, [sp, #0x18]
	mov r3, sl
	add r3, r8
	str r3, [sp, #0x10]
	mov r0, sb
	subs r0, #8
	str r0, [sp, #0x14]
	mov r1, sb
	adds r1, r1, r7
	str r1, [sp, #0xc]
	cmp r6, #0
	blt _0807101A
_08070FD2:
	ldr r5, [sp, #4]
	subs r4, r6, #1
	cmp r5, #0
	blt _08071014
_08070FDA:
	adds r0, r6, #1
	lsls r1, r0, #5
	cmp r1, r7
	ble _08070FE4
	adds r1, r7, #0
_08070FE4:
	subs r1, #0x20
	adds r0, r5, #1
	lsls r0, r0, #4
	cmp r0, r8
	ble _08070FF0
	mov r0, r8
_08070FF0:
	subs r0, #0x10
	add r1, sb
	mov r3, sl
	adds r2, r3, r0
	ldr r3, _080710F8 @ =0x0203D40C
	lsls r0, r6, #2
	ldrh r3, [r3, #0x30]
	adds r0, r3, r0
	lsls r3, r5, #6
	adds r0, r0, r3
	str r0, [sp]
	movs r0, #0
	ldr r3, _080710FC @ =Sprite_32x16
	bl PutSprite
	subs r5, #1
	cmp r5, #0
	bge _08070FDA
_08071014:
	adds r6, r4, #0
	cmp r6, #0
	bge _08070FD2
_0807101A:
	ldr r6, [sp, #8]
	cmp r6, #0
	blt _0807105C
	ldr r5, _080710F8 @ =0x0203D40C
_08071022:
	adds r0, r6, #1
	lsls r1, r0, #5
	cmp r1, r7
	ble _0807102C
	adds r1, r7, #0
_0807102C:
	subs r1, #0x20
	mov r0, sb
	adds r4, r0, r1
	ldrh r0, [r5, #0x30]
	adds r0, #0x1b
	str r0, [sp]
	movs r0, #0
	adds r1, r4, #0
	ldr r2, [sp, #0x18]
	ldr r3, _08071100 @ =Sprite_32x8
	bl PutSprite
	ldrh r0, [r5, #0x30]
	adds r0, #0x1b
	str r0, [sp]
	movs r0, #0
	adds r1, r4, #0
	ldr r2, [sp, #0x10]
	ldr r3, _08071104 @ =Sprite_32x8_VFlipped
	bl PutSprite
	subs r6, #1
	cmp r6, #0
	bge _08071022
_0807105C:
	ldr r5, [sp, #4]
	cmp r5, #0
	blt _0807109E
	ldr r6, _080710F8 @ =0x0203D40C
_08071064:
	adds r0, r5, #1
	lsls r0, r0, #4
	cmp r0, r8
	ble _0807106E
	mov r0, r8
_0807106E:
	subs r0, #0x10
	mov r1, sl
	adds r4, r1, r0
	ldrh r0, [r6, #0x30]
	adds r0, #0x1f
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0x14]
	adds r2, r4, #0
	ldr r3, _08071108 @ =Sprite_8x16
	bl PutSprite
	ldrh r0, [r6, #0x30]
	adds r0, #0x1f
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	ldr r3, _0807110C @ =Sprite_8x16_HFlipped
	bl PutSprite
	subs r5, #1
	cmp r5, #0
	bge _08071064
_0807109E:
	ldr r3, _08071110 @ =Sprite_8x8
	ldr r4, _080710F8 @ =0x0203D40C
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	bl PutSprite
	ldr r3, _08071114 @ =Sprite_8x8_HFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x18]
	bl PutSprite
	ldr r3, _08071118 @ =Sprite_8x8_VFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	bl PutSprite
	ldr r3, _0807111C @ =Sprite_8x8_HFlipped_VFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #0
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x10]
	bl PutSprite
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080710F8: .4byte 0x0203D40C
_080710FC: .4byte Sprite_32x16
_08071100: .4byte Sprite_32x8
_08071104: .4byte Sprite_32x8_VFlipped
_08071108: .4byte Sprite_8x16
_0807110C: .4byte Sprite_8x16_HFlipped
_08071110: .4byte Sprite_8x8
_08071114: .4byte Sprite_8x8_HFlipped
_08071118: .4byte Sprite_8x8_VFlipped
_0807111C: .4byte Sprite_8x8_HFlipped_VFlipped

	thumb_func_start sub_8071120
sub_8071120: @ 0x08071120
	push {r4, lr}
	ldr r4, _08071180 @ =0x0203D424
	bl GetItemKind
	bl GetItemKindString
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	bl Text_InsertDrawString
	ldr r3, _08071184 @ =gUnk_08319894
	adds r0, r4, #0
	movs r1, #0x24
	movs r2, #8
	bl Text_InsertDrawString
	ldr r3, _08071188 @ =gUnk_0831989C
	adds r0, r4, #0
	movs r1, #0x60
	movs r2, #8
	bl Text_InsertDrawString
	adds r4, #8
	ldr r3, _0807118C @ =gUnk_083198A4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	bl Text_InsertDrawString
	ldr r3, _08071190 @ =gUnk_083198AC
	adds r0, r4, #0
	movs r1, #0x30
	movs r2, #8
	bl Text_InsertDrawString
	ldr r3, _08071194 @ =gUnk_083198B4
	adds r0, r4, #0
	movs r1, #0x60
	movs r2, #8
	bl Text_InsertDrawString
	movs r0, #2
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08071180: .4byte 0x0203D424
_08071184: .4byte gUnk_08319894
_08071188: .4byte gUnk_0831989C
_0807118C: .4byte gUnk_083198A4
_08071190: .4byte gUnk_083198AC
_08071194: .4byte gUnk_083198B4

	thumb_func_start sub_8071198
sub_8071198: @ 0x08071198
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, _08071214 @ =0x0203D424
	bl GetItemRequiredExp
	bl GetWeaponLevelStringFromExp
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #7
	bl Text_InsertDrawString
	adds r0, r5, #0
	bl GetItemRangeString
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x38
	movs r2, #7
	bl Text_InsertDrawString
	adds r0, r5, #0
	bl GetItemWeight
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #7
	bl Text_InsertDrawNumberOrBlank
	adds r4, #8
	adds r0, r5, #0
	bl GetItemMight
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x20
	movs r2, #7
	bl Text_InsertDrawNumberOrBlank
	adds r0, r5, #0
	bl GetItemHit
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x50
	movs r2, #7
	bl Text_InsertDrawNumberOrBlank
	adds r0, r5, #0
	bl GetItemCrit
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #7
	bl Text_InsertDrawNumberOrBlank
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08071214: .4byte 0x0203D424

	thumb_func_start sub_8071218
sub_8071218: @ 0x08071218
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, _08071268 @ =0x0203D424
	ldr r3, _0807126C @ =gUnk_083198BC
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	bl Text_InsertDrawString
	adds r0, r5, #0
	bl GetItemRequiredExp
	bl GetWeaponLevelStringFromExp
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #7
	bl Text_InsertDrawString
	ldr r3, _08071270 @ =gUnk_08319894
	adds r0, r4, #0
	movs r1, #0x24
	movs r2, #8
	bl Text_InsertDrawString
	adds r0, r5, #0
	bl GetItemRangeString
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0x38
	movs r2, #7
	bl Text_InsertDrawString
	movs r0, #1
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08071268: .4byte 0x0203D424
_0807126C: .4byte gUnk_083198BC
_08071270: .4byte gUnk_08319894

	thumb_func_start sub_8071274
sub_8071274: @ 0x08071274
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x5e
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08071302
	adds r0, r4, #0
	adds r0, #0x60
	ldrh r0, [r0]
	strh r0, [r1]
	ldr r0, [r4, #0x30]
	bl SetTextFont
	movs r6, #0
	adds r0, r4, #0
	adds r0, #0x62
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r7, r0, #0
	cmp r6, r1
	bge _080712FC
	adds r5, r4, #0
	adds r5, #0x5c
_080712AA:
	ldr r0, [r4, #0x2c]
	ldrb r2, [r0]
	adds r3, r0, #0
	cmp r2, #1
	beq _080712CC
	cmp r2, #1
	bgt _080712BE
	cmp r2, #0
	beq _080712C4
	b _080712DC
_080712BE:
	cmp r2, #4
	beq _080712D8
	b _080712DC
_080712C4:
	adds r0, r4, #0
	bl Proc_Break
	b _080712FC
_080712CC:
	adds r0, r3, #1
	str r0, [r4, #0x2c]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080712F2
_080712D8:
	adds r0, r3, #1
	b _080712F0
_080712DC:
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r1, r1, #2
	adds r0, r4, #0
	adds r0, #0x34
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r3, #0
	bl Text_DrawCharacter
_080712F0:
	str r0, [r4, #0x2c]
_080712F2:
	adds r6, #1
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r6, r0
	blt _080712AA
_080712FC:
	movs r0, #0
	bl SetTextFont
_08071302:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8071308
sub_8071308: @ 0x08071308
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x30]
	bl SetTextFont
	movs r6, #0
_08071314:
	lsls r1, r6, #2
	adds r0, r4, #0
	adds r0, #0x34
	adds r0, r0, r1
	ldr r5, [r0]
	ldrb r1, [r5, #4]
	lsls r0, r1, #3
	ldr r1, [r4, #0x2c]
	bl GetStringTextCenteredPos
	adds r1, r0, #0
	adds r0, r5, #0
	bl Text_SetCursor
_08071330:
	ldr r0, [r4, #0x2c]
	ldrb r1, [r0]
	cmp r1, #1
	beq _08071350
	cmp r1, #1
	bgt _08071342
	cmp r1, #0
	beq _08071368
	b _0807135C
_08071342:
	cmp r1, #5
	bgt _0807135C
	cmp r1, #4
	blt _0807135C
	adds r0, #1
	str r0, [r4, #0x2c]
	b _08071330
_08071350:
	adds r0, #1
	str r0, [r4, #0x2c]
	adds r6, #1
	cmp r6, #5
	ble _08071314
	b _08071368
_0807135C:
	ldr r1, [r4, #0x2c]
	adds r0, r5, #0
	bl Text_DrawCharacter
	str r0, [r4, #0x2c]
	b _08071330
_08071368:
	ldr r0, [r4, #0x30]
	bl SetTextFont
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8071374
sub_8071374: @ 0x08071374
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, [r5, #0x58]
	ldr r0, _0807139C @ =0x0203D40C
	bl SetTextFont
	movs r0, #0
	bl SetTextFontGlyphs
	adds r0, r4, #0
	bl sub_8070B30
	adds r1, r0, #0
	cmp r1, #1
	beq _080713AE
	cmp r1, #1
	bgt _080713A0
	cmp r1, #0
	beq _080713A6
	b _080713CA
	.align 2, 0
_0807139C: .4byte 0x0203D40C
_080713A0:
	cmp r1, #2
	beq _080713BC
	b _080713CA
_080713A6:
	adds r0, r5, #0
	adds r0, #0x64
	strh r1, [r0]
	b _080713CA
_080713AE:
	adds r0, r4, #0
	bl sub_8071120
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #2
	b _080713C8
_080713BC:
	adds r0, r4, #0
	bl sub_8071218
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #1
_080713C8:
	strh r0, [r1]
_080713CA:
	movs r0, #0
	bl SetTextFont
	adds r0, r5, #0
	bl Proc_Break
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80713DC
sub_80713DC: @ 0x080713DC
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, [r5, #0x58]
	ldr r0, _0807140C @ =0x0203D40C
	bl SetTextFont
	adds r0, r4, #0
	bl sub_8070B30
	cmp r0, #1
	bne _080713F8
	adds r0, r4, #0
	bl sub_8071198
_080713F8:
	movs r0, #0
	bl SetTextFont
	adds r0, r5, #0
	bl Proc_Break
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807140C: .4byte 0x0203D40C

	thumb_func_start sub_8071410
sub_8071410: @ 0x08071410
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	mov sl, r0
	ldr r5, _080714B0 @ =0x0203D40C
	adds r0, r5, #0
	bl SetTextFont
	movs r0, #1
	bl SetTextFontGlyphs
	movs r0, #0x18
	adds r0, r0, r5
	mov sb, r0
	movs r1, #6
	bl Text_SetColor
	movs r1, #0x20
	adds r1, r1, r5
	mov r8, r1
	mov r0, r8
	movs r1, #6
	bl Text_SetColor
	adds r6, r5, #0
	adds r6, #0x28
	adds r0, r6, #0
	movs r1, #6
	bl Text_SetColor
	movs r0, #0
	bl SetTextFont
	ldr r4, _080714B4 @ =gUnk_08677FD0
	adds r0, r4, #0
	bl Proc_EndEach
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	str r5, [r4, #0x30]
	mov r0, sb
	str r0, [r4, #0x34]
	mov r1, r8
	str r1, [r4, #0x38]
	str r6, [r4, #0x3c]
	mov r0, sl
	adds r0, #0x64
	ldrh r1, [r0]
	adds r0, r4, #0
	adds r0, #0x5c
	movs r5, #0
	strh r1, [r0]
	mov r1, sl
	ldr r0, [r1, #0x5c]
	bl DecodeMsg
	str r0, [r4, #0x2c]
	adds r1, r4, #0
	adds r1, #0x62
	movs r3, #1
	strh r3, [r1]
	adds r0, r4, #0
	adds r0, #0x5e
	strh r5, [r0]
	ldr r0, _080714B8 @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	lsls r0, r0, #0x19
	lsrs r2, r0, #0x1e
	cmp r2, #1
	beq _080714CE
	cmp r2, #1
	bgt _080714BC
	cmp r2, #0
	beq _080714C6
	b _080714EA
	.align 2, 0
_080714B0: .4byte 0x0203D40C
_080714B4: .4byte gUnk_08677FD0
_080714B8: .4byte gPlaySt
_080714BC:
	cmp r2, #2
	beq _080714D6
	cmp r2, #3
	beq _080714E0
	b _080714EA
_080714C6:
	adds r1, r4, #0
	adds r1, #0x60
	movs r0, #2
	b _080714E8
_080714CE:
	adds r0, r4, #0
	adds r0, #0x60
	strh r2, [r0]
	b _080714EA
_080714D6:
	adds r0, r4, #0
	adds r0, #0x60
	strh r3, [r0]
	strh r2, [r1]
	b _080714EA
_080714E0:
	adds r0, r4, #0
	adds r0, #0x60
	strh r5, [r0]
	movs r0, #0x7f
_080714E8:
	strh r0, [r1]
_080714EA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80714F8
sub_80714F8: @ 0x080714F8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08071510 @ =gUnk_08677FF8
	movs r1, #3
	bl SpawnProc
	str r4, [r0, #0x58]
	str r5, [r0, #0x5c]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08071510: .4byte gUnk_08677FF8

	thumb_func_start sub_8071514
sub_8071514: @ 0x08071514
	push {r4, lr}
	ldr r4, _08071550 @ =0x0203D40C
	adds r0, r4, #0
	bl SetTextFont
	adds r0, r4, #0
	adds r0, #0x18
	bl SpriteText_DrawBackground
	adds r0, r4, #0
	adds r0, #0x20
	bl SpriteText_DrawBackground
	adds r4, #0x28
	adds r0, r4, #0
	bl SpriteText_DrawBackground
	ldr r0, _08071554 @ =gUnk_08677FD0
	bl Proc_EndEach
	ldr r0, _08071558 @ =gUnk_08677FF8
	bl Proc_EndEach
	movs r0, #0
	bl SetTextFont
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08071550: .4byte 0x0203D40C
_08071554: .4byte gUnk_08677FD0
_08071558: .4byte gUnk_08677FF8

	thumb_func_start sub_807155C
sub_807155C: @ 0x0807155C
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r1, #5
	bl sub_807054C
	adds r2, r4, #0
	adds r2, #0x48
	adds r4, #0x4a
	ldrh r3, [r2]
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r1, r0
	bge _0807157E
	adds r0, r3, #1
	strh r0, [r2]
_0807157E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8071584
sub_8071584: @ 0x08071584
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8071838
	ldr r0, [r4, #0x2c]
	ldrb r1, [r0, #0x10]
	ldrb r2, [r0, #0x11]
	adds r0, r4, #0
	bl sub_8071830
	adds r5, r4, #0
	adds r5, #0x4a
	movs r1, #0
	ldrsh r0, [r5, r1]
	movs r1, #3
	bl __divsi3
	strh r0, [r5]
	adds r4, #0x48
	strh r0, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80715B4
sub_80715B4: @ 0x080715B4
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	bl sub_807054C
	adds r1, r4, #0
	adds r1, #0x48
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080715D4
	adds r0, r4, #0
	bl Proc_Break
_080715D4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80715DC
sub_80715DC: @ 0x080715DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080715F8 @ =0x0203D440
	movs r3, #0
	strb r4, [r0, #0x10]
	strb r1, [r0, #0x11]
	strh r2, [r0, #0x12]
	str r3, [r0, #0x14]
	str r3, [r0, #0x18]
	bl sub_8071748
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080715F8: .4byte 0x0203D440

	thumb_func_start sub_80715FC
sub_80715FC: @ 0x080715FC
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	ldr r4, _0807163C @ =gUnk_08678020
	adds r0, r4, #0
	bl Proc_Find
	adds r5, r0, #0
	cmp r5, #0
	bne _08071644
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r5, r0, #0
	ldr r0, _08071640 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807162A
	movs r0, #0x70
	bl m4aSongNumStart
_0807162A:
	ldrb r1, [r6, #0x10]
	ldrb r2, [r6, #0x11]
	adds r0, r5, #0
	bl sub_8071830
	adds r0, r5, #0
	bl sub_8071838
	b _08071660
	.align 2, 0
_0807163C: .4byte gUnk_08678020
_08071640: .4byte gPlaySt
_08071644:
	ldrh r0, [r5, #0x30]
	strh r0, [r5, #0x38]
	ldrh r0, [r5, #0x32]
	strh r0, [r5, #0x3a]
	adds r0, r5, #0
	adds r0, #0x44
	ldrh r1, [r0]
	subs r0, #4
	strh r1, [r0]
	adds r0, #6
	ldrh r0, [r0]
	adds r1, r5, #0
	adds r1, #0x42
	strh r0, [r1]
_08071660:
	str r6, [r5, #0x2c]
	adds r1, r5, #0
	adds r1, #0x48
	movs r0, #0
	strh r0, [r1]
	adds r1, #2
	movs r0, #0xc
	strh r0, [r1]
	ldrh r0, [r6, #0x12]
	adds r4, r5, #0
	adds r4, #0x4c
	strh r0, [r4]
	movs r0, #1
	bl SetTextFontGlyphs
	ldrh r0, [r4]
	bl DecodeMsg
	add r2, sp, #4
	mov r1, sp
	bl GetStringTextBox
	movs r0, #0
	bl SetTextFontGlyphs
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r5, #0
	bl sub_8071778
	ldrb r1, [r6, #0x10]
	ldrb r2, [r6, #0x11]
	adds r0, r5, #0
	bl sub_80717B8
	bl sub_8071514
	adds r0, r5, #0
	adds r0, #0x4e
	ldrh r0, [r0]
	ldrh r1, [r4]
	bl sub_80714F8
	ldr r0, _080716C4 @ =0x0203D45C
	str r6, [r0]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080716C4: .4byte 0x0203D45C

	thumb_func_start sub_80716C8
sub_80716C8: @ 0x080716C8
	push {lr}
	ldr r0, _080716E8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080716DA
	movs r0, #0x71
	bl m4aSongNumStart
_080716DA:
	bl sub_8071514
	ldr r0, _080716EC @ =gUnk_08678020
	bl Proc_BreakEach
	pop {r0}
	bx r0
	.align 2, 0
_080716E8: .4byte gPlaySt
_080716EC: .4byte gUnk_08678020

	thumb_func_start sub_80716F0
sub_80716F0: @ 0x080716F0
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x50
	movs r1, #0
	strh r1, [r0]
	ldr r0, [r4, #0x2c]
	ldr r1, [r0, #0x14]
	cmp r1, #0
	beq _08071708
	adds r0, r4, #0
	bl _call_via_r1
_08071708:
	ldr r0, [r4, #0x2c]
	bl sub_80715FC
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8071714
sub_8071714: @ 0x08071714
	push {lr}
	adds r2, r0, #0
	ldr r0, _08071730 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807172C
	adds r0, r2, #0
	bl Proc_Break
_0807172C:
	pop {r0}
	bx r0
	.align 2, 0
_08071730: .4byte gKeySt

	thumb_func_start sub_8071734
sub_8071734: @ 0x08071734
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80716C8
	adds r0, r4, #0
	bl Proc_End
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8071748
sub_8071748: @ 0x08071748
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0807175C @ =gUnk_08678040
	movs r1, #3
	bl SpawnProc
	str r4, [r0, #0x2c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807175C: .4byte gUnk_08678040

	thumb_func_start sub_8071760
sub_8071760: @ 0x08071760
	push {lr}
	ldr r0, _08071774 @ =gUnk_08678040
	bl Proc_Find
	cmp r0, #0
	beq _0807176E
	movs r0, #1
_0807176E:
	pop {r1}
	bx r1
	.align 2, 0
_08071774: .4byte gUnk_08678040

	thumb_func_start sub_8071778
sub_8071778: @ 0x08071778
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r4, #0x1f
	movs r0, #0xe0
	ands r4, r0
	adds r0, r6, #0
	adds r0, #0x4e
	ldrh r0, [r0]
	bl sub_8071848
	cmp r0, #1
	beq _0807179A
	cmp r0, #2
	beq _080717A0
	b _080717A8
_0807179A:
	movs r4, #0xa0
	adds r5, #0x20
	b _080717A8
_080717A0:
	cmp r4, #0x5f
	bgt _080717A6
	movs r4, #0x60
_080717A6:
	adds r5, #0x10
_080717A8:
	adds r0, r6, #0
	adds r0, #0x44
	strh r4, [r0]
	adds r0, #2
	strh r5, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80717B8
sub_80717B8: @ 0x080717B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r4, r1, #0
	mov r8, r2
	adds r0, #0x44
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r6, r0, #0
	adds r6, #0x10
	adds r0, r5, #0
	adds r0, #0x46
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r7, r0, #0
	adds r7, #0x10
	adds r0, r6, #0
	movs r1, #6
	bl __divsi3
	adds r0, #0x10
	subs r4, r4, r0
	strh r4, [r5, #0x3c]
	lsls r4, r4, #0x10
	cmp r4, #0
	bge _080717F2
	movs r0, #0
	strh r0, [r5, #0x3c]
_080717F2:
	movs r1, #0x3c
	ldrsh r0, [r5, r1]
	adds r0, r0, r6
	cmp r0, #0xf0
	ble _08071802
	movs r0, #0xf0
	subs r0, r0, r6
	strh r0, [r5, #0x3c]
_08071802:
	mov r0, r8
	adds r0, #0x10
	strh r0, [r5, #0x3e]
	movs r1, #0x3e
	ldrsh r0, [r5, r1]
	adds r0, r0, r7
	cmp r0, #0xa0
	ble _08071818
	mov r1, r8
	subs r0, r1, r7
	strh r0, [r5, #0x3e]
_08071818:
	ldrh r0, [r5, #0x3c]
	adds r0, #8
	strh r0, [r5, #0x3c]
	ldrh r0, [r5, #0x3e]
	adds r0, #8
	strh r0, [r5, #0x3e]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8071830
sub_8071830: @ 0x08071830
	strh r1, [r0, #0x38]
	strh r2, [r0, #0x3a]
	bx lr
	.align 2, 0

	thumb_func_start sub_8071838
sub_8071838: @ 0x08071838
	adds r2, r0, #0
	adds r2, #0x40
	movs r1, #0x20
	strh r1, [r2]
	adds r0, #0x42
	movs r1, #0x10
	strh r1, [r0]
	bx lr

	thumb_func_start sub_8071848
sub_8071848: @ 0x08071848
	push {r4, lr}
	adds r4, r0, #0
	bl GetItemAttributes
	movs r1, #0x80
	lsls r1, r1, #3
	ands r1, r0
	cmp r1, #0
	bne _0807187A
	adds r0, r4, #0
	bl GetItemAttributes
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0807186C
	movs r0, #1
	b _08071880
_0807186C:
	adds r0, r4, #0
	bl GetItemAttributes
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0807187E
_0807187A:
	movs r0, #0
	b _08071880
_0807187E:
	movs r0, #2
_08071880:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8071888
sub_8071888: @ 0x08071888
	push {lr}
	adds r2, r0, #0
	ldr r0, _080718A4 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080718A0
	adds r0, r2, #0
	bl Proc_Break
_080718A0:
	pop {r0}
	bx r0
	.align 2, 0
_080718A4: .4byte gKeySt

	thumb_func_start sub_80718A8
sub_80718A8: @ 0x080718A8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	bl sub_8041660
	adds r4, r0, #0
	bl sub_804166C
	adds r1, r0, #0
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_80715DC
	ldr r0, _080718DC @ =gUnk_08678070
	adds r1, r6, #0
	bl SpawnProcLocking
	movs r0, #1
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080718DC: .4byte gUnk_08678070

	thumb_func_start sub_80718E0
sub_80718E0: @ 0x080718E0
	push {lr}
	ldr r0, _080718F0 @ =gUnk_08678080
	bl Proc_Find
	cmp r0, #0
	bne _080718F4
	movs r0, #0
	b _080718F6
	.align 2, 0
_080718F0: .4byte gUnk_08678080
_080718F4:
	movs r0, #1
_080718F6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80718FC
sub_80718FC: @ 0x080718FC
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	cmp r7, #0
	bne _08071908
	ldr r7, _08071968 @ =0x06013000
_08071908:
	cmp r5, #0
	bge _0807190E
	movs r5, #5
_0807190E:
	movs r4, #0xf
	adds r0, r4, #0
	ands r0, r5
	adds r5, r0, #0
	adds r5, #0x10
	ldr r0, _0807196C @ =gUnk_08308A78
	adds r1, r7, #0
	bl Decompress
	ldr r6, _08071970 @ =0x0203D460
	adds r0, r6, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl InitSpriteTextFont
	adds r0, r6, #0
	adds r0, #0x18
	bl InitSpriteText
	adds r0, r6, #0
	adds r0, #0x20
	bl InitSpriteText
	adds r0, r6, #0
	adds r0, #0x28
	bl InitSpriteText
	movs r0, #0
	bl SetTextFont
	ldr r0, _08071974 @ =Pal_08100A48
	lsls r1, r5, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	lsls r0, r7, #0x11
	lsrs r0, r0, #0x16
	ands r5, r4
	lsls r1, r5, #0xc
	adds r0, r0, r1
	strh r0, [r6, #0x30]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08071968: .4byte 0x06013000
_0807196C: .4byte gUnk_08308A78
_08071970: .4byte 0x0203D460
_08071974: .4byte Pal_08100A48

	thumb_func_start sub_8071978
sub_8071978: @ 0x08071978
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r0, #0x46
	movs r1, #0
	ldrsh r0, [r0, r1]
	adds r2, r0, #0
	adds r2, #0x10
	adds r1, r3, #0
	adds r1, #0x44
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r0, #0xbf
	ble _0807199A
	movs r0, #0xc0
	strh r0, [r1]
_0807199A:
	movs r6, #0
	ldrsh r0, [r1, r6]
	adds r1, r0, #0
	adds r1, #0x10
	strh r4, [r3, #0x3c]
	movs r4, #0x3c
	ldrsh r0, [r3, r4]
	adds r0, r0, r1
	cmp r0, #0xf0
	ble _080719B4
	movs r0, #0xf0
	subs r0, r0, r1
	strh r0, [r3, #0x3c]
_080719B4:
	adds r0, r5, #0
	adds r0, #8
	strh r0, [r3, #0x3e]
	movs r6, #0x3e
	ldrsh r0, [r3, r6]
	adds r0, r0, r2
	cmp r0, #0xa0
	ble _080719CA
	subs r0, r5, r2
	subs r0, #8
	strh r0, [r3, #0x3e]
_080719CA:
	ldrh r0, [r3, #0x3c]
	adds r0, #8
	strh r0, [r3, #0x3c]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80719D8
sub_80719D8: @ 0x080719D8
	adds r1, #0x27
	movs r3, #0xe0
	ands r1, r3
	adds r3, r0, #0
	adds r3, #0x44
	strh r1, [r3]
	adds r0, #0x46
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_80719EC
sub_80719EC: @ 0x080719EC
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x38
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08071A06
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_80718FC
	b _08071A0E
_08071A06:
	ldrb r1, [r1]
	movs r0, #0
	bl sub_80718FC
_08071A0E:
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	ldr r2, [r4, #0x34]
	bl sub_8071D04
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start nullsub_36
nullsub_36: @ 0x08071A20
	bx lr
	.align 2, 0

	thumb_func_start sub_8071A24
sub_8071A24: @ 0x08071A24
	push {lr}
	movs r0, #0
	bl SetTextFontGlyphs
	bl sub_8071B6C
	pop {r0}
	bx r0

	thumb_func_start sub_8071A34
sub_8071A34: @ 0x08071A34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	adds r5, r1, #0
	movs r0, #0x38
	ldrsh r1, [r7, r0]
	movs r3, #0x3c
	ldrsh r2, [r7, r3]
	adds r4, r7, #0
	adds r4, #0x48
	movs r0, #0
	ldrsh r6, [r4, r0]
	mov r8, r6
	movs r3, #0x4a
	adds r3, r3, r7
	mov sl, r3
	movs r6, #0
	ldrsh r0, [r3, r6]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, r8
	bl Interpolate
	mov sb, r0
	movs r0, #0x3a
	ldrsh r1, [r7, r0]
	movs r3, #0x3e
	ldrsh r2, [r7, r3]
	movs r0, #0
	ldrsh r6, [r4, r0]
	mov r8, r6
	mov r3, sl
	movs r6, #0
	ldrsh r0, [r3, r6]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, r8
	bl Interpolate
	mov r8, r0
	adds r0, r7, #0
	adds r0, #0x40
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, #4
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r0, #0
	ldrsh r6, [r4, r0]
	mov ip, r6
	mov r3, sl
	movs r6, #0
	ldrsh r0, [r3, r6]
	str r0, [sp]
	adds r0, r5, #0
	mov r3, ip
	bl Interpolate
	str r0, [sp, #4]
	adds r0, r7, #0
	adds r0, #0x42
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, #4
	movs r3, #0
	ldrsh r2, [r0, r3]
	movs r6, #0
	ldrsh r3, [r4, r6]
	mov r4, sl
	movs r6, #0
	ldrsh r0, [r4, r6]
	str r0, [sp]
	adds r0, r5, #0
	bl Interpolate
	adds r3, r0, #0
	mov r0, sb
	strh r0, [r7, #0x30]
	mov r2, r8
	strh r2, [r7, #0x32]
	mov r0, sb
	mov r1, r8
	ldr r2, [sp, #4]
	bl sub_8071D94
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8071AF8
sub_8071AF8: @ 0x08071AF8
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r1, #5
	bl sub_8071A34
	adds r2, r4, #0
	adds r2, #0x48
	adds r4, #0x4a
	ldrh r3, [r2]
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r1, r0
	bge _08071B1A
	adds r0, r3, #1
	strh r0, [r2]
_08071B1A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8071B20
sub_8071B20: @ 0x08071B20
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8070B20
	adds r5, r4, #0
	adds r5, #0x4a
	movs r1, #0
	ldrsh r0, [r5, r1]
	movs r1, #3
	bl __divsi3
	strh r0, [r5]
	adds r4, #0x48
	strh r0, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8071B44
sub_8071B44: @ 0x08071B44
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	bl sub_8071A34
	adds r1, r4, #0
	adds r1, #0x48
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08071B64
	adds r0, r4, #0
	bl Proc_Break
_08071B64:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8071B6C
sub_8071B6C: @ 0x08071B6C
	push {lr}
	bl sub_80721D0
	ldr r0, _08071B7C @ =gUnk_086780C8
	bl Proc_BreakEach
	pop {r0}
	bx r0
	.align 2, 0
_08071B7C: .4byte gUnk_086780C8

	thumb_func_start sub_8071B80
sub_8071B80: @ 0x08071B80
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	cmp r3, #0
	bne _08071B9C
	ldr r0, _08071B98 @ =gUnk_08678080
	movs r1, #3
	bl SpawnProc
	b _08071BA4
	.align 2, 0
_08071B98: .4byte gUnk_08678080
_08071B9C:
	ldr r0, _08071BBC @ =gUnk_08678080
	adds r1, r3, #0
	bl SpawnProcLocking
_08071BA4:
	adds r3, r0, #0
	str r4, [r3, #0x2c]
	str r5, [r3, #0x30]
	str r6, [r3, #0x34]
	adds r1, r3, #0
	adds r1, #0x38
	movs r0, #0xff
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08071BBC: .4byte gUnk_08678080

	thumb_func_start sub_8071BC0
sub_8071BC0: @ 0x08071BC0
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	ldr r0, [sp, #0x14]
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r3, #0
	bne _08071BE0
	ldr r0, _08071BDC @ =gUnk_08678080
	movs r1, #3
	bl SpawnProc
	b _08071BE8
	.align 2, 0
_08071BDC: .4byte gUnk_08678080
_08071BE0:
	ldr r0, _08071BFC @ =gUnk_08678080
	adds r1, r3, #0
	bl SpawnProcLocking
_08071BE8:
	adds r3, r0, #0
	str r5, [r3, #0x2c]
	str r6, [r3, #0x30]
	str r7, [r3, #0x34]
	adds r0, r3, #0
	adds r0, #0x38
	strb r4, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08071BFC: .4byte gUnk_08678080

	thumb_func_start sub_8071C00
sub_8071C00: @ 0x08071C00
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r3, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	movs r7, #0
	movs r6, #0x10
	str r7, [r4]
	str r7, [r5]
_08071C12:
	ldrb r0, [r3]
	cmp r0, #4
	bhi _08071C74
	lsls r0, r0, #2
	ldr r1, _08071C24 @ =_08071C28
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08071C24: .4byte _08071C28
_08071C28: @ jump table
	.4byte _08071C62 @ case 0
	.4byte _08071C3C @ case 1
	.4byte _08071C4C @ case 2
	.4byte _08071C4C @ case 3
	.4byte _08071C48 @ case 4
_08071C3C:
	adds r6, #0x10
	ldr r0, [r4]
	cmp r0, r7
	bge _08071C46
	str r7, [r4]
_08071C46:
	movs r7, #0
_08071C48:
	adds r3, #1
	b _08071C12
_08071C4C:
	ldr r0, [r4]
	cmp r0, r7
	bge _08071C54
	str r7, [r4]
_08071C54:
	movs r7, #0
	ldr r0, [r5]
	cmp r0, r6
	bge _08071C5E
	str r6, [r5]
_08071C5E:
	movs r6, #0
	b _08071C48
_08071C62:
	ldr r0, [r4]
	cmp r0, r7
	bge _08071C6A
	str r7, [r4]
_08071C6A:
	ldr r0, [r5]
	cmp r0, r6
	bge _08071C84
	str r6, [r5]
	b _08071C84
_08071C74:
	adds r0, r3, #0
	mov r1, sp
	bl GetCharTextLen
	adds r3, r0, #0
	ldr r0, [sp]
	adds r7, r7, r0
	b _08071C12
_08071C84:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8071C8C
sub_8071C8C: @ 0x08071C8C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r1, #0
	mov r8, r2
	movs r6, #0
	movs r5, #0
	adds r4, r0, #0
	strb r5, [r7]
	strb r5, [r2]
	movs r0, #1
	bl SetTextFontGlyphs
_08071CA8:
	ldrb r0, [r4]
	cmp r0, #4
	bhi _08071CDC
	lsls r0, r0, #2
	ldr r1, _08071CB8 @ =_08071CBC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08071CB8: .4byte _08071CBC
_08071CBC: @ jump table
	.4byte _08071CEC @ case 0
	.4byte _08071CD4 @ case 1
	.4byte _08071CEC @ case 2
	.4byte _08071CEC @ case 3
	.4byte _08071CD0 @ case 4
_08071CD0:
	adds r4, #1
	b _08071CA8
_08071CD4:
	adds r4, #1
	adds r5, #0x10
	movs r6, #0
	b _08071CA8
_08071CDC:
	adds r0, r4, #0
	mov r1, sp
	bl GetCharTextLen
	adds r4, r0, #0
	ldr r0, [sp]
	adds r6, r6, r0
	b _08071CA8
_08071CEC:
	adds r0, r6, #2
	strb r0, [r7]
	adds r0, r5, #0
	adds r0, #8
	mov r1, r8
	strb r0, [r1]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8071D04
sub_8071D04: @ 0x08071D04
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	mov r8, r0
	mov sb, r1
	adds r6, r2, #0
	ldr r0, _08071D90 @ =gUnk_086780C8
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	mov r1, r8
	mov r2, sb
	bl sub_8070AFC
	adds r0, r4, #0
	bl sub_8070B20
	movs r1, #0
	str r1, [r4, #0x2c]
	adds r0, r4, #0
	adds r0, #0x48
	strh r1, [r0]
	adds r2, r4, #0
	adds r2, #0x4a
	movs r0, #0xc
	strh r0, [r2]
	adds r0, r4, #0
	adds r0, #0x4e
	strh r1, [r0]
	adds r5, r4, #0
	adds r5, #0x4c
	strh r6, [r5]
	movs r0, #1
	bl SetTextFontGlyphs
	ldrh r0, [r5]
	bl DecodeMsg
	add r2, sp, #4
	mov r1, sp
	bl sub_8071C00
	movs r0, #0
	bl SetTextFontGlyphs
	ldr r1, [sp]
	ldr r2, [sp, #4]
	adds r0, r4, #0
	bl sub_80719D8
	adds r0, r4, #0
	mov r1, r8
	mov r2, sb
	bl sub_8071978
	bl sub_80721D0
	ldrh r0, [r5]
	bl sub_80721B8
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08071D90: .4byte gUnk_086780C8

	thumb_func_start sub_8071D94
sub_8071D94: @ 0x08071D94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	mov sl, r1
	adds r7, r2, #0
	mov r8, r3
	cmp r7, #0x1f
	bgt _08071DAE
	movs r7, #0x20
_08071DAE:
	cmp r7, #0xc0
	ble _08071DB4
	movs r7, #0xc0
_08071DB4:
	mov r0, r8
	cmp r0, #0xf
	bgt _08071DBE
	movs r1, #0x10
	mov r8, r1
_08071DBE:
	mov r3, r8
	cmp r3, #0x30
	ble _08071DC8
	movs r0, #0x30
	mov r8, r0
_08071DC8:
	adds r0, r7, #0
	adds r0, #0x1f
	cmp r0, #0
	bge _08071DD2
	adds r0, #0x1f
_08071DD2:
	asrs r0, r0, #5
	mov r1, r8
	adds r1, #0xf
	cmp r1, #0
	bge _08071DDE
	adds r1, #0xf
_08071DDE:
	asrs r1, r1, #4
	str r1, [sp, #4]
	subs r6, r0, #1
	str r6, [sp, #8]
	mov r1, sl
	subs r1, #8
	str r1, [sp, #0x18]
	mov r3, sl
	add r3, r8
	str r3, [sp, #0x10]
	mov r0, sb
	subs r0, #8
	str r0, [sp, #0x14]
	mov r1, sb
	adds r1, r1, r7
	str r1, [sp, #0xc]
	cmp r6, #0
	blt _08071E4A
_08071E02:
	ldr r5, [sp, #4]
	subs r4, r6, #1
	cmp r5, #0
	blt _08071E44
_08071E0A:
	adds r0, r6, #1
	lsls r1, r0, #5
	cmp r1, r7
	ble _08071E14
	adds r1, r7, #0
_08071E14:
	subs r1, #0x20
	adds r0, r5, #1
	lsls r0, r0, #4
	cmp r0, r8
	ble _08071E20
	mov r0, r8
_08071E20:
	subs r0, #0x10
	add r1, sb
	mov r3, sl
	adds r2, r3, r0
	ldr r3, _08071F28 @ =0x0203D460
	lsls r0, r6, #2
	ldrh r3, [r3, #0x30]
	adds r0, r3, r0
	lsls r3, r5, #6
	adds r0, r0, r3
	str r0, [sp]
	movs r0, #2
	ldr r3, _08071F2C @ =Sprite_32x16
	bl PutSprite
	subs r5, #1
	cmp r5, #0
	bge _08071E0A
_08071E44:
	adds r6, r4, #0
	cmp r6, #0
	bge _08071E02
_08071E4A:
	ldr r6, [sp, #8]
	cmp r6, #0
	blt _08071E8C
	ldr r5, _08071F28 @ =0x0203D460
_08071E52:
	adds r0, r6, #1
	lsls r1, r0, #5
	cmp r1, r7
	ble _08071E5C
	adds r1, r7, #0
_08071E5C:
	subs r1, #0x20
	mov r0, sb
	adds r4, r0, r1
	ldrh r0, [r5, #0x30]
	adds r0, #0x1b
	str r0, [sp]
	movs r0, #2
	adds r1, r4, #0
	ldr r2, [sp, #0x18]
	ldr r3, _08071F30 @ =Sprite_32x8
	bl PutSprite
	ldrh r0, [r5, #0x30]
	adds r0, #0x1b
	str r0, [sp]
	movs r0, #2
	adds r1, r4, #0
	ldr r2, [sp, #0x10]
	ldr r3, _08071F34 @ =Sprite_32x8_VFlipped
	bl PutSprite
	subs r6, #1
	cmp r6, #0
	bge _08071E52
_08071E8C:
	ldr r5, [sp, #4]
	cmp r5, #0
	blt _08071ECE
	ldr r6, _08071F28 @ =0x0203D460
_08071E94:
	adds r0, r5, #1
	lsls r0, r0, #4
	cmp r0, r8
	ble _08071E9E
	mov r0, r8
_08071E9E:
	subs r0, #0x10
	mov r1, sl
	adds r4, r1, r0
	ldrh r0, [r6, #0x30]
	adds r0, #0x1f
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0x14]
	adds r2, r4, #0
	ldr r3, _08071F38 @ =Sprite_8x16
	bl PutSprite
	ldrh r0, [r6, #0x30]
	adds r0, #0x1f
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	ldr r3, _08071F3C @ =Sprite_8x16_HFlipped
	bl PutSprite
	subs r5, #1
	cmp r5, #0
	bge _08071E94
_08071ECE:
	ldr r3, _08071F40 @ =Sprite_8x8
	ldr r4, _08071F28 @ =0x0203D460
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x18]
	bl PutSprite
	ldr r3, _08071F44 @ =Sprite_8x8_HFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x18]
	bl PutSprite
	ldr r3, _08071F48 @ =Sprite_8x8_VFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0x14]
	ldr r2, [sp, #0x10]
	bl PutSprite
	ldr r3, _08071F4C @ =Sprite_8x8_HFlipped_VFlipped
	ldrh r0, [r4, #0x30]
	adds r0, #0x3e
	str r0, [sp]
	movs r0, #2
	ldr r1, [sp, #0xc]
	ldr r2, [sp, #0x10]
	bl PutSprite
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08071F28: .4byte 0x0203D460
_08071F2C: .4byte Sprite_32x16
_08071F30: .4byte Sprite_32x8
_08071F34: .4byte Sprite_32x8_VFlipped
_08071F38: .4byte Sprite_8x16
_08071F3C: .4byte Sprite_8x16_HFlipped
_08071F40: .4byte Sprite_8x8
_08071F44: .4byte Sprite_8x8_HFlipped
_08071F48: .4byte Sprite_8x8_VFlipped
_08071F4C: .4byte Sprite_8x8_HFlipped_VFlipped

	thumb_func_start sub_8071F50
sub_8071F50: @ 0x08071F50
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	adds r1, r2, #0
	adds r1, #0x56
	adds r2, #0x57
	bl sub_8071C8C
	pop {r0}
	bx r0

	thumb_func_start sub_8071F64
sub_8071F64: @ 0x08071F64
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x58
	ldrb r0, [r5]
	cmp r0, #1
	bne _08071FA4
	ldr r4, _08071FA0 @ =0x0203D460
	adds r0, r4, #0
	bl SetTextFont
	adds r0, r4, #0
	adds r0, #0x18
	bl SpriteText_DrawBackground
	adds r0, r4, #0
	adds r0, #0x20
	bl SpriteText_DrawBackground
	adds r4, #0x28
	adds r0, r4, #0
	bl SpriteText_DrawBackground
	movs r0, #0
	bl SetTextFont
	movs r0, #0
	strb r0, [r5]
	b _080720D4
	.align 2, 0
_08071FA0: .4byte 0x0203D460
_08071FA4:
	adds r0, r6, #0
	adds r0, #0x52
	movs r1, #0
	ldrsh r7, [r0, r1]
	ldr r0, _08071FC0 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xf3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08071FC4
	movs r7, #0x80
	b _08071FDE
	.align 2, 0
_08071FC0: .4byte gKeySt
_08071FC4:
	adds r1, r6, #0
	adds r1, #0x4e
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08071FD6
	b _080720D4
_08071FD6:
	adds r0, r6, #0
	adds r0, #0x50
	ldrh r0, [r0]
	strh r0, [r1]
_08071FDE:
	ldr r0, [r6, #0x30]
	bl SetTextFont
	movs r5, #0
	cmp r5, r7
	bge _080720CE
_08071FEA:
	ldr r2, [r6, #0x2c]
	ldrb r0, [r2]
	adds r3, r2, #0
	cmp r0, #4
	bhi _0807208C
	lsls r0, r0, #2
	ldr r1, _08072000 @ =_08072004
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08072000: .4byte _08072004
_08072004: @ jump table
	.4byte _08072018 @ case 0
	.4byte _08072020 @ case 1
	.4byte _08072036 @ case 2
	.4byte _08072036 @ case 3
	.4byte _08072030 @ case 4
_08072018:
	adds r0, r6, #0
	bl Proc_Break
	b _080720CE
_08072020:
	adds r0, r3, #1
	str r0, [r6, #0x2c]
	adds r1, r6, #0
	adds r1, #0x4c
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _080720C8
_08072030:
	adds r0, r3, #1
	str r0, [r6, #0x2c]
	b _080720C8
_08072036:
	adds r1, r6, #0
	adds r1, #0x4c
	movs r0, #0
	strh r0, [r1]
	ldr r0, [r6, #0x2c]
	adds r0, #1
	str r0, [r6, #0x2c]
	adds r1, #0xc
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r6, #0x2c]
	ldrb r2, [r0]
	cmp r2, #1
	bne _08072056
	adds r0, #1
	str r0, [r6, #0x2c]
_08072056:
	ldr r0, _08072088 @ =gUnk_086780C8
	bl Proc_Find
	movs r3, #0x3c
	ldrsh r1, [r0, r3]
	adds r5, r6, #0
	adds r5, #0x56
	ldrb r2, [r5]
	adds r1, r2, r1
	movs r3, #0x3e
	ldrsh r2, [r0, r3]
	adds r4, r6, #0
	adds r4, #0x57
	ldrb r0, [r4]
	adds r2, r0, r2
	adds r0, r6, #0
	bl StartTalkWaitForInput
	ldr r0, [r6, #0x2c]
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_8071C8C
	b _080720CE
	.align 2, 0
_08072088: .4byte gUnk_086780C8
_0807208C:
	adds r0, r6, #0
	adds r0, #0x4c
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r1, r1, #2
	subs r0, #0x18
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r2, #0
	bl Text_DrawCharacter
	str r0, [r6, #0x2c]
	bl GetTextPrintDelay
	adds r4, r0, #0
	cmp r4, #1
	bne _080720B8
	bl GetGameTime
	ands r0, r4
	cmp r0, #0
	beq _080720C8
_080720B8:
	ldr r0, _080720DC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080720C8
	movs r0, #0x6e
	bl m4aSongNumStart
_080720C8:
	adds r5, #1
	cmp r5, r7
	blt _08071FEA
_080720CE:
	movs r0, #0
	bl SetTextFont
_080720D4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080720DC: .4byte gPlaySt

	thumb_func_start sub_80720E0
sub_80720E0: @ 0x080720E0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080720FC @ =gUnk_08678080
	bl Proc_Find
	movs r1, #0
	bl Proc_Goto
	adds r0, r4, #0
	bl Proc_Break
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080720FC: .4byte gUnk_08678080

	thumb_func_start sub_8072100
sub_8072100: @ 0x08072100
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	mov sl, r0
	ldr r5, _080721B0 @ =0x0203D460
	adds r0, r5, #0
	bl SetTextFont
	movs r0, #0
	bl SetTextFontGlyphs
	movs r0, #1
	bl SetTextFontGlyphs
	movs r0, #0x18
	adds r0, r0, r5
	mov sb, r0
	movs r1, #6
	bl Text_SetColor
	movs r1, #0x20
	adds r1, r1, r5
	mov r8, r1
	mov r0, r8
	movs r1, #6
	bl Text_SetColor
	adds r6, r5, #0
	adds r6, #0x28
	adds r0, r6, #0
	movs r1, #6
	bl Text_SetColor
	movs r0, #0
	bl SetTextFont
	ldr r4, _080721B4 @ =gUnk_086780E8
	adds r0, r4, #0
	bl Proc_EndEach
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	str r5, [r4, #0x30]
	mov r0, sb
	str r0, [r4, #0x34]
	mov r1, r8
	str r1, [r4, #0x38]
	str r6, [r4, #0x3c]
	adds r0, r4, #0
	adds r0, #0x4c
	movs r5, #0
	strh r5, [r0]
	mov r1, sl
	ldr r0, [r1, #0x5c]
	bl DecodeMsg
	str r0, [r4, #0x2c]
	bl GetTextPrintDelay
	adds r1, r4, #0
	adds r1, #0x50
	strh r0, [r1]
	lsls r0, r0, #0x10
	movs r1, #0x80
	cmp r0, #0
	beq _08072190
	movs r1, #1
_08072190:
	adds r0, r4, #0
	adds r0, #0x52
	strh r1, [r0]
	subs r0, #4
	strh r5, [r0]
	adds r1, r4, #0
	adds r1, #0x58
	movs r0, #0
	strb r0, [r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080721B0: .4byte 0x0203D460
_080721B4: .4byte gUnk_086780E8

	thumb_func_start sub_80721B8
sub_80721B8: @ 0x080721B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080721CC @ =gUnk_08678110
	movs r1, #3
	bl SpawnProc
	str r4, [r0, #0x5c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080721CC: .4byte gUnk_08678110

	thumb_func_start sub_80721D0
sub_80721D0: @ 0x080721D0
	push {r4, lr}
	ldr r4, _0807220C @ =0x0203D460
	adds r0, r4, #0
	bl SetTextFont
	adds r0, r4, #0
	adds r0, #0x18
	bl SpriteText_DrawBackground
	adds r0, r4, #0
	adds r0, #0x20
	bl SpriteText_DrawBackground
	adds r4, #0x28
	adds r0, r4, #0
	bl SpriteText_DrawBackground
	ldr r0, _08072210 @ =gUnk_086780E8
	bl Proc_EndEach
	ldr r0, _08072214 @ =gUnk_08678110
	bl Proc_EndEach
	movs r0, #0
	bl SetTextFont
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807220C: .4byte 0x0203D460
_08072210: .4byte gUnk_086780E8
_08072214: .4byte gUnk_08678110

	thumb_func_start sub_8072218
sub_8072218: @ 0x08072218
	adds r3, r0, #0
	lsls r1, r1, #0x10
	lsrs r0, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #5
	ble _08072226
	movs r0, #5
_08072226:
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	strh r0, [r3]
	bx lr

	thumb_func_start sub_8072230
sub_8072230: @ 0x08072230
	push {r4, r5, lr}
	adds r3, r0, #0
	lsls r1, r1, #0x10
	asrs r4, r1, #0x13
	movs r0, #0xe0
	lsls r0, r0, #0xb
	ands r0, r1
	asrs r0, r0, #0x10
	movs r1, #0
	adds r5, r2, #0
	adds r5, #0xe
	adds r2, #6
	adds r0, r2, r0
_0807224A:
	cmp r1, r4
	bge _08072252
	strh r5, [r3]
	b _0807225C
_08072252:
	cmp r1, r4
	bne _0807225A
	strh r0, [r3]
	b _0807225C
_0807225A:
	strh r2, [r3]
_0807225C:
	adds r3, #2
	adds r1, #1
	cmp r1, #3
	ble _0807224A
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807226C
sub_807226C: @ 0x0807226C
	push {r4, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #4
	ble _0807227C
	movs r3, #5
_0807227C:
	lsls r0, r3, #0x10
	cmp r0, #0
	bge _08072284
	movs r3, #0
_08072284:
	adds r1, r2, #0
	adds r1, #0xf
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8072298
sub_8072298: @ 0x08072298
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	adds r0, r6, #0
	bl GetUnitCurrentHp
	movs r1, #0x2a
	adds r4, r0, #0
	muls r4, r1, r4
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r6, #0
	bl GetUnitMaxHp
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl sub_8072218
	adds r0, r5, #2
	subs r1, r4, #5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	mov r2, r8
	bl sub_8072230
	adds r5, #0xa
	subs r4, #0x25
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	mov r2, r8
	bl sub_807226C
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_80722FC
sub_80722FC: @ 0x080722FC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x4d
	movs r4, #0
	movs r0, #1
	strb r0, [r1]
	str r4, [sp]
	ldr r7, _08072374 @ =gBg0Tm
	ldr r5, _08072378 @ =0x01000060
	mov r0, sp
	adds r1, r7, #0
	adds r2, r5, #0
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _0807237C @ =gBg1Tm
	mov r8, r1
	adds r2, r5, #0
	bl CpuFastSet
	movs r0, #3
	bl EnableBgSync
	ldr r1, _08072380 @ =gUnk_08678164
	ldr r0, [r6, #0x50]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	adds r0, r6, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _0807238C
	movs r4, #0xc
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r0, _08072384 @ =0x02003238
	adds r0, r4, r0
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	ldr r0, _08072388 @ =0x02003738
	adds r4, r4, r0
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	b _080723AC
	.align 2, 0
_08072374: .4byte gBg0Tm
_08072378: .4byte 0x01000060
_0807237C: .4byte gBg1Tm
_08072380: .4byte gUnk_08678164
_08072384: .4byte 0x02003238
_08072388: .4byte 0x02003738
_0807238C:
	ldr r0, _080723F8 @ =0x02003238
	movs r4, #0x1e
	subs r4, r4, r5
	lsls r4, r4, #1
	adds r1, r4, r7
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	ldr r0, _080723FC @ =0x02003738
	add r4, r8
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
_080723AC:
	ldr r0, [r6, #0x50]
	adds r0, #1
	str r0, [r6, #0x50]
	cmp r0, #4
	bne _080723EA
	adds r1, r6, #0
	adds r1, #0x4d
	movs r0, #0
	strb r0, [r1]
	str r0, [r6, #0x50]
	adds r0, r6, #0
	bl Proc_Break
	ldr r2, _08072400 @ =gBmSt
	movs r3, #0x16
	ldrsh r0, [r2, r3]
	ldr r1, _08072404 @ =gMapUnit
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r3, #0x14
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl GetUnit
	adds r1, r0, #0
	adds r0, r6, #0
	bl sub_80728A4
_080723EA:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080723F8: .4byte 0x02003238
_080723FC: .4byte 0x02003738
_08072400: .4byte gBmSt
_08072404: .4byte gMapUnit

	thumb_func_start sub_8072408
sub_8072408: @ 0x08072408
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x4d
	movs r4, #0
	movs r0, #1
	strb r0, [r1]
	str r4, [sp]
	ldr r7, _08072480 @ =gBg0Tm
	ldr r5, _08072484 @ =0x01000060
	mov r0, sp
	adds r1, r7, #0
	adds r2, r5, #0
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _08072488 @ =gBg1Tm
	mov r8, r1
	adds r2, r5, #0
	bl CpuFastSet
	movs r0, #3
	bl EnableBgSync
	ldr r1, _0807248C @ =gUnk_08678168
	ldr r0, [r6, #0x50]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	adds r0, r6, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08072498
	movs r4, #0xc
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r0, _08072490 @ =0x02003238
	adds r0, r4, r0
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	ldr r0, _08072494 @ =0x02003738
	adds r4, r4, r0
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	b _080724B8
	.align 2, 0
_08072480: .4byte gBg0Tm
_08072484: .4byte 0x01000060
_08072488: .4byte gBg1Tm
_0807248C: .4byte gUnk_08678168
_08072490: .4byte 0x02003238
_08072494: .4byte 0x02003738
_08072498:
	ldr r0, _080724D8 @ =0x02003238
	movs r4, #0x1e
	subs r4, r4, r5
	lsls r4, r4, #1
	adds r1, r4, r7
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
	ldr r0, _080724DC @ =0x02003738
	add r4, r8
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #6
	bl TmCopyRect_t
_080724B8:
	ldr r0, [r6, #0x50]
	adds r0, #1
	str r0, [r6, #0x50]
	cmp r0, #3
	bne _080724CC
	movs r0, #0
	str r0, [r6, #0x50]
	adds r0, r6, #0
	bl Proc_Break
_080724CC:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080724D8: .4byte 0x02003238
_080724DC: .4byte 0x02003738

	thumb_func_start sub_80724E0
sub_80724E0: @ 0x080724E0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x4d
	movs r0, #1
	strb r0, [r1]
	ldr r7, _08072570 @ =gBg0Tm+0x340
	adds r0, r7, #0
	movs r1, #6
	movs r2, #7
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08072574 @ =gBg1Tm+0x340
	mov r8, r0
	movs r1, #6
	movs r2, #7
	movs r3, #0
	bl TmFillRect_t
	adds r0, r7, #0
	adds r0, #0x30
	movs r1, #6
	movs r2, #7
	movs r3, #0
	bl TmFillRect_t
	mov r0, r8
	adds r0, #0x30
	movs r1, #6
	movs r2, #7
	movs r3, #0
	bl TmFillRect_t
	movs r0, #3
	bl EnableBgSync
	ldr r1, _08072578 @ =gUnk_0867816B
	ldr r0, [r6, #0x50]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	adds r0, r6, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08072584
	movs r4, #0xa3
	lsls r4, r4, #1
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r0, _0807257C @ =0x02003238
	adds r0, r4, r0
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	ldr r0, _08072580 @ =0x02003738
	adds r4, r4, r0
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	b _080725AE
	.align 2, 0
_08072570: .4byte gBg0Tm+0x340
_08072574: .4byte gBg1Tm+0x340
_08072578: .4byte gUnk_0867816B
_0807257C: .4byte 0x02003238
_08072580: .4byte 0x02003738
_08072584:
	ldr r0, _080725D4 @ =0x020034B8
	movs r4, #0xdf
	lsls r4, r4, #1
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r2, _080725D8 @ =0xFFFFFCC0
	adds r1, r7, r2
	adds r1, r4, r1
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	ldr r0, _080725DC @ =0x020039B8
	ldr r1, _080725D8 @ =0xFFFFFCC0
	add r1, r8
	adds r4, r4, r1
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
_080725AE:
	ldr r0, [r6, #0x50]
	adds r0, #1
	str r0, [r6, #0x50]
	cmp r0, #3
	bne _080725C8
	movs r0, #0
	str r0, [r6, #0x50]
	adds r1, r6, #0
	adds r1, #0x4d
	strb r0, [r1]
	adds r0, r6, #0
	bl Proc_Break
_080725C8:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080725D4: .4byte 0x020034B8
_080725D8: .4byte 0xFFFFFCC0
_080725DC: .4byte 0x020039B8

	thumb_func_start sub_80725E0
sub_80725E0: @ 0x080725E0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x4d
	movs r4, #0
	movs r0, #1
	strb r0, [r1]
	str r4, [sp]
	ldr r7, _08072658 @ =gBg0Tm+0x340
	ldr r5, _0807265C @ =0x01000070
	mov r0, sp
	adds r1, r7, #0
	adds r2, r5, #0
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _08072660 @ =gBg1Tm+0x340
	mov r8, r1
	adds r2, r5, #0
	bl CpuFastSet
	movs r0, #3
	bl EnableBgSync
	ldr r1, _08072664 @ =gUnk_0867816E
	ldr r0, [r6, #0x50]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	adds r0, r6, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08072670
	movs r4, #0xa3
	lsls r4, r4, #1
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r0, _08072668 @ =0x02003238
	adds r0, r4, r0
	adds r1, r7, #0
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	ldr r0, _0807266C @ =0x02003738
	adds r4, r4, r0
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	b _0807269A
	.align 2, 0
_08072658: .4byte gBg0Tm+0x340
_0807265C: .4byte 0x01000070
_08072660: .4byte gBg1Tm+0x340
_08072664: .4byte gUnk_0867816E
_08072668: .4byte 0x02003238
_0807266C: .4byte 0x02003738
_08072670:
	ldr r0, _080726C0 @ =0x020034B8
	movs r4, #0xdf
	lsls r4, r4, #1
	subs r4, r4, r5
	lsls r4, r4, #1
	ldr r2, _080726C4 @ =0xFFFFFCC0
	adds r1, r7, r2
	adds r1, r4, r1
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
	ldr r0, _080726C8 @ =0x020039B8
	ldr r1, _080726C4 @ =0xFFFFFCC0
	add r1, r8
	adds r4, r4, r1
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #7
	bl TmCopyRect_t
_0807269A:
	ldr r0, [r6, #0x50]
	adds r0, #1
	str r0, [r6, #0x50]
	cmp r0, #3
	bne _080726B4
	movs r0, #0
	str r0, [r6, #0x50]
	adds r1, r6, #0
	adds r1, #0x4d
	strb r0, [r1]
	adds r0, r6, #0
	bl Proc_Break
_080726B4:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080726C0: .4byte 0x020034B8
_080726C4: .4byte 0xFFFFFCC0
_080726C8: .4byte 0x020039B8

	thumb_func_start sub_80726CC
sub_80726CC: @ 0x080726CC
	push {lr}
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x12
	cmp r0, #0
	bge _080726DE
	movs r1, #0
_080726DE:
	ldr r0, _080726F8 @ =0x02003238
	lsls r1, r1, #1
	ldr r2, _080726FC @ =gBg0Tm
	adds r1, r1, r2
	movs r2, #0xc
	movs r3, #6
	bl TmCopyRect_t
	movs r0, #3
	bl EnableBgSync
	pop {r0}
	bx r0
	.align 2, 0
_080726F8: .4byte 0x02003238
_080726FC: .4byte gBg0Tm

	thumb_func_start sub_8072700
sub_8072700: @ 0x08072700
	push {lr}
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x18
	cmp r0, #0
	bge _08072712
	movs r1, #0
_08072712:
	ldr r0, _0807272C @ =0x020034B8
	lsls r1, r1, #1
	ldr r2, _08072730 @ =gBg0Tm+0x340
	adds r1, r1, r2
	movs r2, #6
	movs r3, #7
	bl TmCopyRect_t
	movs r0, #3
	bl EnableBgSync
	pop {r0}
	bx r0
	.align 2, 0
_0807272C: .4byte 0x020034B8
_08072730: .4byte gBg0Tm+0x340

	thumb_func_start sub_8072734
sub_8072734: @ 0x08072734
	push {r4, r5, lr}
	adds r5, r1, #0
	movs r4, #0
	cmp r0, #0x40
	beq _08072760
	cmp r0, #0x40
	bgt _08072748
	cmp r0, #0
	beq _0807274E
	b _08072768
_08072748:
	cmp r0, #0x80
	beq _08072758
	b _08072768
_0807274E:
	ldr r4, _08072754 @ =gUnk_0831906C
	b _0807276C
	.align 2, 0
_08072754: .4byte gUnk_0831906C
_08072758:
	ldr r4, _0807275C @ =gUnk_0831908C
	b _0807276C
	.align 2, 0
_0807275C: .4byte gUnk_0831908C
_08072760:
	ldr r4, _08072764 @ =gUnk_083190AC
	b _0807276C
	.align 2, 0
_08072764: .4byte gUnk_083190AC
_08072768:
	bl nullsub_2
_0807276C:
	lsls r1, r5, #5
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_807277C
sub_807277C: @ 0x0807277C
	ldr r0, _08072794 @ =gBmSt
	movs r2, #0x14
	ldrsh r1, [r0, r2]
	lsls r1, r1, #4
	movs r2, #0xc
	ldrsh r0, [r0, r2]
	subs r1, r1, r0
	cmp r1, #0x6f
	bgt _08072798
	movs r0, #1
	b _080727A4
	.align 2, 0
_08072794: .4byte gBmSt
_08072798:
	cmp r1, #0x70
	bgt _080727A0
	movs r0, #0
	b _080727A4
_080727A0:
	movs r0, #1
	rsbs r0, r0, #0
_080727A4:
	bx lr
	.align 2, 0

	thumb_func_start sub_80727A8
sub_80727A8: @ 0x080727A8
	push {r4, lr}
	ldr r1, _080727E8 @ =gBmSt
	movs r0, #0x14
	ldrsh r2, [r1, r0]
	movs r3, #0xc
	ldrsh r0, [r1, r3]
	cmp r0, #0
	bge _080727BA
	adds r0, #0xf
_080727BA:
	asrs r0, r0, #4
	subs r2, r2, r0
	movs r4, #0x16
	ldrsh r3, [r1, r4]
	movs r4, #0xe
	ldrsh r0, [r1, r4]
	cmp r0, #0
	bge _080727CC
	adds r0, #0xf
_080727CC:
	asrs r0, r0, #4
	subs r0, r3, r0
	movs r1, #9
	subs r1, r1, r0
	adds r0, r2, #0
	muls r0, r2, r0
	adds r3, r1, #0
	muls r3, r1, r3
	adds r1, r3, #0
	adds r0, r0, r1
	cmp r0, #0x30
	bgt _080727EC
	movs r0, #1
	b _08072804
	.align 2, 0
_080727E8: .4byte gBmSt
_080727EC:
	movs r0, #0xe
	subs r0, r0, r2
	adds r4, r0, #0
	muls r4, r0, r4
	adds r0, r4, #0
	adds r0, r0, r1
	cmp r0, #0x30
	ble _08072800
	movs r0, #0
	b _08072804
_08072800:
	movs r0, #1
	rsbs r0, r0, #0
_08072804:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_807280C
sub_807280C: @ 0x0807280C
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r3, _08072830 @ =0x00000121
	adds r1, r3, #0
	strh r1, [r0, #2]
	movs r2, #0
	strh r2, [r0, #4]
	adds r3, #0x1d
	adds r1, r3, #0
	strh r1, [r0, #6]
	adds r3, #1
	adds r1, r3, #0
	strh r1, [r0, #8]
	strh r2, [r0, #0xa]
	bx lr
	.align 2, 0
_08072830: .4byte 0x00000121

	thumb_func_start sub_8072834
sub_8072834: @ 0x08072834
	push {r4, lr}
	adds r3, r0, #0
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r1, #0
	beq _0807289C
	adds r1, #0x2e
	ldrb r4, [r1]
	lsls r0, r4, #0x1c
	lsrs r0, r0, #0x1c
	adds r4, r1, #0
	cmp r0, #4
	bhi _0807287E
	lsls r0, r0, #2
	ldr r1, _08072858 @ =_0807285C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08072858: .4byte _0807285C
_0807285C: @ jump table
	.4byte _0807289C @ case 0
	.4byte _08072874 @ case 1
	.4byte _08072870 @ case 2
	.4byte _0807287C @ case 3
	.4byte _08072878 @ case 4
_08072870:
	adds r2, #0x60
	b _0807287E
_08072874:
	adds r2, #0x64
	b _0807287E
_08072878:
	adds r2, #0x68
	b _0807287E
_0807287C:
	adds r2, #0x6c
_0807287E:
	strh r2, [r3]
	adds r2, #1
	strh r2, [r3, #2]
	adds r2, #1
	strh r2, [r3, #4]
	adds r2, #1
	strh r2, [r3, #6]
	movs r0, #0
	strh r0, [r3, #8]
	ldrb r4, [r4]
	lsrs r0, r4, #4
	movs r1, #0x94
	lsls r1, r1, #1
	adds r0, r0, r1
	strh r0, [r3, #0xa]
_0807289C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80728A4
sub_80728A4: @ 0x080728A4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	adds r5, r1, #0
	ldrh r1, [r6, #0x3c]
	movs r0, #0x3f
	ands r0, r1
	cmp r0, #0
	bne _0807291A
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080728D0
	ldr r0, [r6, #0x38]
	adds r1, r5, #0
	bl sub_8072834
	movs r0, #1
	bl EnableBgSync
	b _0807291A
_080728D0:
	ldr r0, [r6, #0x38]
	adds r1, r5, #0
	bl sub_807280C
	movs r0, #1
	bl EnableBgSync
	adds r0, r5, #0
	bl GetUnitCurrentHp
	bl GenNumberStr
	ldr r4, _080729BC @ =gNumberStr
	ldrb r0, [r4, #6]
	subs r0, #0x30
	adds r1, r6, #0
	adds r1, #0x49
	strb r0, [r1]
	ldrb r0, [r4, #7]
	subs r0, #0x30
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl GetUnitMaxHp
	bl GenNumberStr
	ldrb r0, [r4, #6]
	subs r0, #0x30
	adds r1, r6, #0
	adds r1, #0x4b
	strb r0, [r1]
	ldrb r1, [r4, #7]
	subs r1, #0x30
	adds r0, r6, #0
	adds r0, #0x4c
	strb r1, [r0]
_0807291A:
	adds r0, r6, #0
	adds r0, #0x4d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080729B2
	movs r0, #0x40
	ldrh r1, [r6, #0x3c]
	ands r0, r1
	cmp r0, #0
	beq _08072940
	adds r1, r5, #0
	adds r1, #0x2e
	movs r0, #0xf
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _080729B2
_08072940:
	movs r2, #0x3e
	ldrsh r0, [r6, r2]
	lsls r7, r0, #3
	adds r1, r7, #0
	adds r1, #0x10
	adds r0, r6, #0
	adds r0, #0x40
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r5, r0, #3
	adds r0, r6, #0
	adds r0, #0x49
	ldrb r2, [r0]
	cmp r2, #0xf0
	beq _0807296E
	ldr r2, _080729C0 @ =Sprite_8x8
	ldrb r0, [r0]
	ldr r4, _080729C4 @ =0x000082E0
	adds r3, r0, r4
	adds r0, r1, #0
	adds r1, r5, #0
	bl PutOamHiRam
_0807296E:
	adds r0, r7, #0
	adds r0, #0x17
	ldr r1, _080729C0 @ =Sprite_8x8
	mov r8, r1
	adds r1, r6, #0
	adds r1, #0x4a
	ldr r4, _080729C4 @ =0x000082E0
	ldrb r1, [r1]
	adds r3, r1, r4
	adds r1, r5, #0
	mov r2, r8
	bl PutOamHiRam
	adds r0, r7, #0
	adds r0, #0x22
	adds r1, r6, #0
	adds r1, #0x4b
	ldrb r1, [r1]
	adds r3, r1, r4
	adds r1, r5, #0
	mov r2, r8
	bl PutOamHiRam
	adds r0, r7, #0
	adds r0, #0x29
	adds r1, r6, #0
	adds r1, #0x4c
	ldrb r1, [r1]
	adds r4, r1, r4
	adds r1, r5, #0
	mov r2, r8
	adds r3, r4, #0
	bl PutOamHiRam
_080729B2:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080729BC: .4byte gNumberStr
_080729C0: .4byte Sprite_8x8
_080729C4: .4byte 0x000082E0

	thumb_func_start sub_80729C8
sub_80729C8: @ 0x080729C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	mov sl, r1
	movs r0, #0
	mov sb, r0
	str r0, [sp, #4]
	ldr r6, _08072A58 @ =0x02003238
	ldr r2, _08072A5C @ =0x01000060
	add r0, sp, #4
	adds r1, r6, #0
	bl CpuFastSet
	mov r1, sl
	ldr r0, [r1]
	ldrh r0, [r0]
	bl DecodeMsg
	mov r8, r0
	movs r0, #0x30
	mov r1, r8
	bl GetStringTextCenteredPos
	adds r5, r0, #0
	adds r4, r7, #0
	adds r4, #0x2c
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #5
	bl Text_SetParams
	adds r0, r4, #0
	mov r1, r8
	bl Text_DrawString
	adds r1, r6, #0
	adds r1, #0x4a
	adds r0, r4, #0
	bl PutText
	mov r0, sl
	bl GetUnitChibiId
	adds r1, r6, #0
	adds r1, #0x42
	mov r2, sb
	str r2, [sp]
	movs r2, #0xf0
	movs r3, #4
	bl PutFaceChibi
	adds r6, #0xca
	str r6, [r7, #0x38]
	mov r0, sb
	strh r0, [r7, #0x3c]
	adds r0, r7, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bge _08072A60
	movs r0, #5
	b _08072A62
	.align 2, 0
_08072A58: .4byte 0x02003238
_08072A5C: .4byte 0x01000060
_08072A60:
	movs r0, #0x17
_08072A62:
	strh r0, [r7, #0x3e]
	adds r1, r7, #0
	adds r1, #0x40
	movs r0, #3
	strh r0, [r1]
	adds r0, r7, #0
	mov r1, sl
	bl sub_80728A4
	ldr r0, _08072AAC @ =0x02003342
	movs r2, #0xc5
	lsls r2, r2, #6
	mov r1, sl
	bl sub_8072298
	ldr r0, _08072AB0 @ =0x02003738
	ldr r1, _08072AB4 @ =gUnk_08319124
	movs r2, #0xc4
	lsls r2, r2, #6
	bl TmApplyTsa_t
	movs r0, #0xc0
	mov r1, sl
	ldrb r1, [r1, #0xb]
	ands r0, r1
	movs r1, #3
	bl sub_8072734
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072AAC: .4byte 0x02003342
_08072AB0: .4byte 0x02003738
_08072AB4: .4byte gUnk_08319124

	thumb_func_start sub_8072AB8
sub_8072AB8: @ 0x08072AB8
	adds r2, r0, #0
	movs r0, #1
	cmp r1, #5
	bgt _08072AC2
	movs r0, #4
_08072AC2:
	cmp r2, #1
	bgt _08072AC8
	subs r0, #1
_08072AC8:
	cmp r2, #0x16
	ble _08072ACE
	adds r0, #1
_08072ACE:
	bx lr

	thumb_func_start sub_8072AD0
sub_8072AD0: @ 0x08072AD0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	str r1, [sp]
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	lsls r0, r0, #4
	ldr r2, _08072C10 @ =gBmSt
	movs r3, #0xc
	ldrsh r1, [r2, r3]
	subs r0, r0, r1
	cmp r0, #0
	bge _08072AF4
	adds r0, #7
_08072AF4:
	asrs r0, r0, #3
	mov sl, r0
	ldr r1, [sp]
	movs r0, #0xf
	ldrsb r0, [r1, r0]
	lsls r0, r0, #4
	movs r3, #0xe
	ldrsh r1, [r2, r3]
	subs r0, r0, r1
	cmp r0, #0
	bge _08072B0C
	adds r0, #7
_08072B0C:
	asrs r4, r0, #3
	mov r0, sl
	adds r1, r4, #0
	bl sub_8072AB8
	mov r8, r0
	ldr r0, _08072C14 @ =gUnk_08678140
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	add sl, r0
	ldr r0, _08072C18 @ =gUnk_08678146
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r4, r0
	adds r0, r7, #0
	adds r0, #0x34
	mov r1, sl
	strb r1, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r1, r7, #0
	adds r1, #0x36
	movs r0, #8
	strb r0, [r1]
	adds r1, #1
	movs r0, #5
	strb r0, [r1]
	ldr r2, [sp]
	ldr r0, [r2]
	ldrh r0, [r0]
	bl DecodeMsg
	mov sb, r0
	movs r0, #0x30
	mov r1, sb
	bl GetStringTextCenteredPos
	adds r6, r0, #0
	adds r5, r7, #0
	adds r5, #0x2c
	adds r0, r5, #0
	bl ClearText
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #5
	bl Text_SetParams
	adds r0, r5, #0
	mov r1, sb
	bl Text_DrawString
	ldr r0, _08072C1C @ =gUnk_0867812E
	add r0, r8
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r1, r4, r1
	lsls r1, r1, #5
	ldr r0, _08072C20 @ =gUnk_08678128
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	add r0, sl
	adds r1, r1, r0
	lsls r1, r1, #1
	ldr r6, _08072C24 @ =gBg0Tm
	adds r1, r1, r6
	adds r0, r5, #0
	bl PutText
	adds r1, r4, #3
	lsls r0, r1, #5
	adds r0, #1
	add r0, sl
	lsls r0, r0, #1
	adds r0, r0, r6
	str r0, [r7, #0x38]
	movs r3, #0
	strh r3, [r7, #0x3c]
	mov r0, sl
	adds r0, #1
	strh r0, [r7, #0x3e]
	adds r0, r7, #0
	adds r0, #0x40
	strh r1, [r0]
	adds r0, r7, #0
	ldr r1, [sp]
	bl sub_80728A4
	lsls r4, r4, #5
	add r4, sl
	lsls r4, r4, #1
	ldr r0, _08072C28 @ =gBg1Tm
	adds r4, r4, r0
	ldr r0, _08072C2C @ =gUnk_0867814C
	mov r1, r8
	lsls r1, r1, #2
	mov r8, r1
	add r8, r0
	mov r2, r8
	ldr r1, [r2]
	movs r2, #0xc4
	lsls r2, r2, #6
	adds r0, r4, #0
	bl TmApplyTsa_t
	movs r0, #3
	bl EnableBgSync
	movs r0, #0xc0
	ldr r3, [sp]
	ldrb r3, [r3, #0xb]
	ands r0, r3
	movs r1, #3
	bl sub_8072734
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072C10: .4byte gBmSt
_08072C14: .4byte gUnk_08678140
_08072C18: .4byte gUnk_08678146
_08072C1C: .4byte gUnk_0867812E
_08072C20: .4byte gUnk_08678128
_08072C24: .4byte gBg0Tm
_08072C28: .4byte gBg1Tm
_08072C2C: .4byte gUnk_0867814C

	thumb_func_start sub_8072C30
sub_8072C30: @ 0x08072C30
	push {r4, r5, r6, r7, lr}
	adds r2, r0, #0
	movs r0, #0xa1
	lsls r0, r0, #3
	ldrh r1, [r2, #0x36]
	cmp r1, r0
	bne _08072C9A
	adds r7, r2, #0
	adds r7, #0x35
	movs r0, #0
	ldrsb r0, [r7, r0]
	lsls r0, r0, #5
	adds r5, r2, #0
	adds r5, #0x34
	movs r1, #0
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r1, _08072CA0 @ =gBg0Tm
	adds r0, r0, r1
	adds r6, r2, #0
	adds r6, #0x36
	movs r1, #0
	ldrsb r1, [r6, r1]
	adds r4, r2, #0
	adds r4, #0x37
	movs r2, #0
	ldrsb r2, [r4, r2]
	movs r3, #0
	bl TmFillRect_t
	movs r0, #0
	ldrsb r0, [r7, r0]
	lsls r0, r0, #5
	movs r1, #0
	ldrsb r1, [r5, r1]
	adds r0, r0, r1
	lsls r0, r0, #1
	ldr r1, _08072CA4 @ =gBg1Tm
	adds r0, r0, r1
	movs r1, #0
	ldrsb r1, [r6, r1]
	movs r2, #0
	ldrsb r2, [r4, r2]
	movs r3, #0
	bl TmFillRect_t
	movs r0, #3
	bl EnableBgSync
	movs r0, #0
	strb r0, [r6]
	strb r0, [r4]
_08072C9A:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072CA0: .4byte gBg0Tm
_08072CA4: .4byte gBg1Tm

	thumb_func_start sub_8072CA8
sub_8072CA8: @ 0x08072CA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _08072DB0 @ =gBmSt
	mov sb, r0
	movs r1, #0x16
	ldrsh r0, [r0, r1]
	ldr r1, _08072DB4 @ =gMapTerrain
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	mov r2, sb
	movs r3, #0x14
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r7, [r0]
	movs r0, #0
	str r0, [sp]
	ldr r0, _08072DB8 @ =0x020034B8
	mov r8, r0
	ldr r2, _08072DBC @ =0x01000070
	mov r0, sp
	mov r1, r8
	bl CpuFastSet
	adds r0, r7, #0
	bl GetTerrainName
	adds r5, r0, #0
	movs r0, #0x20
	adds r1, r5, #0
	bl GetStringTextCenteredPos
	adds r6, r0, #0
	adds r4, #0x2c
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	bl Text_SetParams
	adds r0, r4, #0
	adds r1, r5, #0
	bl Text_DrawString
	mov r1, r8
	adds r1, #0x82
	adds r0, r4, #0
	bl PutText
	movs r6, #0x81
	lsls r6, r6, #1
	add r6, r8
	ldr r1, _08072DC0 @ =gUnk_083193B0
	movs r2, #0x80
	lsls r2, r2, #1
	mov sl, r2
	adds r0, r6, #0
	bl TmApplyTsa_t
	ldr r0, _08072DC4 @ =gUnk_0860C714
	adds r0, r7, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08072D7E
	ldr r0, _08072DC8 @ =gUnk_0860C9AB
	adds r0, r7, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GenNumberStr
	movs r0, #0x84
	lsls r0, r0, #1
	add r0, r8
	ldr r4, _08072DCC @ =gNumberStr+0x7
	movs r5, #0x94
	lsls r5, r5, #1
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #2
	bl sub_8013E8C
	ldr r0, _08072DD0 @ =gUnk_0860C978
	adds r0, r7, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GenNumberStr
	movs r0, #0xa4
	lsls r0, r0, #1
	add r0, r8
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #2
	bl sub_8013E8C
_08072D7E:
	cmp r7, #0x1b
	beq _08072DD8
	cmp r7, #0x1b
	blt _08072E28
	cmp r7, #0x29
	bgt _08072E28
	cmp r7, #0x27
	blt _08072E28
	ldr r1, _08072DD4 @ =gUnk_083193BC
	adds r0, r6, #0
	mov r2, sl
	bl TmApplyTsa_t
	mov r3, sb
	movs r1, #0x14
	ldrsh r0, [r3, r1]
	movs r2, #0x16
	ldrsh r1, [r3, r2]
	bl GetObstacleHpAt
	bl GenNumberStr
	movs r0, #0x84
	lsls r0, r0, #1
	b _08072E1A
	.align 2, 0
_08072DB0: .4byte gBmSt
_08072DB4: .4byte gMapTerrain
_08072DB8: .4byte 0x020034B8
_08072DBC: .4byte 0x01000070
_08072DC0: .4byte gUnk_083193B0
_08072DC4: .4byte gUnk_0860C714
_08072DC8: .4byte gUnk_0860C9AB
_08072DCC: .4byte gNumberStr+0x7
_08072DD0: .4byte gUnk_0860C978
_08072DD4: .4byte gUnk_083193BC
_08072DD8:
	ldr r1, _08072E08 @ =gUnk_083193C4
	movs r2, #0x84
	lsls r2, r2, #6
	adds r0, r6, #0
	bl TmApplyTsa_t
	mov r3, sb
	movs r1, #0x14
	ldrsh r0, [r3, r1]
	movs r2, #0x16
	ldrsh r1, [r3, r2]
	bl GetObstacleHpAt
	adds r6, r0, #0
	cmp r6, #0x64
	bne _08072E10
	movs r0, #0xa3
	lsls r0, r0, #1
	add r0, r8
	ldr r1, _08072E0C @ =gUnk_083193D0
	mov r2, sl
	bl TmApplyTsa_t
	b _08072E28
	.align 2, 0
_08072E08: .4byte gUnk_083193C4
_08072E0C: .4byte gUnk_083193D0
_08072E10:
	adds r0, r6, #0
	bl GenNumberStr
	movs r0, #0xa4
	lsls r0, r0, #1
_08072E1A:
	add r0, r8
	ldr r1, _08072E44 @ =gNumberStr+0x7
	movs r2, #0x94
	lsls r2, r2, #1
	movs r3, #2
	bl sub_8013E8C
_08072E28:
	ldr r0, _08072E48 @ =0x020039B8
	ldr r1, _08072E4C @ =gUnk_083190CC
	movs r2, #0x88
	lsls r2, r2, #5
	bl TmApplyTsa_t
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072E44: .4byte gNumberStr+0x7
_08072E48: .4byte 0x020039B8
_08072E4C: .4byte gUnk_083190CC

	thumb_func_start sub_8072E50
sub_8072E50: @ 0x08072E50
	push {lr}
	movs r1, #0
	str r1, [r0, #0x50]
	adds r2, r0, #0
	adds r2, #0x48
	movs r1, #1
	strb r1, [r2]
	adds r0, #0x2c
	movs r1, #4
	bl InitTextDb
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8072E6C
sub_8072E6C: @ 0x08072E6C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_80727A8
	adds r1, r0, #0
	adds r2, r4, #0
	adds r2, #0x48
	strb r1, [r2]
	lsls r0, r1, #0x18
	cmp r0, #0
	bne _08072E88
	movs r0, #0xff
	orrs r1, r0
	strb r1, [r2]
_08072E88:
	adds r0, r4, #0
	bl sub_8072CA8
	ldr r1, _08072EA8 @ =gBmSt
	ldrh r0, [r1, #0x14]
	adds r2, r4, #0
	adds r2, #0x46
	strb r0, [r2]
	ldrh r1, [r1, #0x16]
	adds r0, r4, #0
	adds r0, #0x47
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08072EA8: .4byte gBmSt

	thumb_func_start sub_8072EAC
sub_8072EAC: @ 0x08072EAC
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r4, #0
	adds r3, #0x46
	ldrb r0, [r3]
	adds r2, r4, #0
	adds r2, #0x44
	strb r0, [r2]
	movs r0, #0x47
	adds r0, r0, r4
	mov ip, r0
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x45
	strb r0, [r1]
	ldr r1, _08072F18 @ =gBmSt
	ldrh r0, [r1, #0x14]
	strb r0, [r3]
	ldrh r0, [r1, #0x16]
	mov r1, ip
	strb r0, [r1]
	ldr r0, _08072F1C @ =0x0000FFFF
	adds r1, r0, #0
	ldrh r3, [r3]
	ands r1, r3
	ldrh r2, [r2]
	ands r0, r2
	cmp r1, r0
	beq _08072F2A
	ldr r0, _08072F20 @ =ProcScr_CamMove
	bl Proc_Find
	cmp r0, #0
	bne _08072F24
	bl sub_80727A8
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	beq _08072F08
	cmp r1, #0
	bne _08072F24
_08072F08:
	adds r0, r4, #0
	bl sub_8072CA8
	adds r0, r4, #0
	bl sub_8072700
	b _08072F2A
	.align 2, 0
_08072F18: .4byte gBmSt
_08072F1C: .4byte 0x0000FFFF
_08072F20: .4byte ProcScr_CamMove
_08072F24:
	adds r0, r4, #0
	bl Proc_Break
_08072F2A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8072F30
sub_8072F30: @ 0x08072F30
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x2c
	movs r1, #6
	bl InitTextDb
	movs r0, #0
	str r0, [r4, #0x50]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8072F48
sub_8072F48: @ 0x08072F48
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r0, #0x4d
	movs r7, #1
	strb r7, [r0]
	ldr r5, _08072FB4 @ =gBmSt
	movs r1, #0x16
	ldrsh r0, [r5, r1]
	ldr r1, _08072FB8 @ =gMapUnit
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r2, #0x14
	ldrsh r1, [r5, r2]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl GetUnit
	adds r6, r0, #0
	cmp r6, #0
	beq _08072FAC
	ldr r0, _08072FBC @ =ProcScr_CamMove
	bl Proc_Find
	cmp r0, #0
	bne _08072FAC
	bl sub_807277C
	adds r1, r4, #0
	adds r1, #0x48
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08072F90
	strb r7, [r1]
_08072F90:
	ldrh r0, [r5, #0x14]
	adds r1, r4, #0
	adds r1, #0x46
	strb r0, [r1]
	ldrh r0, [r5, #0x16]
	adds r1, #1
	strb r0, [r1]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80729C8
	adds r0, r4, #0
	bl Proc_Break
_08072FAC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072FB4: .4byte gBmSt
_08072FB8: .4byte gMapUnit
_08072FBC: .4byte ProcScr_CamMove

	thumb_func_start sub_8072FC0
sub_8072FC0: @ 0x08072FC0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r5, _08073064 @ =gBmSt
	movs r1, #0x16
	ldrsh r0, [r5, r1]
	ldr r1, _08073068 @ =gMapUnit
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r2, #0x14
	ldrsh r1, [r5, r2]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl GetUnit
	adds r6, r0, #0
	ldrh r0, [r4, #0x3c]
	adds r0, #1
	strh r0, [r4, #0x3c]
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80728A4
	movs r0, #0x3f
	ldrh r1, [r4, #0x3c]
	ands r0, r1
	cmp r0, #0
	bne _08073000
	adds r0, r4, #0
	bl sub_80726CC
_08073000:
	adds r3, r4, #0
	adds r3, #0x46
	ldrb r0, [r3]
	adds r2, r4, #0
	adds r2, #0x44
	strb r0, [r2]
	movs r0, #0x47
	adds r0, r0, r4
	mov ip, r0
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x45
	strb r0, [r1]
	ldrh r0, [r5, #0x14]
	strb r0, [r3]
	ldrh r0, [r5, #0x16]
	mov r1, ip
	strb r0, [r1]
	ldr r0, _0807306C @ =0x0000FFFF
	adds r1, r0, #0
	ldrh r3, [r3]
	ands r1, r3
	ldrh r2, [r2]
	ands r0, r2
	cmp r1, r0
	beq _0807307A
	cmp r6, #0
	beq _08073074
	ldr r0, _08073070 @ =ProcScr_CamMove
	bl Proc_Find
	cmp r0, #0
	bne _08073074
	bl sub_807277C
	adds r1, r0, #0
	adds r0, r4, #0
	adds r0, #0x48
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	beq _0807305A
	cmp r1, #0
	bne _08073074
_0807305A:
	adds r0, r4, #0
	movs r1, #1
	bl Proc_Goto
	b _0807307A
	.align 2, 0
_08073064: .4byte gBmSt
_08073068: .4byte gMapUnit
_0807306C: .4byte 0x0000FFFF
_08073070: .4byte ProcScr_CamMove
_08073074:
	adds r0, r4, #0
	bl Proc_Break
_0807307A:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8073080
sub_8073080: @ 0x08073080
	push {r4, lr}
	adds r4, r0, #0
	ldr r2, _080730B0 @ =gBmSt
	movs r1, #0x16
	ldrsh r0, [r2, r1]
	ldr r1, _080730B4 @ =gMapUnit
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r3, #0x14
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	bne _080730B8
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
	b _080730C4
	.align 2, 0
_080730B0: .4byte gBmSt
_080730B4: .4byte gMapUnit
_080730B8:
	adds r0, r4, #0
	bl sub_80729C8
	adds r0, r4, #0
	bl sub_80726CC
_080730C4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80730CC
sub_80730CC: @ 0x080730CC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x2c
	movs r1, #6
	bl InitTextDb
	adds r0, r4, #0
	adds r0, #0x43
	movs r1, #0
	strb r1, [r0]
	adds r0, #0xa
	strb r1, [r0]
	str r1, [r4, #0x50]
	subs r0, #0x17
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80730F4
sub_80730F4: @ 0x080730F4
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r0, #0x43
	adds r0, r0, r4
	mov ip, r0
	ldrb r0, [r0]
	adds r3, r4, #0
	adds r3, #0x42
	strb r0, [r3]
	ldr r2, _0807313C @ =gBmSt
	movs r1, #0x16
	ldrsh r0, [r2, r1]
	ldr r1, _08073140 @ =gMapUnit
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r5, #0x14
	ldrsh r1, [r2, r5]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r1, ip
	strb r0, [r1]
	ldrb r1, [r3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, r0
	beq _08073144
	cmp r1, #0
	beq _08073144
	adds r0, r4, #0
	bl sub_8072C30
	movs r0, #0
	str r0, [r4, #0x50]
	b _080731D2
	.align 2, 0
_0807313C: .4byte gBmSt
_08073140: .4byte gMapUnit
_08073144:
	adds r0, r4, #0
	adds r0, #0x43
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	beq _080731D2
	ldr r0, _08073180 @ =ProcScr_CamMove
	bl Proc_Find
	cmp r0, #0
	bne _080731D2
	ldr r0, _08073184 @ =gUnk_08678174
	bl Proc_Find
	adds r1, r0, #0
	cmp r1, #0
	beq _08073188
	adds r0, #0x4d
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08073188
	ldr r0, [r4, #0x50]
	cmp r0, #3
	bgt _080731D2
	adds r0, #1
	str r0, [r4, #0x50]
	b _080731D2
	.align 2, 0
_08073180: .4byte ProcScr_CamMove
_08073184: .4byte gUnk_08678174
_08073188:
	ldr r0, [r4, #0x50]
	adds r0, #1
	str r0, [r4, #0x50]
	cmp r0, #4
	ble _080731D2
	cmp r0, #5
	bne _080731A6
	ldrb r0, [r5]
	bl GetUnit
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_8072AD0
	b _080731D2
_080731A6:
	ldrh r0, [r4, #0x3c]
	adds r0, #1
	strh r0, [r4, #0x3c]
	cmp r1, #0
	beq _080731BC
	adds r0, r1, #0
	adds r0, #0x4d
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x4d
	b _080731C2
_080731BC:
	adds r1, r4, #0
	adds r1, #0x4d
	movs r0, #0
_080731C2:
	strb r0, [r1]
	ldrb r0, [r5]
	bl GetUnit
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_80728A4
_080731D2:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80731D8
sub_80731D8: @ 0x080731D8
	push {r4, r5, lr}
	ldr r5, _080732E0 @ =gDispIo
	movs r4, #0x21
	rsbs r4, r4, #0
	adds r0, r4, #0
	ldrb r1, [r5, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r5, #1]
	adds r2, r5, #0
	adds r2, #0x36
	movs r0, #1
	ldrb r1, [r2]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x20
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r5, #0
	adds r1, #0x44
	movs r3, #0
	movs r0, #0xf
	strb r0, [r1]
	adds r1, #1
	movs r0, #4
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x46
	strb r3, [r0]
	ldr r0, _080732E4 @ =0x0000FFE0
	ldrh r1, [r5, #0x3c]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	strh r0, [r5, #0x3c]
	ldrb r0, [r2]
	ands r4, r0
	strb r4, [r2]
	ldr r0, _080732E8 @ =0x0000E0FF
	ldrh r1, [r5, #0x3c]
	ands r0, r1
	movs r2, #0xe0
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r5, #0x3c]
	ldr r0, _080732EC @ =gUnk_083189B4
	ldr r1, _080732F0 @ =0x06002000
	bl Decompress
	ldr r0, _080732F4 @ =0x06002500
	ldr r1, _080732F8 @ =0x06015C00
	movs r2, #0x50
	bl CpuFastSet
	ldr r0, _080732FC @ =gPal
	movs r1, #0xc0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #1
	movs r1, #2
	bl ApplyIconPalette
	bl ResetTextFont
	ldr r4, _08073300 @ =gPlaySt
	ldrb r1, [r4, #0x1c]
	lsls r0, r1, #0x1e
	cmp r0, #0
	blt _080732B4
	ldr r0, _08073304 @ =gUnk_08678174
	movs r1, #3
	bl SpawnProc
_080732B4:
	ldrb r2, [r4, #0x1c]
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #0
	bne _080732C6
	ldr r0, _08073308 @ =gUnk_086781D4
	movs r1, #3
	bl SpawnProc
_080732C6:
	ldrb r4, [r4, #0x1c]
	lsls r0, r4, #0x1c
	lsrs r0, r0, #0x1e
	cmp r0, #1
	bne _080732D8
	ldr r0, _0807330C @ =gUnk_08678254
	movs r1, #3
	bl SpawnProc
_080732D8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080732E0: .4byte gDispIo
_080732E4: .4byte 0x0000FFE0
_080732E8: .4byte 0x0000E0FF
_080732EC: .4byte gUnk_083189B4
_080732F0: .4byte 0x06002000
_080732F4: .4byte 0x06002500
_080732F8: .4byte 0x06015C00
_080732FC: .4byte gPal
_08073300: .4byte gPlaySt
_08073304: .4byte gUnk_08678174
_08073308: .4byte gUnk_086781D4
_0807330C: .4byte gUnk_08678254

	thumb_func_start sub_8073310
sub_8073310: @ 0x08073310
	push {lr}
	ldr r0, _08073320 @ =gUnk_08678284
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08073320: .4byte gUnk_08678284

	thumb_func_start sub_8073324
sub_8073324: @ 0x08073324
	push {lr}
	ldr r0, _08073360 @ =gUnk_086781D4
	bl Proc_EndEach
	ldr r0, _08073364 @ =gUnk_08678254
	bl Proc_EndEach
	ldr r0, _08073368 @ =gUnk_08678174
	bl Proc_EndEach
	ldr r3, _0807336C @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bl ClearBg0Bg1
	pop {r0}
	bx r0
	.align 2, 0
_08073360: .4byte gUnk_086781D4
_08073364: .4byte gUnk_08678254
_08073368: .4byte gUnk_08678174
_0807336C: .4byte gDispIo

	thumb_func_start sub_8073370
sub_8073370: @ 0x08073370
	push {lr}
	ldr r1, _08073390 @ =0x03007FF8
	movs r0, #1
	strh r0, [r1]
	bl SyncDispIo
	bl SyncBgsAndPal
	bl ApplyDataMoves
	bl m4aSoundVSync
	bl m4aSoundMain
	pop {r0}
	bx r0
	.align 2, 0
_08073390: .4byte 0x03007FF8

	thumb_func_start sub_8073394
sub_8073394: @ 0x08073394
	push {r4, lr}
	ldr r4, _080733BC @ =gKeySt
	ldr r0, [r4]
	bl RefreshKeySt
	ldr r1, [r4]
	movs r0, #9
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080733B0
	movs r0, #0xff
	bl SoftReset
_080733B0:
	bl VBlankIntrWait
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080733BC: .4byte gKeySt

	thumb_func_start sub_80733C0
sub_80733C0: @ 0x080733C0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x7c
	add r5, sp, #0x18
	bl ResetText
	bl InitTalkTextFont
	add r7, sp, #8
	add r0, sp, #0x10
	mov r8, r0
	mov r4, sp
	movs r6, #2
_080733DC:
	adds r0, r4, #0
	movs r1, #0x16
	bl InitText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bge _080733DC
	movs r1, #0
	str r1, [r5, #0x30]
	mov r0, sp
	str r0, [r5, #0x34]
	str r7, [r5, #0x38]
	mov r0, r8
	str r0, [r5, #0x3c]
	adds r0, r5, #0
	adds r0, #0x5c
	strh r1, [r0]
	ldr r0, _0807344C @ =0x00000C48
	bl DecodeMsg
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	bl sub_8071308
	ldr r4, _08073450 @ =gBg0Tm+0x188
	mov r0, sp
	adds r1, r4, #0
	bl PutText
	adds r1, r4, #0
	adds r1, #0xc0
	adds r0, r7, #0
	bl PutText
	movs r0, #0xa0
	lsls r0, r0, #1
	adds r4, r4, r0
	mov r0, r8
	adds r1, r4, #0
	bl PutText
	movs r0, #1
	bl EnableBgSync
	add sp, #0x7c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807344C: .4byte 0x00000C48
_08073450: .4byte gBg0Tm+0x188

	thumb_func_start sub_8073454
sub_8073454: @ 0x08073454
	push {r4, r5, lr}
	sub sp, #8
	movs r0, #0
	bl InitBgs
	bl m4aSoundInit
	bl InitProcs
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r2, _080734FC @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	subs r1, #0x10
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r1, #8
	movs r4, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x45
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	strh r4, [r2, #0x38]
	bl SyncDispIo
	str r4, [sp]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r5, _08073500 @ =0x01000008
	mov r0, sp
	adds r2, r5, #0
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _08073504 @ =0x06008000
	adds r2, r5, #0
	bl CpuFastSet
	bl sub_80733C0
	ldr r0, _08073508 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080734EC
	movs r0, #0x7b
	bl m4aSongNumStart
_080734EC:
	ldr r0, _0807350C @ =sub_8073394
	bl SetMainFunc
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080734FC: .4byte gDispIo
_08073500: .4byte 0x01000008
_08073504: .4byte 0x06008000
_08073508: .4byte gPlaySt
_0807350C: .4byte sub_8073394

	thumb_func_start sub_8073510
sub_8073510: @ 0x08073510
	push {lr}
	ldr r1, _08073538 @ =0x04000004
	movs r0, #8
	strh r0, [r1]
	ldr r1, _0807353C @ =0x04000208
	movs r0, #1
	strh r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #0x13
	movs r0, #0
	strh r0, [r1]
	ldr r0, _08073540 @ =sub_8073370
	bl SetOnVBlank
	ldr r0, _08073544 @ =sub_8073454
	bl SetMainFunc
	pop {r0}
	bx r0
	.align 2, 0
_08073538: .4byte 0x04000004
_0807353C: .4byte 0x04000208
_08073540: .4byte sub_8073370
_08073544: .4byte sub_8073454

	thumb_func_start sub_8073548
sub_8073548: @ 0x08073548
	push {lr}
	adds r0, #0x4c
	movs r1, #3
	strh r1, [r0]
	movs r0, #8
	bl sub_800210C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807355C
sub_807355C: @ 0x0807355C
	push {lr}
	adds r0, #0x4c
	movs r1, #3
	strh r1, [r0]
	movs r0, #8
	rsbs r0, r0, #0
	bl sub_8001FD4
	pop {r0}
	bx r0

	thumb_func_start sub_8073570
sub_8073570: @ 0x08073570
	push {r4, lr}
	adds r4, r0, #0
	bl sub_8000234_t
	bl EnablePalSync
	adds r1, r4, #0
	adds r1, #0x4c
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08073592
	adds r0, r4, #0
	bl Proc_Break
_08073592:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8073598
sub_8073598: @ 0x08073598
	ldr r3, _080735D0 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0xc0
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _080735D4 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #0x1f
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	bx lr
	.align 2, 0
_080735D0: .4byte gDispIo
_080735D4: .4byte 0x0000FFE0

	thumb_func_start sub_80735D8
sub_80735D8: @ 0x080735D8
	push {r4, lr}
	sub sp, #4
	ldr r1, _08073650 @ =0x020040B8
	movs r0, #4
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0807367A
	ldr r0, [r1]
	cmp r0, #0
	bne _0807361C
	movs r0, #5
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08073604
	ldr r3, _08073654 @ =gUnk_086782D4
	ldr r0, _08073658 @ =0x00004A40
	str r0, [sp]
	movs r0, #4
	movs r1, #0
	movs r2, #0x90
	bl PutSprite
_08073604:
	ldr r4, _0807365C @ =gBg0Tm+0x468
	bl GetGameTime
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	movs r3, #0
	bl PutTime
	movs r0, #1
	bl EnableBgSync
_0807361C:
	ldr r1, _08073660 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0807367A
	bl GetGameTime
	lsrs r0, r0, #3
	movs r1, #6
	bl __umodsi3
	ldr r1, _08073664 @ =0x0000328A
	adds r4, r0, r1
	ldr r0, _08073650 @ =0x020040B8
	ldr r0, [r0]
	cmp r0, #0
	bne _0807366C
	ldr r3, _08073668 @ =Sprite_8x16_HFlipped
	str r4, [sp]
	movs r0, #4
	movs r1, #0xe8
	movs r2, #0x68
	bl PutSprite
	b _0807367A
	.align 2, 0
_08073650: .4byte 0x020040B8
_08073654: .4byte gUnk_086782D4
_08073658: .4byte 0x00004A40
_0807365C: .4byte gBg0Tm+0x468
_08073660: .4byte gPlaySt
_08073664: .4byte 0x0000328A
_08073668: .4byte Sprite_8x16_HFlipped
_0807366C:
	ldr r3, _08073684 @ =Sprite_8x16
	str r4, [sp]
	movs r0, #4
	movs r1, #0
	movs r2, #0x68
	bl PutSprite
_0807367A:
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08073684: .4byte Sprite_8x16

	thumb_func_start sub_8073688
sub_8073688: @ 0x08073688
	push {r4, lr}
	movs r4, #0x81
_0807368C:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _080736B2
	ldr r2, [r0]
	cmp r2, #0
	beq _080736B2
	ldr r0, [r0, #4]
	ldr r1, [r2, #0x28]
	ldr r0, [r0, #0x24]
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #8
	ands r1, r0
	cmp r1, #0
	beq _080736B2
	ldrh r0, [r2]
	b _080736BA
_080736B2:
	adds r4, #1
	cmp r4, #0xbf
	ble _0807368C
	ldr r0, _080736C4 @ =0x00000727
_080736BA:
	bl DecodeMsg
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080736C4: .4byte 0x00000727

	thumb_func_start sub_80736C8
sub_80736C8: @ 0x080736C8
	push {r4, r5, lr}
	ldr r5, _08073720 @ =gPlaySt
	movs r4, #0x40
	ldrb r0, [r5, #0x14]
	ands r4, r0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	rsbs r4, r4, #0
	asrs r4, r4, #0x1f
	movs r0, #4
	ands r4, r0
	adds r0, r4, #0
	movs r1, #4
	bl sub_8070CB4
	adds r4, #1
	adds r0, r4, #0
	movs r1, #5
	bl sub_8070CB4
	movs r4, #0xf8
	lsls r4, r4, #3
	adds r0, r5, #0
	bl sub_8070E0C
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_8070D08
	movs r0, #0xa0
	lsls r0, r0, #2
	bl sub_8070D48
	ldr r0, _08073724 @ =gBg2Tm+0x46
	movs r1, #4
	bl sub_8070DA8
	ldr r0, _08073728 @ =gBg1Tm+0x6
	movs r1, #5
	bl sub_8070DC8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073720: .4byte gPlaySt
_08073724: .4byte gBg2Tm+0x46
_08073728: .4byte gBg1Tm+0x6

	thumb_func_start sub_807372C
sub_807372C: @ 0x0807372C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	ldr r5, _080737EC @ =0x020040D0
	ldr r0, _080737F0 @ =0x00000724
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r5, #0
	movs r1, #2
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, _080737F4 @ =gPlaySt
	mov r8, r0
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterInfo
	ldrh r0, [r0, #0x30]
	bl DecodeMsg
	ldr r6, _080737F8 @ =gBg0Tm+0x142
	movs r1, #0
	str r1, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	movs r3, #0x19
	bl PutDrawText
	adds r4, r5, #0
	adds r4, #8
	ldr r0, _080737FC @ =0x00000725
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r0, r4, #0
	movs r1, #0x4a
	movs r2, #2
	bl Text_SetParams
	mov r0, r8
	ldrh r1, [r0, #0x10]
	adds r0, r4, #0
	bl Text_DrawNumber
	adds r1, r6, #0
	subs r1, #0x1e
	adds r0, r4, #0
	bl PutText
	adds r5, #0x10
	ldr r0, _08073800 @ =0x00000726
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	ldr r3, _08073804 @ =gUnk_083198C0
	adds r0, r5, #0
	movs r1, #0x52
	movs r2, #3
	bl Text_InsertDrawString
	bl GetGold
	adds r3, r0, #0
	adds r0, r5, #0
	movs r1, #0x4a
	movs r2, #2
	bl Text_InsertDrawNumberOrBlank
	adds r6, #0x62
	adds r0, r5, #0
	adds r1, r6, #0
	bl PutText
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080737EC: .4byte 0x020040D0
_080737F0: .4byte 0x00000724
_080737F4: .4byte gPlaySt
_080737F8: .4byte gBg0Tm+0x142
_080737FC: .4byte 0x00000725
_08073800: .4byte 0x00000726
_08073804: .4byte gUnk_083198C0

	thumb_func_start sub_8073808
sub_8073808: @ 0x08073808
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	ldr r5, _080738E0 @ =0x020040D0
	ldr r0, _080738E4 @ =0x00000724
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r5, #0
	movs r1, #2
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, _080738E8 @ =gPlaySt
	mov r8, r0
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_80867FC
	ldr r6, _080738EC @ =gBg0Tm+0x182
	movs r1, #0
	str r1, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #2
	movs r3, #0x19
	bl PutDrawText
	adds r4, r5, #0
	adds r4, #8
	ldr r0, _080738F0 @ =0x00000725
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r0, r4, #0
	movs r1, #0x32
	movs r2, #2
	bl Text_SetParams
	mov r2, r8
	ldrh r1, [r2, #0x10]
	adds r0, r4, #0
	bl Text_DrawNumber
	adds r1, r6, #0
	adds r1, #0x28
	adds r0, r4, #0
	bl PutText
	movs r0, #1
	bl SetTextFontGlyphs
	ldr r0, _080738F4 @ =gActiveFont
	mov sb, r0
	ldr r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	ldrh r2, [r1, #0x10]
	orrs r0, r2
	strh r0, [r1, #0x10]
	mov r1, r8
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	bl sub_80867F0
	adds r4, r0, #0
	movs r0, #0x60
	adds r1, r4, #0
	bl GetStringTextCenteredPos
	adds r1, r0, #0
	subs r5, #8
	adds r0, r5, #0
	movs r2, #0
	adds r3, r4, #0
	bl Text_InsertDrawString
	subs r6, #0x70
	adds r0, r5, #0
	adds r1, r6, #0
	bl PutText
	movs r0, #0
	bl SetTextFontGlyphs
	mov r2, sb
	ldr r1, [r2]
	ldr r0, _080738F8 @ =0x00000FFF
	ldrh r2, [r1, #0x10]
	ands r0, r2
	strh r0, [r1, #0x10]
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080738E0: .4byte 0x020040D0
_080738E4: .4byte 0x00000724
_080738E8: .4byte gPlaySt
_080738EC: .4byte gBg0Tm+0x182
_080738F0: .4byte 0x00000725
_080738F4: .4byte gActiveFont
_080738F8: .4byte 0x00000FFF

	thumb_func_start sub_80738FC
sub_80738FC: @ 0x080738FC
	push {r4, r5, r6, lr}
	ldr r5, _080739B0 @ =0x020040E8
	ldr r6, _080739B4 @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r6, r0]
	bl GetChapterInfo
	ldrh r0, [r0, #0x32]
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r0, r5, #0
	movs r1, #0x45
	movs r2, #2
	bl Text_SetParams
	movs r0, #0
	movs r1, #0xc
	bl CountFactionUnitsWithoutState
	adds r1, r0, #0
	adds r0, r5, #0
	bl Text_DrawNumber
	adds r4, r5, #0
	adds r4, #8
	movs r0, #0xe
	ldrsb r0, [r6, r0]
	bl GetChapterInfo
	ldrh r0, [r0, #0x34]
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r0, r4, #0
	movs r1, #0x45
	movs r2, #2
	bl Text_SetParams
	movs r0, #0x80
	movs r1, #0xc
	bl CountFactionUnitsWithoutState
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawNumber
	adds r4, #8
	movs r0, #1
	bl GetUnitByPid
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r4, #8
	bl sub_8073688
	adds r3, r0, #0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r5, #0x20
	ldr r3, _080739B8 @ =gUnk_083198C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #3
	bl Text_InsertDrawString
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080739B0: .4byte 0x020040E8
_080739B4: .4byte gPlaySt
_080739B8: .4byte gUnk_083198C4

	thumb_func_start sub_80739BC
sub_80739BC: @ 0x080739BC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r0, _08073A98 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterInfo
	ldrh r4, [r0, #0x36]
	movs r5, #0xfe
	lsls r5, r5, #7
	ldr r7, _08073A9C @ =0x02003C40
	ldr r2, _08073AA0 @ =0x00000681
	movs r6, #0
	str r6, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	movs r3, #8
	bl PutFaceChibi
	adds r4, r4, r5
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r7, r0
	ldr r2, _08073AA4 @ =0x00000691
	str r6, [sp]
	adds r0, r4, #0
	movs r3, #9
	bl PutFaceChibi
	ldr r4, _08073AA8 @ =0x02003738
	ldr r1, _08073AAC @ =gUnk_0833C6F4
	movs r5, #0x80
	lsls r5, r5, #6
	adds r0, r4, #0
	adds r2, r5, #0
	bl TmApplyTsa_t
	ldr r1, _08073AB0 @ =0x00000226
	adds r4, r4, r1
	ldr r1, _08073AB4 @ =gUnk_0833C8D8
	adds r0, r4, #0
	adds r2, r5, #0
	bl TmApplyTsa_t
	ldr r4, _08073AB8 @ =0x020040E8
	ldr r6, _08073ABC @ =0x02003288
	adds r0, r4, #0
	adds r1, r6, #0
	bl PutText
	adds r0, r4, #0
	adds r0, #8
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r6, r2
	bl PutText
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r6, #0
	adds r1, #0x18
	bl PutText
	adds r4, #0x18
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r1, r6, r0
	adds r0, r4, #0
	bl PutText
	adds r0, r7, #0
	adds r0, #0x5c
	ldr r5, _08073AC0 @ =gUnk_083093EC
	movs r4, #0xc7
	lsls r4, r4, #7
	adds r1, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	movs r1, #0xae
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r1, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r7, r2
	ldr r1, _08073AC4 @ =gUnk_083093F8
	adds r2, r4, #0
	bl TmApplyTsa_t
	movs r0, #0x86
	lsls r0, r0, #2
	adds r4, r6, r0
	bl GetGameTime
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	movs r3, #0
	bl PutTime
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073A98: .4byte gPlaySt
_08073A9C: .4byte 0x02003C40
_08073AA0: .4byte 0x00000681
_08073AA4: .4byte 0x00000691
_08073AA8: .4byte 0x02003738
_08073AAC: .4byte gUnk_0833C6F4
_08073AB0: .4byte 0x00000226
_08073AB4: .4byte gUnk_0833C8D8
_08073AB8: .4byte 0x020040E8
_08073ABC: .4byte 0x02003288
_08073AC0: .4byte gUnk_083093EC
_08073AC4: .4byte gUnk_083093F8

	thumb_func_start sub_8073AC8
sub_8073AC8: @ 0x08073AC8
	push {r4, r5, lr}
	movs r0, #1
	bl SetTextFontGlyphs
	ldr r0, _08073B38 @ =gUnk_08677FD0
	movs r1, #3
	bl SpawnProc
	adds r5, r0, #0
	movs r4, #0
	str r4, [r5, #0x30]
	adds r0, #0x5c
	strh r4, [r0]
	ldr r0, _08073B3C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_8086910
	str r0, [r5, #0x2c]
	adds r1, r5, #0
	adds r1, #0x62
	movs r0, #0xff
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x60
	strh r4, [r0]
	subs r0, #2
	strh r4, [r0]
	ldr r0, _08073B40 @ =0x02004110
	movs r2, #4
	adds r0, #0x20
	subs r1, #0x1e
_08073B0A:
	str r0, [r1]
	subs r0, #8
	subs r1, #4
	subs r2, #1
	cmp r2, #0
	bge _08073B0A
	ldr r0, [r5, #0x2c]
	ldr r1, _08073B44 @ =0x020040C0
	adds r2, r1, #4
	bl GetStringTextBox
	adds r0, r5, #0
	bl sub_8071274
	adds r0, r5, #0
	bl Proc_End
	movs r0, #0
	bl SetTextFontGlyphs
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073B38: .4byte gUnk_08677FD0
_08073B3C: .4byte gPlaySt
_08073B40: .4byte 0x02004110
_08073B44: .4byte 0x020040C0

	thumb_func_start sub_8073B48
sub_8073B48: @ 0x08073B48
	push {r4, r5, lr}
	ldr r0, _08073BC8 @ =gActiveFont
	ldr r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r2, #0
	ldrh r2, [r1, #0x10]
	orrs r0, r2
	strh r0, [r1, #0x10]
	ldr r3, _08073BCC @ =0x020040B8
	ldr r0, [r3, #8]
	cmp r0, #0
	bge _08073B64
	adds r0, #7
_08073B64:
	asrs r0, r0, #3
	movs r1, #0x18
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r2, r1, #3
	ldr r1, [r3, #0xc]
	cmp r1, #0
	bge _08073B7A
	adds r1, #0xf
_08073B7A:
	asrs r1, r1, #4
	movs r0, #6
	subs r0, r0, r1
	movs r5, #0
	lsls r0, r0, #5
	adds r4, r0, r2
_08073B86:
	lsls r0, r5, #3
	ldr r1, _08073BD0 @ =0x02004110
	adds r0, r0, r1
	lsls r1, r4, #1
	ldr r2, _08073BD4 @ =0x02003238
	adds r1, r1, r2
	bl PutText
	adds r4, #0x40
	adds r5, #1
	cmp r5, #4
	ble _08073B86
	ldr r0, _08073BC8 @ =gActiveFont
	ldr r1, [r0]
	ldr r0, _08073BD8 @ =0x00000FFF
	ldrh r2, [r1, #0x10]
	ands r0, r2
	strh r0, [r1, #0x10]
	ldr r0, _08073BDC @ =gUnk_08309408
	ldr r4, _08073BE0 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _08073BE4 @ =0x0200373C
	movs r2, #0x80
	lsls r2, r2, #6
	adds r1, r4, #0
	bl TmApplyTsa_t
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073BC8: .4byte gActiveFont
_08073BCC: .4byte 0x020040B8
_08073BD0: .4byte 0x02004110
_08073BD4: .4byte 0x02003238
_08073BD8: .4byte 0x00000FFF
_08073BDC: .4byte gUnk_08309408
_08073BE0: .4byte gBuf
_08073BE4: .4byte 0x0200373C

	thumb_func_start sub_8073BE8
sub_8073BE8: @ 0x08073BE8
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r6, r1, #0
	movs r5, #0
	str r5, [sp]
	ldr r1, _08073C24 @ =0x02003238
	ldr r4, _08073C28 @ =0x010000C0
	mov r0, sp
	adds r2, r4, #0
	bl CpuFastSet
	str r5, [sp, #4]
	add r0, sp, #4
	ldr r1, _08073C2C @ =0x02003738
	adds r2, r4, #0
	bl CpuFastSet
	ldr r0, _08073C30 @ =0x06800680
	str r0, [sp, #8]
	add r0, sp, #8
	ldr r1, _08073C34 @ =0x02003C38
	adds r2, r4, #0
	bl CpuFastSet
	cmp r6, #0
	beq _08073C38
	cmp r6, #1
	beq _08073C40
	b _08073C46
	.align 2, 0
_08073C24: .4byte 0x02003238
_08073C28: .4byte 0x010000C0
_08073C2C: .4byte 0x02003738
_08073C30: .4byte 0x06800680
_08073C34: .4byte 0x02003C38
_08073C38:
	movs r0, #0
	bl sub_80739BC
	b _08073C46
_08073C40:
	movs r0, #0
	bl sub_8073B48
_08073C46:
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8073C50
sub_8073C50: @ 0x08073C50
	push {r4, r5, lr}
	adds r5, r0, #0
	movs r0, #0
	bl InitBgs
	ldr r3, _08073D30 @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r3, #0xc]
	ands r0, r2
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r4, [r3, #0x14]
	ands r0, r4
	movs r2, #1
	orrs r0, r2
	strb r0, [r3, #0x14]
	ldrb r0, [r3, #0x10]
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r3, #0x10]
	movs r0, #3
	ldrb r1, [r3, #0x18]
	orrs r0, r1
	strb r0, [r3, #0x18]
	movs r1, #0x80
	lsls r1, r1, #8
	movs r0, #2
	bl SetBgChrOffset
	movs r4, #0xd0
	lsls r4, r4, #3
	adds r0, r4, #0
	bl SetBlankChr
	bl ResetText
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl ClearBg0Bg1
	ldr r0, _08073D34 @ =gBg2Tm
	adds r1, r4, #0
	bl TmFill
	ldr r0, _08073D38 @ =Pal_SystemText
	movs r1, #0
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _08073D3C @ =gUnk_0833C944
	movs r1, #0x40
	movs r2, #0x40
	bl ApplyPaletteExt
	movs r0, #0x14
	bl sub_8041284
	movs r0, #1
	movs r1, #6
	bl ApplyIconPalette
	movs r0, #1
	movs r1, #0x13
	bl ApplyIconPalette
	ldr r0, _08073D40 @ =gUnk_083092CC
	ldr r1, _08073D44 @ =0x0600F000
	bl Decompress
	ldr r0, _08073D48 @ =gUnk_0833C378
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl Decompress
	ldr r0, _08073D4C @ =gUnk_083080D0
	ldr r1, _08073D50 @ =0x06014800
	bl Decompress
	bl sub_80736C8
	ldr r0, _08073D54 @ =gUnk_08678330
	bl InitTextList
	adds r0, r5, #0
	bl sub_80738FC
	ldr r1, _08073D58 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _08073D5C
	adds r0, r5, #0
	bl sub_807372C
	b _08073D6E
	.align 2, 0
_08073D30: .4byte gDispIo
_08073D34: .4byte gBg2Tm
_08073D38: .4byte Pal_SystemText
_08073D3C: .4byte gUnk_0833C944
_08073D40: .4byte gUnk_083092CC
_08073D44: .4byte 0x0600F000
_08073D48: .4byte gUnk_0833C378
_08073D4C: .4byte gUnk_083080D0
_08073D50: .4byte 0x06014800
_08073D54: .4byte gUnk_08678330
_08073D58: .4byte gPlaySt
_08073D5C:
	ldr r0, _08073DD4 @ =gUnk_08678378
	bl InitTextList
	adds r0, r5, #0
	bl sub_8073808
	adds r0, r5, #0
	bl sub_8073AC8
_08073D6E:
	adds r0, r5, #0
	movs r1, #0
	bl sub_8073BE8
	ldr r0, _08073DD8 @ =0x02003238
	ldr r1, _08073DDC @ =gBg0Tm+0x200
	movs r2, #0xc0
	bl CpuFastSet
	ldr r0, _08073DE0 @ =0x02003738
	ldr r1, _08073DE4 @ =gBg1Tm+0x200
	movs r2, #0xc0
	bl CpuFastSet
	ldr r0, _08073DE8 @ =0x02003C38
	ldr r1, _08073DEC @ =gBg2Tm+0x200
	movs r2, #0xc0
	bl CpuFastSet
	ldr r0, _08073DF0 @ =0x020040B8
	movs r2, #0
	str r2, [r0]
	strb r2, [r0, #4]
	strb r2, [r0, #5]
	ldr r3, _08073DF4 @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r4, [r1]
	ands r0, r4
	strb r0, [r1]
	adds r1, #8
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	subs r2, #1
	adds r0, r5, #0
	movs r1, #0
	bl sub_808C390
	movs r0, #7
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073DD4: .4byte gUnk_08678378
_08073DD8: .4byte 0x02003238
_08073DDC: .4byte gBg0Tm+0x200
_08073DE0: .4byte 0x02003738
_08073DE4: .4byte gBg1Tm+0x200
_08073DE8: .4byte 0x02003C38
_08073DEC: .4byte gBg2Tm+0x200
_08073DF0: .4byte 0x020040B8
_08073DF4: .4byte gDispIo

	thumb_func_start sub_8073DF8
sub_8073DF8: @ 0x08073DF8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r0, #0
	movs r5, #0
	str r5, [sp]
	ldr r1, _08073E78 @ =gBg0Tm+0x200
	ldr r4, _08073E7C @ =0x010000C0
	mov r0, sp
	adds r2, r4, #0
	bl CpuFastSet
	str r5, [sp, #4]
	add r0, sp, #4
	ldr r1, _08073E80 @ =gBg1Tm+0x200
	adds r2, r4, #0
	bl CpuFastSet
	ldr r0, _08073E84 @ =0x06800680
	str r0, [sp, #8]
	add r0, sp, #8
	ldr r1, _08073E88 @ =gBg2Tm+0x200
	adds r2, r4, #0
	bl CpuFastSet
	ldr r6, _08073E8C @ =gUnk_086783B0
	adds r4, r7, #0
	adds r4, #0x4c
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r6
	movs r5, #0
	ldrsb r5, [r0, r5]
	cmp r5, #0x7f
	bne _08073E5A
	adds r0, r7, #0
	adds r0, #0x4a
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, r7, #0
	bl sub_8073BE8
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r6
	movs r5, #0
	ldrsb r5, [r0, r5]
_08073E5A:
	ldr r0, [r7, #0x2c]
	cmp r0, #0
	bge _08073E62
	rsbs r5, r5, #0
_08073E62:
	adds r2, r5, #0
	cmp r5, #0
	bge _08073E6A
	rsbs r2, r5, #0
_08073E6A:
	movs r0, #0x1e
	subs r6, r0, r2
	cmp r5, #0
	bge _08073E90
	movs r4, #0
	rsbs r5, r5, #0
	b _08073E94
	.align 2, 0
_08073E78: .4byte gBg0Tm+0x200
_08073E7C: .4byte 0x010000C0
_08073E80: .4byte gBg1Tm+0x200
_08073E84: .4byte 0x06800680
_08073E88: .4byte gBg2Tm+0x200
_08073E8C: .4byte gUnk_086783B0
_08073E90:
	adds r4, r5, #0
	movs r5, #0
_08073E94:
	lsls r5, r5, #1
	ldr r0, _08073F00 @ =0x02003238
	adds r0, r5, r0
	lsls r4, r4, #1
	ldr r1, _08073F04 @ =gBg0Tm+0x200
	adds r1, r4, r1
	adds r2, r6, #0
	movs r3, #0xc
	bl TmCopyRect_t
	ldr r0, _08073F08 @ =0x02003738
	adds r0, r5, r0
	ldr r1, _08073F0C @ =gBg1Tm+0x200
	adds r1, r4, r1
	adds r2, r6, #0
	movs r3, #0xc
	bl TmCopyRect_t
	ldr r0, _08073F10 @ =0x02003C38
	adds r5, r5, r0
	ldr r0, _08073F14 @ =gBg2Tm+0x200
	adds r4, r4, r0
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	movs r3, #0xc
	bl TmCopyRect_t
	movs r0, #7
	bl EnableBgSync
	adds r0, r7, #0
	adds r0, #0x4c
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	ldr r1, _08073F18 @ =gUnk_086783B0
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r0, r1
	movs r5, #0
	ldrsb r5, [r0, r5]
	movs r0, #0x80
	rsbs r0, r0, #0
	cmp r5, r0
	bne _08073EF6
	adds r0, r7, #0
	bl Proc_Break
_08073EF6:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073F00: .4byte 0x02003238
_08073F04: .4byte gBg0Tm+0x200
_08073F08: .4byte 0x02003738
_08073F0C: .4byte gBg1Tm+0x200
_08073F10: .4byte 0x02003C38
_08073F14: .4byte gBg2Tm+0x200
_08073F18: .4byte gUnk_086783B0

	thumb_func_start sub_8073F1C
sub_8073F1C: @ 0x08073F1C
	ldr r1, _08073F24 @ =0x020040B8
	movs r0, #1
	strb r0, [r1, #4]
	bx lr
	.align 2, 0
_08073F24: .4byte 0x020040B8

	thumb_func_start sub_8073F28
sub_8073F28: @ 0x08073F28
	ldr r1, _08073F30 @ =0x020040B8
	movs r0, #0
	strb r0, [r1, #4]
	bx lr
	.align 2, 0
_08073F30: .4byte 0x020040B8

	thumb_func_start sub_8073F34
sub_8073F34: @ 0x08073F34
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	mov r8, r1
	adds r7, r2, #0
	ldr r5, _08073F84 @ =gUnk_086783C4
	adds r0, r5, #0
	bl Proc_Find
	adds r4, r0, #0
	cmp r4, #0
	bne _08073F78
	adds r0, r5, #0
	adds r1, r6, #0
	bl SpawnProcLocking
	mov r1, r8
	str r1, [r0, #0x2c]
	adds r1, r0, #0
	adds r1, #0x4a
	strh r7, [r1]
	adds r0, #0x4c
	strh r4, [r0]
	ldr r0, _08073F88 @ =0x020040B8
	str r7, [r0]
	ldr r0, _08073F8C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08073F78
	movs r0, #0x6f
	bl m4aSongNumStart
_08073F78:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073F84: .4byte gUnk_086783C4
_08073F88: .4byte 0x020040B8
_08073F8C: .4byte gPlaySt

	thumb_func_start sub_8073F90
sub_8073F90: @ 0x08073F90
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r1, _08073FB0 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _08073FC0
	ldr r0, _08073FB4 @ =0x020040B8
	ldr r0, [r0]
	ldr r4, _08073FB8 @ =gUnk_0868B2C8
	cmp r0, #0
	beq _08073FC2
	ldr r4, _08073FBC @ =gUnk_0868B3C4
	b _08073FC2
	.align 2, 0
_08073FB0: .4byte gPlaySt
_08073FB4: .4byte 0x020040B8
_08073FB8: .4byte gUnk_0868B2C8
_08073FBC: .4byte gUnk_0868B3C4
_08073FC0:
	ldr r4, _08073FDC @ =gUnk_0868B1B0
_08073FC2:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	adds r0, r4, #0
	adds r1, r5, #0
	bl StartMovingHelpBox
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073FDC: .4byte gUnk_0868B1B0

	thumb_func_start sub_8073FE0
sub_8073FE0: @ 0x08073FE0
	push {r4, r5, lr}
	adds r4, r0, #0
	cmp r4, #0
	bne _0807405C
	ldr r3, _08074048 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r0, #6
	strb r0, [r1]
	adds r1, #1
	movs r0, #8
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r4, [r0]
	ldr r0, _0807404C @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	ldr r1, _08074050 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	ldr r5, _08074054 @ =0x02004108
	ldr r4, _08074058 @ =gBg0Tm+0x486
	adds r0, r5, #0
	adds r1, r4, #0
	bl PutText
	subs r4, #2
	bl GetGlobalCompletedPlaythroughCount
	adds r2, r0, #0
	adds r2, #1
	adds r0, r4, #0
	movs r1, #2
	bl PutNumber
	subs r5, #0x50
	movs r0, #1
	strb r0, [r5, #5]
	b _0807406E
	.align 2, 0
_08074048: .4byte gDispIo
_0807404C: .4byte 0x0000FFE0
_08074050: .4byte 0x0000E0FF
_08074054: .4byte 0x02004108
_08074058: .4byte gBg0Tm+0x486
_0807405C:
	ldr r0, _0807407C @ =gBg0Tm+0x480
	movs r1, #6
	movs r2, #2
	movs r3, #0
	bl TmFillRect_t
	ldr r1, _08074080 @ =0x020040B8
	movs r0, #0
	strb r0, [r1, #5]
_0807406E:
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807407C: .4byte gBg0Tm+0x480
_08074080: .4byte 0x020040B8

	thumb_func_start sub_8074084
sub_8074084: @ 0x08074084
	push {r4, lr}
	bl sub_80846F0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080740C6
	ldr r4, _080740CC @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r4, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _080740C6
	ldrb r2, [r4, #0x1d]
	lsls r1, r2, #0x1b
	lsrs r1, r1, #0x1f
	movs r0, #1
	eors r1, r0
	lsls r1, r1, #4
	subs r0, #0x12
	ands r0, r2
	orrs r0, r1
	strb r0, [r4, #0x1d]
	bl IsFirstPlaythrough
	bl sub_8073FE0
	ldrb r4, [r4, #0x1d]
	lsls r0, r4, #0x1e
	cmp r0, #0
	blt _080740C6
	movs r0, #0x77
	bl m4aSongNumStart
_080740C6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080740CC: .4byte gPlaySt

	thumb_func_start sub_80740D0
sub_80740D0: @ 0x080740D0
	push {lr}
	ldr r0, _080740E0 @ =gUnk_08678320
	bl Proc_EndEach
	bl sub_806EABC
	pop {r0}
	bx r0
	.align 2, 0
_080740E0: .4byte gUnk_08678320

	thumb_func_start sub_80740E4
sub_80740E4: @ 0x080740E4
	push {lr}
	ldr r0, _080740F0 @ =gUnk_08678330
	bl InitTextList
	pop {r0}
	bx r0
	.align 2, 0
_080740F0: .4byte gUnk_08678330

	thumb_func_start sub_80740F4
sub_80740F4: @ 0x080740F4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r1, _08074124 @ =gKeySt
	ldr r0, [r1]
	ldrh r2, [r0, #8]
	movs r0, #2
	ands r0, r2
	adds r5, r1, #0
	cmp r0, #0
	beq _0807412C
	ldr r0, _08074128 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08074118
	movs r0, #0x6b
	bl m4aSongNumStart
_08074118:
	adds r0, r4, #0
	movs r1, #0x63
	bl Proc_Goto
	b _080741A2
	.align 2, 0
_08074124: .4byte gKeySt
_08074128: .4byte gPlaySt
_0807412C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0807413E
	adds r0, r4, #0
	bl sub_8073F90
	b _080741A2
_0807413E:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08074150
	adds r0, r4, #0
	bl sub_8074084
	b _080741A2
_08074150:
	ldr r1, _0807417C @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _080741A2
	ldr r0, _08074180 @ =0x020040B8
	ldr r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	bne _08074184
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08074184
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_8073F34
	b _080741A2
	.align 2, 0
_0807417C: .4byte gPlaySt
_08074180: .4byte 0x020040B8
_08074184:
	ldr r0, [r3]
	cmp r0, #1
	bne _080741A2
	ldr r1, [r5]
	movs r0, #0x20
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080741A2
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r4, #0
	movs r2, #0
	bl sub_8073F34
_080741A2:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_80741A8
sub_80741A8: @ 0x080741A8
	push {lr}
	ldr r1, _080741C4 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _080741BE
	bl IsFirstPlaythrough
	bl sub_8073FE0
_080741BE:
	pop {r0}
	bx r0
	.align 2, 0
_080741C4: .4byte gPlaySt

	thumb_func_start sub_80741C8
sub_80741C8: @ 0x080741C8
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	beq _080741DC
	ldr r0, _080741D8 @ =gUnk_086783E4
	bl SpawnProcLocking
	b _080741E4
	.align 2, 0
_080741D8: .4byte gUnk_086783E4
_080741DC:
	ldr r0, _080741E8 @ =gUnk_086783E4
	movs r1, #3
	bl SpawnProc
_080741E4:
	pop {r0}
	bx r0
	.align 2, 0
_080741E8: .4byte gUnk_086783E4

	thumb_func_start sub_80741EC
sub_80741EC: @ 0x080741EC
	push {r4, r5, r6, lr}
	ldr r0, _08074248 @ =0x0200D6B4
	bl UnitRearrangeInit
	movs r4, #0
	ldr r0, _0807424C @ =0x0200CD38
	ldrb r1, [r0]
	cmp r4, r1
	bge _08074212
	ldr r6, _08074250 @ =0x0200CC38
	adds r5, r0, #0
_08074202:
	ldm r6!, {r0}
	ldr r0, [r0]
	bl UnitRearrangeAdd
	adds r4, #1
	ldrb r2, [r5]
	cmp r4, r2
	blt _08074202
_08074212:
	movs r4, #1
_08074214:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _08074236
	ldr r0, [r1]
	cmp r0, #0
	beq _08074236
	movs r0, #4
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _08074236
	adds r0, r1, #0
	bl UnitRearrangeAdd
_08074236:
	adds r4, #1
	cmp r4, #0x3f
	ble _08074214
	bl UnitRearrangeApply
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08074248: .4byte 0x0200D6B4
_0807424C: .4byte 0x0200CD38
_08074250: .4byte 0x0200CC38

	thumb_func_start sub_8074254
sub_8074254: @ 0x08074254
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	ldr r0, _080742CC @ =gUnk_08678744
	ldr r3, [r0]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xd
	mov r1, r8
	adds r2, r7, #0
	bl PutSpriteExt
	movs r5, #0
	subs r0, r6, #1
	cmp r5, r0
	bge _080742A8
	mov r4, r8
	adds r4, #8
_0807428A:
	ldr r0, _080742CC @ =gUnk_08678744
	ldr r3, [r0, #4]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xd
	adds r1, r4, #0
	adds r2, r7, #0
	bl PutSpriteExt
	adds r4, #0x10
	adds r5, #1
	subs r0, r6, #1
	cmp r5, r0
	blt _0807428A
_080742A8:
	lsls r1, r5, #4
	add r1, r8
	adds r1, #8
	ldr r0, _080742CC @ =gUnk_08678744
	ldr r3, [r0, #8]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xd
	adds r2, r7, #0
	bl PutSpriteExt
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080742CC: .4byte gUnk_08678744

	thumb_func_start sub_80742D0
sub_80742D0: @ 0x080742D0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _0807432C @ =gBg2Tm+0x68
	movs r1, #4
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	ldr r4, _08074330 @ =0x0200D6AC
	adds r0, r4, #0
	bl ClearText
	movs r3, #0
	ldr r0, _08074334 @ =gUnk_08678840
	mov r8, r0
	adds r5, r4, #0
	mov sb, r8
_080742FA:
	movs r2, #0
	lsls r1, r3, #3
	adds r6, r3, #1
	adds r1, r1, r3
	lsls r1, r1, #4
	mov r0, sb
	adds r0, #4
	adds r4, r1, r0
	add r1, r8
_0807430C:
	ldrb r0, [r1]
	cmp r0, r7
	bne _08074360
	cmp r3, #5
	bne _08074338
	cmp r2, #0
	beq _08074338
	adds r1, r2, #0
	adds r1, #0x6f
	ldr r0, _0807432C @ =gBg2Tm+0x68
	movs r2, #0xa0
	lsls r2, r2, #7
	bl PutIcon
	b _0807436A
	.align 2, 0
_0807432C: .4byte gBg2Tm+0x68
_08074330: .4byte 0x0200D6AC
_08074334: .4byte gUnk_08678840
_08074338:
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, [r4]
	adds r0, r5, #0
	bl Text_DrawString
	adds r0, r5, #0
	ldr r1, _0807435C @ =gBg2Tm+0x68
	bl PutText
	b _0807436A
	.align 2, 0
_0807435C: .4byte gBg2Tm+0x68
_08074360:
	adds r4, #0x10
	adds r1, #0x10
	adds r2, #1
	cmp r2, #8
	ble _0807430C
_0807436A:
	adds r3, r6, #0
	cmp r3, #9
	ble _080742FA
	movs r0, #4
	bl EnableBgSync
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8074384
sub_8074384: @ 0x08074384
	push {r4, lr}
	adds r3, r0, #0
	movs r2, #0
	ldr r1, _080743B4 @ =0x0200E6B4
_0807438C:
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, r3
	beq _080743C2
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #7
	bls _0807438C
	movs r2, #0
	ldr r4, _080743B4 @ =0x0200E6B4
_080743A4:
	lsls r0, r2, #2
	adds r1, r0, r4
	ldr r0, [r1]
	cmp r0, #0xff
	bne _080743B8
	str r3, [r1]
	b _080743C2
	.align 2, 0
_080743B4: .4byte 0x0200E6B4
_080743B8:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #7
	bls _080743A4
_080743C2:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80743C8
sub_80743C8: @ 0x080743C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x14
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r5, #0
	ldr r2, _08074494 @ =0x0200CD38
	movs r1, #0xff
_080743DE:
	lsls r0, r5, #2
	add r0, sp
	str r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _080743DE
	cmp r6, #0
	beq _080743F8
	subs r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_080743F8:
	movs r5, #0
	ldrb r2, [r2]
	cmp r6, r2
	bge _08074440
	ldr r7, _08074498 @ =0x0200CC38
_08074402:
	adds r0, r6, r5
	lsls r0, r0, #2
	adds r4, r0, r7
	ldr r0, [r4]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807442C
	ldr r0, [r4]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIcon
	lsls r1, r5, #2
	add r1, sp
	str r0, [r1]
_0807442C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bhi _08074440
	adds r1, r5, r6
	ldr r0, _08074494 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r1, r0
	blt _08074402
_08074440:
	movs r5, #0
	ldr r7, _0807449C @ =0x0200E6B4
	mov r8, r7
_08074446:
	lsls r1, r5, #2
	mov r2, r8
	adds r0, r1, r2
	ldr r0, [r0]
	adds r6, r5, #1
	cmp r0, #0xff
	beq _08074480
	movs r5, #0
	movs r2, #0
	adds r3, r0, #0
_0807445A:
	lsls r0, r2, #2
	add r0, sp
	ldr r0, [r0]
	cmp r0, r3
	bne _08074466
	movs r5, #1
_08074466:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #7
	bls _0807445A
	cmp r5, #0
	bne _08074480
	adds r4, r1, r7
	ldr r0, [r4]
	bl ClearIcon
	movs r0, #0xff
	str r0, [r4]
_08074480:
	lsls r0, r6, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _08074446
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08074494: .4byte 0x0200CD38
_08074498: .4byte 0x0200CC38
_0807449C: .4byte 0x0200E6B4

	thumb_func_start sub_80744A0
sub_80744A0: @ 0x080744A0
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r0, r0, #0x18
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	lsrs r0, r0, #0x1b
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r6, r3, #0
	cmp r4, #0
	bne _0807450C
	lsls r0, r5, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _080744F4
	ldr r2, _080744E8 @ =gBg2Tm
	ldr r0, _080744EC @ =0x0000F368
	adds r1, r3, r0
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r2, r4
	strh r1, [r0]
	ldr r0, _080744F0 @ =0x0000F36E
	adds r1, r3, r0
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r0, r2, r3
	strh r1, [r0]
	b _08074546
	.align 2, 0
_080744E8: .4byte gBg2Tm
_080744EC: .4byte 0x0000F368
_080744F0: .4byte 0x0000F36E
_080744F4:
	ldr r1, _08074508 @ =gBg2Tm
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r1, r4
	strh r2, [r0]
	movs r3, #0xa0
	lsls r3, r3, #1
	adds r0, r1, r3
	strh r2, [r0]
	b _08074546
	.align 2, 0
_08074508: .4byte gBg2Tm
_0807450C:
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08074534
	ldr r2, _0807452C @ =gBg2Tm
	ldr r4, _08074530 @ =0x0000F768
	adds r0, r6, r4
	movs r3, #0x9d
	lsls r3, r3, #1
	adds r1, r2, r3
	strh r0, [r1]
	adds r4, #6
	adds r0, r6, r4
	adds r3, #0x40
	adds r1, r2, r3
	b _08074544
	.align 2, 0
_0807452C: .4byte gBg2Tm
_08074530: .4byte 0x0000F768
_08074534:
	ldr r1, _08074554 @ =gBg2Tm
	movs r4, #0x9d
	lsls r4, r4, #1
	adds r2, r1, r4
	strh r0, [r2]
	movs r2, #0xbd
	lsls r2, r2, #1
	adds r1, r1, r2
_08074544:
	strh r0, [r1]
_08074546:
	movs r0, #4
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08074554: .4byte gBg2Tm

	thumb_func_start sub_8074558
sub_8074558: @ 0x08074558
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	cmp r1, #0
	beq _080745A2
	ldr r0, _08074570 @ =0x0200E7D8
	ldr r2, [r0]
	b _080745A8
	.align 2, 0
_08074570: .4byte 0x0200E7D8
_08074574:
	adds r0, r6, #0
	adds r0, #0x2c
	strb r5, [r0]
	adds r0, #0x14
	strh r5, [r0]
	b _0807465E
_08074580:
	adds r0, r6, #0
	adds r0, #0x2c
	strb r5, [r0]
	adds r0, #0x14
	strh r3, [r0]
	b _0807465E
_0807458C:
	subs r1, r5, r1
	adds r0, r6, #0
	adds r0, #0x2c
	strb r1, [r0]
	b _0807465E
_08074596:
	adds r1, r6, #0
	adds r1, #0x2c
	movs r0, #1
	strb r0, [r1]
	strh r3, [r7]
	b _0807465E
_080745A2:
	bl sub_806EACC
	adds r2, r0, #0
_080745A8:
	movs r5, #0
	ldr r0, _080745DC @ =0x0200CD38
	ldrb r3, [r0]
	mov r8, r0
	cmp r5, r3
	bhs _0807465E
	lsls r0, r4, #0x18
	asrs r7, r0, #0x18
	ldr r4, _080745E0 @ =0x0200CC38
	movs r0, #0x2c
	adds r0, r0, r6
	mov ip, r0
	adds r1, r6, #0
	adds r1, #0x40
_080745C4:
	cmp r7, #0
	beq _080745E4
	lsls r0, r5, #2
	adds r0, r0, r4
	ldr r0, [r0]
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, r2
	beq _080745F6
	b _08074654
	.align 2, 0
_080745DC: .4byte 0x0200CD38
_080745E0: .4byte 0x0200CC38
_080745E4:
	lsls r0, r5, #2
	adds r0, r0, r4
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #0xb]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r2
	bne _08074654
_080745F6:
	adds r0, r6, #0
	adds r0, #0x30
	movs r3, #0
	strb r5, [r0]
	cmp r5, #0
	beq _08074574
	mov r0, r8
	ldrb r2, [r0]
	subs r0, r2, #1
	cmp r5, r0
	bne _08074622
	cmp r2, #6
	bls _08074580
	movs r0, #5
	mov r2, ip
	strb r0, [r2]
	mov r2, r8
	ldrb r0, [r2]
	subs r0, #6
	lsls r0, r0, #4
	strh r0, [r1]
	b _0807465E
_08074622:
	ldrh r1, [r1]
	lsrs r1, r1, #4
	adds r0, r1, #0
	adds r4, r6, #0
	adds r4, #0x40
	cmp r5, r0
	bls _08074636
	adds r0, #5
	cmp r5, r0
	blt _0807458C
_08074636:
	adds r7, r4, #0
	ldrh r2, [r4]
	subs r0, r5, #1
	lsls r3, r0, #4
	cmp r2, r3
	bgt _08074596
	subs r0, r5, #4
	lsls r1, r0, #4
	cmp r2, r1
	bge _0807465E
	movs r0, #4
	mov r2, ip
	strb r0, [r2]
	strh r1, [r4]
	b _0807465E
_08074654:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, r3
	blo _080745C4
_0807465E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8074668
sub_8074668: @ 0x08074668
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _0807470C
	ldr r0, _08074708 @ =gDispIo
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	ldrb r1, [r1, #1]
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r2, ip
	strb r0, [r2, #1]
	mov r0, ip
	adds r0, #0x2d
	movs r2, #0
	strb r2, [r0]
	mov r1, ip
	adds r1, #0x31
	movs r0, #0x38
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x2c
	movs r3, #0xf0
	strb r3, [r0]
	subs r1, #1
	movs r0, #0x98
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x2f
	strb r2, [r0]
	adds r0, #4
	strb r2, [r0]
	subs r0, #5
	strb r3, [r0]
	adds r1, #2
	movs r0, #0x20
	strb r0, [r1]
	adds r1, #2
	movs r0, #1
	ldrb r3, [r1]
	orrs r0, r3
	movs r4, #2
	orrs r0, r4
	movs r3, #4
	orrs r0, r3
	movs r2, #8
	orrs r0, r2
	movs r5, #0x10
	orrs r0, r5
	strb r0, [r1]
	mov r6, ip
	adds r6, #0x35
	movs r1, #2
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r7, [r6]
	ands r0, r7
	orrs r0, r4
	orrs r0, r3
	orrs r0, r2
	orrs r0, r5
	strb r0, [r6]
	mov r5, ip
	adds r5, #0x36
	ldrb r0, [r5]
	ands r1, r0
	orrs r1, r4
	orrs r1, r3
	orrs r1, r2
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r1, r0
	strb r1, [r5]
	b _0807476C
	.align 2, 0
_08074708: .4byte gDispIo
_0807470C:
	ldr r1, _08074774 @ =gDispIo
	mov ip, r1
	movs r0, #0x20
	ldrb r3, [r1, #1]
	orrs r0, r3
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r6, ip
	strb r0, [r6, #1]
	mov r0, ip
	adds r0, #0x2d
	strb r2, [r0]
	mov r1, ip
	adds r1, #0x31
	movs r0, #0x38
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x98
	strb r0, [r1]
	adds r1, #4
	movs r0, #1
	ldrb r7, [r1]
	orrs r0, r7
	movs r5, #2
	orrs r0, r5
	movs r4, #4
	orrs r0, r4
	movs r3, #8
	orrs r0, r3
	movs r2, #0x10
	orrs r0, r2
	strb r0, [r1]
	adds r1, #2
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r6, [r1]
	ands r0, r6
	orrs r0, r5
	orrs r0, r4
	orrs r0, r3
	orrs r0, r2
	strb r0, [r1]
_0807476C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08074774: .4byte gDispIo

	thumb_func_start sub_8074778
sub_8074778: @ 0x08074778
	push {r4, lr}
	adds r4, r0, #0
	bl EndAllMus
	ldr r0, [r4, #0x44]
	bl Proc_End
	ldr r0, [r4, #0x48]
	bl Proc_End
	bl EndGreenText
	ldr r2, _080747B8 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	adds r0, r4, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	bne _080747BC
	movs r0, #4
	bl sub_806EAE4
	b _080747C2
	.align 2, 0
_080747B8: .4byte gDispIo
_080747BC:
	movs r0, #0xc
	bl sub_806EAE4
_080747C2:
	ldr r1, _080747FC @ =0x0200CC38
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	adds r1, r4, #0
	bl sub_80702BC
	ldr r1, _08074800 @ =gPlaySt
	adds r0, r4, #0
	adds r0, #0x34
	ldrb r0, [r0]
	lsls r0, r0, #7
	adds r2, r4, #0
	adds r2, #0x32
	ldrb r2, [r2]
	adds r0, r2, r0
	strb r0, [r1, #0x1a]
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #4
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080747FC: .4byte 0x0200CC38
_08074800: .4byte gPlaySt

	thumb_func_start sub_8074804
sub_8074804: @ 0x08074804
	push {lr}
	bl sub_8074EF0
	ldr r2, _0807482C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	pop {r0}
	bx r0
	.align 2, 0
_0807482C: .4byte gDispIo

	thumb_func_start sub_8074830
sub_8074830: @ 0x08074830
	ldr r2, _0807484C @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	bx lr
	.align 2, 0
_0807484C: .4byte gDispIo

	thumb_func_start sub_8074850
sub_8074850: @ 0x08074850
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r0, [r4, #0x14]
	str r0, [r4, #0x2c]
	adds r0, r4, #0
	adds r0, #0x3b
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r0, [r4, #0x2c]
	adds r0, #0x40
	ldrh r0, [r0]
	strh r0, [r4, #0x38]
	adds r0, r4, #0
	adds r0, #0x3a
	strb r1, [r0]
	subs r0, #0xa
	strb r1, [r0]
	adds r0, r4, #0
	bl sub_808230C
	str r0, [r4, #0x34]
	ldr r1, [r4, #0x2c]
	adds r1, #0x40
	ldrh r1, [r1]
	str r1, [sp]
	ldr r1, _080748A8 @ =0x0200CD38
	ldrb r1, [r1]
	str r1, [sp, #4]
	movs r1, #6
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x40
	movs r3, #0xa
	bl sub_8082320
	bl ForceSyncUnitSpriteSheet
	add sp, #0xc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080748A8: .4byte 0x0200CD38

	thumb_func_start sub_80748AC
sub_80748AC: @ 0x080748AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r6, r0, #0
	ldr r1, _080748F4 @ =gUnk_08327148
	add r0, sp, #0xc
	movs r2, #4
	bl memcpy
	ldr r0, [r6, #0x2c]
	adds r0, #0x34
	ldrb r0, [r0]
	cmp r0, #0
	bne _080748FC
	adds r4, r6, #0
	adds r4, #0x3b
	ldrb r1, [r4]
	lsrs r0, r1, #3
	movs r1, #3
	ands r0, r1
	add r0, sp
	adds r0, #0xc
	ldrb r2, [r0]
	adds r2, #7
	ldr r3, _080748F8 @ =gUnk_08678750
	movs r0, #0x90
	lsls r0, r0, #8
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0xb8
	bl PutSpriteExt
	b _08074920
	.align 2, 0
_080748F4: .4byte gUnk_08327148
_080748F8: .4byte gUnk_08678750
_080748FC:
	ldr r1, _080749A4 @ =0x000020B8
	adds r4, r6, #0
	adds r4, #0x3b
	ldrb r2, [r4]
	lsrs r0, r2, #3
	movs r2, #3
	ands r0, r2
	add r0, sp
	adds r0, #0xc
	ldrb r2, [r0]
	adds r2, #7
	ldr r3, _080749A8 @ =gUnk_08678750
	movs r0, #0x90
	lsls r0, r0, #8
	str r0, [sp]
	movs r0, #0xb
	bl PutSpriteExt
_08074920:
	str r4, [sp, #0x10]
	ldr r1, _080749AC @ =gUnk_08678818
	ldr r0, [r6, #0x2c]
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r3, [r0]
	movs r5, #0x90
	lsls r5, r5, #8
	str r5, [sp]
	movs r0, #0xd
	movs r1, #0x20
	movs r2, #8
	bl PutSpriteExt
	ldr r3, _080749B0 @ =gUnk_08678758
	str r5, [sp]
	movs r0, #0xd
	movs r1, #0xa0
	movs r2, #0
	bl PutSpriteExt
	ldr r0, [r6, #0x34]
	ldr r1, [r6, #0x2c]
	adds r1, #0x40
	ldrh r1, [r1]
	str r1, [sp]
	ldr r1, _080749B4 @ =0x0200CD38
	ldrb r1, [r1]
	str r1, [sp, #4]
	movs r1, #6
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x40
	movs r3, #0xa
	bl sub_8082320
	ldr r4, [r6, #0x2c]
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #2
	bls _080749BC
	ldr r1, _080749B8 @ =gUnk_08678840
	adds r3, r4, #0
	adds r3, #0x2d
	adds r2, r4, #0
	adds r2, #0x2f
	ldrb r5, [r2]
	lsls r0, r5, #3
	adds r0, r0, r5
	ldrb r3, [r3]
	adds r0, r3, r0
	lsls r0, r0, #4
	adds r0, r0, r1
	ldrb r0, [r0, #8]
	adds r1, r4, #0
	adds r1, #0x2c
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r1, #0x28
	bl sub_80415CC
	b _080749D2
	.align 2, 0
_080749A4: .4byte 0x000020B8
_080749A8: .4byte gUnk_08678750
_080749AC: .4byte gUnk_08678818
_080749B0: .4byte gUnk_08678758
_080749B4: .4byte 0x0200CD38
_080749B8: .4byte gUnk_08678840
_080749BC:
	adds r0, r4, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	lsls r2, r0, #4
	adds r2, #0x40
	ldr r3, _08074A24 @ =gUnk_08678760
	str r5, [sp]
	movs r0, #0xd
	movs r1, #4
	bl PutSpriteExt
_080749D2:
	ldr r0, [r6, #0x2c]
	adds r1, r0, #0
	adds r1, #0x40
	ldrh r0, [r6, #0x38]
	ldrh r2, [r1]
	cmp r0, r2
	bne _080749E8
	movs r0, #0xf
	ands r0, r2
	cmp r0, #0
	beq _08074A30
_080749E8:
	ldr r0, _08074A28 @ =gPal
	ldr r1, _08074A2C @ =0x02016874
	ldrh r1, [r1, #0x10]
	movs r5, #0xcf
	lsls r5, r5, #2
	adds r0, r0, r5
	strh r1, [r0]
	bl EnablePalSync
	adds r2, r6, #0
	adds r2, #0x3c
	movs r0, #0x20
	strb r0, [r2]
	ldr r0, [r6, #0x2c]
	adds r0, #0x40
	ldrh r0, [r0]
	strh r0, [r6, #0x38]
	adds r0, r6, #0
	adds r0, #0x3a
	ldrb r1, [r0]
	str r2, [sp, #0x14]
	adds r7, r0, #0
	cmp r1, #0
	bne _08074A6A
	movs r0, #1
	bl sub_8074668
	movs r0, #1
	b _08074A68
	.align 2, 0
_08074A24: .4byte gUnk_08678760
_08074A28: .4byte gPal
_08074A2C: .4byte 0x02016874
_08074A30:
	ldr r2, _08074B20 @ =gPal
	ldr r3, _08074B24 @ =0x02016874
	adds r4, r6, #0
	adds r4, #0x3c
	ldrb r1, [r4]
	lsrs r0, r1, #2
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	movs r5, #0xcf
	lsls r5, r5, #2
	adds r2, r2, r5
	strh r0, [r2]
	bl EnablePalSync
	adds r0, r6, #0
	adds r0, #0x3a
	str r4, [sp, #0x14]
	adds r7, r0, #0
	ldrb r0, [r7]
	cmp r0, #1
	bne _08074A6A
	movs r0, #0
	bl sub_8074668
	movs r0, #0
_08074A68:
	strb r0, [r7]
_08074A6A:
	bl SyncUnitSpriteSheet
	ldrh r1, [r6, #0x38]
	lsrs r0, r1, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #0xf
	ands r1, r0
	rsbs r1, r1, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	movs r4, #0
	ldr r0, _08074B28 @ =0x0200CD38
	movs r1, #0x30
	adds r1, r1, r6
	mov r8, r1
	ldrb r0, [r0]
	cmp r5, r0
	bge _08074AC8
	mov r2, sl
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x38
	mov sb, r0
_08074A9C:
	lsls r2, r4, #4
	add r2, sb
	adds r0, r4, r5
	lsls r0, r0, #2
	ldr r1, _08074B2C @ =0x0200CC38
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r3, [r0]
	movs r0, #4
	movs r1, #8
	bl PutUnitSprite
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #5
	bhi _08074AC8
	adds r1, r4, r5
	ldr r0, _08074B28 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r1, r0
	blt _08074A9C
_08074AC8:
	ldrb r0, [r7]
	cmp r0, #0
	beq _08074AF6
	adds r3, r4, r5
	ldr r0, _08074B28 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r3, r0
	bge _08074AF6
	lsls r2, r4, #4
	mov r5, sl
	lsls r0, r5, #0x18
	asrs r0, r0, #0x18
	adds r0, #0x38
	adds r2, r2, r0
	ldr r1, _08074B2C @ =0x0200CC38
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r3, [r0]
	movs r0, #4
	movs r1, #8
	bl PutUnitSprite
_08074AF6:
	ldr r0, [r6, #0x2c]
	adds r1, r0, #0
	adds r1, #0x2f
	adds r2, r0, #0
	adds r2, #0x2e
	ldrb r1, [r1]
	ldrb r2, [r2]
	cmp r1, r2
	bhs _08074B30
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	beq _08074B30
	mov r0, r8
	ldrb r1, [r0]
	movs r0, #1
	movs r2, #1
	bl sub_80744A0
	b _08074B3C
	.align 2, 0
_08074B20: .4byte gPal
_08074B24: .4byte 0x02016874
_08074B28: .4byte 0x0200CD38
_08074B2C: .4byte 0x0200CC38
_08074B30:
	mov r2, r8
	ldrb r1, [r2]
	movs r0, #1
	movs r2, #0
	bl sub_80744A0
_08074B3C:
	ldr r0, [r6, #0x2c]
	adds r1, r0, #0
	adds r1, #0x2f
	ldrb r1, [r1]
	cmp r1, #1
	bls _08074B5E
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	beq _08074B5E
	mov r5, r8
	ldrb r1, [r5]
	movs r0, #0
	movs r2, #1
	bl sub_80744A0
	b _08074B6A
_08074B5E:
	mov r0, r8
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_80744A0
_08074B6A:
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bls _08074B7E
	movs r0, #0
	strb r0, [r1]
_08074B7E:
	ldr r2, [sp, #0x10]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r5, [sp, #0x14]
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start nullsub_37
nullsub_37: @ 0x08074BA0
	bx lr
	.align 2, 0

	thumb_func_start sub_8074BA4
sub_8074BA4: @ 0x08074BA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp]
	ldr r0, _08074D3C @ =gPlaySt
	ldrb r0, [r0, #0xf]
	adds r1, r0, #1
	mov sb, r1
	adds r0, #0x40
	cmp sb, r0
	blt _08074BC2
	b _08074D2C
_08074BC2:
	ldr r2, _08074D40 @ =0x0200CD38
	mov r8, r2
	ldr r0, _08074D44 @ =gBattleUnitA
	str r0, [sp, #4]
_08074BCA:
	mov r0, sb
	bl GetUnit
	adds r7, r0, #0
	movs r1, #1
	add r1, sb
	mov sl, r1
	cmp r7, #0
	bne _08074BDE
	b _08074D1E
_08074BDE:
	ldr r0, [r7]
	cmp r0, #0
	bne _08074BE6
	b _08074D1E
_08074BE6:
	ldrh r1, [r7, #0xc]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08074BF2
	b _08074D1E
_08074BF2:
	ldr r0, [sp]
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	beq _08074C06
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08074C06
	b _08074D1E
_08074C06:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _08074C18
	ldr r1, [sp]
	adds r1, #0x3b
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08074C18:
	mov r2, r8
	ldrb r2, [r2]
	lsls r0, r2, #1
	mov r1, r8
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r2, _08074D48 @ =0x0200C938
	adds r0, r0, r2
	str r7, [r0]
	adds r0, r7, #0
	movs r1, #1
	rsbs r1, r1, #0
	bl BattleGenerateDisplayStats
	mov r0, r8
	ldrb r0, [r0]
	lsls r1, r0, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r0, _08074D48 @ =0x0200C938
	adds r1, r1, r0
	ldr r0, [sp, #4]
	adds r0, #0x58
	ldrh r0, [r0]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #4]
	mov r0, r8
	ldrb r0, [r0]
	lsls r1, r0, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r0, _08074D48 @ =0x0200C938
	adds r1, r1, r0
	ldr r0, [sp, #4]
	adds r0, #0x5e
	ldrh r0, [r0]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #6]
	mov r0, r8
	ldrb r0, [r0]
	lsls r1, r0, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r0, _08074D48 @ =0x0200C938
	adds r1, r1, r0
	ldr r2, _08074D4C @ =gBattleUnitA+0x60
	ldrh r0, [r2]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl GetUnitSupportCount
	adds r6, r0, #0
	movs r5, #0
	movs r4, #0
	movs r0, #1
	add r0, sb
	mov sl, r0
	cmp r5, r6
	bge _08074CCE
_08074CB0:
	adds r0, r7, #0
	adds r1, r4, #0
	bl CanUnitSupportNow
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08074CC4
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_08074CC4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blt _08074CB0
_08074CCE:
	cmp r5, #3
	bls _08074CE2
	subs r0, r5, #1
	movs r1, #3
	bl __divsi3
	adds r0, #6
	ldr r1, [sp]
	adds r1, #0x2e
	strb r0, [r1]
_08074CE2:
	mov r1, r8
	ldrb r1, [r1]
	lsls r0, r1, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r1, _08074D48 @ =0x0200C938
	adds r0, r0, r1
	strb r5, [r0, #0xa]
	ldr r0, _08074D50 @ =0x0200CC38
	mov r2, r8
	ldrb r1, [r2]
	lsls r2, r1, #2
	adds r2, r2, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08074D48 @ =0x0200C938
	adds r0, r0, r1
	str r0, [r2]
	mov r2, r8
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r0, r7, #0
	bl GetUnitMapSprite
	bl UseUnitSprite
_08074D1E:
	mov sb, sl
	ldr r0, _08074D3C @ =gPlaySt
	ldrb r0, [r0, #0xf]
	adds r0, #0x40
	cmp sb, r0
	bge _08074D2C
	b _08074BCA
_08074D2C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08074D3C: .4byte gPlaySt
_08074D40: .4byte 0x0200CD38
_08074D44: .4byte gBattleUnitA
_08074D48: .4byte 0x0200C938
_08074D4C: .4byte gBattleUnitA+0x60
_08074D50: .4byte 0x0200CC38

	thumb_func_start sub_8074D54
sub_8074D54: @ 0x08074D54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp]
	movs r0, #1
	mov sb, r0
	ldr r1, _08074EDC @ =0x0200CD38
	mov r8, r1
	ldr r2, _08074EE0 @ =gBattleUnitA
	str r2, [sp, #4]
_08074D6E:
	mov r0, sb
	bl GetUnit
	adds r7, r0, #0
	movs r0, #1
	add r0, sb
	mov sl, r0
	cmp r7, #0
	bne _08074D82
	b _08074EC2
_08074D82:
	ldr r0, [r7]
	cmp r0, #0
	bne _08074D8A
	b _08074EC2
_08074D8A:
	ldrh r1, [r7, #0xc]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08074D96
	b _08074EC2
_08074D96:
	ldr r0, [sp]
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	beq _08074DAA
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08074DAA
	b _08074EC2
_08074DAA:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _08074DBC
	ldr r1, [sp]
	adds r1, #0x3b
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08074DBC:
	mov r1, r8
	ldrb r1, [r1]
	lsls r0, r1, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r1, _08074EE4 @ =0x0200C938
	adds r0, r0, r1
	str r7, [r0]
	adds r0, r7, #0
	movs r1, #1
	rsbs r1, r1, #0
	bl BattleGenerateDisplayStats
	mov r2, r8
	ldrb r2, [r2]
	lsls r1, r2, #1
	mov r0, r8
	ldrb r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08074EE4 @ =0x0200C938
	adds r1, r1, r2
	ldr r0, [sp, #4]
	adds r0, #0x58
	ldrh r0, [r0]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #4]
	mov r0, r8
	ldrb r0, [r0]
	lsls r1, r0, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r0, _08074EE4 @ =0x0200C938
	adds r1, r1, r0
	ldr r0, [sp, #4]
	adds r0, #0x5e
	ldrh r0, [r0]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #6]
	mov r0, r8
	ldrb r0, [r0]
	lsls r1, r0, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r1, r1, r2
	lsls r1, r1, #2
	ldr r0, _08074EE4 @ =0x0200C938
	adds r1, r1, r0
	ldr r2, _08074EE8 @ =gBattleUnitA+0x60
	ldrh r0, [r2]
	adds r0, #1
	movs r2, #0xff
	ands r0, r2
	subs r0, #1
	strh r0, [r1, #8]
	adds r0, r7, #0
	bl GetUnitSupportCount
	adds r6, r0, #0
	movs r5, #0
	movs r4, #0
	movs r0, #1
	add r0, sb
	mov sl, r0
	cmp r5, r6
	bge _08074E72
_08074E54:
	adds r0, r7, #0
	adds r1, r4, #0
	bl CanUnitSupportNow
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08074E68
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_08074E68:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r6
	blt _08074E54
_08074E72:
	cmp r5, #3
	bls _08074E86
	subs r0, r5, #1
	movs r1, #3
	bl __divsi3
	adds r0, #6
	ldr r1, [sp]
	adds r1, #0x2e
	strb r0, [r1]
_08074E86:
	mov r1, r8
	ldrb r1, [r1]
	lsls r0, r1, #1
	mov r2, r8
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r1, _08074EE4 @ =0x0200C938
	adds r0, r0, r1
	strb r5, [r0, #0xa]
	ldr r0, _08074EEC @ =0x0200CC38
	mov r2, r8
	ldrb r1, [r2]
	lsls r2, r1, #2
	adds r2, r2, r0
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08074EE4 @ =0x0200C938
	adds r0, r0, r1
	str r0, [r2]
	mov r2, r8
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r0, r7, #0
	bl GetUnitMapSprite
	bl UseUnitSprite
_08074EC2:
	mov sb, sl
	mov r0, sb
	cmp r0, #0x3f
	bgt _08074ECC
	b _08074D6E
_08074ECC:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08074EDC: .4byte 0x0200CD38
_08074EE0: .4byte gBattleUnitA
_08074EE4: .4byte 0x0200C938
_08074EE8: .4byte gBattleUnitA+0x60
_08074EEC: .4byte 0x0200CC38

	thumb_func_start sub_8074EF0
sub_8074EF0: @ 0x08074EF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov r8, r0
	ldr r2, _08074FCC @ =gDispIo
	movs r5, #1
	ldrb r0, [r2, #1]
	orrs r0, r5
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	bl SetOnVMatch
	movs r0, #0
	bl InitBgs
	bl ResetText
	bl ResetTextFont
	bl ClearIcons
	bl ApplyUnitSpritePalettes
	bl ApplySystemObjectsGraphics
	mov r0, r8
	bl StartGreenText
	ldr r1, _08074FD0 @ =0x0200CD38
	movs r0, #0
	strb r0, [r1]
	mov r1, r8
	adds r1, #0x3b
	movs r0, #0
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x2e
	movs r6, #6
	strb r6, [r0]
	mov r0, r8
	bl sub_8074D54
	mov r0, r8
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	bne _08074F7E
	mov r0, r8
	adds r0, #0x2a
	movs r1, #0x32
	add r1, r8
	mov sl, r1
	movs r2, #0x29
	add r2, r8
	mov sb, r2
	mov r7, r8
	adds r7, #0x2f
	ldrb r0, [r0]
	cmp r0, #1
	bne _08074FEC
_08074F7E:
	ldr r4, _08074FD4 @ =gPlaySt
	ldrb r1, [r4, #0x1a]
	mov r3, r8
	adds r3, #0x34
	movs r0, #0x32
	add r0, r8
	mov sl, r0
	cmp r1, #0
	beq _08074FA4
	lsrs r0, r1, #7
	ands r0, r5
	mov r2, r8
	adds r2, #0x33
	strb r0, [r2]
	strb r0, [r3]
	movs r0, #0x7f
	ands r1, r0
	mov r2, sl
	strb r1, [r2]
_08074FA4:
	mov r0, r8
	adds r0, #0x29
	mov sb, r0
	mov r7, r8
	adds r7, #0x2f
	ldrb r0, [r0]
	cmp r0, #4
	beq _08074FE2
	ldrb r0, [r7]
	cmp r0, #0
	beq _08074FE2
	ldrb r4, [r4, #0x19]
	lsrs r1, r4, #4
	cmp r1, #0
	beq _08074FE2
	cmp r1, #6
	bls _08074FD8
	strb r6, [r7]
	b _08074FDA
	.align 2, 0
_08074FCC: .4byte gDispIo
_08074FD0: .4byte 0x0200CD38
_08074FD4: .4byte gPlaySt
_08074FD8:
	strb r1, [r7]
_08074FDA:
	ldrb r0, [r7]
	mov r1, r8
	adds r1, #0x36
	strb r0, [r1]
_08074FE2:
	mov r1, sl
	ldrb r0, [r1]
	ldrb r1, [r3]
	bl sub_8076D3C
_08074FEC:
	ldr r0, _080750DC @ =gUnk_083198CC
	ldr r1, _080750E0 @ =0x06017200
	bl Decompress
	ldr r0, _080750E4 @ =gUnk_08319E88
	movs r1, #0x88
	lsls r1, r1, #2
	movs r2, #0x60
	bl ApplyPaletteExt
	ldr r0, _080750E8 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r4, _080750EC @ =gBg1Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	ldr r0, _080750F0 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	bl InitIcons
	movs r0, #4
	bl ApplyIconPalettes
	bl LoadUiFrameGraphics
	ldr r0, _080750F4 @ =gUnk_083215B8
	ldr r1, _080750F8 @ =0x06014800
	bl Decompress
	ldr r0, _080750FC @ =gUnk_08321EE4
	movs r1, #0xc8
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	bl sub_8082CBC
	ldr r1, _08075100 @ =gUnk_083210A0
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r4, #0
	bl TmApplyTsa_t
	movs r5, #0
	mov r2, r8
	adds r2, #0x2e
	str r2, [sp, #8]
	mov r6, r8
	adds r6, #0x39
	str r6, [sp, #0xc]
	mov r0, r8
	adds r0, #0x2b
	str r0, [sp, #4]
	mov r1, r8
	adds r1, #0x40
	str r1, [sp, #0x10]
	ldr r6, _08075104 @ =0x0200D5F4
_08075068:
	lsls r0, r5, #3
	ldr r1, _08075108 @ =0x0200D5BC
	adds r0, r0, r1
	movs r1, #5
	bl InitText
	lsls r4, r5, #1
	adds r4, r4, r5
	lsls r4, r4, #3
	adds r0, r4, r6
	movs r1, #7
	bl InitTextDb
	adds r0, r6, #0
	adds r0, #8
	adds r0, r4, r0
	movs r1, #7
	bl InitText
	ldr r2, _0807510C @ =0x0200D604
	adds r4, r4, r2
	adds r0, r4, #0
	movs r1, #5
	bl InitText
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #6
	bls _08075068
	ldr r0, _08075110 @ =0x0200D69C
	movs r1, #4
	bl InitText
	ldr r0, _08075114 @ =0x0200D6A4
	movs r1, #0x14
	bl InitText
	ldr r0, _08075118 @ =0x0200D6AC
	movs r1, #4
	bl InitText
	mov r6, sl
	ldrb r0, [r6]
	bl sub_80742D0
	mov r0, sb
	ldrb r0, [r0]
	cmp r0, #4
	bne _0807511C
	mov r0, r8
	movs r1, #0
	bl sub_8074558
	movs r0, #0
	mov r1, sb
	strb r0, [r1]
	b _0807512C
	.align 2, 0
_080750DC: .4byte gUnk_083198CC
_080750E0: .4byte 0x06017200
_080750E4: .4byte gUnk_08319E88
_080750E8: .4byte gBg0Tm
_080750EC: .4byte gBg1Tm
_080750F0: .4byte gBg2Tm
_080750F4: .4byte gUnk_083215B8
_080750F8: .4byte 0x06014800
_080750FC: .4byte gUnk_08321EE4
_08075100: .4byte gUnk_083210A0
_08075104: .4byte 0x0200D5F4
_08075108: .4byte 0x0200D5BC
_0807510C: .4byte 0x0200D604
_08075110: .4byte 0x0200D69C
_08075114: .4byte 0x0200D6A4
_08075118: .4byte 0x0200D6AC
_0807511C:
	ldr r2, [sp, #0xc]
	ldrb r2, [r2]
	cmp r2, #1
	bne _0807512C
	mov r0, r8
	movs r1, #1
	bl sub_8074558
_0807512C:
	movs r1, #0
	movs r0, #0
	mov r6, r8
	strh r0, [r6, #0x3e]
	ldr r0, [sp, #4]
	strb r1, [r0]
	ldr r4, _08075184 @ =0x0200D69C
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _08075188 @ =gUnk_0832714C
	adds r0, r4, #0
	bl Text_DrawString
	ldr r1, _0807518C @ =gBg2Tm+0x146
	adds r0, r4, #0
	bl PutText
	movs r5, #0
	ldr r2, _08075190 @ =0x0200E6B4
	movs r1, #0xff
_08075166:
	lsls r0, r5, #2
	adds r0, r0, r2
	str r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x13
	bls _08075166
	ldr r1, [sp, #0x10]
	ldrh r1, [r1]
	lsrs r0, r1, #4
	lsls r1, r0, #0x18
	lsrs r5, r1, #0x18
	b _080751B0
	.align 2, 0
_08075184: .4byte 0x0200D69C
_08075188: .4byte gUnk_0832714C
_0807518C: .4byte gBg2Tm+0x146
_08075190: .4byte 0x0200E6B4
_08075194:
	ldrb r3, [r7]
	movs r0, #1
	str r0, [sp]
	mov r0, r8
	adds r1, r5, #0
	ldr r2, _080752EC @ =gBg0Tm
	bl sub_8076448
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r2, [sp, #0x10]
	ldrh r2, [r2]
	lsrs r0, r2, #4
_080751B0:
	adds r0, #6
	cmp r5, r0
	bge _080751BE
	ldr r0, _080752F0 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r5, r0
	blo _08075194
_080751BE:
	ldr r6, [sp, #8]
	ldrb r0, [r6]
	ldrb r1, [r7]
	movs r2, #1
	bl sub_80763D8
	ldr r7, _080752F4 @ =gDispIo
	movs r0, #0x20
	ldrb r1, [r7, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r7, #1]
	adds r1, r7, #0
	adds r1, #0x2d
	movs r5, #0x10
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x38
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xe0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x98
	strb r0, [r1]
	adds r2, r7, #0
	adds r2, #0x34
	movs r6, #1
	mov sb, r6
	ldrb r0, [r2]
	mov r1, sb
	orrs r0, r1
	movs r4, #2
	orrs r0, r4
	movs r3, #4
	orrs r0, r3
	movs r1, #8
	orrs r0, r1
	orrs r0, r5
	strb r0, [r2]
	adds r2, #2
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r6, [r2]
	ands r0, r6
	orrs r0, r4
	orrs r0, r3
	orrs r0, r1
	orrs r0, r5
	strb r0, [r2]
	movs r0, #0xf
	bl EnableBgSync
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, [sp, #0x10]
	ldrh r2, [r0]
	subs r2, #0x38
	movs r0, #0xff
	ands r2, r0
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r7, #0xc]
	ands r0, r2
	strb r0, [r7, #0xc]
	adds r0, r1, #0
	ldrb r6, [r7, #0x10]
	ands r0, r6
	orrs r0, r4
	strb r0, [r7, #0x10]
	ldrb r0, [r7, #0x14]
	ands r1, r0
	mov r2, sb
	orrs r1, r2
	strb r1, [r7, #0x14]
	movs r0, #3
	ldrb r6, [r7, #0x18]
	orrs r0, r6
	strb r0, [r7, #0x18]
	ldr r0, _080752F8 @ =gUnk_08320EEC
	ldr r1, _080752FC @ =gBg1Tm+0x500
	bl Decompress
	ldr r0, _08075300 @ =gUnk_08319E88
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08075304 @ =gUnk_086786F4
	mov r1, r8
	bl SpawnProc
	mov r1, r8
	str r0, [r1, #0x44]
	ldr r2, [sp, #0xc]
	ldrb r2, [r2]
	cmp r2, #1
	bne _08075310
	mov r0, r8
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _08075310
	ldr r4, _08075308 @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r6, #0xc0
	lsls r6, r6, #0x13
	adds r1, r1, r6
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0807530C @ =gUnk_08320D98
	movs r1, #0xa0
	lsls r1, r1, #1
	movs r2, #0x80
	bl ApplyPaletteExt
	mov r0, r8
	bl sub_8082560
	mov r1, r8
	str r0, [r1, #0x48]
	b _0807531E
	.align 2, 0
_080752EC: .4byte gBg0Tm
_080752F0: .4byte 0x0200CD38
_080752F4: .4byte gDispIo
_080752F8: .4byte gUnk_08320EEC
_080752FC: .4byte gBg1Tm+0x500
_08075300: .4byte gUnk_08319E88
_08075304: .4byte gUnk_086786F4
_08075308: .4byte gUnk_0831B0A8
_0807530C: .4byte gUnk_08320D98
_08075310:
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_806EA24
	mov r2, r8
	str r0, [r2, #0x48]
_0807531E:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8075338
sub_8075338: @ 0x08075338
	push {lr}
	adds r3, r0, #0
	adds r0, #0x29
	movs r1, #0
	strb r1, [r0]
	adds r0, #8
	movs r2, #1
	strb r2, [r0]
	subs r0, #5
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #3
	strb r1, [r0]
	adds r0, #9
	ldrb r0, [r0]
	cmp r0, #3
	bne _08075364
	adds r0, r3, #0
	adds r0, #0x2f
	strb r1, [r0]
	b _0807536A
_08075364:
	adds r0, r3, #0
	adds r0, #0x2f
	strb r2, [r0]
_0807536A:
	ldrb r0, [r0]
	adds r1, r3, #0
	adds r1, #0x36
	movs r2, #0
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x40
	movs r1, #0
	strh r2, [r0]
	adds r2, r3, #0
	adds r2, #0x32
	movs r0, #1
	strb r0, [r2]
	subs r2, #8
	strb r1, [r2]
	adds r2, #9
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x34
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, r3, #0
	bl sub_8074EF0
	pop {r0}
	bx r0

	thumb_func_start sub_80753A0
sub_80753A0: @ 0x080753A0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r0, #0x30
	ldrb r7, [r0]
	adds r4, r7, #0
	ldr r1, _0807542C @ =0x0200CC38
	lsls r0, r7, #2
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r1, [r0]
	movs r0, #8
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _08075470
	adds r0, r5, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	beq _080753D6
	adds r0, r1, #0
	bl sub_8082B74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08075454
_080753D6:
	adds r0, r5, #0
	adds r0, #0x3a
	adds r4, r5, #0
	adds r4, #0x3b
	ldrb r0, [r0]
	ldrb r1, [r4]
	cmp r0, r1
	bls _0807543C
	ldr r0, [r6]
	ldr r1, [r0]
	ldr r0, _08075430 @ =0x0000FFF5
	ldrh r2, [r1, #0xc]
	ands r0, r2
	strh r0, [r1, #0xc]
	ldr r0, [r6]
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	bl sub_80791B4
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldr r0, _08075434 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075414
	movs r0, #0x6a
	bl m4aSongNumStart
_08075414:
	ldr r2, _08075438 @ =gBg0Tm
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_8076448
	b _080754E8
	.align 2, 0
_0807542C: .4byte 0x0200CC38
_08075430: .4byte 0x0000FFF5
_08075434: .4byte gPlaySt
_08075438: .4byte gBg0Tm
_0807543C:
	ldr r0, _08075450 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080754E8
	movs r0, #0x6c
	bl m4aSongNumStart
	b _080754E8
	.align 2, 0
_08075450: .4byte gPlaySt
_08075454:
	adds r0, r5, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x38
	ldr r2, _0807546C @ =0x000006C1
	movs r0, #0
	adds r3, r5, #0
	bl sub_8082B00
	b _080754E8
	.align 2, 0
_0807546C: .4byte 0x000006C1
_08075470:
	adds r0, r5, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #0
	bne _08075486
	adds r0, r1, #0
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080754D8
_08075486:
	ldr r0, [r6]
	ldr r1, [r0]
	movs r0, #0xa
	ldrh r2, [r1, #0xc]
	orrs r0, r2
	strh r0, [r1, #0xc]
	ldr r0, [r6]
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	bl sub_80791DC
	ldr r0, _080754D0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080754AE
	movs r0, #0x6b
	bl m4aSongNumStart
_080754AE:
	adds r1, r5, #0
	adds r1, #0x3b
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldr r2, _080754D4 @ =gBg0Tm
	adds r0, r5, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	movs r0, #1
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_8076448
	b _080754E8
	.align 2, 0
_080754D0: .4byte gPlaySt
_080754D4: .4byte gBg0Tm
_080754D8:
	ldr r0, _080754F0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080754E8
	movs r0, #0x6c
	bl m4aSongNumStart
_080754E8:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080754F0: .4byte gPlaySt

	thumb_func_start sub_80754F4
sub_80754F4: @ 0x080754F4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, [r6]
	ldrb r0, [r0, #4]
	cmp r0, #0x42
	bne _08075518
	ldr r0, _08075514 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075564
	movs r0, #0x6c
	bl m4aSongNumStart
	b _08075564
	.align 2, 0
_08075514: .4byte gPlaySt
_08075518:
	ldrh r4, [r6, #0xc]
	movs r5, #0xc0
	lsls r5, r5, #8
	lsrs r2, r4, #0xe
	adds r0, r2, r1
	adds r0, #3
	movs r1, #3
	bl __modsi3
	lsls r2, r0, #0xe
	ldr r0, _0807554C @ =0x00003FFF
	ands r0, r4
	orrs r0, r2
	strh r0, [r6, #0xc]
	ands r2, r5
	cmp r2, #0
	beq _08075554
	ldr r0, _08075550 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075564
	movs r0, #0x6a
	bl m4aSongNumStart
	b _08075564
	.align 2, 0
_0807554C: .4byte 0x00003FFF
_08075550: .4byte gPlaySt
_08075554:
	ldr r0, _0807556C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075564
	movs r0, #0x6b
	bl m4aSongNumStart
_08075564:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807556C: .4byte gPlaySt

	thumb_func_start sub_8075570
sub_8075570: @ 0x08075570
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	str r0, [sp, #4]
	adds r5, r7, #0
	adds r5, #0x29
	ldrb r0, [r5]
	cmp r0, #1
	bne _08075590
	b _080759A2
_08075590:
	cmp r0, #1
	bgt _0807559A
	cmp r0, #0
	beq _080755AE
	b _080758C6
_0807559A:
	cmp r0, #2
	bne _080755A0
	b _080759B4
_080755A0:
	cmp r0, #3
	bne _080755A6
	b _080759F2
_080755A6:
	movs r1, #0x2b
	adds r1, r1, r7
	mov r8, r1
	b _08075CB2
_080755AE:
	ldr r2, _080755C8 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _080755CC
	adds r1, r7, #0
	adds r1, #0x31
	movs r0, #2
	b _080755D2
	.align 2, 0
_080755C8: .4byte gKeySt
_080755CC:
	adds r1, r7, #0
	adds r1, #0x31
	movs r0, #1
_080755D2:
	strb r0, [r1]
	mov sb, r1
	ldr r1, [r2]
	ldrh r2, [r1, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r2
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _080755F2
	adds r0, r7, #0
	movs r1, #3
	bl Proc_Goto
	b _08075D18
_080755F2:
	movs r3, #1
	mov r8, r3
	mov r5, r8
	ands r5, r2
	cmp r5, #0
	beq _080756A0
	adds r0, r7, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	beq _0807561E
	cmp r0, #1
	bgt _08075612
	cmp r0, #0
	beq _08075660
	b _08075690
_08075612:
	cmp r0, #3
	beq _08075626
	movs r6, #0x2b
	adds r6, r6, r7
	mov r8, r6
	b _08075CB2
_0807561E:
	adds r0, r7, #0
	bl sub_80753A0
	b _080758C6
_08075626:
	ldr r1, _08075658 @ =0x0200CC38
	adds r4, r7, #0
	adds r4, #0x30
	ldrb r2, [r4]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	movs r1, #1
	bl sub_80754F4
	ldrb r1, [r4]
	ldr r2, _0807565C @ =gBg0Tm
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	str r6, [sp]
	adds r0, r7, #0
	bl sub_8076448
	movs r3, #0x2b
	adds r3, r3, r7
	mov r8, r3
	b _08075CB2
	.align 2, 0
_08075658: .4byte 0x0200CC38
_0807565C: .4byte gBg0Tm
_08075660:
	ldr r1, _08075698 @ =0x0200CC38
	adds r0, r7, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #0xb]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_806EAD8
	ldr r0, _0807569C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807568A
	movs r0, #0x6a
	bl m4aSongNumStart
_0807568A:
	adds r0, r7, #0
	bl Proc_Break
_08075690:
	movs r4, #0x2b
	adds r4, r4, r7
	mov r8, r4
	b _08075CB2
	.align 2, 0
_08075698: .4byte 0x0200CC38
_0807569C: .4byte gPlaySt
_080756A0:
	ldrh r3, [r1, #6]
	movs r4, #0x20
	adds r0, r4, #0
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _0807573C
	adds r0, r7, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	bne _080756F8
	adds r0, r4, #0
	ands r0, r2
	movs r6, #0x2b
	adds r6, r6, r7
	mov r8, r6
	cmp r0, #0
	bne _080756CA
	b _08075CB2
_080756CA:
	ldr r1, _080756F0 @ =0x0200CC38
	adds r4, r7, #0
	adds r4, #0x30
	ldrb r2, [r4]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_80754F4
	ldrb r1, [r4]
	ldr r2, _080756F4 @ =gBg0Tm
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	str r5, [sp]
	b _08075782
	.align 2, 0
_080756F0: .4byte 0x0200CC38
_080756F4: .4byte gBg0Tm
_080756F8:
	adds r0, r7, #0
	adds r0, #0x2f
	movs r3, #0x2b
	adds r3, r3, r7
	mov r8, r3
	ldrb r0, [r0]
	cmp r0, #1
	bhi _0807570A
	b _08075CB2
_0807570A:
	adds r1, r7, #0
	adds r1, #0x36
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	movs r1, #2
	bl Proc_Goto
	adds r0, r7, #0
	adds r0, #0x2d
	strb r5, [r0]
	ldr r0, _08075738 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807572E
	b _08075CB2
_0807572E:
	movs r0, #0x6f
	bl m4aSongNumStart
	b _08075CB2
	.align 2, 0
_08075738: .4byte gPlaySt
_0807573C:
	movs r4, #0x10
	adds r0, r4, #0
	ands r0, r3
	cmp r0, #0
	beq _080757D4
	adds r0, r7, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	bne _08075794
	adds r0, r4, #0
	ands r0, r2
	movs r4, #0x2b
	adds r4, r4, r7
	mov r8, r4
	cmp r0, #0
	bne _08075760
	b _08075CB2
_08075760:
	ldr r1, _0807578C @ =0x0200CC38
	adds r4, r7, #0
	adds r4, #0x30
	ldrb r2, [r4]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	movs r1, #1
	bl sub_80754F4
	ldrb r1, [r4]
	ldr r2, _08075790 @ =gBg0Tm
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	str r6, [sp]
_08075782:
	adds r0, r7, #0
	bl sub_8076448
	b _08075CB2
	.align 2, 0
_0807578C: .4byte 0x0200CC38
_08075790: .4byte gBg0Tm
_08075794:
	adds r0, r7, #0
	adds r0, #0x2f
	adds r1, r7, #0
	adds r1, #0x2e
	movs r3, #0x2b
	adds r3, r3, r7
	mov r8, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	blo _080757AC
	b _08075CB2
_080757AC:
	adds r1, r7, #0
	adds r1, #0x36
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x2d
	strb r6, [r0]
	ldr r0, _080757D0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _080757C8
	b _08075C48
_080757C8:
	movs r0, #0x6f
	bl m4aSongNumStart
	b _08075C48
	.align 2, 0
_080757D0: .4byte gPlaySt
_080757D4:
	movs r4, #0x40
	adds r0, r4, #0
	ands r0, r3
	cmp r0, #0
	bne _080757F4
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r6, [r1, #4]
	ands r0, r6
	cmp r0, #0
	beq _080758CE
	adds r0, r4, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	beq _080758CE
_080757F4:
	adds r5, r7, #0
	adds r5, #0x30
	ldrb r0, [r5]
	cmp r0, #0
	bne _0807582C
	adds r0, r4, #0
	ands r0, r2
	movs r1, #0x2b
	adds r1, r1, r7
	mov r8, r1
	cmp r0, #0
	bne _0807580E
	b _08075CB2
_0807580E:
	ldr r0, _08075828 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807581E
	movs r0, #0x66
	bl m4aSongNumStart
_0807581E:
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #3
	strb r0, [r1]
	b _08075CB2
	.align 2, 0
_08075828: .4byte gPlaySt
_0807582C:
	subs r0, #1
	strb r0, [r5]
	ldr r0, _080758B8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075840
	movs r0, #0x66
	bl m4aSongNumStart
_08075840:
	adds r0, r7, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #1
	bhi _080758C0
	adds r6, r7, #0
	adds r6, #0x40
	ldrh r2, [r6]
	lsrs r0, r2, #4
	cmp r0, #0
	beq _080758C0
	cmp r1, #0
	bne _08075866
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	movs r0, #1
	strb r0, [r4]
_08075866:
	ldrh r3, [r6]
	lsrs r1, r3, #4
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _080758BC @ =gBg0Tm
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	mov r0, r8
	str r0, [sp]
	adds r0, r7, #0
	bl sub_8076448
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #2
	strb r0, [r1]
	mov r1, sb
	ldrb r1, [r1]
	lsls r2, r1, #2
	ldrh r3, [r6]
	subs r2, r3, r2
	strh r2, [r6]
	subs r2, #0x38
	movs r0, #0xff
	ands r2, r0
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldrb r0, [r4]
	movs r6, #0x2b
	adds r6, r6, r7
	mov r8, r6
	cmp r0, #0
	beq _080758B2
	b _08075CB2
_080758B2:
	adds r0, #1
	strb r0, [r4]
	b _08075CB2
	.align 2, 0
_080758B8: .4byte gPlaySt
_080758BC: .4byte gBg0Tm
_080758C0:
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
_080758C6:
	movs r0, #0x2b
	adds r0, r0, r7
	mov r8, r0
	b _08075CB2
_080758CE:
	ldr r0, _08075984 @ =gKeySt
	ldr r1, [r0]
	movs r2, #0x80
	adds r0, r2, #0
	ldrh r3, [r1, #6]
	ands r0, r3
	cmp r0, #0
	bne _080758FE
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r4, [r1, #4]
	ands r0, r4
	movs r6, #0x2b
	adds r6, r6, r7
	mov r8, r6
	cmp r0, #0
	bne _080758F2
	b _08075CB2
_080758F2:
	adds r0, r2, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	bne _080758FE
	b _08075CB2
_080758FE:
	adds r5, r7, #0
	adds r5, #0x30
	ldrb r1, [r5]
	ldr r6, _08075988 @ =0x0200CD38
	ldrb r0, [r6]
	subs r0, #1
	movs r2, #0x2b
	adds r2, r2, r7
	mov r8, r2
	cmp r1, r0
	blt _08075916
	b _08075CB2
_08075916:
	adds r0, r1, #1
	strb r0, [r5]
	ldr r0, _0807598C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807592A
	movs r0, #0x66
	bl m4aSongNumStart
_0807592A:
	adds r0, r7, #0
	adds r0, #0x2c
	adds r4, r0, #0
	ldrb r3, [r4]
	cmp r3, #4
	bne _08075994
	ldrb r1, [r5]
	ldrb r0, [r6]
	subs r0, #1
	cmp r1, r0
	beq _08075994
	adds r4, r7, #0
	adds r4, #0x40
	ldrh r6, [r4]
	lsrs r1, r6, #4
	adds r1, #6
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08075990 @ =gBg0Tm
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r3, [r0]
	movs r5, #1
	str r5, [sp]
	adds r0, r7, #0
	bl sub_8076448
	adds r0, r7, #0
	adds r0, #0x29
	strb r5, [r0]
	mov r0, sb
	ldrb r0, [r0]
	lsls r2, r0, #2
	ldrh r1, [r4]
	adds r2, r1, r2
	strh r2, [r4]
	subs r2, #0x38
	movs r0, #0xff
	ands r2, r0
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	b _08075CB2
	.align 2, 0
_08075984: .4byte gKeySt
_08075988: .4byte 0x0200CD38
_0807598C: .4byte gPlaySt
_08075990: .4byte gBg0Tm
_08075994:
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	movs r2, #0x2b
	adds r2, r2, r7
	mov r8, r2
	b _08075CB2
_080759A2:
	adds r4, r7, #0
	adds r4, #0x40
	adds r0, r7, #0
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r2, r0, #2
	ldrh r3, [r4]
	adds r2, r3, r2
	b _080759C4
_080759B4:
	adds r4, r7, #0
	adds r4, #0x40
	adds r0, r7, #0
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r2, r0, #2
	ldrh r3, [r4]
	subs r2, r3, r2
_080759C4:
	strh r2, [r4]
	subs r2, #0x38
	movs r0, #0xff
	ands r2, r0
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	movs r0, #0xf
	ldrh r6, [r4]
	ands r0, r6
	movs r1, #0x2b
	adds r1, r1, r7
	mov r8, r1
	cmp r0, #0
	beq _080759E6
	b _08075CB2
_080759E6:
	movs r0, #0
	strb r0, [r5]
	ldrh r0, [r4]
	bl sub_80743C8
	b _08075CB2
_080759F2:
	adds r1, r7, #0
	adds r1, #0x2b
	ldrb r0, [r1]
	ldr r2, _08075A1C @ =gKeySt
	mov r8, r1
	cmp r0, #0
	beq _08075A20
	ldr r1, [r2]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08075A20
	bl sub_807089C
	movs r0, #0
	mov r2, r8
	strb r0, [r2]
	b _08075D18
	.align 2, 0
_08075A1C: .4byte gKeySt
_08075A20:
	ldr r1, [r2]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08075B14
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #0
	bne _08075B14
	adds r1, r7, #0
	adds r1, #0x32
	ldrb r4, [r1]
	str r4, [sp, #8]
	adds r2, r7, #0
	adds r2, #0x2a
	movs r0, #1
	strb r0, [r2]
	ldr r0, _08075AAC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	mov sb, r1
	cmp r0, #0
	blt _08075A56
	movs r0, #0x6a
	bl m4aSongNumStart
_08075A56:
	ldr r1, _08075AB0 @ =gUnk_08678840
	adds r6, r7, #0
	adds r6, #0x2d
	adds r5, r7, #0
	adds r5, #0x2f
	ldrb r2, [r5]
	lsls r0, r2, #3
	adds r0, r0, r2
	ldrb r3, [r6]
	adds r0, r3, r0
	lsls r0, r0, #4
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r4, sb
	strb r0, [r4]
	adds r4, r7, #0
	adds r4, #0x33
	ldrb r0, [r4]
	adds r0, #1
	movs r1, #1
	ands r0, r1
	strb r0, [r4]
	mov r1, sb
	ldrb r0, [r1]
	ldrb r1, [r4]
	bl sub_8076D3C
	lsls r0, r0, #0x18
	mov sl, r6
	str r4, [sp, #0xc]
	adds r2, r7, #0
	adds r2, #0x34
	str r2, [sp, #0x10]
	adds r3, r7, #0
	adds r3, #0x35
	str r3, [sp, #0x14]
	cmp r0, #0
	beq _08075AE4
	movs r4, #0
	ldr r0, _08075AB4 @ =0x0200CD38
	adds r6, #0x13
	b _08075AD2
	.align 2, 0
_08075AAC: .4byte gPlaySt
_08075AB0: .4byte gUnk_08678840
_08075AB4: .4byte 0x0200CD38
_08075AB8:
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	ldrb r3, [r5]
	movs r0, #1
	str r0, [sp]
	adds r0, r7, #0
	ldr r2, _08075B0C @ =gBg0Tm
	bl sub_8076448
	adds r4, #1
	cmp r4, #5
	bgt _08075AD8
	ldr r0, _08075B10 @ =0x0200CD38
_08075AD2:
	ldrb r0, [r0]
	cmp r4, r0
	blt _08075AB8
_08075AD8:
	ldrh r0, [r6]
	bl sub_80743C8
	movs r0, #1
	bl EnableBgSync
_08075AE4:
	ldr r4, [sp, #0xc]
	ldrb r0, [r4]
	ldr r6, [sp, #0x10]
	strb r0, [r6]
	mov r1, sl
	ldrb r0, [r1]
	ldr r2, [sp, #0x14]
	strb r0, [r2]
	mov r3, sb
	ldrb r3, [r3]
	ldr r4, [sp, #8]
	cmp r3, r4
	bne _08075B00
	b _08075CB2
_08075B00:
	mov r6, sb
	ldrb r0, [r6]
	bl sub_80742D0
	b _08075CB2
	.align 2, 0
_08075B0C: .4byte gBg0Tm
_08075B10: .4byte 0x0200CD38
_08075B14:
	ldr r1, [r2]
	movs r0, #0x80
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08075B4C
	mov r0, r8
	ldrb r4, [r0]
	cmp r4, #0
	bne _08075B4C
	ldr r0, _08075B48 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075B38
	movs r0, #0x66
	bl m4aSongNumStart
_08075B38:
	adds r1, r7, #0
	adds r1, #0x33
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x29
	strb r4, [r0]
	b _08075CB2
	.align 2, 0
_08075B48: .4byte gPlaySt
_08075B4C:
	ldr r1, [r2]
	ldrh r3, [r1, #6]
	movs r0, #0x20
	ands r0, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _08075BE2
	adds r1, r7, #0
	adds r1, #0x33
	movs r0, #1
	strb r0, [r1]
	subs r1, #6
	ldrb r0, [r1]
	mov sl, r1
	cmp r0, #0
	bne _08075BDC
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #1
	bhi _08075B7A
	b _08075CB2
_08075B7A:
	adds r0, r7, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	bne _08075B86
	b _08075CB2
_08075B86:
	ldr r0, _08075BD4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075B96
	movs r0, #0x6f
	bl m4aSongNumStart
_08075B96:
	adds r1, r7, #0
	adds r1, #0x36
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	movs r4, #8
	ldr r2, _08075BD8 @ =gUnk_08678840
	lsls r0, r0, #3
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r1, r0, #4
	adds r0, r1, #0
	adds r0, #0x80
	adds r0, r0, r2
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _08075BCC
	adds r0, r1, r2
	adds r1, r0, #0
	adds r1, #0x80
_08075BBE:
	subs r1, #0x10
	subs r4, #1
	cmp r4, #0
	ble _08075BCC
	ldrb r0, [r1, #8]
	cmp r0, #0
	beq _08075BBE
_08075BCC:
	mov r1, sl
	strb r4, [r1]
	b _08075C48
	.align 2, 0
_08075BD4: .4byte gPlaySt
_08075BD8: .4byte gUnk_08678840
_08075BDC:
	subs r0, #1
	strb r0, [r1]
	b _08075C5E
_08075BE2:
	movs r0, #0x10
	ands r0, r3
	cmp r0, #0
	beq _08075C74
	adds r1, r7, #0
	adds r1, #0x33
	movs r0, #1
	strb r0, [r1]
	adds r2, r7, #0
	adds r2, #0x2d
	adds r5, r7, #0
	adds r5, #0x2f
	ldrb r3, [r2]
	cmp r3, #8
	beq _08075C16
	ldr r0, _08075C54 @ =gUnk_08678840
	adds r3, #1
	ldrb r6, [r5]
	lsls r1, r6, #3
	adds r1, r1, r6
	adds r1, r1, r3
	lsls r1, r1, #4
	adds r1, r1, r0
	ldrb r0, [r1, #8]
	cmp r0, #0
	bne _08075C5C
_08075C16:
	adds r0, r7, #0
	adds r0, #0x2e
	ldrb r5, [r5]
	ldrb r0, [r0]
	cmp r5, r0
	bhs _08075CB2
	adds r0, r7, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #3
	beq _08075CB2
	strb r4, [r2]
	ldr r0, _08075C58 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075C3E
	movs r0, #0x6f
	bl m4aSongNumStart
_08075C3E:
	adds r1, r7, #0
	adds r1, #0x36
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08075C48:
	adds r0, r7, #0
	movs r1, #2
	bl Proc_Goto
	b _08075CB2
	.align 2, 0
_08075C54: .4byte gUnk_08678840
_08075C58: .4byte gPlaySt
_08075C5C:
	strb r3, [r2]
_08075C5E:
	ldr r0, _08075C70 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075CB2
	movs r0, #0x67
	bl m4aSongNumStart
	b _08075CB2
	.align 2, 0
_08075C70: .4byte gPlaySt
_08075C74:
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08075CB2
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	bne _08075CB2
	movs r0, #1
	strb r0, [r1]
	ldr r2, _08075D28 @ =gUnk_08678840
	adds r3, r7, #0
	adds r3, #0x2d
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r4, [r0]
	lsls r1, r4, #3
	adds r1, r1, r4
	ldrb r3, [r3]
	adds r1, r3, r1
	lsls r1, r1, #4
	adds r0, r1, r2
	ldrb r0, [r0, #8]
	adds r2, #0xc
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0x28
	bl sub_80706C8
_08075CB2:
	ldr r0, _08075D2C @ =gKeySt
	ldr r1, [r0]
	movs r0, #2
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08075CE4
	mov r6, r8
	ldrb r0, [r6]
	cmp r0, #0
	bne _08075CEC
	ldr r0, _08075D30 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08075CD8
	movs r0, #0x6b
	bl m4aSongNumStart
_08075CD8:
	movs r0, #0
	bl sub_806EAD8
	adds r0, r7, #0
	bl Proc_Break
_08075CE4:
	mov r1, r8
	ldrb r0, [r1]
	cmp r0, #0
	beq _08075D18
_08075CEC:
	adds r3, r7, #0
	adds r3, #0x2d
	ldr r2, [sp, #4]
	ldrb r4, [r3]
	cmp r2, r4
	beq _08075D18
	ldr r2, _08075D28 @ =gUnk_08678840
	adds r0, r7, #0
	adds r0, #0x36
	ldrb r6, [r0]
	lsls r1, r6, #3
	adds r1, r1, r6
	adds r1, r4, r1
	lsls r1, r1, #4
	adds r0, r1, r2
	ldrb r0, [r0, #8]
	adds r2, #0xc
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0x28
	bl sub_80706C8
_08075D18:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075D28: .4byte gUnk_08678840
_08075D2C: .4byte gKeySt
_08075D30: .4byte gPlaySt

	thumb_func_start sub_8075D34
sub_8075D34: @ 0x08075D34
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	bne _08075D5C
	ldr r2, _08075DDC @ =0x0200E7D8
	ldr r1, _08075DE0 @ =0x0200CC38
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	str r0, [r2]
	bl sub_80741EC
_08075D5C:
	ldr r2, _08075DE4 @ =gPlaySt
	adds r0, r4, #0
	adds r0, #0x34
	ldrb r0, [r0]
	lsls r0, r0, #7
	adds r1, r4, #0
	adds r1, #0x32
	ldrb r1, [r1]
	adds r0, r1, r0
	strb r0, [r2, #0x1a]
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	cmp r1, #0
	beq _08075D86
	lsls r1, r1, #4
	movs r0, #0xf
	ldrb r3, [r2, #0x19]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #0x19]
_08075D86:
	ldr r0, [r4, #0x44]
	bl Proc_End
	ldr r0, [r4, #0x48]
	cmp r0, #0
	beq _08075D96
	bl Proc_End
_08075D96:
	bl EndGreenText
	ldr r0, _08075DE8 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08075DEC @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08075DF0 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	movs r0, #0xf
	bl EnableBgSync
	ldr r2, _08075DF4 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	bl ResetTextFont
	bl ClearIcons
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08075DDC: .4byte 0x0200E7D8
_08075DE0: .4byte 0x0200CC38
_08075DE4: .4byte gPlaySt
_08075DE8: .4byte gBg0Tm
_08075DEC: .4byte gBg1Tm
_08075DF0: .4byte gBg2Tm
_08075DF4: .4byte gDispIo

	thumb_func_start sub_8075DF8
sub_8075DF8: @ 0x08075DF8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _08075E20 @ =0x0200CD3A
	movs r1, #0x1f
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	adds r0, r5, #0
	adds r0, #0x40
	ldrh r0, [r0]
	lsrs r4, r0, #4
	adds r0, r4, #6
	cmp r4, r0
	bge _08075E52
	ldr r0, _08075E24 @ =0x0200CD38
	adds r6, r5, #0
	adds r6, #0x2f
	b _08075E4C
	.align 2, 0
_08075E20: .4byte 0x0200CD3A
_08075E24: .4byte 0x0200CD38
_08075E28:
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	ldrb r3, [r6]
	movs r0, #0
	str r0, [sp]
	adds r0, r5, #0
	ldr r2, _08075E88 @ =0x0200CD3A
	bl sub_8076448
	adds r4, #1
	adds r0, r5, #0
	adds r0, #0x40
	ldrh r0, [r0]
	lsrs r0, r0, #4
	adds r0, #6
	cmp r4, r0
	bge _08075E52
	ldr r0, _08075E8C @ =0x0200CD38
_08075E4C:
	ldrb r0, [r0]
	cmp r4, r0
	blt _08075E28
_08075E52:
	ldr r4, _08075E90 @ =0x0200D53A
	adds r0, r4, #0
	movs r1, #0x1f
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	adds r6, r5, #0
	adds r6, #0x2f
	ldrb r1, [r6]
	adds r0, r4, #0
	bl sub_8076314
	movs r1, #0
	movs r0, #0
	strh r0, [r5, #0x3e]
	ldrb r0, [r6]
	adds r2, r5, #0
	adds r2, #0x37
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x38
	strb r1, [r0]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08075E88: .4byte 0x0200CD3A
_08075E8C: .4byte 0x0200CD38
_08075E90: .4byte 0x0200D53A

	thumb_func_start sub_8075E94
sub_8075E94: @ 0x08075E94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r7, r0, #0
	adds r1, r7, #0
	adds r1, #0x38
	ldr r0, _08075EF8 @ =gUnk_0867871C
	ldrh r2, [r7, #0x3e]
	adds r0, r2, r0
	ldrb r2, [r1]
	ldrb r0, [r0]
	adds r0, r2, r0
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bls _08075EC0
	movs r0, #0x14
	strb r0, [r1]
_08075EC0:
	ldrh r0, [r7, #0x3e]
	adds r0, #1
	strh r0, [r7, #0x3e]
	movs r3, #0
	str r1, [sp, #0x10]
	adds r0, r7, #0
	adds r0, #0x36
	str r0, [sp, #0xc]
	adds r1, r7, #0
	adds r1, #0x2f
	str r1, [sp, #8]
	adds r2, r7, #0
	adds r2, #0x40
	str r2, [sp, #0x14]
	ldr r0, [sp, #0x10]
	str r0, [sp, #4]
_08075EE0:
	ldr r1, [sp, #0xc]
	ldrb r2, [r1]
	ldr r1, [sp, #8]
	ldrb r1, [r1]
	cmp r2, r1
	bls _08075EFC
	ldr r2, [sp, #4]
	ldrb r2, [r2]
	adds r0, r2, r3
	cmp r0, #0x14
	bgt _08075F04
	b _08075F0A
	.align 2, 0
_08075EF8: .4byte gUnk_0867871C
_08075EFC:
	ldr r1, [sp, #4]
	ldrb r0, [r1]
	cmp r3, r0
	bge _08075F08
_08075F04:
	movs r1, #0
	b _08075F10
_08075F08:
	subs r0, r3, r0
_08075F0A:
	adds r0, #8
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_08075F10:
	ldr r6, [sp, #0x14]
	ldrh r2, [r6]
	lsrs r4, r2, #3
	adds r0, r4, #0
	adds r0, #0xc
	lsls r5, r1, #1
	adds r1, r3, #1
	mov sl, r1
	cmp r4, r0
	bge _08075F58
	movs r2, #0x1f
	mov sb, r2
	ldr r0, _08075FD8 @ =gBg0Tm
	mov r8, r0
	ldr r1, _08075FDC @ =0x0200CD3A
	mov ip, r1
	adds r2, r5, #0
_08075F32:
	adds r0, r4, #0
	mov r1, sb
	ands r0, r1
	lsls r1, r0, #5
	adds r1, #8
	adds r1, r1, r3
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #6
	adds r0, r2, r0
	add r0, ip
	ldrh r0, [r0]
	strh r0, [r1]
	adds r4, #1
	ldrh r1, [r6]
	lsrs r0, r1, #3
	adds r0, #0xc
	cmp r4, r0
	blt _08075F32
_08075F58:
	ldr r0, _08075FE0 @ =gBg2Tm
	ldr r1, _08075FE4 @ =0x0200D53A
	adds r2, r5, r1
	adds r1, r3, #0
	adds r1, #0xa8
	movs r4, #1
	lsls r1, r1, #1
	adds r1, r1, r0
_08075F68:
	ldrh r0, [r2]
	strh r0, [r1]
	adds r2, #0x40
	adds r1, #0x40
	subs r4, #1
	cmp r4, #0
	bge _08075F68
	mov r3, sl
	cmp r3, #0x13
	ble _08075EE0
	movs r0, #5
	bl EnableBgSync
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	cmp r2, #0x13
	bls _08076042
	ldr r1, [sp, #0xc]
	ldrb r0, [r1]
	ldr r2, [sp, #8]
	strb r0, [r2]
	ldr r0, _08075FE8 @ =gBg2Tm+0x150
	movs r1, #0x16
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08075FEC @ =gBg0Tm+0x10
	movs r1, #0x16
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	adds r4, r7, #0
	adds r4, #0x32
	adds r5, r7, #0
	adds r5, #0x2e
	ldr r1, _08075FF0 @ =0x0200E6B4
	movs r2, #0xff
	adds r0, r1, #0
	adds r0, #0x4c
_08075FBA:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _08075FBA
	bl ClearIcons
	ldrb r0, [r4]
	bl sub_80742D0
	ldr r0, [sp, #0x14]
	ldrh r0, [r0]
	lsrs r4, r0, #4
	adds r0, r4, #6
	b _08076012
	.align 2, 0
_08075FD8: .4byte gBg0Tm
_08075FDC: .4byte 0x0200CD3A
_08075FE0: .4byte gBg2Tm
_08075FE4: .4byte 0x0200D53A
_08075FE8: .4byte gBg2Tm+0x150
_08075FEC: .4byte gBg0Tm+0x10
_08075FF0: .4byte 0x0200E6B4
_08075FF4:
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [sp, #8]
	ldrb r3, [r2]
	movs r0, #0
	str r0, [sp]
	adds r0, r7, #0
	ldr r2, _08076054 @ =0x0200CD3A
	bl sub_8076448
	adds r4, #1
	ldr r1, [sp, #0x14]
	ldrh r1, [r1]
	lsrs r0, r1, #4
	adds r0, #6
_08076012:
	cmp r4, r0
	bge _0807601E
	ldr r0, _08076058 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r4, r0
	blt _08075FF4
_0807601E:
	ldr r0, _0807605C @ =0x0200D53A
	ldr r2, [sp, #8]
	ldrb r1, [r2]
	bl sub_8076314
	ldrb r0, [r5]
	ldr r2, [sp, #8]
	ldrb r1, [r2]
	movs r2, #0
	bl sub_80763D8
	movs r0, #0
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	strh r0, [r7, #0x3e]
	adds r0, r7, #0
	bl Proc_Break
_08076042:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076054: .4byte 0x0200CD3A
_08076058: .4byte 0x0200CD38
_0807605C: .4byte 0x0200D53A

	thumb_func_start sub_8076060
sub_8076060: @ 0x08076060
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	str r0, [sp]
	adds r2, r0, #0
	adds r2, #0x38
	ldr r0, _08076150 @ =gUnk_08678722
	ldr r1, [sp]
	ldrh r1, [r1, #0x3e]
	adds r0, r1, r0
	ldrb r3, [r2]
	ldrb r0, [r0]
	adds r0, r3, r0
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	bls _0807608E
	movs r0, #0x14
	strb r0, [r2]
_0807608E:
	ldr r5, [sp]
	ldrh r0, [r5, #0x3e]
	adds r0, #1
	strh r0, [r5, #0x3e]
	adds r0, r5, #0
	adds r0, #0x36
	adds r1, r5, #0
	adds r1, #0x37
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	bls _08076164
	movs r5, #0
	str r2, [sp, #8]
	ldrb r6, [r2]
	cmp r5, r6
	blt _080760B2
	b _08076202
_080760B2:
	ldr r7, [sp]
	adds r7, #0x40
	str r7, [sp, #4]
	str r2, [sp, #0x10]
_080760BA:
	ldr r0, [sp, #4]
	ldrh r0, [r0]
	lsrs r4, r0, #3
	adds r0, r4, #0
	adds r0, #0xc
	adds r6, r5, #0
	adds r6, #0x1c
	movs r1, #8
	adds r1, r1, r5
	mov ip, r1
	adds r5, #1
	mov sb, r5
	cmp r4, r0
	bge _08076116
	str r6, [sp, #0xc]
	ldr r2, _08076154 @ =0x0200CD3A
	mov sl, r2
	lsls r1, r1, #1
	str r1, [sp, #0x14]
	movs r3, #0x1f
	mov r8, r3
_080760E4:
	adds r3, r4, #0
	mov r5, r8
	ands r3, r5
	lsls r1, r3, #5
	ldr r2, [sp, #0xc]
	ldr r7, [sp, #0x10]
	ldrb r7, [r7]
	subs r0, r2, r7
	adds r1, r1, r0
	lsls r1, r1, #1
	ldr r0, _08076158 @ =gBg0Tm
	adds r1, r1, r0
	lsls r0, r3, #6
	ldr r2, [sp, #0x14]
	adds r0, r2, r0
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1]
	adds r4, #1
	ldr r3, [sp, #4]
	ldrh r3, [r3]
	lsrs r0, r3, #3
	adds r0, #0xc
	cmp r4, r0
	blt _080760E4
_08076116:
	ldr r5, _0807615C @ =gBg2Tm
	mov r8, r5
	adds r5, r6, #0
	mov r6, ip
	lsls r0, r6, #1
	ldr r7, _08076160 @ =0x0200D53A
	adds r2, r0, r7
	movs r3, #0xa0
	movs r4, #1
_08076128:
	ldr r1, [sp, #0x10]
	ldrb r1, [r1]
	subs r0, r5, r1
	adds r0, r3, r0
	lsls r0, r0, #1
	add r0, r8
	ldrh r1, [r2]
	strh r1, [r0]
	adds r2, #0x40
	adds r3, #0x20
	subs r4, #1
	cmp r4, #0
	bge _08076128
	mov r5, sb
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	cmp r5, r2
	blt _080760BA
	b _08076202
	.align 2, 0
_08076150: .4byte gUnk_08678722
_08076154: .4byte 0x0200CD3A
_08076158: .4byte gBg0Tm
_0807615C: .4byte gBg2Tm
_08076160: .4byte 0x0200D53A
_08076164:
	movs r5, #0
	str r2, [sp, #8]
	ldrb r3, [r2]
	cmp r5, r3
	bge _08076202
	ldr r6, [sp]
	adds r6, #0x40
	mov sl, r6
	str r2, [sp, #0x10]
_08076176:
	mov r7, sl
	ldrh r7, [r7]
	lsrs r4, r7, #3
	adds r0, r4, #0
	adds r0, #0xc
	adds r6, r5, #0
	adds r6, #0x1c
	adds r1, r5, #1
	mov sb, r1
	cmp r4, r0
	bge _080761CC
	mov ip, r6
	movs r2, #0x1f
	mov r8, r2
_08076192:
	adds r3, r4, #0
	mov r7, r8
	ands r3, r7
	lsls r2, r3, #5
	adds r2, #8
	adds r2, r2, r5
	lsls r2, r2, #1
	ldr r0, _08076228 @ =gBg0Tm
	adds r2, r2, r0
	str r2, [sp, #0x14]
	mov r2, ip
	ldr r1, [sp, #0x10]
	ldrb r1, [r1]
	subs r0, r2, r1
	lsls r0, r0, #1
	lsls r1, r3, #6
	adds r0, r0, r1
	ldr r2, _0807622C @ =0x0200CD3A
	adds r0, r0, r2
	ldrh r0, [r0]
	ldr r3, [sp, #0x14]
	strh r0, [r3]
	adds r4, #1
	mov r7, sl
	ldrh r7, [r7]
	lsrs r0, r7, #3
	adds r0, #0xc
	cmp r4, r0
	blt _08076192
_080761CC:
	movs r4, #0
	ldr r0, _08076230 @ =0x0200D53A
	mov ip, r0
	adds r3, r6, #0
	adds r0, r5, #0
	adds r0, #0xa8
	lsls r0, r0, #1
	ldr r1, _08076234 @ =gBg2Tm
	adds r2, r0, r1
_080761DE:
	ldr r5, [sp, #0x10]
	ldrb r5, [r5]
	subs r0, r3, r5
	lsls r0, r0, #1
	lsls r1, r4, #6
	adds r0, r0, r1
	add r0, ip
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, #0x40
	adds r4, #1
	cmp r4, #1
	ble _080761DE
	mov r5, sb
	ldr r6, [sp, #0x10]
	ldrb r6, [r6]
	cmp r5, r6
	blt _08076176
_08076202:
	movs r0, #5
	bl EnableBgSync
	ldr r7, [sp, #8]
	ldrb r7, [r7]
	cmp r7, #0x13
	bls _08076216
	ldr r0, [sp]
	bl Proc_Break
_08076216:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076228: .4byte gBg0Tm
_0807622C: .4byte 0x0200CD3A
_08076230: .4byte 0x0200D53A
_08076234: .4byte gBg2Tm

	thumb_func_start sub_8076238
sub_8076238: @ 0x08076238
	push {lr}
	ldr r0, _0807624C @ =gUnk_08678484
	movs r1, #3
	bl SpawnProc
	adds r0, #0x39
	movs r1, #0
	strb r1, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_0807624C: .4byte gUnk_08678484

	thumb_func_start sub_8076250
sub_8076250: @ 0x08076250
	push {r4, lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _08076268
	ldr r0, _08076264 @ =gUnk_08678594
	movs r1, #3
	bl SpawnProc
	b _0807626E
	.align 2, 0
_08076264: .4byte gUnk_08678594
_08076268:
	ldr r0, _08076290 @ =gUnk_08678594
	bl SpawnProcLocking
_0807626E:
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x39
	movs r0, #1
	strb r0, [r1]
	bl sub_8036984
	adds r1, r0, #0
	cmp r1, #1
	bne _08076294
	adds r0, r4, #0
	adds r0, #0x3c
	strb r1, [r0]
	adds r1, r4, #0
	adds r1, #0x3a
	movs r0, #5
	b _080762A4
	.align 2, 0
_08076290: .4byte gUnk_08678594
_08076294:
	adds r0, r4, #0
	adds r0, #0x3c
	movs r1, #0
	strb r1, [r0]
	bl GetPlayerDeployCount
	adds r1, r4, #0
	adds r1, #0x3a
_080762A4:
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #0
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80762B4
sub_80762B4: @ 0x080762B4
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _080762CC
	ldr r0, _080762C8 @ =gUnk_0867865C
	movs r1, #3
	bl SpawnProc
	b _080762D2
	.align 2, 0
_080762C8: .4byte gUnk_0867865C
_080762CC:
	ldr r0, _080762E0 @ =gUnk_0867865C
	bl SpawnProcLocking
_080762D2:
	adds r1, r0, #0
	adds r1, #0x39
	movs r0, #3
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_080762E0: .4byte gUnk_0867865C

	thumb_func_start sub_80762E4
sub_80762E4: @ 0x080762E4
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _080762FC
	ldr r0, _080762F8 @ =gUnk_08678594
	movs r1, #3
	bl SpawnProc
	b _08076302
	.align 2, 0
_080762F8: .4byte gUnk_08678594
_080762FC:
	ldr r0, _08076310 @ =gUnk_08678594
	bl SpawnProcLocking
_08076302:
	adds r1, r0, #0
	adds r1, #0x39
	movs r0, #4
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_08076310: .4byte gUnk_08678594

	thumb_func_start sub_8076314
sub_8076314: @ 0x08076314
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r0, #0x12
	movs r1, #0x13
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	ldr r7, _0807635C @ =0x0200D6A4
	adds r0, r7, #0
	bl ClearText
	cmp r4, #5
	bne _08076360
	movs r5, #0
_0807633C:
	lsls r0, r5, #2
	adds r0, #0x12
	adds r0, r6, r0
	adds r1, r5, #0
	adds r1, #0x70
	movs r2, #0xa0
	lsls r2, r2, #7
	bl PutIcon
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #7
	bls _0807633C
	b _080763BE
	.align 2, 0
_0807635C: .4byte 0x0200D6A4
_08076360:
	movs r5, #1
	ldr r2, _080763D0 @ =gUnk_08678840
	lsls r0, r4, #3
	adds r0, r0, r4
	lsls r1, r0, #4
	adds r0, r1, r2
	ldrb r0, [r0, #0x18]
	adds r6, #0x10
	mov sb, r6
	cmp r0, #0
	beq _080763B6
	mov r8, r7
	adds r7, r2, #0
	adds r6, r1, #0
_0807637C:
	lsls r4, r5, #4
	adds r4, r4, r6
	adds r0, r4, r7
	ldrb r1, [r0, #8]
	subs r1, #0x40
	mov r0, r8
	bl Text_SetCursor
	mov r0, r8
	movs r1, #0
	bl Text_SetColor
	adds r0, r7, #4
	adds r4, r4, r0
	ldr r1, [r4]
	mov r0, r8
	bl Text_DrawString
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #8
	bhi _080763B6
	lsls r0, r5, #4
	adds r0, r0, r6
	adds r0, r0, r7
	ldrb r0, [r0, #8]
	cmp r0, #0
	bne _0807637C
_080763B6:
	ldr r0, _080763D4 @ =0x0200D6A4
	mov r1, sb
	bl PutText
_080763BE:
	movs r0, #4
	bl EnableBgSync
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080763D0: .4byte gUnk_08678840
_080763D4: .4byte 0x0200D6A4

	thumb_func_start sub_80763D8
sub_80763D8: @ 0x080763D8
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	cmp r5, #0
	beq _08076414
	ldr r4, _08076410 @ =gBg2Tm+0x74
	adds r0, r4, #0
	movs r1, #2
	adds r2, r5, #0
	bl PutNumber
	adds r0, r4, #2
	movs r1, #0
	movs r2, #0x16
	bl PutSpecialChar
	adds r4, #4
	adds r0, r4, #0
	movs r1, #2
	adds r2, r6, #0
	bl PutNumber
	b _08076426
	.align 2, 0
_08076410: .4byte gBg2Tm+0x74
_08076414:
	ldr r0, _08076440 @ =gBg1Tm+0x32
	movs r1, #6
	movs r2, #3
	movs r3, #0
	bl TmFillRect_t
	movs r0, #2
	bl EnableBgSync
_08076426:
	cmp r7, #0
	beq _08076432
	ldr r0, _08076444 @ =gBg2Tm+0x140
	adds r1, r5, #0
	bl sub_8076314
_08076432:
	movs r0, #4
	bl EnableBgSync
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076440: .4byte gBg1Tm+0x32
_08076444: .4byte gBg2Tm+0x140

	thumb_func_start sub_8076448
sub_8076448: @ 0x08076448
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x54
	str r0, [sp, #0x24]
	str r2, [sp, #0x28]
	ldr r4, [sp, #0x74]
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	str r3, [sp, #0x2c]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r7, #0
	movs r1, #7
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x30]
	lsls r0, r7, #1
	mov sl, r0
	movs r0, #0x1f
	mov r1, sl
	ands r1, r0
	mov sl, r1
	ldr r1, _080764E8 @ =0x0200CC38
	lsls r0, r7, #2
	adds r0, r0, r1
	mov r8, r0
	ldr r0, [r0]
	ldr r1, [r0]
	movs r0, #8
	ldrh r1, [r1, #0xc]
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	mov sb, r0
	cmp r4, #0
	beq _08076528
	ldr r2, [sp, #0x30]
	lsls r4, r2, #3
	ldr r0, _080764EC @ =0x0200D5BC
	adds r5, r4, r0
	adds r0, r5, #0
	bl ClearText
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetCursor
	ldr r0, [sp, #0x24]
	adds r0, #0x3c
	ldrb r0, [r0]
	adds r6, r4, #0
	cmp r0, #0
	bne _080764F0
	ldr r0, [sp, #0x24]
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #1
	bne _080764F0
	mov r3, r8
	ldr r0, [r3]
	ldr r0, [r0]
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080764F0
	adds r0, r5, #0
	movs r1, #4
	bl Text_SetColor
	b _080764FA
	.align 2, 0
_080764E8: .4byte 0x0200CC38
_080764EC: .4byte 0x0200D5BC
_080764F0:
	ldr r0, _08076574 @ =0x0200D5BC
	adds r0, r6, r0
	mov r1, sb
	bl Text_SetColor
_080764FA:
	ldr r4, _08076574 @ =0x0200D5BC
	adds r4, r6, r4
	ldr r1, _08076578 @ =0x0200CC38
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	mov r6, sl
	lsls r1, r6, #6
	ldr r0, [sp, #0x28]
	adds r1, r0, r1
	adds r1, #6
	adds r0, r4, #0
	bl PutText
_08076528:
	ldr r1, [sp, #0x30]
	lsls r5, r1, #1
	adds r0, r5, r1
	lsls r0, r0, #3
	mov r8, r0
	ldr r6, _0807657C @ =0x0200D5F4
	adds r0, r0, r6
	bl ClearText
	adds r0, r6, #0
	adds r0, #8
	add r0, r8
	bl ClearText
	mov r2, sl
	lsls r4, r2, #6
	ldr r3, [sp, #0x28]
	adds r3, r3, r4
	str r3, [sp, #0x34]
	adds r0, r3, #0
	adds r0, #0x10
	movs r1, #0x18
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	mov sl, r4
	str r5, [sp, #0x50]
	ldr r4, [sp, #0x2c]
	cmp r4, #5
	bls _08076568
	b _08076BA8
_08076568:
	lsls r0, r4, #2
	ldr r1, _08076580 @ =_08076584
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08076574: .4byte 0x0200D5BC
_08076578: .4byte 0x0200CC38
_0807657C: .4byte 0x0200D5F4
_08076580: .4byte _08076584
_08076584: @ jump table
	.4byte _0807659C @ case 0
	.4byte _08076724 @ case 1
	.4byte _080767E8 @ case 2
	.4byte _08076906 @ case 3
	.4byte _08076A14 @ case 4
	.4byte _08076B48 @ case 5
_0807659C:
	ldr r0, _0807660C @ =0x0200CC38
	lsls r6, r7, #2
	adds r0, r0, r6
	mov r8, r0
	ldr r0, [r0]
	ldr r0, [r0]
	ldr r0, [r0, #4]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r2, r0, #0
	ldr r0, [sp, #0x50]
	ldr r1, [sp, #0x30]
	adds r5, r0, r1
	lsls r5, r5, #3
	ldr r4, _08076610 @ =0x0200D5F4
	adds r0, r5, r4
	ldr r7, [sp, #0x28]
	add r7, sl
	adds r1, r7, #0
	adds r1, #0x10
	movs r3, #0
	str r3, [sp]
	str r2, [sp, #4]
	movs r2, #0
	bl PutDrawText
	adds r4, #8
	adds r5, r5, r4
	mov r4, sb
	adds r0, r5, #0
	adds r1, r4, #0
	bl Text_SetColor
	mov r1, r8
	ldr r0, [r1]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	str r6, [sp, #0x4c]
	cmp r0, #0
	bne _08076618
	adds r1, r7, #0
	adds r1, #0x22
	movs r2, #0
	str r2, [sp]
	ldr r0, _08076614 @ =gUnk_08327154
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0
	bl PutDrawText
	b _08076676
	.align 2, 0
_0807660C: .4byte 0x0200CC38
_08076610: .4byte 0x0200D5F4
_08076614: .4byte gUnk_08327154
_08076618:
	mov r3, r8
	ldr r0, [r3]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemName
	adds r1, r7, #0
	adds r1, #0x22
	movs r6, #0
	str r6, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r2, r4, #0
	movs r3, #0
	bl PutDrawText
	adds r4, r7, #0
	adds r4, #0x1e
	mov r1, r8
	ldr r0, [r1]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIcon
	adds r1, r0, #0
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r4, #0
	bl PutIcon
	mov r2, r8
	ldr r0, [r2]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIcon
	bl sub_8074384
_08076676:
	ldr r3, [sp, #0x50]
	ldr r4, [sp, #0x30]
	adds r0, r3, r4
	lsls r0, r0, #3
	ldr r1, _080766A8 @ =0x0200D604
	adds r4, r0, r1
	adds r0, r4, #0
	bl ClearText
	ldr r0, _080766AC @ =0x0200CC38
	ldr r6, [sp, #0x4c]
	adds r0, r6, r0
	ldr r0, [r0]
	ldr r1, [r0]
	ldr r0, [r1]
	ldrb r0, [r0, #4]
	cmp r0, #0x42
	bne _080766B0
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x30
	movs r0, #0
	str r0, [sp]
	b _08076710
	.align 2, 0
_080766A8: .4byte 0x0200D604
_080766AC: .4byte 0x0200CC38
_080766B0:
	movs r3, #0xc0
	lsls r3, r3, #8
	ldrh r1, [r1, #0xc]
	ands r3, r1
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r3, r0
	beq _080766D4
	cmp r3, r0
	bgt _080766CA
	cmp r3, #0
	beq _08076708
	b _08076D10
_080766CA:
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r3, r0
	beq _080766E8
	b _08076D10
_080766D4:
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x30
	movs r0, #0
	str r0, [sp]
	ldr r0, _080766E4 @ =gUnk_08327168
	b _080766F4
	.align 2, 0
_080766E4: .4byte gUnk_08327168
_080766E8:
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x30
	movs r0, #0
	str r0, [sp]
	ldr r0, _08076704 @ =gUnk_0832716C
_080766F4:
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #4
	movs r3, #8
	bl PutDrawText
	b _08076D10
	.align 2, 0
_08076704: .4byte gUnk_0832716C
_08076708:
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x30
	str r3, [sp]
_08076710:
	ldr r0, _08076720 @ =gUnk_08327160
	str r0, [sp, #4]
	adds r0, r4, #0
	movs r2, #1
	movs r3, #4
	bl PutDrawText
	b _08076D10
	.align 2, 0
_08076720: .4byte gUnk_08327160
_08076724:
	ldr r1, _080767E0 @ =0x0200CC38
	lsls r0, r7, #2
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	ldr r0, [r0, #4]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r3, r0, #0
	ldr r1, [sp, #0x50]
	ldr r2, [sp, #0x30]
	adds r0, r1, r2
	lsls r0, r0, #3
	ldr r1, _080767E4 @ =0x0200D5F4
	adds r0, r0, r1
	ldr r4, [sp, #0x28]
	add r4, sl
	adds r1, r4, #0
	adds r1, #0x10
	mov r8, sb
	movs r2, #0
	str r2, [sp]
	str r3, [sp, #4]
	mov r2, r8
	movs r3, #0
	bl PutDrawText
	adds r3, r4, #0
	adds r3, #0x22
	movs r1, #2
	mov r0, sb
	cmp r0, #0
	beq _0807676A
	movs r1, #1
_0807676A:
	ldr r0, [r6]
	ldr r0, [r0]
	movs r2, #8
	ldrsb r2, [r0, r2]
	adds r0, r3, #0
	bl PutNumberOrBlank
	adds r3, r4, #0
	adds r3, #0x28
	movs r1, #2
	mov r2, sb
	cmp r2, #0
	beq _08076786
	movs r1, #1
_08076786:
	ldr r0, [r6]
	ldr r0, [r0]
	ldrb r2, [r0, #9]
	adds r0, r3, #0
	bl PutNumberOrBlank
	adds r5, r4, #0
	adds r5, #0x2e
	movs r7, #2
	mov r3, sb
	cmp r3, #0
	beq _080767A0
	movs r7, #1
_080767A0:
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitCurrentHp
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r7, #0
	bl PutNumberOrBlank
	adds r0, r4, #0
	adds r0, #0x30
	mov r1, r8
	movs r2, #0x16
	bl PutSpecialChar
	adds r4, #0x34
	movs r5, #2
	mov r0, sb
	cmp r0, #0
	beq _080767CA
	movs r5, #1
_080767CA:
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitMaxHp
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl PutNumberOrBlank
	b _08076D10
	.align 2, 0
_080767E0: .4byte 0x0200CC38
_080767E4: .4byte 0x0200D5F4
_080767E8:
	ldr r5, [sp, #0x28]
	add r5, sl
	movs r1, #0x12
	adds r1, r1, r5
	mov r8, r1
	ldr r1, _080768F4 @ =0x0200CC38
	lsls r0, r7, #2
	adds r4, r0, r1
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r6, #2
	ldrb r0, [r0, #0x14]
	ldrb r2, [r1, #0x12]
	cmp r0, r2
	bne _0807680A
	movs r6, #4
_0807680A:
	adds r0, r1, #0
	bl GetUnitPower
	adds r2, r0, #0
	mov r0, r8
	adds r1, r6, #0
	bl PutNumberOrBlank
	adds r7, r5, #0
	adds r7, #0x18
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r6, #2
	ldrb r0, [r0, #0x15]
	ldrb r3, [r1, #0x13]
	cmp r0, r3
	bne _08076830
	movs r6, #4
_08076830:
	adds r0, r1, #0
	bl GetUnitSkill
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	adds r7, r5, #0
	adds r7, #0x1e
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r6, #2
	ldrb r0, [r0, #0x16]
	ldrb r2, [r1, #0x14]
	cmp r0, r2
	bne _08076856
	movs r6, #4
_08076856:
	adds r0, r1, #0
	bl GetUnitSpeed
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	adds r7, r5, #0
	adds r7, #0x24
	ldr r0, [r4]
	ldr r0, [r0]
	movs r6, #2
	ldrb r3, [r0, #0x17]
	cmp r3, #0x1e
	bne _08076878
	movs r6, #4
_08076878:
	bl GetUnitLuck
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	adds r7, r5, #0
	adds r7, #0x2a
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r6, #2
	ldrb r0, [r0, #0x17]
	ldrb r2, [r1, #0x15]
	cmp r0, r2
	bne _0807689C
	movs r6, #4
_0807689C:
	adds r0, r1, #0
	bl GetUnitDefense
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	adds r7, r5, #0
	adds r7, #0x30
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r6, #2
	ldrb r0, [r0, #0x18]
	ldrb r3, [r1, #0x16]
	cmp r0, r3
	bne _080768C2
	movs r6, #4
_080768C2:
	adds r0, r1, #0
	bl GetUnitResistance
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	ldr r0, [r4]
	ldr r0, [r0]
	bl GetUnitAffinityIcon
	adds r1, r0, #0
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _080768F8
	adds r0, r5, #0
	adds r0, #0x34
	movs r1, #2
	movs r2, #0x14
	bl PutSpecialChar
	b _08076D10
	.align 2, 0
_080768F4: .4byte 0x0200CC38
_080768F8:
	adds r0, r5, #0
	adds r0, #0x34
	movs r2, #0xa0
	lsls r2, r2, #7
	bl PutIcon
	b _08076D10
_08076906:
	ldr r0, _08076940 @ =0x0200CC38
	lsls r4, r7, #2
	adds r7, r4, r0
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	str r4, [sp, #0x4c]
	cmp r3, #0
	bne _0807694C
	ldr r4, [sp, #0x50]
	ldr r6, [sp, #0x30]
	adds r0, r4, r6
	lsls r0, r0, #3
	ldr r1, _08076944 @ =0x0200D5F4
	adds r0, r0, r1
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x14
	mov r2, sb
	str r3, [sp]
	ldr r3, _08076948 @ =gUnk_08327154
	str r3, [sp, #4]
	movs r3, #0
	bl PutDrawText
	b _080769B0
	.align 2, 0
_08076940: .4byte 0x0200CC38
_08076944: .4byte 0x0200D5F4
_08076948: .4byte gUnk_08327154
_0807694C:
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemName
	adds r5, r0, #0
	ldr r1, [sp, #0x50]
	ldr r2, [sp, #0x30]
	adds r0, r1, r2
	lsls r0, r0, #3
	ldr r1, _08076A0C @ =0x0200D5F4
	adds r0, r0, r1
	ldr r4, [sp, #0x28]
	add r4, sl
	adds r1, r4, #0
	adds r1, #0x14
	mov r2, sb
	movs r3, #0
	str r3, [sp]
	str r5, [sp, #4]
	bl PutDrawText
	adds r4, #0x10
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIcon
	adds r1, r0, #0
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r4, #0
	bl PutIcon
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIcon
	bl sub_8074384
_080769B0:
	ldr r5, [sp, #0x28]
	add r5, sl
	adds r3, r5, #0
	adds r3, #0x24
	movs r1, #2
	mov r4, sb
	cmp r4, #0
	beq _080769C2
	movs r1, #1
_080769C2:
	ldr r0, _08076A10 @ =0x0200CC38
	ldr r6, [sp, #0x4c]
	adds r4, r6, r0
	ldr r0, [r4]
	movs r6, #4
	ldrsh r2, [r0, r6]
	adds r0, r3, #0
	bl PutNumberOrBlank
	adds r3, r5, #0
	adds r3, #0x2c
	movs r1, #2
	mov r0, sb
	cmp r0, #0
	beq _080769E2
	movs r1, #1
_080769E2:
	ldr r0, [r4]
	movs r6, #6
	ldrsh r2, [r0, r6]
	adds r0, r3, #0
	bl PutNumberOrBlank
	adds r1, r5, #0
	adds r1, #0x34
	movs r3, #2
	mov r0, sb
	cmp r0, #0
	beq _080769FC
	movs r3, #1
_080769FC:
	ldr r0, [r4]
	movs r4, #8
	ldrsh r2, [r0, r4]
	adds r0, r1, #0
	adds r1, r3, #0
	bl PutNumberOrBlank
	b _08076D10
	.align 2, 0
_08076A0C: .4byte 0x0200D5F4
_08076A10: .4byte 0x0200CC38
_08076A14:
	ldr r0, _08076A5C @ =0x0200CC38
	lsls r1, r7, #2
	adds r0, r1, r0
	ldr r0, [r0]
	ldr r2, [r0]
	movs r0, #0x10
	ldrh r6, [r2, #0xc]
	ands r0, r6
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	str r1, [sp, #0x4c]
	cmp r3, #0
	beq _08076A64
	adds r0, r2, #0
	bl GetUnitRescueName
	adds r5, r0, #0
	ldr r1, [sp, #0x50]
	ldr r2, [sp, #0x30]
	adds r0, r1, r2
	lsls r0, r0, #3
	ldr r1, _08076A60 @ =0x0200D5FC
	adds r0, r0, r1
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x24
	mov r3, sb
	rsbs r4, r3, #0
	mov r2, sb
	movs r3, #0
	str r3, [sp]
	str r5, [sp, #4]
	bl PutDrawText
	b _08076A86
	.align 2, 0
_08076A5C: .4byte 0x0200CC38
_08076A60: .4byte 0x0200D5FC
_08076A64:
	ldr r4, [sp, #0x50]
	ldr r6, [sp, #0x30]
	adds r0, r4, r6
	lsls r0, r0, #3
	ldr r1, _08076B38 @ =0x0200D5FC
	adds r0, r0, r1
	ldr r1, [sp, #0x28]
	add r1, sl
	adds r1, #0x24
	mov r2, sb
	rsbs r4, r2, #0
	str r3, [sp]
	ldr r3, _08076B3C @ =gUnk_08327170
	str r3, [sp, #4]
	movs r3, #0
	bl PutDrawText
_08076A86:
	mov r8, r4
	ldr r7, [sp, #0x28]
	add r7, sl
	adds r3, r7, #0
	adds r3, #0x14
	movs r1, #2
	mov r4, sb
	cmp r4, #0
	beq _08076A9A
	movs r1, #1
_08076A9A:
	ldr r0, _08076B40 @ =0x0200CC38
	ldr r6, [sp, #0x4c]
	adds r4, r6, r0
	ldr r0, [r4]
	ldr r0, [r0]
	movs r2, #0x1a
	ldrsb r2, [r0, r2]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r2, r2, r0
	adds r0, r3, #0
	bl PutNumberOrBlank
	adds r3, r7, #0
	adds r3, #0x1a
	movs r5, #2
	mov r0, sb
	cmp r0, #0
	beq _08076AC6
	movs r5, #1
_08076AC6:
	ldr r0, [r4]
	ldr r1, [r0]
	ldr r0, [r1, #4]
	movs r2, #0x11
	ldrsb r2, [r0, r2]
	ldr r0, [r1]
	ldrb r0, [r0, #0x13]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r2, r2, r0
	movs r0, #0x18
	ldrsb r0, [r1, r0]
	adds r2, r2, r0
	adds r0, r3, #0
	adds r1, r5, #0
	bl PutNumberOrBlank
	adds r5, r7, #0
	adds r5, #0x20
	movs r6, #2
	mov r1, sb
	cmp r1, #0
	beq _08076AF6
	movs r6, #1
_08076AF6:
	ldr r0, [r4]
	ldr r0, [r0]
	bl GetUnitAid
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	ldr r0, [r4]
	ldr r0, [r0]
	bl GetUnitStatusName
	adds r4, r0, #0
	ldr r2, [sp, #0x50]
	ldr r3, [sp, #0x30]
	adds r0, r2, r3
	lsls r0, r0, #3
	ldr r1, _08076B44 @ =0x0200D5F4
	adds r0, r0, r1
	adds r1, r7, #0
	adds r1, #0x2e
	mov r6, r8
	mov r2, sb
	orrs r6, r2
	lsrs r2, r6, #0x1f
	movs r3, #0
	str r3, [sp]
	str r4, [sp, #4]
	bl PutDrawText
	b _08076D10
	.align 2, 0
_08076B38: .4byte 0x0200D5FC
_08076B3C: .4byte gUnk_08327170
_08076B40: .4byte 0x0200CC38
_08076B44: .4byte 0x0200D5F4
_08076B48:
	movs r6, #0
	lsls r3, r7, #2
	ldr r0, _08076BA0 @ =0x0200CC38
	adds r7, r3, r0
	ldr r5, [sp, #0x28]
	add r5, sl
_08076B54:
	add r1, sp, #8
	ldr r0, _08076BA4 @ =gUnk_08327178
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r0, [r0]
	str r0, [r1]
	ldr r0, [r7]
	ldr r0, [r0]
	adds r0, #0x26
	adds r0, r0, r6
	ldrb r0, [r0]
	bl GetWeaponLevelFromExp
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r0, r6, #2
	adds r0, #0x14
	adds r3, r5, r0
	movs r1, #2
	cmp r4, #6
	bne _08076B84
	movs r1, #4
_08076B84:
	lsls r0, r4, #2
	add r0, sp
	adds r0, #8
	ldr r2, [r0]
	adds r0, r3, #0
	bl PutSpecialChar
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #7
	bls _08076B54
	b _08076D10
	.align 2, 0
_08076BA0: .4byte 0x0200CC38
_08076BA4: .4byte gUnk_08327178
_08076BA8:
	ldr r1, [sp, #0x2c]
	subs r1, #6
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x38]
	movs r4, #0
	str r4, [sp, #0x3c]
	ldr r1, _08076C60 @ =0x0200CC38
	lsls r0, r7, #2
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitSupportCount
	str r0, [sp, #0x40]
	adds r0, r6, #0
	adds r0, #0x10
	add r0, r8
	bl ClearText
	movs r6, #0
	ldr r0, [sp, #0x40]
	cmp r4, r0
	bge _08076CCE
	adds r7, r5, #0
	mov r1, r8
	str r1, [sp, #0x44]
	ldr r2, [sp, #0x34]
	str r2, [sp, #0x48]
	mov r3, sb
	rsbs r3, r3, #0
	mov r0, sb
	orrs r3, r0
	mov r8, r3
_08076BF0:
	ldr r0, [r7]
	ldr r0, [r0]
	adds r1, r6, #0
	bl CanUnitSupportNow
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08076CC2
	ldr r1, [sp, #0x3c]
	ldr r2, [sp, #0x38]
	cmp r1, r2
	blo _08076CB8
	ldr r0, [r7]
	ldr r0, [r0]
	adds r1, r6, #0
	bl GetUnitSupportUnit
	movs r1, #8
	ldrh r0, [r0, #0xc]
	ands r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	cmp r5, #0
	bne _08076C68
	ldr r0, [r7]
	ldr r0, [r0]
	adds r1, r6, #0
	bl GetUnitSupportPid
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetPersonInfo
	ldrh r0, [r0]
	bl DecodeMsg
	adds r2, r0, #0
	lsls r0, r4, #3
	ldr r1, _08076C64 @ =0x0200D5F4
	adds r0, r0, r1
	ldr r3, [sp, #0x44]
	adds r0, r3, r0
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, #0x12
	ldr r3, [sp, #0x48]
	adds r1, r3, r1
	str r5, [sp]
	str r2, [sp, #4]
	mov r3, r8
	lsrs r2, r3, #0x1f
	movs r3, #0
	bl PutDrawText
	b _08076CA6
	.align 2, 0
_08076C60: .4byte 0x0200CC38
_08076C64: .4byte 0x0200D5F4
_08076C68:
	ldr r0, [r7]
	ldr r0, [r0]
	adds r1, r6, #0
	bl GetUnitSupportPid
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetPersonInfo
	ldrh r0, [r0]
	bl DecodeMsg
	adds r3, r0, #0
	lsls r0, r4, #3
	ldr r1, _08076CB4 @ =0x0200D5F4
	adds r0, r0, r1
	ldr r1, [sp, #0x44]
	adds r0, r1, r0
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, #0x12
	ldr r2, [sp, #0x48]
	adds r1, r2, r1
	movs r2, #0
	str r2, [sp]
	str r3, [sp, #4]
	movs r2, #1
	movs r3, #0
	bl PutDrawText
_08076CA6:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	beq _08076CCE
	b _08076CC2
	.align 2, 0
_08076CB4: .4byte 0x0200D5F4
_08076CB8:
	ldr r0, [sp, #0x3c]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x3c]
_08076CC2:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r3, [sp, #0x40]
	cmp r6, r3
	blt _08076BF0
_08076CCE:
	cmp r4, #2
	bhi _08076D10
	ldr r6, [sp, #0x50]
	ldr r1, [sp, #0x30]
	adds r0, r6, r1
	lsls r5, r0, #3
	ldr r7, [sp, #0x28]
	add r7, sl
	mov r2, sb
	rsbs r6, r2, #0
	orrs r6, r2
_08076CE4:
	lsls r0, r4, #3
	ldr r1, _08076D28 @ =0x0200D5F4
	adds r0, r0, r1
	adds r0, r5, r0
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, #0x12
	adds r1, r7, r1
	movs r2, #0
	str r2, [sp]
	ldr r2, _08076D2C @ =gUnk_08327170
	str r2, [sp, #4]
	lsrs r2, r6, #0x1f
	movs r3, #0
	bl PutDrawText
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _08076CE4
_08076D10:
	movs r0, #1
	bl EnableBgSync
	add sp, #0x54
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076D28: .4byte 0x0200D5F4
_08076D2C: .4byte gUnk_08327170

	thumb_func_start sub_8076D30
sub_8076D30: @ 0x08076D30
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #8
	ldrh r1, [r1, #0xc]
	ands r0, r1
	bx lr

	thumb_func_start sub_8076D3C
sub_8076D3C: @ 0x08076D3C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
	movs r1, #1
	ands r2, r1
	subs r0, #1
	cmp r0, #0x1f
	bls _08076D5E
	bl _0807918C
_08076D5E:
	lsls r0, r0, #2
	ldr r1, _08076D68 @ =_08076D6C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08076D68: .4byte _08076D6C
_08076D6C: @ jump table
	.4byte _08076DEC @ case 0
	.4byte _080770EC @ case 1
	.4byte _08076FD8 @ case 2
	.4byte _080771F8 @ case 3
	.4byte _080772FC @ case 4
	.4byte _08077404 @ case 5
	.4byte _08077510 @ case 6
	.4byte _08077618 @ case 7
	.4byte _08077720 @ case 8
	.4byte _0807782C @ case 9
	.4byte _08077934 @ case 10
	.4byte _08077A3C @ case 11
	.4byte _08077DA4 @ case 12
	.4byte _08077EB0 @ case 13
	.4byte _080780BC @ case 14
	.4byte _080781B0 @ case 15
	.4byte _080782A4 @ case 16
	.4byte _08078398 @ case 17
	.4byte _08077B48 @ case 18
	.4byte _08077C9C @ case 19
	.4byte _080784C0 @ case 20
	.4byte _080785D4 @ case 21
	.4byte _08078768 @ case 22
	.4byte _0807886C @ case 23
	.4byte _08078970 @ case 24
	.4byte _08078A74 @ case 25
	.4byte _08078B78 @ case 26
	.4byte _08078C7C @ case 27
	.4byte _08078D80 @ case 28
	.4byte _08078E84 @ case 29
	.4byte _08078F8C @ case 30
	.4byte _08079080 @ case 31
_08076DEC:
	cmp r2, #0
	bne _08076EE4
	movs r0, #0
	str r0, [sp, #0x40]
	movs r1, #0
	ldr r3, _08076EDC @ =0x0200CD38
	mov sl, r3
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _08076E62
	adds r4, r3, #0
	mov sb, r4
	ldr r7, _08076EE0 @ =0x0200CC38
	mov ip, r7
_08076E0A:
	movs r3, #0
	adds r0, r1, #1
	mov r2, sb
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r3, r1
	bge _08076E52
	mov r7, ip
_08076E1C:
	adds r6, r3, #1
	lsls r0, r6, #2
	adds r5, r0, r7
	ldr r4, [r5]
	ldr r0, [r4]
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r3, r0, r7
	ldr r2, [r3]
	ldr r0, [r2]
	ldr r0, [r0]
	ldrb r1, [r1, #0xa]
	ldrb r0, [r0, #0xa]
	cmp r1, r0
	bhs _08076E42
	str r4, [r3]
	str r2, [r5]
	movs r3, #1
	str r3, [sp, #0x40]
_08076E42:
	lsls r0, r6, #0x18
	lsrs r3, r0, #0x18
	mov r4, sb
	ldrb r4, [r4]
	mov r1, r8
	subs r0, r4, r1
	cmp r3, r0
	blt _08076E1C
_08076E52:
	mov r2, r8
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x18
	mov r3, sl
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08076E0A
_08076E62:
	movs r1, #0
	ldr r4, _08076EDC @ =0x0200CD38
	ldrb r0, [r4]
	subs r0, #1
	cmp r1, r0
	bge _08076ED6
	mov sl, r4
_08076E70:
	movs r3, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov r8, r0
	cmp r3, r1
	bge _08076EC6
	ldr r0, _08076EE0 @ =0x0200CC38
	mov sb, r0
	movs r1, #2
	mov ip, r1
_08076E88:
	adds r7, r3, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r5, [r6]
	ldr r0, [r5]
	mov r2, ip
	ldrh r0, [r0, #0xc]
	ands r2, r0
	lsls r0, r3, #2
	mov r3, sb
	adds r4, r0, r3
	ldr r3, [r4]
	ldr r1, [r3]
	mov r0, ip
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r2, r0
	bhs _08076EB6
	str r5, [r4]
	str r3, [r6]
	movs r4, #1
	str r4, [sp, #0x40]
_08076EB6:
	lsls r0, r7, #0x18
	lsrs r3, r0, #0x18
	mov r7, sl
	ldrb r7, [r7]
	mov r1, r8
	subs r0, r7, r1
	cmp r3, r0
	blt _08076E88
_08076EC6:
	mov r2, r8
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08076EDC @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08076E70
_08076ED6:
	ldr r4, [sp, #0x40]
	bl _080780AA
	.align 2, 0
_08076EDC: .4byte 0x0200CD38
_08076EE0: .4byte 0x0200CC38
_08076EE4:
	movs r7, #0
	str r7, [sp, #0x44]
	movs r1, #0
	ldr r0, _08076FD0 @ =0x0200CD38
	mov sl, r0
	ldrb r0, [r0]
	subs r0, #1
	cmp r7, r0
	bge _08076F56
	ldr r2, _08076FD0 @ =0x0200CD38
	mov sb, r2
	ldr r3, _08076FD4 @ =0x0200CC38
	mov ip, r3
_08076EFE:
	movs r3, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	mov r8, r0
	cmp r3, r1
	bge _08076F46
	mov r7, ip
_08076F10:
	adds r6, r3, #1
	lsls r0, r6, #2
	adds r5, r0, r7
	ldr r4, [r5]
	ldr r0, [r4]
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r3, r0, r7
	ldr r2, [r3]
	ldr r0, [r2]
	ldr r0, [r0]
	ldrb r1, [r1, #0xa]
	ldrb r0, [r0, #0xa]
	cmp r1, r0
	bls _08076F36
	str r4, [r3]
	str r2, [r5]
	movs r0, #1
	str r0, [sp, #0x44]
_08076F36:
	lsls r0, r6, #0x18
	lsrs r3, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	mov r2, r8
	subs r0, r1, r2
	cmp r3, r0
	blt _08076F10
_08076F46:
	mov r3, r8
	lsls r0, r3, #0x18
	lsrs r1, r0, #0x18
	mov r4, sl
	ldrb r0, [r4]
	subs r0, #1
	cmp r1, r0
	blt _08076EFE
_08076F56:
	movs r1, #0
	ldr r7, _08076FD0 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	bge _08076FC8
	mov sl, r7
_08076F64:
	movs r3, #0
	adds r0, r1, #1
	mov r2, sl
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r3, r1
	bge _08076FB8
	ldr r4, _08076FD4 @ =0x0200CC38
	mov sb, r4
	movs r7, #2
	mov ip, r7
_08076F7C:
	adds r7, r3, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r5, [r6]
	ldr r0, [r5]
	mov r2, ip
	ldrh r0, [r0, #0xc]
	ands r2, r0
	lsls r0, r3, #2
	adds r4, r0, r1
	ldr r3, [r4]
	ldr r1, [r3]
	mov r0, ip
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r2, r0
	bls _08076FA8
	str r5, [r4]
	str r3, [r6]
	movs r2, #1
	str r2, [sp, #0x44]
_08076FA8:
	lsls r0, r7, #0x18
	lsrs r3, r0, #0x18
	mov r4, sl
	ldrb r4, [r4]
	mov r7, r8
	subs r0, r4, r7
	cmp r3, r0
	blt _08076F7C
_08076FB8:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08076FD0 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08076F64
_08076FC8:
	ldr r3, [sp, #0x44]
	bl _08078F78
	.align 2, 0
_08076FD0: .4byte 0x0200CD38
_08076FD4: .4byte 0x0200CC38
_08076FD8:
	cmp r2, #0
	bne _08077064
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _0807705C @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08076FF4
	bl _08078F76
_08076FF4:
	adds r4, r3, #0
	mov sb, r4
_08076FF8:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08077048
	ldr r0, _08077060 @ =0x0200CC38
	mov r8, r0
_0807700C:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldrb r1, [r1, #8]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	ldrb r0, [r0, #8]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r1, r0
	ble _0807703A
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_0807703A:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807700C
_08077048:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08076FF8
	bl _08078F76
	.align 2, 0
_0807705C: .4byte 0x0200CD38
_08077060: .4byte 0x0200CC38
_08077064:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080770E4 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _0807707C
	bl _08078F76
_0807707C:
	adds r3, r2, #0
	mov sb, r3
_08077080:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080770D0
	ldr r0, _080770E8 @ =0x0200CC38
	mov r8, r0
_08077094:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldrb r1, [r1, #8]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	ldrb r0, [r0, #8]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r1, r0
	bge _080770C2
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080770C2:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08077094
_080770D0:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077080
	bl _08078F76
	.align 2, 0
_080770E4: .4byte 0x0200CD38
_080770E8: .4byte 0x0200CC38
_080770EC:
	cmp r2, #0
	bne _08077174
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _0807716C @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077108
	bl _08078F76
_08077108:
	adds r4, r3, #0
	mov sb, r4
_0807710C:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08077158
	ldr r0, _08077170 @ =0x0200CC38
	mov r8, r0
_08077120:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r0, [r4]
	ldr r1, [r0, #4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldr r0, [r0, #4]
	ldrb r1, [r1, #0xa]
	ldrb r0, [r0, #0xa]
	cmp r1, r0
	bhs _0807714A
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_0807714A:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08077120
_08077158:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _0807710C
	bl _08078F76
	.align 2, 0
_0807716C: .4byte 0x0200CD38
_08077170: .4byte 0x0200CC38
_08077174:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080771F0 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _0807718C
	bl _08078F76
_0807718C:
	adds r3, r2, #0
	mov sb, r3
_08077190:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080771DC
	ldr r0, _080771F4 @ =0x0200CC38
	mov r8, r0
_080771A4:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r0, [r4]
	ldr r1, [r0, #4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldr r0, [r0, #4]
	ldrb r1, [r1, #0xa]
	ldrb r0, [r0, #0xa]
	cmp r1, r0
	bls _080771CE
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080771CE:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _080771A4
_080771DC:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077190
	bl _08078F76
	.align 2, 0
_080771F0: .4byte 0x0200CD38
_080771F4: .4byte 0x0200CC38
_080771F8:
	cmp r2, #0
	bne _0807727C
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08077274 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077214
	bl _08078F76
_08077214:
	adds r4, r3, #0
	mov sb, r4
_08077218:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08077260
	ldr r0, _08077278 @ =0x0200CC38
	mov r8, r0
_0807722C:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldrb r1, [r1, #9]
	ldrb r0, [r0, #9]
	cmp r1, r0
	bls _08077252
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08077252:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807722C
_08077260:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077218
	bl _08078F76
	.align 2, 0
_08077274: .4byte 0x0200CD38
_08077278: .4byte 0x0200CC38
_0807727C:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080772F4 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08077294
	bl _08078F76
_08077294:
	adds r3, r2, #0
	mov sb, r3
_08077298:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080772E0
	ldr r0, _080772F8 @ =0x0200CC38
	mov r8, r0
_080772AC:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	ldrb r1, [r1, #9]
	ldrb r0, [r0, #9]
	cmp r1, r0
	bhs _080772D2
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080772D2:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _080772AC
_080772E0:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077298
	bl _08078F76
	.align 2, 0
_080772F4: .4byte 0x0200CD38
_080772F8: .4byte 0x0200CC38
_080772FC:
	cmp r2, #0
	bne _08077384
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r3, _0807737C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077314
	bl _0807917A
_08077314:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077366
	ldr r7, _08077380 @ =0x0200CC38
	mov sb, r7
_08077326:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitCurrentHp
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitCurrentHp
	cmp r4, r0
	ble _08077356
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_08077356:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0807737C @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _08077326
_08077366:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _0807737C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077314
	bl _0807917A
	.align 2, 0
_0807737C: .4byte 0x0200CD38
_08077380: .4byte 0x0200CC38
_08077384:
	movs r1, #0
	mov sl, r1
	ldr r2, _080773FC @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08077396
	bl _0807906C
_08077396:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _080773E8
	ldr r2, _08077400 @ =0x0200CC38
	mov sb, r2
_080773A8:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitCurrentHp
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitCurrentHp
	cmp r4, r0
	bge _080773D8
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_080773D8:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080773FC @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _080773A8
_080773E8:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _080773FC @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077396
	bl _0807906C
	.align 2, 0
_080773FC: .4byte 0x0200CD38
_08077400: .4byte 0x0200CC38
_08077404:
	cmp r2, #0
	bne _0807748C
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r3, _08077484 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _0807741C
	bl _080790F6
_0807741C:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _0807746E
	ldr r1, _08077488 @ =0x0200CC38
	mov sb, r1
_0807742E:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitMaxHp
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitMaxHp
	cmp r4, r0
	ble _0807745E
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_0807745E:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077484 @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _0807742E
_0807746E:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077484 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _0807741C
	bl _080790F6
	.align 2, 0
_08077484: .4byte 0x0200CD38
_08077488: .4byte 0x0200CC38
_0807748C:
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r2, _08077508 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080774A0
	bl _0807917A
_080774A0:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _080774F2
	ldr r4, _0807750C @ =0x0200CC38
	mov sb, r4
_080774B2:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitMaxHp
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitMaxHp
	cmp r4, r0
	bge _080774E2
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_080774E2:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077508 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _080774B2
_080774F2:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077508 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080774A0
	bl _0807917A
	.align 2, 0
_08077508: .4byte 0x0200CD38
_0807750C: .4byte 0x0200CC38
_08077510:
	cmp r2, #0
	bne _08077594
	movs r1, #0
	mov sl, r1
	ldr r3, _0807758C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077526
	bl _0807906C
_08077526:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077578
	ldr r2, _08077590 @ =0x0200CC38
	mov sb, r2
_08077538:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitPower
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitPower
	cmp r4, r0
	ble _08077568
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_08077568:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0807758C @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _08077538
_08077578:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _0807758C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077526
	bl _0807906C
	.align 2, 0
_0807758C: .4byte 0x0200CD38
_08077590: .4byte 0x0200CC38
_08077594:
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r2, _08077610 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080775A8
	bl _080790F6
_080775A8:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _080775FA
	ldr r1, _08077614 @ =0x0200CC38
	mov sb, r1
_080775BA:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitPower
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitPower
	cmp r4, r0
	bge _080775EA
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_080775EA:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077610 @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _080775BA
_080775FA:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077610 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080775A8
	bl _080790F6
	.align 2, 0
_08077610: .4byte 0x0200CD38
_08077614: .4byte 0x0200CC38
_08077618:
	cmp r2, #0
	bne _080776A0
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r3, _08077698 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077630
	bl _0807917A
_08077630:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077682
	ldr r4, _0807769C @ =0x0200CC38
	mov sb, r4
_08077642:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitSkill
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitSkill
	cmp r4, r0
	ble _08077672
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_08077672:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077698 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _08077642
_08077682:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077698 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077630
	bl _0807917A
	.align 2, 0
_08077698: .4byte 0x0200CD38
_0807769C: .4byte 0x0200CC38
_080776A0:
	movs r1, #0
	mov sl, r1
	ldr r2, _08077718 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080776B2
	bl _0807906C
_080776B2:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077704
	ldr r2, _0807771C @ =0x0200CC38
	mov sb, r2
_080776C4:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitSkill
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitSkill
	cmp r4, r0
	bge _080776F4
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_080776F4:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077718 @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _080776C4
_08077704:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077718 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080776B2
	bl _0807906C
	.align 2, 0
_08077718: .4byte 0x0200CD38
_0807771C: .4byte 0x0200CC38
_08077720:
	cmp r2, #0
	bne _080777A8
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r3, _080777A0 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077738
	bl _080790F6
_08077738:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _0807778A
	ldr r1, _080777A4 @ =0x0200CC38
	mov sb, r1
_0807774A:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitSpeed
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitSpeed
	cmp r4, r0
	ble _0807777A
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_0807777A:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080777A0 @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _0807774A
_0807778A:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _080777A0 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077738
	bl _080790F6
	.align 2, 0
_080777A0: .4byte 0x0200CD38
_080777A4: .4byte 0x0200CC38
_080777A8:
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r2, _08077824 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080777BC
	bl _0807917A
_080777BC:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _0807780E
	ldr r4, _08077828 @ =0x0200CC38
	mov sb, r4
_080777CE:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitSpeed
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitSpeed
	cmp r4, r0
	bge _080777FE
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_080777FE:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077824 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _080777CE
_0807780E:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077824 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080777BC
	bl _0807917A
	.align 2, 0
_08077824: .4byte 0x0200CD38
_08077828: .4byte 0x0200CC38
_0807782C:
	cmp r2, #0
	bne _080778B0
	movs r1, #0
	mov sl, r1
	ldr r3, _080778A8 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077842
	bl _0807906C
_08077842:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077894
	ldr r2, _080778AC @ =0x0200CC38
	mov sb, r2
_08077854:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitLuck
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitLuck
	cmp r4, r0
	ble _08077884
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_08077884:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080778A8 @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _08077854
_08077894:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _080778A8 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077842
	bl _0807906C
	.align 2, 0
_080778A8: .4byte 0x0200CD38
_080778AC: .4byte 0x0200CC38
_080778B0:
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r2, _0807792C @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080778C4
	bl _080790F6
_080778C4:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077916
	ldr r1, _08077930 @ =0x0200CC38
	mov sb, r1
_080778D6:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitLuck
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitLuck
	cmp r4, r0
	bge _08077906
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_08077906:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0807792C @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _080778D6
_08077916:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _0807792C @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080778C4
	bl _080790F6
	.align 2, 0
_0807792C: .4byte 0x0200CD38
_08077930: .4byte 0x0200CC38
_08077934:
	cmp r2, #0
	bne _080779BC
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r3, _080779B4 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _0807794C
	bl _0807917A
_0807794C:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _0807799E
	ldr r4, _080779B8 @ =0x0200CC38
	mov sb, r4
_0807795E:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitDefense
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitDefense
	cmp r4, r0
	ble _0807798E
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_0807798E:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _080779B4 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _0807795E
_0807799E:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _080779B4 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _0807794C
	bl _0807917A
	.align 2, 0
_080779B4: .4byte 0x0200CD38
_080779B8: .4byte 0x0200CC38
_080779BC:
	movs r1, #0
	mov sl, r1
	ldr r2, _08077A34 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _080779CE
	bl _0807906C
_080779CE:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077A20
	ldr r2, _08077A38 @ =0x0200CC38
	mov sb, r2
_080779E0:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitDefense
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitDefense
	cmp r4, r0
	bge _08077A10
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_08077A10:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077A34 @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _080779E0
_08077A20:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077A34 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080779CE
	bl _0807906C
	.align 2, 0
_08077A34: .4byte 0x0200CD38
_08077A38: .4byte 0x0200CC38
_08077A3C:
	cmp r2, #0
	bne _08077AC4
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r3, _08077ABC @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077A54
	bl _080790F6
_08077A54:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077AA6
	ldr r1, _08077AC0 @ =0x0200CC38
	mov sb, r1
_08077A66:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitResistance
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitResistance
	cmp r4, r0
	ble _08077A96
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_08077A96:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077ABC @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _08077A66
_08077AA6:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077ABC @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077A54
	bl _080790F6
	.align 2, 0
_08077ABC: .4byte 0x0200CD38
_08077AC0: .4byte 0x0200CC38
_08077AC4:
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r2, _08077B40 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08077AD8
	bl _0807917A
_08077AD8:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077B2A
	ldr r4, _08077B44 @ =0x0200CC38
	mov sb, r4
_08077AEA:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitResistance
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitResistance
	cmp r4, r0
	bge _08077B1A
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_08077B1A:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077B40 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _08077AEA
_08077B2A:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077B40 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077AD8
	bl _0807917A
	.align 2, 0
_08077B40: .4byte 0x0200CD38
_08077B44: .4byte 0x0200CC38
_08077B48:
	cmp r2, #0
	bne _08077BF4
	movs r1, #0
	str r1, [sp, #0x48]
	ldr r3, _08077BEC @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _08077BE6
	adds r4, r3, #0
	mov sl, r4
_08077B5E:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov sb, r0
	cmp r2, r1
	bge _08077BD6
	ldr r0, _08077BF0 @ =0x0200CC38
	mov ip, r0
_08077B72:
	adds r1, r2, #1
	mov r8, r1
	lsls r0, r1, #2
	mov r3, ip
	adds r7, r0, r3
	ldr r6, [r7]
	ldr r1, [r6]
	ldr r0, [r1, #4]
	movs r3, #0x11
	ldrsb r3, [r0, r3]
	ldr r0, [r1]
	ldrb r0, [r0, #0x13]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r3, r3, r0
	movs r0, #0x18
	ldrsb r0, [r1, r0]
	adds r3, r3, r0
	lsls r0, r2, #2
	mov r1, ip
	adds r4, r0, r1
	ldr r5, [r4]
	ldr r2, [r5]
	ldr r0, [r2, #4]
	ldrb r0, [r0, #0x11]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, [r2]
	ldrb r1, [r1, #0x13]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	movs r1, #0x18
	ldrsb r1, [r2, r1]
	adds r0, r0, r1
	cmp r3, r0
	ble _08077BC4
	str r6, [r4]
	str r5, [r7]
	movs r2, #1
	str r2, [sp, #0x48]
_08077BC4:
	mov r3, r8
	lsls r0, r3, #0x18
	lsrs r2, r0, #0x18
	mov r4, sl
	ldrb r4, [r4]
	mov r7, sb
	subs r0, r4, r7
	cmp r2, r0
	blt _08077B72
_08077BD6:
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077BEC @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077B5E
_08077BE6:
	ldr r3, [sp, #0x48]
	bl _08078F78
	.align 2, 0
_08077BEC: .4byte 0x0200CD38
_08077BF0: .4byte 0x0200CC38
_08077BF4:
	movs r4, #0
	str r4, [sp, #0x4c]
	movs r1, #0
	ldr r7, _08077C94 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r4, r0
	bge _08077C90
	adds r0, r7, #0
	mov sl, r0
_08077C08:
	movs r2, #0
	adds r0, r1, #1
	mov r3, sl
	ldrb r3, [r3]
	subs r1, r3, r0
	mov sb, r0
	cmp r2, r1
	bge _08077C80
	ldr r4, _08077C98 @ =0x0200CC38
	mov ip, r4
_08077C1C:
	adds r7, r2, #1
	mov r8, r7
	lsls r0, r7, #2
	mov r1, ip
	adds r7, r0, r1
	ldr r6, [r7]
	ldr r1, [r6]
	ldr r0, [r1, #4]
	movs r3, #0x11
	ldrsb r3, [r0, r3]
	ldr r0, [r1]
	ldrb r0, [r0, #0x13]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r3, r3, r0
	movs r0, #0x18
	ldrsb r0, [r1, r0]
	adds r3, r3, r0
	lsls r0, r2, #2
	mov r2, ip
	adds r4, r0, r2
	ldr r5, [r4]
	ldr r2, [r5]
	ldr r0, [r2, #4]
	ldrb r0, [r0, #0x11]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, [r2]
	ldrb r1, [r1, #0x13]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r0, r1
	movs r1, #0x18
	ldrsb r1, [r2, r1]
	adds r0, r0, r1
	cmp r3, r0
	bge _08077C6E
	str r6, [r4]
	str r5, [r7]
	movs r3, #1
	str r3, [sp, #0x4c]
_08077C6E:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r2, r0, #0x18
	mov r7, sl
	ldrb r7, [r7]
	mov r1, sb
	subs r0, r7, r1
	cmp r2, r0
	blt _08077C1C
_08077C80:
	mov r2, sb
	lsls r0, r2, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077C94 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077C08
_08077C90:
	ldr r4, [sp, #0x4c]
	b _080780AA
	.align 2, 0
_08077C94: .4byte 0x0200CD38
_08077C98: .4byte 0x0200CC38
_08077C9C:
	cmp r2, #0
	bne _08077D24
	movs r7, #0
	mov sl, r7
	movs r1, #0
	ldr r3, _08077D1C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077CB4
	bl _0807917A
_08077CB4:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077D06
	ldr r0, _08077D20 @ =0x0200CC38
	mov sb, r0
_08077CC6:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitAid
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitAid
	cmp r4, r0
	ble _08077CF6
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_08077CF6:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077D1C @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _08077CC6
_08077D06:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077D1C @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077CB4
	bl _0807917A
	.align 2, 0
_08077D1C: .4byte 0x0200CD38
_08077D20: .4byte 0x0200CC38
_08077D24:
	movs r1, #0
	mov sl, r1
	ldr r2, _08077D9C @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08077D36
	bl _0807906C
_08077D36:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077D88
	ldr r2, _08077DA0 @ =0x0200CC38
	mov sb, r2
_08077D48:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r3, sb
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitAid
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r1, sb
	adds r5, r0, r1
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitAid
	cmp r4, r0
	bge _08077D78
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r2, #1
	mov sl, r2
_08077D78:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077D9C @ =0x0200CD38
	ldrb r0, [r0]
	mov r3, r8
	subs r0, r0, r3
	cmp r5, r0
	blt _08077D48
_08077D88:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077D9C @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077D36
	bl _0807906C
	.align 2, 0
_08077D9C: .4byte 0x0200CD38
_08077DA0: .4byte 0x0200CC38
_08077DA4:
	cmp r2, #0
	bne _08077E2C
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r3, _08077E24 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08077DBC
	bl _080790F6
_08077DBC:
	movs r5, #0
	adds r0, r1, #1
	ldrb r3, [r3]
	subs r1, r3, r0
	mov r8, r0
	cmp r5, r1
	bge _08077E0E
	ldr r1, _08077E28 @ =0x0200CC38
	mov sb, r1
_08077DCE:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitAffinityIcon
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitAffinityIcon
	cmp r4, r0
	bge _08077DFE
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_08077DFE:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077E24 @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _08077DCE
_08077E0E:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r3, _08077E24 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r1, r0
	blt _08077DBC
	bl _080790F6
	.align 2, 0
_08077E24: .4byte 0x0200CD38
_08077E28: .4byte 0x0200CC38
_08077E2C:
	movs r3, #0
	mov sl, r3
	movs r1, #0
	ldr r2, _08077EA8 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08077E40
	bl _0807917A
_08077E40:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _08077E92
	ldr r4, _08077EAC @ =0x0200CC38
	mov sb, r4
_08077E52:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitAffinityIcon
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl GetUnitAffinityIcon
	cmp r4, r0
	ble _08077E82
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_08077E82:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08077EA8 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _08077E52
_08077E92:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08077EA8 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08077E40
	bl _0807917A
	.align 2, 0
_08077EA8: .4byte 0x0200CD38
_08077EAC: .4byte 0x0200CC38
_08077EB0:
	cmp r2, #0
	beq _08077EB6
	b _08077FB4
_08077EB6:
	movs r1, #0
	str r1, [sp, #0x50]
	movs r4, #0
	ldr r0, _08077EF4 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r2, r0
	bhs _08077EEE
	ldr r5, _08077EF8 @ =0x0200CC38
_08077EC6:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIid
	mov r2, sp
	adds r1, r2, r4
	strb r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _08077EF4 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r4, r0
	blo _08077EC6
_08077EEE:
	movs r4, #0
	b _08077FA2
	.align 2, 0
_08077EF4: .4byte 0x0200CD38
_08077EF8: .4byte 0x0200CC38
_08077EFC:
	movs r6, #0
	adds r0, r4, #1
	ldrb r1, [r1]
	subs r1, r1, r0
	str r0, [sp, #0x58]
	cmp r6, r1
	bge _08077F9C
	ldr r3, _08077F44 @ =0x0200CC38
	mov sl, r3
_08077F0E:
	adds r0, r6, #1
	mov r4, sp
	adds r4, r4, r0
	mov r8, r4
	mov r7, sp
	adds r5, r7, r6
	ldrb r4, [r4]
	adds r3, r4, #0
	ldrb r2, [r5]
	mov sb, r0
	cmp r3, r2
	bls _08077F48
	adds r1, r2, #0
	strb r4, [r5]
	mov r0, r8
	strb r1, [r0]
	lsls r2, r6, #2
	add r2, sl
	ldr r3, [r2]
	mov r4, sb
	lsls r1, r4, #2
	add r1, sl
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	b _08077F86
	.align 2, 0
_08077F44: .4byte 0x0200CC38
_08077F48:
	cmp r3, r2
	bne _08077F8A
	mov r1, sb
	lsls r0, r1, #2
	mov r2, sl
	adds r7, r0, r2
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	adds r4, r0, #0
	lsls r0, r6, #2
	mov r3, sl
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r4, r4, #0x10
	lsls r0, r0, #0x10
	cmp r4, r0
	bls _08077F8A
	ldrb r1, [r5]
	mov r4, r8
	ldrb r0, [r4]
	strb r0, [r5]
	strb r1, [r4]
	ldr r3, [r6]
	ldr r0, [r7]
	str r0, [r6]
	str r3, [r7]
_08077F86:
	movs r7, #1
	str r7, [sp, #0x50]
_08077F8A:
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _08077FB0 @ =0x0200CD38
	ldrb r0, [r0]
	ldr r2, [sp, #0x58]
	subs r0, r0, r2
	cmp r6, r0
	blt _08077F0E
_08077F9C:
	ldr r3, [sp, #0x58]
	lsls r0, r3, #0x18
	lsrs r4, r0, #0x18
_08077FA2:
	ldr r1, _08077FB0 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp r4, r0
	blt _08077EFC
	ldr r4, [sp, #0x50]
	b _080780AA
	.align 2, 0
_08077FB0: .4byte 0x0200CD38
_08077FB4:
	movs r7, #0
	str r7, [sp, #0x54]
	movs r4, #0
	ldr r0, _08077FF0 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r7, r0
	bhs _08077FEC
	ldr r5, _08077FF4 @ =0x0200CC38
_08077FC4:
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl GetItemIid
	mov r2, sp
	adds r1, r2, r4
	strb r0, [r1]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _08077FF0 @ =0x0200CD38
	ldrb r0, [r0]
	cmp r4, r0
	blo _08077FC4
_08077FEC:
	movs r4, #0
	b _0807809E
	.align 2, 0
_08077FF0: .4byte 0x0200CD38
_08077FF4: .4byte 0x0200CC38
_08077FF8:
	movs r6, #0
	adds r0, r4, #1
	ldrb r1, [r1]
	subs r1, r1, r0
	str r0, [sp, #0x5c]
	cmp r6, r1
	bge _08078098
	ldr r3, _08078040 @ =0x0200CC38
	mov sl, r3
_0807800A:
	adds r0, r6, #1
	mov r4, sp
	adds r4, r4, r0
	mov r8, r4
	mov r7, sp
	adds r5, r7, r6
	ldrb r4, [r4]
	adds r3, r4, #0
	ldrb r2, [r5]
	mov sb, r0
	cmp r3, r2
	bhs _08078044
	adds r1, r2, #0
	strb r4, [r5]
	mov r0, r8
	strb r1, [r0]
	lsls r2, r6, #2
	add r2, sl
	ldr r3, [r2]
	mov r4, sb
	lsls r1, r4, #2
	add r1, sl
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	b _08078082
	.align 2, 0
_08078040: .4byte 0x0200CC38
_08078044:
	cmp r3, r2
	bne _08078086
	mov r1, sb
	lsls r0, r1, #2
	mov r2, sl
	adds r7, r0, r2
	ldr r0, [r7]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	adds r4, r0, #0
	lsls r0, r6, #2
	mov r3, sl
	adds r6, r0, r3
	ldr r0, [r6]
	ldr r0, [r0]
	bl GetUnitEquippedWeapon
	lsls r4, r4, #0x10
	lsls r0, r0, #0x10
	cmp r4, r0
	bhs _08078086
	ldrb r1, [r5]
	mov r4, r8
	ldrb r0, [r4]
	strb r0, [r5]
	strb r1, [r4]
	ldr r3, [r6]
	ldr r0, [r7]
	str r0, [r6]
	str r3, [r7]
_08078082:
	movs r7, #1
	str r7, [sp, #0x54]
_08078086:
	mov r1, sb
	lsls r0, r1, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _080780B8 @ =0x0200CD38
	ldrb r0, [r0]
	ldr r2, [sp, #0x5c]
	subs r0, r0, r2
	cmp r6, r0
	blt _0807800A
_08078098:
	ldr r3, [sp, #0x5c]
	lsls r0, r3, #0x18
	lsrs r4, r0, #0x18
_0807809E:
	ldr r1, _080780B8 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp r4, r0
	blt _08077FF8
	ldr r4, [sp, #0x54]
_080780AA:
	cmp r4, #0
	bne _080780B2
	bl _0807918C
_080780B2:
	movs r0, #1
	bl _0807918E
	.align 2, 0
_080780B8: .4byte 0x0200CD38
_080780BC:
	cmp r2, #0
	bne _08078138
	movs r7, #0
	mov ip, r7
	movs r1, #0
	ldr r3, _08078130 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _0807812A
	adds r4, r3, #0
	mov sl, r4
_080780D4:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov sb, r0
	cmp r2, r1
	bge _0807811A
	mov r8, sb
_080780E6:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r1, _08078134 @ =0x0200CC38
	adds r5, r0, r1
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r1
	ldr r3, [r2]
	movs r7, #4
	ldrsh r1, [r4, r7]
	movs r7, #4
	ldrsh r0, [r3, r7]
	cmp r1, r0
	ble _0807810A
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_0807810A:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _080780E6
_0807811A:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _08078130 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _080780D4
_0807812A:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_08078130: .4byte 0x0200CD38
_08078134: .4byte 0x0200CC38
_08078138:
	movs r1, #0
	mov ip, r1
	ldr r2, _080781A8 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp ip, r0
	bge _080781A0
	adds r3, r2, #0
	mov sl, r3
_0807814A:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sl
	ldrb r4, [r4]
	subs r1, r4, r0
	mov sb, r0
	cmp r2, r1
	bge _08078190
	mov r8, sb
_0807815C:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r7, _080781AC @ =0x0200CC38
	adds r5, r0, r7
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r7
	ldr r3, [r2]
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r7, #4
	ldrsh r0, [r3, r7]
	cmp r1, r0
	bge _08078180
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_08078180:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _0807815C
_08078190:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _080781A8 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _0807814A
_080781A0:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_080781A8: .4byte 0x0200CD38
_080781AC: .4byte 0x0200CC38
_080781B0:
	cmp r2, #0
	bne _0807822C
	movs r1, #0
	mov ip, r1
	ldr r3, _08078224 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _0807821C
	adds r4, r3, #0
	mov sl, r4
_080781C6:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov sb, r0
	cmp r2, r1
	bge _0807820C
	mov r8, sb
_080781D8:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r1, _08078228 @ =0x0200CC38
	adds r5, r0, r1
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r1
	ldr r3, [r2]
	movs r7, #6
	ldrsh r1, [r4, r7]
	movs r7, #6
	ldrsh r0, [r3, r7]
	cmp r1, r0
	ble _080781FC
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_080781FC:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _080781D8
_0807820C:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _08078224 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _080781C6
_0807821C:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_08078224: .4byte 0x0200CD38
_08078228: .4byte 0x0200CC38
_0807822C:
	movs r1, #0
	mov ip, r1
	ldr r2, _0807829C @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp ip, r0
	bge _08078294
	adds r3, r2, #0
	mov sl, r3
_0807823E:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sl
	ldrb r4, [r4]
	subs r1, r4, r0
	mov sb, r0
	cmp r2, r1
	bge _08078284
	mov r8, sb
_08078250:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r7, _080782A0 @ =0x0200CC38
	adds r5, r0, r7
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r7
	ldr r3, [r2]
	movs r0, #6
	ldrsh r1, [r4, r0]
	movs r7, #6
	ldrsh r0, [r3, r7]
	cmp r1, r0
	bge _08078274
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_08078274:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _08078250
_08078284:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _0807829C @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _0807823E
_08078294:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_0807829C: .4byte 0x0200CD38
_080782A0: .4byte 0x0200CC38
_080782A4:
	cmp r2, #0
	bne _08078320
	movs r1, #0
	mov ip, r1
	ldr r3, _08078318 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _08078310
	adds r4, r3, #0
	mov sl, r4
_080782BA:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov sb, r0
	cmp r2, r1
	bge _08078300
	mov r8, sb
_080782CC:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r1, _0807831C @ =0x0200CC38
	adds r5, r0, r1
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r1
	ldr r3, [r2]
	movs r7, #8
	ldrsh r1, [r4, r7]
	movs r7, #8
	ldrsh r0, [r3, r7]
	cmp r1, r0
	ble _080782F0
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_080782F0:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _080782CC
_08078300:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _08078318 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _080782BA
_08078310:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_08078318: .4byte 0x0200CD38
_0807831C: .4byte 0x0200CC38
_08078320:
	movs r1, #0
	mov ip, r1
	ldr r2, _08078390 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp ip, r0
	bge _08078388
	adds r3, r2, #0
	mov sl, r3
_08078332:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sl
	ldrb r4, [r4]
	subs r1, r4, r0
	mov sb, r0
	cmp r2, r1
	bge _08078378
	mov r8, sb
_08078344:
	adds r6, r2, #1
	lsls r0, r6, #2
	ldr r7, _08078394 @ =0x0200CC38
	adds r5, r0, r7
	ldr r4, [r5]
	lsls r0, r2, #2
	adds r2, r0, r7
	ldr r3, [r2]
	movs r0, #8
	ldrsh r1, [r4, r0]
	movs r7, #8
	ldrsh r0, [r3, r7]
	cmp r1, r0
	bge _08078368
	str r4, [r2]
	str r3, [r5]
	movs r0, #1
	mov ip, r0
_08078368:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sl
	ldrb r1, [r1]
	mov r3, r8
	subs r0, r1, r3
	cmp r2, r0
	blt _08078344
_08078378:
	mov r4, sb
	lsls r0, r4, #0x18
	lsrs r1, r0, #0x18
	ldr r7, _08078390 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp r1, r0
	blt _08078332
_08078388:
	mov r0, ip
	bl _0807917C
	.align 2, 0
_08078390: .4byte 0x0200CD38
_08078394: .4byte 0x0200CC38
_08078398:
	cmp r2, #0
	bne _0807842C
	movs r1, #0
	mov ip, r1
	ldr r3, _08078424 @ =0x0200CD38
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _0807841E
	adds r4, r3, #0
	mov sl, r4
_080783AE:
	movs r3, #0
	adds r0, r1, #1
	mov r7, sl
	ldrb r7, [r7]
	subs r1, r7, r0
	mov r8, r0
	cmp r3, r1
	bge _0807840E
	ldr r0, _08078428 @ =0x0200CC38
	mov sb, r0
_080783C2:
	adds r7, r3, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r5, [r6]
	ldr r0, [r5]
	movs r2, #0x1a
	ldrsb r2, [r0, r2]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r2, r2, r0
	lsls r0, r3, #2
	adds r3, r0, r1
	ldr r4, [r3]
	ldr r0, [r4]
	movs r1, #0x1a
	ldrsb r1, [r0, r1]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	cmp r2, r1
	ble _080783FE
	str r5, [r3]
	str r4, [r6]
	movs r2, #1
	mov ip, r2
_080783FE:
	lsls r0, r7, #0x18
	lsrs r3, r0, #0x18
	mov r4, sl
	ldrb r4, [r4]
	mov r7, r8
	subs r0, r4, r7
	cmp r3, r0
	blt _080783C2
_0807840E:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08078424 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080783AE
_0807841E:
	mov r3, ip
	bl _08078F78
	.align 2, 0
_08078424: .4byte 0x0200CD38
_08078428: .4byte 0x0200CC38
_0807842C:
	movs r4, #0
	mov ip, r4
	movs r1, #0
	ldr r7, _080784B8 @ =0x0200CD38
	ldrb r0, [r7]
	subs r0, #1
	cmp ip, r0
	bge _080784B0
	adds r0, r7, #0
	mov sl, r0
_08078440:
	movs r3, #0
	adds r0, r1, #1
	mov r2, sl
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r3, r1
	bge _080784A0
	ldr r4, _080784BC @ =0x0200CC38
	mov sb, r4
_08078454:
	adds r7, r3, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r5, [r6]
	ldr r0, [r5]
	movs r2, #0x1a
	ldrsb r2, [r0, r2]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r2, r2, r0
	lsls r0, r3, #2
	adds r3, r0, r1
	ldr r4, [r3]
	ldr r0, [r4]
	movs r1, #0x1a
	ldrsb r1, [r0, r1]
	ldr r0, [r0, #4]
	ldrb r0, [r0, #0x12]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r1, r1, r0
	cmp r2, r1
	bge _08078490
	str r5, [r3]
	str r4, [r6]
	movs r2, #1
	mov ip, r2
_08078490:
	lsls r0, r7, #0x18
	lsrs r3, r0, #0x18
	mov r4, sl
	ldrb r4, [r4]
	mov r7, r8
	subs r0, r4, r7
	cmp r3, r0
	blt _08078454
_080784A0:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _080784B8 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078440
_080784B0:
	mov r3, ip
	bl _08078F78
	.align 2, 0
_080784B8: .4byte 0x0200CD38
_080784BC: .4byte 0x0200CC38
_080784C0:
	cmp r2, #0
	bne _0807854C
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078544 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _080784DC
	bl _08078F76
_080784DC:
	adds r4, r3, #0
	mov sb, r4
_080784E0:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078530
	ldr r0, _08078548 @ =0x0200CC38
	mov r8, r0
_080784F4:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r0, [r4]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r1, r0, #0x1c
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r1, r0
	bls _08078522
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078522:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _080784F4
_08078530:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _080784E0
	bl _08078F76
	.align 2, 0
_08078544: .4byte 0x0200CD38
_08078548: .4byte 0x0200CC38
_0807854C:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080785CC @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078564
	bl _08078F76
_08078564:
	adds r3, r2, #0
	mov sb, r3
_08078568:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080785B8
	ldr r0, _080785D0 @ =0x0200CC38
	mov r8, r0
_0807857C:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r0, [r4]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r1, r0, #0x1c
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	cmp r1, r0
	bhs _080785AA
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080785AA:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807857C
_080785B8:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078568
	bl _08078F76
	.align 2, 0
_080785CC: .4byte 0x0200CD38
_080785D0: .4byte 0x0200CC38
_080785D4:
	cmp r2, #0
	bne _080786A0
	movs r4, #0
	mov sb, r4
	movs r3, #0
	ldr r0, _0807860C @ =0x0200CD38
	ldrb r1, [r0]
	cmp r2, r1
	bhs _08078624
	ldr r6, _08078610 @ =0x0200CC38
	adds r2, r1, #0
	movs r5, #0x10
	movs r4, #1
_080785EE:
	lsls r0, r3, #2
	adds r0, r0, r6
	ldr r0, [r0]
	ldr r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r1, #0xc]
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _08078614
	mov r7, sp
	adds r0, r7, r3
	strb r4, [r0]
	b _0807861A
	.align 2, 0
_0807860C: .4byte 0x0200CD38
_08078610: .4byte 0x0200CC38
_08078614:
	mov r7, sp
	adds r0, r7, r3
	strb r1, [r0]
_0807861A:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r2
	blo _080785EE
_08078624:
	movs r3, #0
	ldr r1, _08078698 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp r3, r0
	bge _08078690
	mov r8, r1
	ldr r2, _0807869C @ =0x0200CC38
	mov ip, r2
	mov sl, r8
_08078638:
	movs r2, #0
	adds r0, r3, #1
	mov r3, r8
	ldrb r3, [r3]
	subs r1, r3, r0
	adds r6, r0, #0
	cmp r2, r1
	bge _08078682
	mov r7, ip
_0807864A:
	adds r5, r2, #1
	mov r0, sp
	adds r4, r0, r5
	adds r1, r0, r2
	ldrb r3, [r4]
	ldrb r0, [r1]
	cmp r3, r0
	bls _08078674
	ldrb r0, [r1]
	strb r3, [r1]
	strb r0, [r4]
	lsls r2, r2, #2
	adds r2, r2, r7
	ldr r3, [r2]
	lsls r1, r5, #2
	adds r1, r1, r7
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	movs r1, #1
	mov sb, r1
_08078674:
	lsls r0, r5, #0x18
	lsrs r2, r0, #0x18
	mov r3, r8
	ldrb r3, [r3]
	subs r0, r3, r6
	cmp r2, r0
	blt _0807864A
_08078682:
	lsls r0, r6, #0x18
	lsrs r3, r0, #0x18
	mov r4, sl
	ldrb r0, [r4]
	subs r0, #1
	cmp r3, r0
	blt _08078638
_08078690:
	mov r7, sb
	bl _0807906E
	.align 2, 0
_08078698: .4byte 0x0200CD38
_0807869C: .4byte 0x0200CC38
_080786A0:
	movs r0, #0
	mov sb, r0
	movs r3, #0
	ldr r0, _080786D4 @ =0x0200CD38
	ldrb r1, [r0]
	cmp sb, r1
	bhs _080786EC
	ldr r6, _080786D8 @ =0x0200CC38
	adds r2, r1, #0
	movs r5, #0x10
	movs r4, #1
_080786B6:
	lsls r0, r3, #2
	adds r0, r0, r6
	ldr r0, [r0]
	ldr r1, [r0]
	adds r0, r5, #0
	ldrh r1, [r1, #0xc]
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _080786DC
	mov r1, sp
	adds r0, r1, r3
	strb r4, [r0]
	b _080786E2
	.align 2, 0
_080786D4: .4byte 0x0200CD38
_080786D8: .4byte 0x0200CC38
_080786DC:
	mov r7, sp
	adds r0, r7, r3
	strb r1, [r0]
_080786E2:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r2
	blo _080786B6
_080786EC:
	movs r3, #0
	ldr r1, _08078760 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp r3, r0
	bge _08078758
	mov r8, r1
	ldr r2, _08078764 @ =0x0200CC38
	mov ip, r2
	mov sl, r8
_08078700:
	movs r2, #0
	adds r0, r3, #1
	mov r3, r8
	ldrb r3, [r3]
	subs r1, r3, r0
	adds r6, r0, #0
	cmp r2, r1
	bge _0807874A
	mov r7, ip
_08078712:
	adds r5, r2, #1
	mov r0, sp
	adds r4, r0, r5
	adds r1, r0, r2
	ldrb r3, [r4]
	ldrb r0, [r1]
	cmp r3, r0
	bhs _0807873C
	ldrb r0, [r1]
	strb r3, [r1]
	strb r0, [r4]
	lsls r2, r2, #2
	adds r2, r2, r7
	ldr r3, [r2]
	lsls r1, r5, #2
	adds r1, r1, r7
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	movs r1, #1
	mov sb, r1
_0807873C:
	lsls r0, r5, #0x18
	lsrs r2, r0, #0x18
	mov r3, r8
	ldrb r3, [r3]
	subs r0, r3, r6
	cmp r2, r0
	blt _08078712
_0807874A:
	lsls r0, r6, #0x18
	lsrs r3, r0, #0x18
	mov r4, sl
	ldrb r0, [r4]
	subs r0, #1
	cmp r3, r0
	blt _08078700
_08078758:
	mov r7, sb
	bl _0807906E
	.align 2, 0
_08078760: .4byte 0x0200CD38
_08078764: .4byte 0x0200CC38
_08078768:
	cmp r2, #0
	bne _080787EC
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r3, _080787E4 @ =0x0200CD38
	mov ip, r3
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078782
	bl _08078F76
_08078782:
	adds r4, r3, #0
	mov sb, r4
_08078786:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080787D2
	ldr r0, _080787E8 @ =0x0200CC38
	mov r8, r0
_0807879A:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x26
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x26
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _080787C4
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080787C4:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807879A
_080787D2:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078786
	b _08078F76
	.align 2, 0
_080787E4: .4byte 0x0200CD38
_080787E8: .4byte 0x0200CC38
_080787EC:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078864 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078802
	b _08078F76
_08078802:
	adds r3, r2, #0
	mov sb, r3
_08078806:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078852
	ldr r0, _08078868 @ =0x0200CC38
	mov r8, r0
_0807881A:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x26
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x26
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078844
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078844:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807881A
_08078852:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078806
	b _08078F76
	.align 2, 0
_08078864: .4byte 0x0200CD38
_08078868: .4byte 0x0200CC38
_0807886C:
	cmp r2, #0
	bne _080788F0
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080788E8 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078886
	b _08078F76
_08078886:
	adds r4, r3, #0
	mov sb, r4
_0807888A:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080788D6
	ldr r0, _080788EC @ =0x0200CC38
	mov r8, r0
_0807889E:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x27
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x27
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _080788C8
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080788C8:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807889E
_080788D6:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _0807888A
	b _08078F76
	.align 2, 0
_080788E8: .4byte 0x0200CD38
_080788EC: .4byte 0x0200CC38
_080788F0:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078968 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078906
	b _08078F76
_08078906:
	adds r3, r2, #0
	mov sb, r3
_0807890A:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078956
	ldr r0, _0807896C @ =0x0200CC38
	mov r8, r0
_0807891E:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x27
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x27
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078948
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078948:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _0807891E
_08078956:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _0807890A
	b _08078F76
	.align 2, 0
_08078968: .4byte 0x0200CD38
_0807896C: .4byte 0x0200CC38
_08078970:
	cmp r2, #0
	bne _080789F4
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _080789EC @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _0807898A
	b _08078F76
_0807898A:
	adds r4, r3, #0
	mov sb, r4
_0807898E:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _080789DA
	ldr r0, _080789F0 @ =0x0200CC38
	mov r8, r0
_080789A2:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x28
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x28
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _080789CC
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_080789CC:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _080789A2
_080789DA:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _0807898E
	b _08078F76
	.align 2, 0
_080789EC: .4byte 0x0200CD38
_080789F0: .4byte 0x0200CC38
_080789F4:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078A6C @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078A0A
	b _08078F76
_08078A0A:
	adds r3, r2, #0
	mov sb, r3
_08078A0E:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078A5A
	ldr r0, _08078A70 @ =0x0200CC38
	mov r8, r0
_08078A22:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x28
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x28
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078A4C
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078A4C:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078A22
_08078A5A:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078A0E
	b _08078F76
	.align 2, 0
_08078A6C: .4byte 0x0200CD38
_08078A70: .4byte 0x0200CC38
_08078A74:
	cmp r2, #0
	bne _08078AF8
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078AF0 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078A8E
	b _08078F76
_08078A8E:
	adds r4, r3, #0
	mov sb, r4
_08078A92:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078ADE
	ldr r0, _08078AF4 @ =0x0200CC38
	mov r8, r0
_08078AA6:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x29
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x29
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _08078AD0
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078AD0:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078AA6
_08078ADE:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078A92
	b _08078F76
	.align 2, 0
_08078AF0: .4byte 0x0200CD38
_08078AF4: .4byte 0x0200CC38
_08078AF8:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078B70 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078B0E
	b _08078F76
_08078B0E:
	adds r3, r2, #0
	mov sb, r3
_08078B12:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078B5E
	ldr r0, _08078B74 @ =0x0200CC38
	mov r8, r0
_08078B26:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x29
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x29
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078B50
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078B50:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078B26
_08078B5E:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078B12
	b _08078F76
	.align 2, 0
_08078B70: .4byte 0x0200CD38
_08078B74: .4byte 0x0200CC38
_08078B78:
	cmp r2, #0
	bne _08078BFC
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078BF4 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078B92
	b _08078F76
_08078B92:
	adds r4, r3, #0
	mov sb, r4
_08078B96:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078BE2
	ldr r0, _08078BF8 @ =0x0200CC38
	mov r8, r0
_08078BAA:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2a
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2a
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _08078BD4
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078BD4:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078BAA
_08078BE2:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078B96
	b _08078F76
	.align 2, 0
_08078BF4: .4byte 0x0200CD38
_08078BF8: .4byte 0x0200CC38
_08078BFC:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078C74 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078C12
	b _08078F76
_08078C12:
	adds r3, r2, #0
	mov sb, r3
_08078C16:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078C62
	ldr r0, _08078C78 @ =0x0200CC38
	mov r8, r0
_08078C2A:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2a
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2a
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078C54
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078C54:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078C2A
_08078C62:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078C16
	b _08078F76
	.align 2, 0
_08078C74: .4byte 0x0200CD38
_08078C78: .4byte 0x0200CC38
_08078C7C:
	cmp r2, #0
	bne _08078D00
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078CF8 @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078C96
	b _08078F76
_08078C96:
	adds r4, r3, #0
	mov sb, r4
_08078C9A:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078CE6
	ldr r0, _08078CFC @ =0x0200CC38
	mov r8, r0
_08078CAE:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2b
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2b
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _08078CD8
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078CD8:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078CAE
_08078CE6:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078C9A
	b _08078F76
	.align 2, 0
_08078CF8: .4byte 0x0200CD38
_08078CFC: .4byte 0x0200CC38
_08078D00:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078D78 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078D16
	b _08078F76
_08078D16:
	adds r3, r2, #0
	mov sb, r3
_08078D1A:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078D66
	ldr r0, _08078D7C @ =0x0200CC38
	mov r8, r0
_08078D2E:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2b
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2b
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078D58
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078D58:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078D2E
_08078D66:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078D1A
	b _08078F76
	.align 2, 0
_08078D78: .4byte 0x0200CD38
_08078D7C: .4byte 0x0200CC38
_08078D80:
	cmp r2, #0
	bne _08078E04
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078DFC @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	blt _08078D9A
	b _08078F76
_08078D9A:
	adds r4, r3, #0
	mov sb, r4
_08078D9E:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078DEA
	ldr r0, _08078E00 @ =0x0200CC38
	mov r8, r0
_08078DB2:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2c
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2c
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _08078DDC
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078DDC:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078DB2
_08078DEA:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078D9E
	b _08078F76
	.align 2, 0
_08078DFC: .4byte 0x0200CD38
_08078E00: .4byte 0x0200CC38
_08078E04:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078E7C @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	blt _08078E1A
	b _08078F76
_08078E1A:
	adds r3, r2, #0
	mov sb, r3
_08078E1E:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078E6A
	ldr r0, _08078E80 @ =0x0200CC38
	mov r8, r0
_08078E32:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2c
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2c
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078E5C
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078E5C:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078E32
_08078E6A:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078E1E
	b _08078F76
	.align 2, 0
_08078E7C: .4byte 0x0200CD38
_08078E80: .4byte 0x0200CC38
_08078E84:
	cmp r2, #0
	bne _08078F04
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078EFC @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _08078F76
	adds r4, r3, #0
	mov sb, r4
_08078EA0:
	movs r2, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078EEC
	ldr r0, _08078F00 @ =0x0200CC38
	mov r8, r0
_08078EB4:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2d
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2d
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bls _08078EDE
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078EDE:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078EB4
_08078EEC:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078EA0
	b _08078F76
	.align 2, 0
_08078EFC: .4byte 0x0200CD38
_08078F00: .4byte 0x0200CC38
_08078F04:
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078F84 @ =0x0200CD38
	mov ip, r7
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	bge _08078F76
	adds r3, r2, #0
	mov sb, r3
_08078F1C:
	movs r2, #0
	adds r0, r1, #1
	mov r4, sb
	ldrb r4, [r4]
	subs r1, r4, r0
	adds r7, r0, #0
	cmp r2, r1
	bge _08078F68
	ldr r0, _08078F88 @ =0x0200CC38
	mov r8, r0
_08078F30:
	adds r6, r2, #1
	lsls r0, r6, #2
	mov r1, r8
	adds r5, r0, r1
	ldr r4, [r5]
	ldr r1, [r4]
	adds r1, #0x2d
	lsls r0, r2, #2
	mov r3, r8
	adds r2, r0, r3
	ldr r3, [r2]
	ldr r0, [r3]
	adds r0, #0x2d
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _08078F5A
	str r4, [r2]
	str r3, [r5]
	movs r4, #1
	mov sl, r4
_08078F5A:
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	subs r0, r1, r7
	cmp r2, r0
	blt _08078F30
_08078F68:
	lsls r0, r7, #0x18
	lsrs r1, r0, #0x18
	mov r2, ip
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08078F1C
_08078F76:
	mov r3, sl
_08078F78:
	cmp r3, #0
	bne _08078F7E
	b _0807918C
_08078F7E:
	movs r0, #1
	b _0807918E
	.align 2, 0
_08078F84: .4byte 0x0200CD38
_08078F88: .4byte 0x0200CC38
_08078F8C:
	cmp r2, #0
	bne _08079004
	movs r4, #0
	mov sl, r4
	movs r1, #0
	ldr r7, _08078FFC @ =0x0200CD38
	mov ip, r7
	mov r3, ip
	ldrb r0, [r3]
	subs r0, #1
	cmp r2, r0
	bge _0807906C
	adds r4, r3, #0
	mov sb, r4
_08078FA8:
	movs r4, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	mov r8, r0
	cmp r4, r1
	bge _08078FEA
	ldr r6, _08079000 @ =0x0200CC38
	str r0, [sp, #0x60]
_08078FBC:
	adds r5, r4, #1
	lsls r0, r5, #2
	adds r3, r0, r6
	ldr r2, [r3]
	lsls r0, r4, #2
	adds r0, r0, r6
	ldr r1, [r0]
	ldrb r4, [r2, #0xa]
	ldrb r7, [r1, #0xa]
	cmp r4, r7
	bls _08078FDA
	str r2, [r0]
	str r1, [r3]
	movs r0, #1
	mov sl, r0
_08078FDA:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	ldr r2, [sp, #0x60]
	subs r0, r1, r2
	cmp r4, r0
	blt _08078FBC
_08078FEA:
	mov r3, r8
	lsls r0, r3, #0x18
	lsrs r1, r0, #0x18
	mov r4, ip
	ldrb r0, [r4]
	subs r0, #1
	cmp r1, r0
	blt _08078FA8
	b _0807906C
	.align 2, 0
_08078FFC: .4byte 0x0200CD38
_08079000: .4byte 0x0200CC38
_08079004:
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r2, _08079078 @ =0x0200CD38
	mov ip, r2
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	bge _0807906C
	adds r3, r2, #0
	mov sb, r3
_0807901A:
	movs r4, #0
	adds r0, r1, #1
	mov r7, sb
	ldrb r7, [r7]
	subs r1, r7, r0
	mov r8, r0
	cmp r4, r1
	bge _0807905C
	ldr r6, _0807907C @ =0x0200CC38
	str r0, [sp, #0x60]
_0807902E:
	adds r5, r4, #1
	lsls r0, r5, #2
	adds r3, r0, r6
	ldr r2, [r3]
	lsls r0, r4, #2
	adds r0, r0, r6
	ldr r1, [r0]
	ldrb r4, [r2, #0xa]
	ldrb r7, [r1, #0xa]
	cmp r4, r7
	bhs _0807904C
	str r2, [r0]
	str r1, [r3]
	movs r0, #1
	mov sl, r0
_0807904C:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	mov r1, sb
	ldrb r1, [r1]
	ldr r2, [sp, #0x60]
	subs r0, r1, r2
	cmp r4, r0
	blt _0807902E
_0807905C:
	mov r3, r8
	lsls r0, r3, #0x18
	lsrs r1, r0, #0x18
	mov r4, ip
	ldrb r0, [r4]
	subs r0, #1
	cmp r1, r0
	blt _0807901A
_0807906C:
	mov r7, sl
_0807906E:
	cmp r7, #0
	bne _08079074
	b _0807918C
_08079074:
	movs r0, #1
	b _0807918E
	.align 2, 0
_08079078: .4byte 0x0200CD38
_0807907C: .4byte 0x0200CC38
_08079080:
	cmp r2, #0
	bne _08079108
	movs r0, #0
	mov sl, r0
	movs r1, #0
	ldr r2, _08079100 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp sl, r0
	bge _080790F6
_08079094:
	movs r5, #0
	adds r0, r1, #1
	ldrb r2, [r2]
	subs r1, r2, r0
	mov r8, r0
	cmp r5, r1
	bge _080790E6
	ldr r1, _08079104 @ =0x0200CC38
	mov sb, r1
_080790A6:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r2, sb
	adds r6, r0, r2
	ldr r0, [r6]
	ldr r0, [r0]
	bl sub_8076D30
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r3, sb
	adds r5, r0, r3
	ldr r0, [r5]
	ldr r0, [r0]
	bl sub_8076D30
	cmp r4, r0
	ble _080790D6
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r4, #1
	mov sl, r4
_080790D6:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08079100 @ =0x0200CD38
	ldrb r0, [r0]
	mov r7, r8
	subs r0, r0, r7
	cmp r5, r0
	blt _080790A6
_080790E6:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x18
	ldr r2, _08079100 @ =0x0200CD38
	ldrb r0, [r2]
	subs r0, #1
	cmp r1, r0
	blt _08079094
_080790F6:
	mov r2, sl
	cmp r2, #0
	beq _0807918C
	movs r0, #1
	b _0807918E
	.align 2, 0
_08079100: .4byte 0x0200CD38
_08079104: .4byte 0x0200CC38
_08079108:
	movs r3, #0
	mov sl, r3
	movs r2, #0
	ldr r1, _08079184 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp sl, r0
	bge _0807917A
_08079118:
	movs r5, #0
	adds r0, r2, #1
	ldrb r1, [r1]
	subs r1, r1, r0
	mov r8, r0
	cmp r5, r1
	bge _0807916A
	ldr r4, _08079188 @ =0x0200CC38
	mov sb, r4
_0807912A:
	adds r7, r5, #1
	lsls r0, r7, #2
	mov r1, sb
	adds r6, r0, r1
	ldr r0, [r6]
	ldr r0, [r0]
	bl sub_8076D30
	adds r4, r0, #0
	lsls r0, r5, #2
	mov r2, sb
	adds r5, r0, r2
	ldr r0, [r5]
	ldr r0, [r0]
	bl sub_8076D30
	cmp r4, r0
	bge _0807915A
	ldr r1, [r5]
	ldr r0, [r6]
	str r0, [r5]
	str r1, [r6]
	movs r3, #1
	mov sl, r3
_0807915A:
	lsls r0, r7, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _08079184 @ =0x0200CD38
	ldrb r0, [r0]
	mov r4, r8
	subs r0, r0, r4
	cmp r5, r0
	blt _0807912A
_0807916A:
	mov r7, r8
	lsls r0, r7, #0x18
	lsrs r2, r0, #0x18
	ldr r1, _08079184 @ =0x0200CD38
	ldrb r0, [r1]
	subs r0, #1
	cmp r2, r0
	blt _08079118
_0807917A:
	mov r0, sl
_0807917C:
	cmp r0, #0
	beq _0807918C
	movs r0, #1
	b _0807918E
	.align 2, 0
_08079184: .4byte 0x0200CD38
_08079188: .4byte 0x0200CC38
_0807918C:
	movs r0, #0
_0807918E:
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80791A0
sub_80791A0: @ 0x080791A0
	ldr r1, _080791B0 @ =0x0203D494
	movs r2, #0
	adds r0, r1, #4
_080791A6:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _080791A6
	bx lr
	.align 2, 0
_080791B0: .4byte 0x0203D494

	thumb_func_start sub_80791B4
sub_80791B4: @ 0x080791B4
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r2, #0
	ldr r4, _080791CC @ =0x0203D494
_080791BE:
	adds r1, r2, r4
	ldrb r0, [r1]
	cmp r0, #0
	bne _080791D0
	strb r3, [r1]
	b _080791D6
	.align 2, 0
_080791CC: .4byte 0x0203D494
_080791D0:
	adds r2, #1
	cmp r2, #4
	ble _080791BE
_080791D6:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80791DC
sub_80791DC: @ 0x080791DC
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r1, #0
	ldr r3, _0807920C @ =0x0203D494
	adds r4, r3, #0
_080791E8:
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r0, r2
	bne _08079210
	adds r2, r1, #0
	cmp r1, #3
	bgt _08079204
	adds r1, r1, r4
_080791F8:
	ldrb r0, [r1, #1]
	strb r0, [r1]
	adds r1, #1
	adds r2, #1
	cmp r2, #3
	ble _080791F8
_08079204:
	movs r0, #0
	strb r0, [r3, #4]
	b _08079216
	.align 2, 0
_0807920C: .4byte 0x0203D494
_08079210:
	adds r1, #1
	cmp r1, #4
	ble _080791E8
_08079216:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_807921C
sub_807921C: @ 0x0807921C
	push {r4, lr}
	movs r4, #1
_08079220:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _08079242
	ldr r0, [r1]
	cmp r0, #0
	beq _08079242
	ldrh r2, [r1, #0xc]
	movs r0, #8
	ands r0, r2
	cmp r0, #0
	beq _08079242
	movs r0, #4
	orrs r0, r2
	strh r0, [r1, #0xc]
_08079242:
	adds r4, #1
	cmp r4, #0x3f
	ble _08079220
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8079250
sub_8079250: @ 0x08079250
	push {r4, r5, r6, lr}
	movs r1, #0
	strh r1, [r0, #0x30]
	ldr r0, _080792C4 @ =gDispIo
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	ldrb r1, [r1, #1]
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r2, ip
	strb r0, [r2, #1]
	mov r5, ip
	adds r5, #0x34
	subs r1, #0x81
	adds r0, r1, #0
	ldrb r2, [r5]
	ands r0, r2
	movs r6, #3
	rsbs r6, r6, #0
	ands r0, r6
	movs r4, #5
	rsbs r4, r4, #0
	ands r0, r4
	movs r2, #8
	orrs r0, r2
	movs r3, #0x11
	rsbs r3, r3, #0
	ands r0, r3
	strb r0, [r5]
	mov r0, ip
	adds r0, #0x35
	ldrb r5, [r0]
	ands r1, r5
	ands r1, r6
	ands r1, r4
	orrs r1, r2
	ands r1, r3
	strb r1, [r0]
	mov r3, ip
	adds r3, #0x36
	movs r0, #1
	ldrb r1, [r3]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	orrs r0, r2
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r3]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080792C4: .4byte gDispIo

	thumb_func_start sub_80792C8
sub_80792C8: @ 0x080792C8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldrh r0, [r6, #0x30]
	adds r0, #8
	strh r0, [r6, #0x30]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x3f
	bls _080792DE
	movs r0, #0x40
	strh r0, [r6, #0x30]
_080792DE:
	ldr r0, _08079340 @ =gDispIo
	mov ip, r0
	adds r0, #0x2d
	movs r4, #0x68
	strb r4, [r0]
	mov r1, ip
	adds r1, #0x31
	movs r0, #0x20
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x2c
	movs r5, #0xf0
	strb r5, [r0]
	ldrh r2, [r6, #0x30]
	adds r3, r2, #0
	adds r1, r3, #0
	adds r1, #0x20
	adds r0, #4
	strb r1, [r0]
	subs r0, #1
	strb r4, [r0]
	movs r0, #0xa0
	subs r0, r0, r3
	mov r1, ip
	adds r1, #0x33
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x2e
	strb r5, [r0]
	subs r1, #1
	movs r0, #0xa0
	strb r0, [r1]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	cmp r2, #0x40
	bne _0807937C
	adds r0, r6, #0
	bl Proc_Break
	movs r0, #0
	strh r0, [r6, #0x30]
	ldr r0, [r6, #0x14]
	adds r1, r0, #0
	adds r1, #0x2a
	ldrb r0, [r1]
	cmp r0, #0
	bne _08079344
	movs r0, #1
	b _08079346
	.align 2, 0
_08079340: .4byte gDispIo
_08079344:
	movs r0, #0
_08079346:
	strb r0, [r1]
	ldr r0, [r6, #0x14]
	bl sub_807A67C
	ldr r2, _08079384 @ =gDispIo
	movs r0, #0x20
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x2d
	movs r0, #0x68
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x20
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
_0807937C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08079384: .4byte gDispIo

	thumb_func_start sub_8079388
sub_8079388: @ 0x08079388
	push {r4, r5, lr}
	adds r5, r0, #0
	ldrh r0, [r5, #0x30]
	adds r0, #8
	strh r0, [r5, #0x30]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x3f
	bls _0807939E
	movs r0, #0x40
	strh r0, [r5, #0x30]
_0807939E:
	ldr r4, _080793EC @ =gDispIo
	adds r1, r4, #0
	adds r1, #0x2d
	movs r0, #0x68
	strb r0, [r1]
	ldrh r2, [r5, #0x30]
	adds r3, r2, #0
	adds r0, r3, #0
	adds r0, #0x20
	adds r1, #4
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	movs r0, #0xa0
	subs r0, r0, r3
	adds r1, #4
	strb r0, [r1]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	cmp r2, #0x40
	bne _080793E4
	adds r0, r5, #0
	bl Proc_Break
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r4, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r4, #1]
_080793E4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080793EC: .4byte gDispIo

	thumb_func_start sub_80793F0
sub_80793F0: @ 0x080793F0
	push {lr}
	adds r1, r0, #0
	ldr r0, _08079400 @ =gUnk_08678DE0
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08079400: .4byte gUnk_08678DE0

	thumb_func_start sub_8079404
sub_8079404: @ 0x08079404
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	cmp r1, #1
	beq _08079418
	ldr r0, _0807941C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	cmp r0, #0x18
	bne _08079420
	cmp r1, #3
	bne _08079420
_08079418:
	movs r0, #1
	b _08079422
	.align 2, 0
_0807941C: .4byte gPlaySt
_08079420:
	movs r0, #0
_08079422:
	bx lr

	thumb_func_start sub_8079424
sub_8079424: @ 0x08079424
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r0, _0807957C @ =sub_807C5B8
	ldr r2, _08079580 @ =0x000006AE
	ldr r1, _08079584 @ =0x00000659
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r3, #0
	bl sub_807CC34
	ldr r0, _08079588 @ =sub_807C7B8
	ldr r2, _0807958C @ =0x000006AF
	ldr r1, _08079590 @ =0x0000065A
	str r1, [sp]
	movs r5, #1
	str r5, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
	bl sub_808D0F8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807948A
	adds r1, r4, #0
	adds r1, #0x2c
	adds r0, r5, #0
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _0807948A
	ldr r1, _08079594 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _0807948A
	ldr r0, _08079598 @ =sub_807CB08
	ldr r2, _0807959C @ =0x000006B7
	ldr r1, _080795A0 @ =0x000006A3
	str r1, [sp]
	movs r1, #0xa
	str r1, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
_0807948A:
	ldr r1, _080795A4 @ =sub_807C884
	movs r3, #0
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807949A
	movs r3, #1
_0807949A:
	ldr r0, _080795A8 @ =0x0000065F
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	adds r0, r1, #0
	movs r1, #1
	ldr r2, _080795AC @ =0x000006B3
	bl sub_807CC34
	adds r1, r4, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r2, [r1]
	ands r0, r2
	adds r5, r1, #0
	cmp r0, #0
	bne _08079506
	ldr r1, _08079594 @ =gPlaySt
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _080794DC
	ldr r0, _080795B0 @ =sub_807CB78
	ldr r2, _080795B4 @ =0x000006B1
	ldr r1, _080795B8 @ =0x0000065C
	str r1, [sp]
	movs r1, #3
	str r1, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
_080794DC:
	ldr r0, _080795BC @ =sub_807CBB0
	ldr r2, _080795C0 @ =0x000006B2
	ldr r1, _080795C4 @ =0x0000065D
	str r1, [sp]
	movs r1, #4
	str r1, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
	ldr r0, _080795C8 @ =sub_807C97C
	ldr r2, _080795CC @ =0x000006B4
	movs r1, #0xcc
	lsls r1, r1, #3
	str r1, [sp]
	movs r1, #6
	str r1, [sp, #4]
	movs r1, #1
	movs r3, #0
	bl sub_807CC34
_08079506:
	ldr r0, _080795D0 @ =sub_807C9F4
	ldr r2, _080795D4 @ =0x000006B5
	ldr r1, _080795D8 @ =0x00000661
	str r1, [sp]
	movs r1, #7
	str r1, [sp, #4]
	movs r1, #1
	movs r3, #0
	bl sub_807CC34
	ldr r0, _080795DC @ =sub_807CA48
	ldr r2, _080795E0 @ =0x000006B6
	ldr r1, _080795E4 @ =0x00000662
	str r1, [sp]
	movs r1, #8
	str r1, [sp, #4]
	movs r1, #1
	movs r3, #0
	bl sub_807CC34
	movs r4, #1
	adds r0, r4, #0
	ldrb r1, [r5]
	ands r0, r1
	cmp r0, #0
	bne _08079564
	ldr r1, _08079594 @ =gPlaySt
	movs r0, #0x60
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _0807955A
	ldr r0, _080795E8 @ =sub_807CA9C
	ldr r2, _080795EC @ =0x000006B9
	ldr r1, _080795F0 @ =0x00000663
	str r1, [sp]
	movs r1, #9
	str r1, [sp, #4]
	movs r1, #1
	movs r3, #0
	bl sub_807CC34
_0807955A:
	adds r0, r4, #0
	ldrb r5, [r5]
	ands r0, r5
	cmp r0, #0
	beq _080795FC
_08079564:
	ldr r0, _080795F4 @ =sub_807CBDC
	movs r2, #0xd6
	lsls r2, r2, #3
	ldr r1, _080795F8 @ =0x000006F1
	str r1, [sp]
	movs r1, #0xc
	str r1, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
	b _08079610
	.align 2, 0
_0807957C: .4byte sub_807C5B8
_08079580: .4byte 0x000006AE
_08079584: .4byte 0x00000659
_08079588: .4byte sub_807C7B8
_0807958C: .4byte 0x000006AF
_08079590: .4byte 0x0000065A
_08079594: .4byte gPlaySt
_08079598: .4byte sub_807CB08
_0807959C: .4byte 0x000006B7
_080795A0: .4byte 0x000006A3
_080795A4: .4byte sub_807C884
_080795A8: .4byte 0x0000065F
_080795AC: .4byte 0x000006B3
_080795B0: .4byte sub_807CB78
_080795B4: .4byte 0x000006B1
_080795B8: .4byte 0x0000065C
_080795BC: .4byte sub_807CBB0
_080795C0: .4byte 0x000006B2
_080795C4: .4byte 0x0000065D
_080795C8: .4byte sub_807C97C
_080795CC: .4byte 0x000006B4
_080795D0: .4byte sub_807C9F4
_080795D4: .4byte 0x000006B5
_080795D8: .4byte 0x00000661
_080795DC: .4byte sub_807CA48
_080795E0: .4byte 0x000006B6
_080795E4: .4byte 0x00000662
_080795E8: .4byte sub_807CA9C
_080795EC: .4byte 0x000006B9
_080795F0: .4byte 0x00000663
_080795F4: .4byte sub_807CBDC
_080795F8: .4byte 0x000006F1
_080795FC:
	ldr r0, _08079618 @ =sub_807CBDC
	ldr r2, _0807961C @ =0x000006BA
	ldr r1, _08079620 @ =0x0000065E
	str r1, [sp]
	movs r1, #0xc
	str r1, [sp, #4]
	movs r1, #0
	movs r3, #0
	bl sub_807CC34
_08079610:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08079618: .4byte sub_807CBDC
_0807961C: .4byte 0x000006BA
_08079620: .4byte 0x0000065E

	thumb_func_start sub_8079624
sub_8079624: @ 0x08079624
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r7, r1, #0
	adds r0, r7, #0
	adds r0, #0x50
	movs r2, #8
	ldrsb r2, [r5, r2]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r7, #0
	adds r0, #0x56
	ldrb r2, [r5, #9]
	movs r1, #2
	bl PutNumberOrBlank
	adds r4, r7, #0
	adds r4, #0xd6
	adds r0, r5, #0
	bl GetUnitCurrentHp
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl PutNumberOrBlank
	subs r4, #6
	adds r0, r5, #0
	bl GetUnitMaxHp
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl PutNumberOrBlank
	ldr r0, [r5]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r4, #0x38
	subs r4, r4, r0
	asrs r4, r4, #1
	ldr r6, _080796AC @ =0x0200E89C
	adds r0, r6, #0
	bl ClearText
	ldr r0, [r5]
	ldrh r0, [r0]
	bl DecodeMsg
	movs r2, #0xa3
	lsls r2, r2, #1
	adds r1, r7, r2
	movs r2, #0
	str r2, [sp]
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r3, r4, #0
	bl PutDrawText
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080796AC: .4byte 0x0200E89C

	thumb_func_start sub_80796B0
sub_80796B0: @ 0x080796B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sb, r0
	ldr r0, _0807978C @ =gUnk_08320FCE
	mov r8, r0
	ldr r4, _08079790 @ =0x0200E8A4
	adds r0, r4, #0
	movs r1, #0x1d
	movs r2, #0x1d
	movs r3, #0
	bl TmFillRect_t
	movs r1, #0
	ldr r2, _08079794 @ =0x0200E89C
	mov sl, r2
	mov ip, r4
	movs r6, #0x1a
	movs r3, #0x80
	lsls r3, r3, #5
	adds r4, r3, #0
_080796E0:
	adds r0, r1, #0
	adds r0, #0xa
	adds r5, r1, #1
	movs r7, #7
	subs r1, r7, r1
	muls r1, r6, r1
	add r1, r8
	lsls r0, r0, #6
	mov r3, ip
	adds r2, r0, r3
	movs r3, #0xc
_080796F6:
	ldrh r7, [r1]
	adds r0, r4, r7
	strh r0, [r2]
	adds r1, #2
	adds r2, #2
	subs r3, #1
	cmp r3, #0
	bge _080796F6
	adds r1, r5, #0
	cmp r1, #7
	ble _080796E0
	movs r4, #0
	mov r0, sl
	bl ClearText
	ldr r5, _08079798 @ =0x0200E976
	adds r0, r5, #0
	movs r1, #3
	movs r2, #0x16
	bl PutSpecialChar
	adds r0, r5, #0
	subs r0, #8
	movs r1, #3
	movs r2, #0x22
	bl PutSpecialChar
	subs r0, r5, #6
	movs r1, #3
	movs r2, #0x23
	bl PutSpecialChar
	adds r0, r5, #0
	subs r0, #0x88
	movs r1, #3
	movs r2, #0x24
	bl PutSpecialChar
	adds r0, r5, #0
	subs r0, #0x86
	movs r1, #3
	movs r2, #0x25
	bl PutSpecialChar
	adds r0, r5, #0
	subs r0, #0x80
	movs r1, #3
	movs r2, #0x1f
	bl PutSpecialChar
	adds r1, r5, #0
	subs r1, #0xd2
	mov r0, sb
	bl sub_8079624
	mov r0, sb
	bl GetUnitFid
	adds r1, r5, #0
	subs r1, #0x90
	movs r2, #0x8c
	lsls r2, r2, #2
	str r4, [sp]
	movs r3, #2
	bl PutFaceChibi
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807978C: .4byte gUnk_08320FCE
_08079790: .4byte 0x0200E8A4
_08079794: .4byte 0x0200E89C
_08079798: .4byte 0x0200E976

	thumb_func_start sub_807979C
sub_807979C: @ 0x0807979C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r6, [r5, #0x48]
	ldr r4, _080797D8 @ =gBg0Tm+0x4E
	adds r0, r4, #0
	movs r1, #1
	movs r2, #3
	movs r3, #0
	bl TmFillRect_t
	adds r0, r4, #6
	movs r1, #1
	movs r2, #3
	movs r3, #0
	bl TmFillRect_t
	subs r4, #0x4e
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_8079624
	movs r0, #1
	bl EnableBgSync
	adds r0, r5, #0
	bl Proc_Break
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080797D8: .4byte gBg0Tm+0x4E

	thumb_func_start sub_80797DC
sub_80797DC: @ 0x080797DC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080797FC @ =gUnk_08678E00
	adds r1, r4, #0
	bl SpawnProc
	ldr r2, _08079800 @ =0x0200E6D4
	adds r4, #0x30
	ldrb r4, [r4]
	lsls r1, r4, #2
	adds r1, r1, r2
	ldr r1, [r1]
	str r1, [r0, #0x48]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080797FC: .4byte gUnk_08678E00
_08079800: .4byte 0x0200E6D4

	thumb_func_start sub_8079804
sub_8079804: @ 0x08079804
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r0
	ldr r4, _080798D8 @ =gBg0Tm+0xD2
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0x16
	bl PutSpecialChar
	adds r0, r4, #0
	subs r0, #8
	movs r1, #3
	movs r2, #0x22
	bl PutSpecialChar
	subs r0, r4, #6
	movs r1, #3
	movs r2, #0x23
	bl PutSpecialChar
	adds r0, r4, #0
	subs r0, #0x88
	movs r1, #3
	movs r2, #0x24
	bl PutSpecialChar
	adds r0, r4, #0
	subs r0, #0x86
	movs r1, #3
	movs r2, #0x25
	bl PutSpecialChar
	subs r4, #0x80
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0x1f
	bl PutSpecialChar
	movs r1, #0
	ldr r0, _080798DC @ =0x0200E6D4
	mov sl, r0
	mov r2, sb
	adds r2, #0x30
	str r2, [sp, #4]
	ldr r3, _080798E0 @ =gBg1Tm
	mov r8, r3
	movs r6, #7
	mov ip, r6
	movs r7, #0x1a
	movs r0, #0x80
	lsls r0, r0, #5
	adds r5, r0, #0
_08079874:
	lsls r0, r1, #6
	adds r4, r1, #1
	mov r2, ip
	subs r1, r2, r1
	muls r1, r7, r1
	ldr r3, _080798E4 @ =gUnk_08320FCE
	adds r1, r1, r3
	mov r6, r8
	adds r2, r0, r6
	movs r3, #0xc
_08079888:
	ldrh r6, [r1]
	adds r0, r5, r6
	strh r0, [r2]
	adds r1, #2
	adds r2, #2
	subs r3, #1
	cmp r3, #0
	bge _08079888
	adds r1, r4, #0
	cmp r1, #7
	ble _08079874
	movs r4, #0
	ldr r1, [sp, #4]
	ldrb r1, [r1]
	lsls r0, r1, #2
	add r0, sl
	ldr r0, [r0]
	bl GetUnitFid
	ldr r1, _080798E8 @ =gBg0Tm+0x42
	movs r2, #0x8c
	lsls r2, r2, #2
	str r4, [sp]
	movs r3, #2
	bl PutFaceChibi
	mov r0, sb
	bl sub_80797DC
	movs r0, #3
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080798D8: .4byte gBg0Tm+0xD2
_080798DC: .4byte 0x0200E6D4
_080798E0: .4byte gBg1Tm
_080798E4: .4byte gUnk_08320FCE
_080798E8: .4byte gBg0Tm+0x42

	thumb_func_start sub_80798EC
sub_80798EC: @ 0x080798EC
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r1, _08079920 @ =0x0200E6D4
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl GetUnitFid
	ldr r1, _08079924 @ =gBg0Tm+0x42
	movs r2, #0x8c
	lsls r2, r2, #2
	movs r3, #0
	str r3, [sp]
	movs r3, #2
	bl PutFaceChibi
	adds r0, r4, #0
	bl sub_80797DC
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08079920: .4byte 0x0200E6D4
_08079924: .4byte gBg0Tm+0x42

	thumb_func_start sub_8079928
sub_8079928: @ 0x08079928
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r3, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r3, r0
	bhs _08079A0A
	ldr r4, _0807995C @ =0x0200E6D4
	adds r5, r7, #0
	adds r5, #0x36
	adds r6, r7, #0
	adds r6, #0x44
_08079948:
	cmp r2, #0
	beq _08079960
	lsls r0, r3, #2
	adds r0, r0, r4
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	cmp r0, r1
	beq _08079970
	b _080799FA
	.align 2, 0
_0807995C: .4byte 0x0200E6D4
_08079960:
	lsls r0, r3, #2
	adds r0, r0, r4
	ldr r0, [r0]
	ldrb r0, [r0, #0xb]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	bne _080799FA
_08079970:
	adds r0, r7, #0
	adds r0, #0x30
	movs r1, #0
	mov r8, r1
	strb r3, [r0]
	lsrs r0, r3, #1
	adds r2, r0, #0
	adds r4, r2, #0
	cmp r2, #0
	bne _0807998A
	strb r2, [r5]
	strh r2, [r6]
	b _08079A0A
_0807998A:
	movs r0, #0x2d
	adds r0, r0, r7
	mov ip, r0
	ldrb r3, [r0]
	subs r0, r3, #1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	cmp r2, r0
	bne _080799C0
	cmp r3, #0xe
	bhi _080799AA
	strb r4, [r5]
	mov r1, r8
	strh r1, [r6]
	b _08079A0A
_080799AA:
	movs r0, #6
	strb r0, [r5]
	mov r1, ip
	ldrb r0, [r1]
	subs r0, #0xd
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	lsls r0, r0, #4
	strh r0, [r6]
	b _08079A0A
_080799C0:
	ldrh r6, [r6]
	lsrs r1, r6, #4
	adds r0, r1, #0
	cmp r2, r0
	bls _080799D6
	adds r0, #6
	cmp r2, r0
	bge _080799D6
	subs r0, r4, r1
	strb r0, [r5]
	b _08079A0A
_080799D6:
	adds r3, r7, #0
	adds r3, #0x44
	ldrh r0, [r3]
	lsrs r2, r0, #4
	adds r0, r4, #0
	subs r1, r0, #1
	cmp r2, r1
	ble _080799EA
	movs r0, #1
	b _080799F2
_080799EA:
	subs r1, r0, #5
	cmp r2, r1
	bge _08079A0A
	movs r0, #5
_080799F2:
	strb r0, [r5]
	lsls r0, r1, #4
	strh r0, [r3]
	b _08079A0A
_080799FA:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r7, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r3, r0
	blo _08079948
_08079A0A:
	adds r0, r7, #0
	adds r0, #0x44
	ldrh r2, [r0]
	subs r2, #0x28
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8079A28
sub_8079A28: @ 0x08079A28
	push {r4, lr}
	ldr r0, _08079A90 @ =0x0200F0A4
	bl UnitRearrangeInit
	movs r4, #1
_08079A32:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _08079A54
	ldr r0, [r1]
	cmp r0, #0
	beq _08079A54
	movs r0, #0xc
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _08079A54
	adds r0, r1, #0
	bl UnitRearrangeAdd
_08079A54:
	adds r4, #1
	cmp r4, #0x3f
	ble _08079A32
	movs r4, #1
_08079A5C:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _08079A7E
	ldr r0, [r1]
	cmp r0, #0
	beq _08079A7E
	movs r0, #0xc
	ldrh r2, [r1, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _08079A7E
	adds r0, r1, #0
	bl UnitRearrangeAdd
_08079A7E:
	adds r4, #1
	cmp r4, #0x3f
	ble _08079A5C
	bl UnitRearrangeApply
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08079A90: .4byte 0x0200F0A4

	thumb_func_start sub_8079A94
sub_8079A94: @ 0x08079A94
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x35
	ldrb r0, [r4]
	bl sub_807CD24
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldrb r0, [r4]
	cmp r0, #0
	bne _08079B30
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	bne _08079AC2
	movs r0, #0xc
	movs r1, #1
	bl sub_807CEF0
	b _08079ACA
_08079AC2:
	movs r0, #0xc
	movs r1, #0
	bl sub_807CEF0
_08079ACA:
	ldr r4, _08079B24 @ =gBg0Tm
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08079B28 @ =gBg1Tm
	movs r1, #0xc
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	lsls r3, r7, #1
	adds r3, #2
	movs r0, #0
	str r0, [sp]
	movs r1, #4
	movs r2, #0xc
	bl sub_8041358
	ldr r0, _08079B2C @ =0x0200E864
	movs r1, #0xa2
	lsls r1, r1, #1
	adds r4, r4, r1
	movs r1, #0
	adds r2, r4, #0
	adds r3, r7, #0
	bl sub_807CD5C
	adds r1, r6, #0
	adds r1, #0x35
	adds r0, r6, #0
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, #5
	movs r0, #1
	movs r2, #0xa
	bl sub_804169C
	b _08079BAE
	.align 2, 0
_08079B24: .4byte gBg0Tm
_08079B28: .4byte gBg1Tm
_08079B2C: .4byte 0x0200E864
_08079B30:
	ldr r1, _08079B50 @ =0x0200E6D4
	adds r0, r6, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl GetUnitItemCount
	cmp r0, #0
	ble _08079B54
	movs r0, #6
	movs r1, #0
	bl sub_807CEF0
	b _08079B5C
	.align 2, 0
_08079B50: .4byte 0x0200E6D4
_08079B54:
	movs r0, #6
	movs r1, #1
	bl sub_807CEF0
_08079B5C:
	ldr r4, _08079BBC @ =gBg0Tm+0x200
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #0xb
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08079BC0 @ =gBg1Tm+0x200
	movs r1, #0xc
	movs r2, #0xb
	movs r3, #0
	bl TmFillRect_t
	lsls r3, r7, #1
	adds r3, #2
	movs r0, #0
	str r0, [sp]
	movs r1, #8
	movs r2, #0xd
	bl sub_8041358
	ldr r0, _08079BC4 @ =0x0200E864
	adds r5, r6, #0
	adds r5, #0x35
	ldrb r1, [r5]
	adds r4, #0x44
	adds r2, r4, #0
	adds r3, r7, #0
	bl sub_807CD5C
	adds r0, r6, #0
	adds r0, #0x33
	ldrb r5, [r5]
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, #9
	movs r0, #1
	movs r2, #0xa
	bl sub_804169C
_08079BAE:
	movs r0, #3
	bl EnableBgSync
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079BBC: .4byte gBg0Tm+0x200
_08079BC0: .4byte gBg1Tm+0x200
_08079BC4: .4byte 0x0200E864

	thumb_func_start sub_8079BC8
sub_8079BC8: @ 0x08079BC8
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, [r5, #0x14]
	str r0, [r5, #0x30]
	ldr r1, _08079C30 @ =0x0200E6D4
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r5, #0x2c]
	ldr r0, _08079C34 @ =gBg0Tm+0x200
	movs r1, #0xc
	movs r2, #0xb
	movs r3, #0
	bl TmFillRect_t
	movs r4, #0
	str r4, [sp]
	movs r0, #0
	movs r1, #8
	movs r2, #0xd
	movs r3, #0xc
	bl sub_8041358
	movs r0, #3
	bl EnableBgSync
	adds r0, r5, #0
	adds r0, #0x34
	strb r4, [r0]
	ldr r0, [r5, #0x2c]
	bl GetUnitItemCount
	adds r4, r5, #0
	adds r4, #0x35
	strb r0, [r4]
	bl ClearIcons
	ldrb r1, [r4]
	cmp r1, #0
	bne _08079C28
	ldr r0, [r5, #0x30]
	str r1, [r0, #0x5c]
	adds r0, r5, #0
	bl Proc_End
_08079C28:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08079C30: .4byte 0x0200E6D4
_08079C34: .4byte gBg0Tm+0x200

	thumb_func_start sub_8079C38
sub_8079C38: @ 0x08079C38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	movs r0, #0
	mov sb, r0
	adds r5, r6, #0
	adds r5, #0x34
	ldr r1, _08079D48 @ =0x0200E864
	mov r8, r1
	ldr r2, _08079D4C @ =gBg0Tm+0x2
	mov sl, r2
_08079C54:
	ldrb r1, [r5]
	lsls r0, r1, #3
	add r0, r8
	bl ClearText
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r4, r1, #0
	adds r4, #9
	lsls r4, r4, #6
	add r4, sl
	ldr r0, [r6, #0x2c]
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	bl GetItemIcon
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0x80
	lsls r2, r2, #7
	bl PutIcon
	ldrb r2, [r5]
	lsls r0, r2, #3
	mov r1, r8
	adds r4, r0, r1
	ldr r0, [r6, #0x2c]
	lsls r2, r2, #1
	adds r1, r0, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldrh r1, [r1]
	bl IsItemDisplayUseable
	movs r1, #0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08079CA4
	movs r1, #1
_08079CA4:
	adds r0, r4, #0
	bl Text_SetColor
	ldrb r2, [r5]
	lsls r0, r2, #3
	add r0, r8
	movs r1, #0
	bl Text_SetCursor
	ldrb r1, [r5]
	lsls r4, r1, #3
	add r4, r8
	ldr r0, [r6, #0x2c]
	lsls r1, r1, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	bl GetItemName
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	ldrb r1, [r5]
	lsls r0, r1, #3
	add r0, r8
	lsls r1, r1, #7
	add r1, sl
	movs r2, #0x91
	lsls r2, r2, #2
	adds r1, r1, r2
	bl PutText
	ldrb r0, [r5]
	lsls r2, r0, #1
	adds r0, r2, #0
	adds r0, #9
	lsls r0, r0, #6
	ldr r1, _08079D50 @ =gBg0Tm+0x16
	adds r7, r0, r1
	ldr r0, [r6, #0x2c]
	adds r1, r0, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldrh r1, [r1]
	bl IsItemDisplayUseable
	lsls r0, r0, #0x18
	movs r4, #1
	cmp r0, #0
	beq _08079D0C
	movs r4, #2
_08079D0C:
	ldr r0, [r6, #0x2c]
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	bl GetItemUses
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r4, #0
	bl PutNumberOrBlank
	ldrb r0, [r5]
	adds r0, #1
	movs r2, #0
	strb r0, [r5]
	adds r1, r6, #0
	adds r1, #0x35
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	blo _08079D54
	ldr r0, [r6, #0x30]
	str r2, [r0, #0x5c]
	adds r0, r6, #0
	bl Proc_Break
	b _08079D60
	.align 2, 0
_08079D48: .4byte 0x0200E864
_08079D4C: .4byte gBg0Tm+0x2
_08079D50: .4byte gBg0Tm+0x16
_08079D54:
	movs r0, #1
	add sb, r0
	mov r1, sb
	cmp r1, #4
	bgt _08079D60
	b _08079C54
_08079D60:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8079D70
sub_8079D70: @ 0x08079D70
	push {lr}
	adds r1, r0, #0
	ldr r0, _08079D80 @ =gUnk_08678E18
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_08079D80: .4byte gUnk_08678E18

	thumb_func_start sub_8079D84
sub_8079D84: @ 0x08079D84
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r4, r0, #0
	ldr r5, _08079E90 @ =0x0200E6D4
	adds r4, #0x30
	ldrb r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r5
	ldr r0, [r0]
	mov sb, r0
	ldr r7, _08079E94 @ =gBg0Tm+0x200
	adds r0, r7, #0
	movs r1, #0xc
	movs r2, #0xb
	movs r3, #0
	bl TmFillRect_t
	movs r0, #0
	str r0, [sp]
	movs r1, #8
	movs r2, #0xd
	movs r3, #0xc
	bl sub_8041358
	ldrb r4, [r4]
	lsls r0, r4, #2
	adds r0, r0, r5
	ldr r0, [r0]
	bl GetUnitItemCount
	mov sl, r0
	bl ClearIcons
	movs r6, #0
	cmp r6, sl
	bge _08079E78
	movs r0, #0x56
	adds r0, r0, r7
	mov r8, r0
	adds r7, #0x42
	movs r1, #0x90
	lsls r1, r1, #2
	str r1, [sp, #4]
_08079DE2:
	lsls r1, r6, #3
	ldr r0, _08079E98 @ =0x0200E864
	adds r4, r1, r0
	adds r0, r4, #0
	bl ClearText
	lsls r1, r6, #1
	mov r0, sb
	adds r0, #0x1c
	adds r5, r0, r1
	ldrh r0, [r5]
	bl GetItemIcon
	adds r1, r0, #0
	adds r0, r7, #0
	movs r2, #0x80
	lsls r2, r2, #7
	bl PutIcon
	ldrh r1, [r5]
	mov r0, sb
	bl IsItemDisplayUseable
	movs r1, #0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08079E1A
	movs r1, #1
_08079E1A:
	adds r0, r4, #0
	bl Text_SetColor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	ldrh r0, [r5]
	bl GetItemName
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	ldr r1, _08079E9C @ =gBg0Tm+0x2
	adds r1, #4
	ldr r0, [sp, #4]
	adds r1, r0, r1
	adds r0, r4, #0
	bl PutText
	ldrh r1, [r5]
	mov r0, sb
	bl IsItemDisplayUseable
	lsls r0, r0, #0x18
	movs r4, #1
	cmp r0, #0
	beq _08079E56
	movs r4, #2
_08079E56:
	ldrh r0, [r5]
	bl GetItemUses
	adds r2, r0, #0
	mov r0, r8
	adds r1, r4, #0
	bl PutNumberOrBlank
	movs r1, #0x80
	add r8, r1
	adds r7, #0x80
	ldr r0, [sp, #4]
	adds r0, #0x80
	str r0, [sp, #4]
	adds r6, #1
	cmp r6, sl
	blt _08079DE2
_08079E78:
	movs r0, #3
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079E90: .4byte 0x0200E6D4
_08079E94: .4byte gBg0Tm+0x200
_08079E98: .4byte 0x0200E864
_08079E9C: .4byte gBg0Tm+0x2

	thumb_func_start sub_8079EA0
sub_8079EA0: @ 0x08079EA0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r4, _08079F3C @ =0x0200E7DC
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _08079F40 @ =gUnk_08327254
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x18
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #2
	bl Text_SetColor
	adds r6, r5, #0
	adds r6, #0x2e
	adds r5, #0x2f
	ldrb r0, [r6]
	ldrb r5, [r5]
	subs r1, r0, r5
	adds r0, r4, #0
	bl Text_DrawNumberOrBlank
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	adds r0, r4, #0
	movs r1, #0x20
	bl Text_SetCursor
	ldr r1, _08079F44 @ =gUnk_0832725C
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x28
	bl Text_SetCursor
	ldr r1, _08079F48 @ =gUnk_08327260
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x38
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #2
	bl Text_SetColor
	ldrb r1, [r6]
	adds r0, r4, #0
	bl Text_DrawNumberOrBlank
	ldr r1, _08079F4C @ =gBg0Tm+0x6A
	adds r0, r4, #0
	bl PutText
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08079F3C: .4byte 0x0200E7DC
_08079F40: .4byte gUnk_08327254
_08079F44: .4byte gUnk_0832725C
_08079F48: .4byte gUnk_08327260
_08079F4C: .4byte gBg0Tm+0x6A

	thumb_func_start sub_8079F50
sub_8079F50: @ 0x08079F50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sl, r0
	lsls r1, r1, #0x19
	lsrs r7, r1, #0x18
	movs r0, #0xf
	ands r0, r7
	str r0, [sp]
	movs r0, #0x1f
	ands r0, r7
	lsls r0, r0, #6
	ldr r1, _08079FD4 @ =gBg2Tm
	adds r0, r0, r1
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r1, #0
	mov r8, r1
	mov r0, sl
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r7, r0
	bge _0807A05C
	ldr r2, _08079FD8 @ =0x0200E7E4
	mov sb, r2
_08079F8E:
	ldr r4, [sp]
	add r4, r8
	lsls r0, r4, #3
	mov r1, sb
	adds r5, r0, r1
	adds r0, r5, #0
	bl ClearText
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetCursor
	mov r1, sl
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	mov r2, r8
	adds r6, r7, r2
	cmp r0, #0
	bne _08079FE0
	lsls r0, r6, #2
	ldr r1, _08079FDC @ =0x0200E6D4
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08079FE0
	adds r0, r5, #0
	movs r1, #4
	bl Text_SetColor
	b _0807A00E
	.align 2, 0
_08079FD4: .4byte gBg2Tm
_08079FD8: .4byte 0x0200E7E4
_08079FDC: .4byte 0x0200E6D4
_08079FE0:
	lsls r0, r6, #2
	ldr r2, _0807A000 @ =0x0200E6D4
	adds r0, r0, r2
	ldr r1, [r0]
	movs r0, #8
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _0807A004
	lsls r0, r4, #3
	add r0, sb
	movs r1, #1
	bl Text_SetColor
	b _0807A00E
	.align 2, 0
_0807A000: .4byte 0x0200E6D4
_0807A004:
	lsls r0, r4, #3
	add r0, sb
	movs r1, #0
	bl Text_SetColor
_0807A00E:
	lsls r4, r4, #3
	add r4, sb
	lsls r0, r6, #2
	ldr r1, _0807A074 @ =0x0200E6D4
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	movs r1, #0x1f
	ands r1, r7
	lsls r1, r1, #5
	mov r2, r8
	lsls r0, r2, #3
	adds r1, r1, r0
	lsls r1, r1, #1
	ldr r0, _0807A078 @ =gBg2Tm
	adds r1, r1, r0
	adds r0, r4, #0
	bl PutText
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #1
	bhi _0807A05C
	adds r0, r7, r0
	mov r1, sl
	adds r1, #0x2d
	ldrb r1, [r1]
	cmp r0, r1
	blt _08079F8E
_0807A05C:
	movs r0, #4
	bl EnableBgSync
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A074: .4byte 0x0200E6D4
_0807A078: .4byte gBg2Tm

	thumb_func_start sub_807A07C
sub_807A07C: @ 0x0807A07C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x100
	bl GetPlayerDeployCount
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	movs r0, #0
	mov sb, r0
	mov r8, r0
	movs r4, #1
_0807A09A:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0807A0BE
	ldr r0, [r1]
	cmp r0, #0
	beq _0807A0BE
	mov r2, r8
	lsls r0, r2, #2
	add r0, sp
	str r1, [r0]
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
_0807A0BE:
	adds r4, #1
	cmp r4, #0x3f
	ble _0807A09A
	movs r5, #0
	cmp r5, r8
	bge _0807A118
	mov r6, sp
_0807A0CC:
	ldr r1, [r6]
	movs r0, #4
	ldrh r3, [r1, #0xc]
	ands r0, r3
	cmp r0, #0
	bne _0807A110
	adds r0, r1, #0
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807A110
	cmp r5, #0
	ble _0807A110
	mov r1, sp
	subs r1, #4
	lsls r0, r5, #2
	adds r4, r1, r0
_0807A0F0:
	subs r7, r5, #1
	ldr r0, [r4]
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807A110
	ldr r1, [r4, #4]
	ldr r0, [r4]
	str r0, [r4, #4]
	str r1, [r4]
	subs r4, #4
	subs r6, #4
	adds r5, r7, #0
	cmp r5, #0
	bgt _0807A0F0
_0807A110:
	adds r6, #4
	adds r5, #1
	cmp r5, r8
	blt _0807A0CC
_0807A118:
	ldr r0, _0807A170 @ =0x0200F0A4
	bl UnitRearrangeInit
	mov r0, r8
	cmp r0, #0
	beq _0807A134
	mov r4, sp
	mov r5, r8
_0807A128:
	ldm r4!, {r0}
	bl UnitRearrangeAdd
	subs r5, #1
	cmp r5, #0
	bne _0807A128
_0807A134:
	bl UnitRearrangeApply
	movs r4, #1
_0807A13A:
	adds r0, r4, #0
	bl GetUnit
	adds r2, r0, #0
	cmp r2, #0
	beq _0807A17E
	ldr r0, [r2]
	cmp r0, #0
	beq _0807A17E
	ldrh r1, [r2, #0xc]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0807A17E
	cmp sl, sb
	bls _0807A178
	ldr r3, _0807A174 @ =0x0000FFF7
	adds r0, r3, #0
	ands r0, r1
	strh r0, [r2, #0xc]
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	b _0807A17E
	.align 2, 0
_0807A170: .4byte 0x0200F0A4
_0807A174: .4byte 0x0000FFF7
_0807A178:
	movs r0, #8
	orrs r0, r1
	strh r0, [r2, #0xc]
_0807A17E:
	adds r4, #1
	cmp r4, #0x3f
	ble _0807A13A
	add sp, #0x100
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807A194
sub_807A194: @ 0x0807A194
	push {r4, lr}
	movs r4, #1
_0807A198:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0807A1BA
	ldr r0, [r1]
	cmp r0, #0
	beq _0807A1BA
	ldrh r2, [r1, #0xc]
	movs r0, #4
	ands r0, r2
	cmp r0, #0
	bne _0807A1BA
	movs r0, #8
	orrs r0, r2
	strh r0, [r1, #0xc]
_0807A1BA:
	adds r4, #1
	cmp r4, #0x3f
	ble _0807A198
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807A1C8
sub_807A1C8: @ 0x0807A1C8
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	adds r0, #0x2f
	movs r1, #0
	strb r1, [r0]
	subs r0, #2
	strb r1, [r0]
	ldr r0, _0807A228 @ =0x0200E7D4
	strb r1, [r0]
	movs r4, #1
_0807A1E0:
	adds r0, r4, #0
	bl GetUnit
	adds r3, r0, #0
	cmp r3, #0
	beq _0807A256
	ldr r0, [r3]
	cmp r0, #0
	beq _0807A256
	movs r0, #4
	ldrh r1, [r3, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0807A256
	ldr r1, _0807A22C @ =0x0200E6D4
	adds r2, r5, #0
	adds r2, #0x2d
	ldrb r7, [r2]
	lsls r0, r7, #2
	adds r0, r0, r1
	str r3, [r0]
	ldrh r1, [r3, #0xc]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0807A234
	ldr r7, _0807A230 @ =0x0000FFFD
	adds r0, r7, #0
	ands r0, r1
	strh r0, [r3, #0xc]
	adds r1, r5, #0
	adds r1, #0x2f
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807A23A
	.align 2, 0
_0807A228: .4byte 0x0200E7D4
_0807A22C: .4byte 0x0200E6D4
_0807A230: .4byte 0x0000FFFD
_0807A234:
	movs r0, #0xa
	orrs r0, r1
	strh r0, [r3, #0xc]
_0807A23A:
	ldr r0, _0807A264 @ =0x0200E7D4
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	cmp r6, #0
	beq _0807A256
	adds r0, r3, #0
	bl GetUnitMapSprite
	bl UseUnitSprite
_0807A256:
	adds r4, #1
	cmp r4, #0x3f
	ble _0807A1E0
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A264: .4byte 0x0200E7D4

	thumb_func_start sub_807A268
sub_807A268: @ 0x0807A268
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	bl ResetTextFont
	bl ClearIcons
	bl ApplyUnitSpritePalettes
	bl ResetText
	bl InitIcons
	movs r0, #4
	bl ApplyIconPalettes
	bl LoadUiFrameGraphics
	movs r0, #0
	movs r1, #0xe
	bl sub_8070E70
	ldr r2, _0807A2E0 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	bl ApplySystemObjectsGraphics
	bl ResetUnitSprites
	adds r0, r7, #0
	bl StartGreenText
	bl sub_8082CBC
	adds r1, r7, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807A2E4
	adds r1, r7, #0
	adds r1, #0x2e
	movs r0, #5
	b _0807A2EC
	.align 2, 0
_0807A2E0: .4byte gDispIo
_0807A2E4:
	bl GetPlayerDeployCount
	adds r1, r7, #0
	adds r1, #0x2e
_0807A2EC:
	strb r0, [r1]
	adds r4, r1, #0
	movs r0, #0
	str r0, [r7, #0x5c]
	adds r0, r7, #0
	movs r1, #1
	bl sub_807A1C8
	adds r0, r7, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	ldrb r2, [r4]
	cmp r2, r0
	bls _0807A30A
	strb r0, [r4]
_0807A30A:
	adds r0, r7, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	cmp r0, #6
	bne _0807A324
	bl sub_806EACC
	adds r1, r0, #0
	adds r0, r7, #0
	movs r2, #0
	bl sub_8079928
	b _0807A334
_0807A324:
	cmp r0, #9
	bne _0807A334
	ldr r0, _0807A514 @ =0x0200E7D8
	ldr r1, [r0]
	adds r0, r7, #0
	movs r2, #1
	bl sub_8079928
_0807A334:
	ldr r0, _0807A518 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0807A51C @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0807A520 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	adds r6, r7, #0
	adds r6, #0x42
	movs r3, #0x44
	adds r3, r3, r7
	mov r8, r3
	movs r4, #0x2a
	adds r4, r4, r7
	mov sb, r4
	movs r0, #0x29
	adds r0, r0, r7
	mov sl, r0
	ldr r5, _0807A524 @ =0x0200E864
	movs r4, #4
_0807A366:
	adds r0, r5, #0
	movs r1, #7
	bl InitTextDb
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0807A366
	ldr r4, _0807A528 @ =0x0200E88C
	adds r0, r4, #0
	movs r1, #7
	bl InitText
	adds r4, #8
	adds r0, r4, #0
	movs r1, #7
	bl InitText
	ldr r5, _0807A52C @ =0x0200E7E4
	movs r4, #0xf
_0807A38E:
	adds r0, r5, #0
	movs r1, #5
	bl InitText
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0807A38E
	ldr r0, _0807A530 @ =0x0200E7DC
	movs r1, #9
	bl InitTextDb
	ldr r0, _0807A534 @ =0x0200E89C
	movs r1, #7
	bl InitText
	ldr r0, _0807A538 @ =gUnk_0831A268
	ldr r1, _0807A53C @ =0x06014800
	bl Decompress
	ldr r0, _0807A540 @ =gUnk_0831AABC
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0807A544 @ =gUnk_08326930
	ldr r1, _0807A548 @ =0x06017000
	bl Decompress
	ldr r0, _0807A54C @ =gUnk_08326E64
	movs r1, #0xb0
	lsls r1, r1, #2
	movs r2, #0x80
	bl ApplyPaletteExt
	ldr r0, _0807A550 @ =gUnk_08327108
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r4, #0
	ldr r2, _0807A554 @ =gPal
	ldr r3, _0807A558 @ =0x000002CA
	adds r1, r2, r3
	adds r3, r6, #0
	movs r6, #0xf
	mov ip, r6
	movs r5, #0xc8
	lsls r5, r5, #1
_0807A3F4:
	ldrh r6, [r3]
	lsrs r0, r6, #2
	adds r0, r0, r4
	mov r6, ip
	ands r0, r6
	adds r0, r0, r5
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	adds r1, #2
	adds r4, #1
	cmp r4, #9
	ble _0807A3F4
	bl EnablePalSync
	ldr r0, _0807A55C @ =gDispIo
	mov ip, r0
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	mov r2, ip
	ldrb r2, [r2, #0xc]
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	mov r3, ip
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r4, [r3, #0x10]
	ands r0, r4
	movs r6, #2
	orrs r0, r6
	strb r0, [r3, #0x10]
	ldrb r0, [r3, #0x14]
	ands r1, r0
	orrs r1, r2
	strb r1, [r3, #0x14]
	movs r0, #3
	ldrb r1, [r3, #0x18]
	orrs r0, r1
	strb r0, [r3, #0x18]
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r3, [r3, #1]
	ands r0, r3
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r4, ip
	strb r0, [r4, #1]
	mov r1, ip
	adds r1, #0x2d
	movs r0, #0
	strb r0, [r1]
	adds r1, #4
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
	adds r4, #0x34
	ldrb r0, [r4]
	orrs r0, r2
	orrs r0, r6
	movs r5, #4
	orrs r0, r5
	movs r3, #8
	orrs r0, r3
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r4]
	adds r4, #1
	ldrb r0, [r4]
	orrs r0, r2
	orrs r0, r6
	orrs r0, r5
	orrs r0, r3
	orrs r0, r1
	strb r0, [r4]
	adds r4, #1
	ldrb r0, [r4]
	orrs r2, r0
	orrs r2, r6
	movs r0, #5
	rsbs r0, r0, #0
	ands r2, r0
	orrs r2, r3
	orrs r2, r1
	strb r2, [r4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	mov r1, r8
	ldrh r2, [r1]
	subs r2, #0x28
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	ldr r0, _0807A560 @ =gUnk_08320E18
	ldr r1, _0807A564 @ =0x06004800
	bl Decompress
	ldr r0, _0807A568 @ =gUnk_08319E88
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	bl sub_807CC28
	adds r0, r7, #0
	bl sub_8079424
	mov r2, sb
	ldrb r2, [r2]
	cmp r2, #1
	bne _0807A502
	adds r0, r7, #0
	bl sub_8079804
_0807A502:
	mov r3, sl
	ldrb r0, [r3]
	cmp r0, #0
	bne _0807A56C
	adds r0, r7, #0
	bl sub_8079A94
	b _0807A576
	.align 2, 0
_0807A514: .4byte 0x0200E7D8
_0807A518: .4byte gBg0Tm
_0807A51C: .4byte gBg1Tm
_0807A520: .4byte gBg2Tm
_0807A524: .4byte 0x0200E864
_0807A528: .4byte 0x0200E88C
_0807A52C: .4byte 0x0200E7E4
_0807A530: .4byte 0x0200E7DC
_0807A534: .4byte 0x0200E89C
_0807A538: .4byte gUnk_0831A268
_0807A53C: .4byte 0x06014800
_0807A540: .4byte gUnk_0831AABC
_0807A544: .4byte gUnk_08326930
_0807A548: .4byte 0x06017000
_0807A54C: .4byte gUnk_08326E64
_0807A550: .4byte gUnk_08327108
_0807A554: .4byte gPal
_0807A558: .4byte 0x000002CA
_0807A55C: .4byte gDispIo
_0807A560: .4byte gUnk_08320E18
_0807A564: .4byte 0x06004800
_0807A568: .4byte gUnk_08319E88
_0807A56C:
	cmp r0, #1
	bne _0807A576
	adds r0, r7, #0
	bl sub_8079D84
_0807A576:
	adds r0, r7, #0
	bl sub_807A67C
	movs r0, #0xf
	bl EnableBgSync
	ldr r0, [r7, #0x60]
	movs r1, #0xc0
	lsls r1, r1, #7
	movs r2, #0xd
	bl sub_8082D08
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807A59C
sub_807A59C: @ 0x0807A59C
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r0, #0
	bl InitBgs
	adds r0, r5, #0
	bl sub_807A268
	adds r1, r5, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807A5C6
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_806EA24
	b _0807A5EE
_0807A5C6:
	ldr r4, _0807A65C @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0807A660 @ =gUnk_08320D98
	movs r1, #0xa0
	lsls r1, r1, #1
	movs r2, #0x80
	bl ApplyPaletteExt
	adds r0, r5, #0
	bl sub_8082560
_0807A5EE:
	str r0, [r5, #0x58]
	ldr r0, _0807A664 @ =gUnk_08321FA4
	ldr r1, _0807A668 @ =0x020104A4
	bl Decompress
	ldr r0, _0807A66C @ =gUnk_08326910
	movs r1, #0xe0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r5, #0
	ldr r7, _0807A670 @ =gPlaySt
	ldr r6, _0807A674 @ =0x0600E000
_0807A60A:
	movs r0, #0xe
	ldrsb r0, [r7, r0]
	bl GetChapterInfo
	adds r4, r0, #0
	movs r0, #0xe
	ldrsb r0, [r7, r0]
	bl GetChapterInfo
	adds r1, r0, #0
	adds r4, #0x40
	ldrb r4, [r4]
	adds r0, r4, r5
	lsls r0, r0, #5
	adds r1, #0x3f
	ldrb r1, [r1]
	adds r0, r1, r0
	lsls r0, r0, #5
	ldr r1, _0807A668 @ =0x020104A4
	adds r0, r0, r1
	adds r1, r6, #0
	movs r2, #0x78
	bl CpuFastSet
	movs r0, #0xf0
	lsls r0, r0, #1
	adds r6, r6, r0
	adds r5, #1
	cmp r5, #0xb
	ble _0807A60A
	movs r2, #0
	movs r1, #0x1f
	ldr r0, _0807A678 @ =0x0600F81F
_0807A64C:
	strb r2, [r0]
	subs r0, #1
	subs r1, #1
	cmp r1, #0
	bge _0807A64C
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A65C: .4byte gUnk_0831B0A8
_0807A660: .4byte gUnk_08320D98
_0807A664: .4byte gUnk_08321FA4
_0807A668: .4byte 0x020104A4
_0807A66C: .4byte gUnk_08326910
_0807A670: .4byte gPlaySt
_0807A674: .4byte 0x0600E000
_0807A678: .4byte 0x0600F81F

	thumb_func_start sub_807A67C
sub_807A67C: @ 0x0807A67C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r6, r0, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A694
	b _0807A7C8
_0807A694:
	ldr r0, _0807A7A0 @ =gUnk_08326EE6
	mov sl, r0
	movs r1, #0x80
	lsls r1, r1, #8
	movs r0, #2
	bl SetBgChrOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	bl GetBgTilemap
	ldr r1, _0807A7A4 @ =0x0000E3C0
	bl TmFill
	movs r4, #0
	ldr r1, _0807A7A8 @ =gBg0Tm
	mov r8, r1
	ldr r0, _0807A7AC @ =0x0200E7DC
	mov sb, r0
	ldr r7, _0807A7B0 @ =gBg2Tm
	movs r5, #0
	movs r2, #0xae
	ldr r1, _0807A7B4 @ =0xFFFFE300
	adds r6, r1, #0
_0807A6CC:
	movs r3, #0xe
	adds r0, r5, r6
	adds r1, r0, #0
	adds r1, #0xe
	lsls r0, r2, #1
	adds r0, r0, r7
	adds r0, #0x1c
_0807A6DA:
	strh r1, [r0]
	subs r1, #1
	subs r0, #2
	subs r3, #1
	cmp r3, #0
	bge _0807A6DA
	adds r5, #0xf
	adds r2, #0x20
	adds r4, #1
	cmp r4, #0xb
	ble _0807A6CC
	movs r4, #0
	ldr r0, _0807A7B8 @ =gBg1Tm
	mov ip, r0
	movs r7, #0xf
	movs r1, #0x80
	lsls r1, r1, #5
	adds r6, r1, #0
_0807A6FE:
	movs r3, #0
	adds r5, r4, #1
	adds r0, r4, #4
	lsls r0, r0, #5
	adds r0, #0xd
	subs r2, r7, r4
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #1
	add r1, sl
	lsls r0, r0, #1
	mov r4, ip
	adds r2, r0, r4
_0807A718:
	ldrh r4, [r1]
	adds r0, r6, r4
	strh r0, [r2]
	adds r1, #2
	adds r2, #2
	adds r3, #1
	cmp r3, #0x10
	ble _0807A718
	adds r4, r5, #0
	cmp r4, #0xf
	ble _0807A6FE
	movs r0, #0x94
	lsls r0, r0, #1
	add r0, r8
	movs r1, #0
	strh r1, [r0]
	movs r0, #0x95
	lsls r0, r0, #1
	add r0, r8
	strh r1, [r0]
	movs r0, #0x9d
	lsls r0, r0, #3
	add r0, r8
	strh r1, [r0]
	ldr r0, _0807A7BC @ =0x000004EA
	add r0, r8
	strh r1, [r0]
	mov r0, sb
	bl ClearText
	ldr r4, _0807A7C0 @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	ldrh r0, [r0, #0x3c]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x48
	subs r1, r1, r0
	asrs r1, r1, #1
	mov r0, sb
	bl Text_SetCursor
	mov r0, sb
	movs r1, #0
	bl Text_SetColor
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	ldrh r0, [r0, #0x3c]
	bl DecodeMsg
	adds r1, r0, #0
	mov r0, sb
	bl Text_DrawString
	ldr r1, _0807A7C4 @ =0x00000462
	add r1, r8
	mov r0, sb
	bl PutText
	b _0807A82E
	.align 2, 0
_0807A7A0: .4byte gUnk_08326EE6
_0807A7A4: .4byte 0x0000E3C0
_0807A7A8: .4byte gBg0Tm
_0807A7AC: .4byte 0x0200E7DC
_0807A7B0: .4byte gBg2Tm
_0807A7B4: .4byte 0xFFFFE300
_0807A7B8: .4byte gBg1Tm
_0807A7BC: .4byte 0x000004EA
_0807A7C0: .4byte gPlaySt
_0807A7C4: .4byte 0x00000462
_0807A7C8:
	movs r0, #2
	movs r1, #0
	bl SetBgChrOffset
	ldr r0, _0807A844 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	adds r0, r6, #0
	adds r0, #0x44
	ldrh r1, [r0]
	lsrs r4, r1, #4
	adds r1, r4, #7
	adds r5, r0, #0
	adds r7, r6, #0
	adds r7, #0x33
	cmp r4, r1
	bge _0807A802
_0807A7EC:
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_8079F50
	adds r4, #1
	ldrh r1, [r5]
	lsrs r0, r1, #4
	adds r0, #7
	cmp r4, r0
	blt _0807A7EC
_0807A802:
	movs r0, #0
	str r0, [sp]
	movs r0, #0xd
	movs r1, #4
	movs r2, #0x11
	movs r3, #0x10
	bl sub_8041358
	ldr r1, _0807A848 @ =0x0000FF80
	ldrh r2, [r5]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	ldrb r0, [r7]
	cmp r0, #0
	bne _0807A82E
	adds r0, r6, #0
	bl sub_8079EA0
_0807A82E:
	movs r0, #7
	bl EnableBgSync
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807A844: .4byte gBg2Tm
_0807A848: .4byte 0x0000FF80

	thumb_func_start sub_807A84C
sub_807A84C: @ 0x0807A84C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r4, r0, #0
	ldr r1, _0807A898 @ =0x0200E7D8
	movs r0, #0
	str r0, [r1]
	str r0, [r4, #0x48]
	str r0, [r4, #0x4c]
	adds r1, r4, #0
	adds r1, #0x44
	movs r5, #0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x30
	strb r5, [r0]
	subs r1, #0x13
	movs r0, #0xff
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x29
	strb r5, [r0]
	adds r0, #1
	strb r5, [r0]
	adds r0, #1
	strb r5, [r0]
	adds r0, #0xb
	strb r5, [r0]
	bl sub_8036984
	adds r1, r0, #0
	cmp r1, #1
	bne _0807A89C
	adds r0, r4, #0
	adds r0, #0x2c
	strb r1, [r0]
	b _0807A8AA
	.align 2, 0
_0807A898: .4byte 0x0200E7D8
_0807A89C:
	adds r0, r4, #0
	adds r0, #0x2c
	strb r5, [r0]
	movs r0, #0x22
	movs r1, #0
	bl StartBgm
_0807A8AA:
	adds r0, r4, #0
	adds r0, #0x38
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	adds r3, r4, #0
	adds r3, #0x35
	adds r1, r4, #0
	adds r1, #0x33
	movs r2, #0
	subs r0, #9
_0807A8D6:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _0807A8D6
	movs r0, #0
	strb r0, [r3]
	adds r0, r4, #0
	bl sub_8082CF4
	str r0, [r4, #0x60]
	adds r0, r4, #0
	bl sub_807A59C
	adds r0, r4, #0
	bl sub_807C508
	mov r8, r0
	str r0, [r4, #0x50]
	ldr r5, _0807A93C @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r5, r0]
	bl GetChapterInfo
	adds r0, #0x41
	ldrb r0, [r0]
	lsls r6, r0, #0x1b
	lsrs r6, r6, #0x18
	movs r0, #0xe
	ldrsb r0, [r5, r0]
	bl GetChapterInfo
	adds r0, #0x42
	ldrb r0, [r0]
	lsls r4, r0, #0x1b
	lsrs r4, r4, #0x18
	movs r0, #0xe
	ldrsb r0, [r5, r0]
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r3, [r0]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_807B8CC
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807A93C: .4byte gPlaySt

	thumb_func_start sub_807A940
sub_807A940: @ 0x0807A940
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0x30
	ldrb r0, [r0]
	mov r8, r0
	ldr r2, _0807A968 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0807A96C
	adds r1, r4, #0
	adds r1, #0x3f
	movs r0, #2
	b _0807A972
	.align 2, 0
_0807A968: .4byte gKeySt
_0807A96C:
	adds r1, r4, #0
	adds r1, #0x3f
	movs r0, #1
_0807A972:
	strb r0, [r1]
	adds r5, r1, #0
	ldr r1, [r2]
	movs r0, #8
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807A9F8
	adds r1, r4, #0
	adds r1, #0x2c
	movs r6, #1
	adds r0, r6, #0
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _0807A9F8
	adds r1, r4, #0
	adds r1, #0x3c
	adds r0, r6, #0
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807A9D8
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807A9D8
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	ldr r0, [r4, #0x50]
	adds r0, #0x2a
	strb r6, [r0]
	ldr r0, _0807A9D4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	adds r5, r4, #0
	adds r5, #0x30
	adds r6, r4, #0
	adds r6, #0x36
	cmp r0, #0
	bge _0807A9CC
	b _0807AB76
_0807A9CC:
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807AB76
	.align 2, 0
_0807A9D4: .4byte gPlaySt
_0807A9D8:
	ldr r0, _0807A9F4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	adds r5, r4, #0
	adds r5, #0x30
	adds r6, r4, #0
	adds r6, #0x36
	cmp r0, #0
	bge _0807A9EC
	b _0807AB76
_0807A9EC:
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807AB76
	.align 2, 0
_0807A9F4: .4byte gPlaySt
_0807A9F8:
	ldr r1, [r2]
	movs r3, #0x80
	adds r0, r3, #0
	ldrh r6, [r1, #6]
	ands r0, r6
	cmp r0, #0
	bne _0807AA16
	adds r0, r3, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	beq _0807AA70
	ldrb r0, [r5]
	cmp r0, #2
	bne _0807AA70
_0807AA16:
	adds r1, r4, #0
	adds r1, #0x3c
	ldrb r2, [r1]
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0807AA44
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0807AA44
	strb r0, [r1]
	ldr r0, _0807AA40 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	adds r5, r4, #0
	adds r5, #0x30
	adds r6, r4, #0
	adds r6, #0x36
	b _0807AAE6
	.align 2, 0
_0807AA40: .4byte gPlaySt
_0807AA44:
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r3, [r0]
	adds r3, #2
	adds r2, r4, #0
	adds r2, #0x2d
	adds r5, r0, #0
	adds r6, r4, #0
	adds r6, #0x36
	ldrb r2, [r2]
	cmp r3, r2
	blt _0807AA5E
	b _0807AB76
_0807AA5E:
	strb r3, [r5]
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	movs r0, #1
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	b _0807AB76
_0807AA70:
	ldr r1, [r2]
	movs r3, #0x40
	adds r0, r3, #0
	ldrh r6, [r1, #6]
	ands r0, r6
	cmp r0, #0
	bne _0807AA8E
	adds r0, r3, #0
	ldrh r6, [r1, #0x10]
	ands r0, r6
	cmp r0, #0
	beq _0807AB10
	ldrb r5, [r5]
	cmp r5, #2
	bne _0807AB10
_0807AA8E:
	adds r7, r4, #0
	adds r7, #0x3c
	ldrb r2, [r7]
	movs r0, #1
	mov ip, r0
	ands r0, r2
	adds r6, r4, #0
	adds r6, #0x36
	cmp r0, #0
	beq _0807AAF8
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0807AAF8
	adds r0, r4, #0
	adds r0, #0x44
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807AAF8
	adds r0, r3, #0
	ldrh r1, [r1, #8]
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x30
	cmp r0, #0
	beq _0807AB76
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807AB76
	adds r1, r4, #0
	adds r1, #0x2c
	mov r0, ip
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _0807AB76
	movs r0, #2
	orrs r0, r2
	strb r0, [r7]
	ldr r0, _0807AAF4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
_0807AAE6:
	cmp r0, #0
	blt _0807AB76
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807AB76
	.align 2, 0
_0807AAF4: .4byte gPlaySt
_0807AAF8:
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r1, [r0]
	subs r1, #2
	adds r5, r0, #0
	cmp r1, #0
	blt _0807AB76
	strb r1, [r5]
	ldrb r0, [r6]
	subs r0, #1
	strb r0, [r6]
	b _0807AB76
_0807AB10:
	ldr r0, [r2]
	ldrh r1, [r0, #6]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0807AB40
	adds r1, r4, #0
	adds r1, #0x30
	ldrb r2, [r1]
	movs r0, #1
	ands r0, r2
	adds r5, r1, #0
	adds r6, r4, #0
	adds r6, #0x36
	cmp r0, #0
	beq _0807AB76
	adds r1, #0xc
	movs r0, #3
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #3
	beq _0807AB76
	subs r0, r2, #1
	b _0807AB74
_0807AB40:
	movs r0, #0x10
	ands r0, r1
	adds r5, r4, #0
	adds r5, #0x30
	adds r6, r4, #0
	adds r6, #0x36
	cmp r0, #0
	beq _0807AB76
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #3
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #3
	beq _0807AB76
	ldrb r1, [r5]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807AB76
	adds r0, r1, #1
	adds r1, r4, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	cmp r0, r1
	bge _0807AB76
_0807AB74:
	strb r0, [r5]
_0807AB76:
	ldrb r2, [r5]
	cmp r2, r8
	beq _0807ABA4
	adds r0, r4, #0
	bl sub_80798EC
	ldr r0, [r4, #0x5c]
	cmp r0, #0
	beq _0807AB8C
	bl Proc_End
_0807AB8C:
	adds r0, r4, #0
	bl sub_8079D70
	str r0, [r4, #0x5c]
	ldr r0, _0807ABCC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807ABA4
	movs r0, #0x66
	bl m4aSongNumStart
_0807ABA4:
	ldrb r0, [r6]
	cmp r0, #6
	bne _0807ABD0
	ldrb r2, [r5]
	adds r2, #2
	asrs r2, r2, #1
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	subs r0, #1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	cmp r2, r0
	bgt _0807ABD0
	movs r0, #5
	strb r0, [r6]
	movs r0, #1
	b _0807ABEA
	.align 2, 0
_0807ABCC: .4byte gPlaySt
_0807ABD0:
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #0
	bne _0807ABE8
	ldrb r5, [r5]
	lsrs r0, r5, #1
	cmp r0, #0
	beq _0807ABE8
	movs r0, #1
	strb r0, [r6]
	subs r0, #2
	b _0807ABEA
_0807ABE8:
	movs r0, #0
_0807ABEA:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_807ABF4
sub_807ABF4: @ 0x0807ABF4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x44
	ldrh r0, [r1]
	lsrs r4, r0, #4
	adds r2, r6, #0
	adds r2, #0x31
	ldrb r0, [r2]
	adds r3, r6, #0
	adds r3, #0x30
	strb r0, [r3]
	movs r0, #0xff
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x40
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	beq _0807AC2A
	ldrb r0, [r3]
	lsrs r1, r0, #1
	cmp r1, r4
	ble _0807AC38
	adds r0, r4, #6
	cmp r1, r0
	bge _0807AC38
_0807AC2A:
	ldrb r3, [r3]
	lsrs r0, r3, #1
	subs r0, r0, r4
	adds r1, r6, #0
	adds r1, #0x36
	strb r0, [r1]
	b _0807AC8E
_0807AC38:
	adds r0, r6, #0
	adds r0, #0x40
	ldrh r0, [r0]
	adds r4, r6, #0
	adds r4, #0x44
	strh r0, [r4]
	adds r0, r6, #0
	adds r0, #0x37
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0x36
	strb r0, [r1]
	ldr r0, _0807AC94 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r1, _0807AC98 @ =0x0000FF80
	ldrh r2, [r4]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	ldrh r1, [r4]
	lsrs r5, r1, #4
	adds r0, r5, #7
	cmp r5, r0
	bge _0807AC88
_0807AC72:
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_8079F50
	adds r5, #1
	ldrh r1, [r4]
	lsrs r0, r1, #4
	adds r0, #7
	cmp r5, r0
	blt _0807AC72
_0807AC88:
	movs r0, #4
	bl EnableBgSync
_0807AC8E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807AC94: .4byte gBg2Tm
_0807AC98: .4byte 0x0000FF80

	thumb_func_start sub_807AC9C
sub_807AC9C: @ 0x0807AC9C
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0x35
	ldrb r5, [r7]
	cmp r5, #0
	bne _0807ACB2
	movs r1, #6
	bl Proc_Goto
	b _0807ACCC
_0807ACB2:
	cmp r5, #1
	bne _0807ACCC
	adds r0, r6, #0
	bl sub_807ABF4
	adds r0, r6, #0
	adds r0, #0x29
	movs r4, #0
	strb r5, [r0]
	adds r0, r6, #0
	bl sub_8079D84
	strb r4, [r7]
_0807ACCC:
	ldr r0, _0807ACE4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807ACDC
	movs r0, #0x6b
	bl m4aSongNumStart
_0807ACDC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807ACE4: .4byte gPlaySt

	thumb_func_start sub_807ACE8
sub_807ACE8: @ 0x0807ACE8
	push {lr}
	ldr r0, [r0, #0x50]
	movs r1, #2
	bl Proc_Goto
	bl EndGreenText
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807ACFC
sub_807ACFC: @ 0x0807ACFC
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r5, #0
	ldr r2, _0807AD68 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	movs r4, #1
_0807AD22:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0807AD44
	ldr r0, [r1]
	cmp r0, #0
	beq _0807AD44
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _0807AD44
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0807AD44:
	adds r4, #1
	cmp r4, #0x3f
	ble _0807AD22
	cmp r5, #0
	bne _0807AD62
	str r5, [r6, #0x58]
	adds r1, r6, #0
	adds r1, #0x3e
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	movs r1, #0xb
	bl Proc_Goto
	str r5, [r6, #0x50]
_0807AD62:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807AD68: .4byte gDispIo

	thumb_func_start sub_807AD6C
sub_807AD6C: @ 0x0807AD6C
	push {lr}
	bl sub_807A84C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807AD78
sub_807AD78: @ 0x0807AD78
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r0, #0x35
	ldrb r2, [r0]
	subs r0, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	str r0, [sp]
	str r2, [sp, #4]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r4, [r5]
	cmp r4, #0
	beq _0807ADA6
	cmp r4, #1
	bne _0807ADA4
	b _0807AF30
_0807ADA4:
	b _0807B0BC
_0807ADA6:
	adds r0, r6, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	mov sb, r0
	ldr r2, _0807ADCC @ =gKeySt
	cmp r1, #0
	beq _0807ADD0
	ldr r1, [r2]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807ADD0
	bl sub_807089C
	mov r0, sb
	strb r4, [r0]
	b _0807B0BC
	.align 2, 0
_0807ADCC: .4byte gKeySt
_0807ADD0:
	ldr r1, [r2]
	ldrh r3, [r1, #8]
	movs r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0807AE0C
	mov r1, sb
	ldrb r0, [r1]
	adds r4, r6, #0
	adds r4, #0x35
	cmp r0, #0
	bne _0807AECC
	adds r0, r6, #0
	bl sub_807CCC4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807AECC
	ldr r0, _0807AE08 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807AECC
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807AECC
	.align 2, 0
_0807AE08: .4byte gPlaySt
_0807AE0C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0807AE2A
	mov r2, sb
	ldrb r0, [r2]
	adds r4, r6, #0
	adds r4, #0x35
	cmp r0, #0
	bne _0807AECC
	adds r0, r6, #0
	bl sub_807CDF4
	b _0807AECC
_0807AE2A:
	ldrh r1, [r1, #6]
	movs r0, #0x40
	mov ip, r0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	beq _0807AE6E
	adds r0, r6, #0
	adds r0, #0x35
	ldrb r5, [r0]
	adds r7, r6, #0
	adds r7, #0x33
	adds r2, r7, r5
	ldrb r1, [r2]
	adds r4, r0, #0
	cmp r1, #0
	beq _0807AE56
	subs r0, r1, #1
	strb r0, [r2]
	b _0807AECC
_0807AE56:
	mov r0, ip
	ands r0, r3
	cmp r0, #0
	beq _0807AECC
	adds r0, r5, #0
	bl sub_807CD24
	ldrb r2, [r4]
	adds r1, r2, r7
	subs r0, #1
	strb r0, [r1]
	b _0807AECC
_0807AE6E:
	movs r0, #0x80
	mov sl, r0
	ands r0, r1
	cmp r0, #0
	beq _0807AEBA
	adds r4, r6, #0
	adds r4, #0x35
	ldrb r0, [r4]
	adds r7, r6, #0
	adds r7, #0x33
	adds r1, r7, r0
	ldrb r5, [r1]
	str r2, [sp, #8]
	bl sub_807CD24
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r0, #1
	ldr r2, [sp, #8]
	cmp r5, r0
	bge _0807AEA4
	ldrb r2, [r4]
	adds r1, r2, r7
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0807AECC
_0807AEA4:
	ldr r1, [r2]
	mov r0, sl
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807AECC
	ldrb r1, [r4]
	adds r0, r1, r7
	mov r2, r8
	strb r2, [r0]
	b _0807AECC
_0807AEBA:
	movs r0, #2
	ands r0, r3
	adds r4, r6, #0
	adds r4, #0x35
	cmp r0, #0
	beq _0807AECC
	adds r0, r6, #0
	bl sub_807AC9C
_0807AECC:
	adds r1, r4, #0
	ldr r0, [sp, #4]
	ldrb r2, [r1]
	cmp r0, r2
	beq _0807AED8
	b _0807B0BC
_0807AED8:
	adds r0, r6, #0
	adds r0, #0x33
	adds r0, r2, r0
	ldr r1, [sp]
	ldrb r0, [r0]
	cmp r1, r0
	bne _0807AEE8
	b _0807B0BC
_0807AEE8:
	mov r2, sb
	ldrb r0, [r2]
	cmp r0, #0
	beq _0807AEF6
	adds r0, r6, #0
	bl sub_807CDF4
_0807AEF6:
	ldrb r4, [r4]
	cmp r4, #1
	bne _0807AF18
	ldr r4, [r6, #0x50]
	adds r0, r6, #0
	adds r0, #0x34
	ldrb r0, [r0]
	movs r1, #1
	bl sub_807CF2C
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	subs r1, #5
	adds r0, r4, #0
	bl sub_807B8B0
_0807AF18:
	ldr r0, _0807AF2C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807AF24
	b _0807B0BC
_0807AF24:
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807B0BC
	.align 2, 0
_0807AF2C: .4byte gPlaySt
_0807AF30:
	ldr r7, _0807AF60 @ =gKeySt
	ldr r0, [r7]
	ldrh r1, [r0, #8]
	adds r3, r1, #0
	ands r3, r4
	cmp r3, #0
	beq _0807AF68
	adds r0, r6, #0
	bl sub_807CCC4
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807AF4C
	b _0807B0BC
_0807AF4C:
	ldr r0, _0807AF64 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807AF58
	b _0807B0BC
_0807AF58:
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807B0BC
	.align 2, 0
_0807AF60: .4byte gKeySt
_0807AF64: .4byte gPlaySt
_0807AF68:
	movs r4, #2
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _0807B010
	adds r0, r2, #0
	cmp r0, #0
	bne _0807AFB6
	ldr r0, _0807AFA8 @ =gBg0Tm+0x28
	movs r1, #0xa
	movs r2, #3
	movs r3, #0
	bl TmFillRect_t
	movs r0, #1
	bl EnableBgSync
	adds r1, r6, #0
	adds r1, #0x3c
	adds r0, r4, #0
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r2, r6, #0
	adds r2, #0x31
	ldrb r1, [r2]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _0807AFAC
	movs r0, #0xff
	strb r0, [r2]
	b _0807AFF8
	.align 2, 0
_0807AFA8: .4byte gBg0Tm+0x28
_0807AFAC:
	adds r0, r6, #0
	movs r1, #0xa
	bl Proc_Goto
	b _0807AFF8
_0807AFB6:
	cmp r0, #1
	bne _0807AFF8
	strb r3, [r5]
	ldr r4, [r6, #0x50]
	adds r0, r6, #0
	adds r0, #0x34
	ldrb r0, [r0]
	movs r1, #1
	bl sub_807CF2C
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	subs r1, #5
	adds r0, r4, #0
	bl sub_807B8B0
	adds r0, r6, #0
	bl sub_8079A94
	adds r1, r6, #0
	adds r1, #0x30
	ldrb r0, [r1]
	adds r2, r6, #0
	adds r2, #0x32
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r0, [r0]
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_80798EC
_0807AFF8:
	ldr r0, _0807B00C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807B0BC
	movs r0, #0x6b
	bl m4aSongNumStart
	b _0807B0BC
	.align 2, 0
_0807B00C: .4byte gPlaySt
_0807B010:
	adds r0, r6, #0
	bl sub_807A940
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r0, #0
	beq _0807B040
	lsls r0, r1, #0x18
	asrs r4, r0, #0x18
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	bne _0807B032
	adds r0, r6, #0
	movs r1, #7
	bl Proc_Goto
_0807B032:
	cmp r4, #1
	bne _0807B0BC
	adds r0, r6, #0
	movs r1, #8
	bl Proc_Goto
	b _0807B0BC
_0807B040:
	ldr r1, [r7]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807B06E
	adds r1, r6, #0
	adds r1, #0x3c
	movs r0, #3
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #3
	beq _0807B06E
	adds r1, r6, #0
	adds r1, #0x3b
	movs r0, #6
	strb r0, [r1]
	adds r0, r6, #0
	movs r1, #3
	bl Proc_Goto
	b _0807B0BC
_0807B06E:
	ldr r0, _0807B0CC @ =gKeySt
	ldr r1, [r0]
	movs r0, #4
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807B0BC
	adds r0, r6, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	beq _0807B0BC
	ldr r2, _0807B0D0 @ =0x0200E7D8
	ldr r1, _0807B0D4 @ =0x0200E6D4
	adds r0, r6, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	str r0, [r2]
	ldr r0, _0807B0D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807B0AC
	movs r0, #0x6a
	bl m4aSongNumStart
_0807B0AC:
	adds r1, r6, #0
	adds r1, #0x3b
	movs r0, #9
	strb r0, [r1]
	adds r0, r6, #0
	movs r1, #0xd
	bl Proc_Goto
_0807B0BC:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B0CC: .4byte gKeySt
_0807B0D0: .4byte 0x0200E7D8
_0807B0D4: .4byte 0x0200E6D4
_0807B0D8: .4byte gPlaySt

	thumb_func_start sub_807B0DC
sub_807B0DC: @ 0x0807B0DC
	adds r0, #0x3e
	movs r1, #1
	strb r1, [r0]
	bx lr

	thumb_func_start sub_807B0E4
sub_807B0E4: @ 0x0807B0E4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x3e
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807B0FA
	bl sub_8079A28
	bl sub_802B7E4
	b _0807B10C
_0807B0FA:
	adds r1, r4, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807B10C
	bl sub_8036994
_0807B10C:
	bl EndGreenText
	ldr r0, [r4, #0x58]
	bl Proc_End
	ldr r0, [r4, #0x50]
	cmp r0, #0
	beq _0807B122
	movs r1, #5
	bl Proc_Goto
_0807B122:
	bl InitPlayerDeployUnitPositions
	bl ResetUnitSprites
	bl RefreshEntityMaps
	bl RefreshUnitSprites
	ldr r3, _0807B170 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0xc0
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0807B174 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #0x1f
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807B170: .4byte gDispIo
_0807B174: .4byte 0x0000FFE0

	thumb_func_start sub_807B178
sub_807B178: @ 0x0807B178
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x44
	ldrh r1, [r6]
	movs r4, #0xf
	adds r0, r1, #0
	ands r0, r4
	cmp r0, #0
	bne _0807B19A
	lsrs r1, r1, #4
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_8079F50
_0807B19A:
	adds r0, r5, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #2
	ldrh r1, [r6]
	subs r0, r1, r0
	strh r0, [r6]
	adds r0, r4, #0
	ldrh r1, [r6]
	ands r0, r1
	cmp r0, #0
	bne _0807B1F4
	adds r0, r5, #0
	bl sub_807A940
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	cmp r4, #0
	bne _0807B1C8
	adds r0, r5, #0
	movs r1, #1
	bl Proc_Goto
_0807B1C8:
	cmp r4, #1
	bne _0807B1D4
	adds r0, r5, #0
	movs r1, #8
	bl Proc_Goto
_0807B1D4:
	ldrh r6, [r6]
	lsrs r0, r6, #3
	adds r0, #0xe
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _0807B1FC @ =gBg2Tm
	adds r0, r0, r1
	movs r1, #0xc
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
_0807B1F4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807B1FC: .4byte gBg2Tm

	thumb_func_start sub_807B200
sub_807B200: @ 0x0807B200
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x44
	ldrh r1, [r6]
	movs r5, #0xf
	adds r0, r1, #0
	ands r0, r5
	cmp r0, #0
	bne _0807B222
	lsrs r1, r1, #4
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_8079F50
_0807B222:
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #2
	ldrh r1, [r6]
	adds r0, r1, r0
	strh r0, [r6]
	adds r0, r5, #0
	ldrh r1, [r6]
	ands r0, r1
	cmp r0, #0
	bne _0807B280
	adds r0, r4, #0
	bl sub_807A940
	lsls r0, r0, #0x18
	asrs r5, r0, #0x18
	cmp r5, #0
	bne _0807B250
	adds r0, r4, #0
	movs r1, #1
	bl Proc_Goto
_0807B250:
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0807B260
	adds r0, r4, #0
	movs r1, #7
	bl Proc_Goto
_0807B260:
	ldrh r6, [r6]
	lsrs r0, r6, #3
	subs r0, #2
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _0807B288 @ =gBg2Tm
	adds r0, r0, r1
	movs r1, #0xc
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
_0807B280:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807B288: .4byte gBg2Tm

	thumb_func_start sub_807B28C
sub_807B28C: @ 0x0807B28C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	subs r0, #2
	cmp r0, #8
	bls _0807B29C
	b _0807B3C4
_0807B29C:
	lsls r0, r0, #2
	ldr r1, _0807B2A8 @ =_0807B2AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B2A8: .4byte _0807B2AC
_0807B2AC: @ jump table
	.4byte _0807B2D0 @ case 0
	.4byte _0807B2DE @ case 1
	.4byte _0807B2D6 @ case 2
	.4byte _0807B2E4 @ case 3
	.4byte _0807B380 @ case 4
	.4byte _0807B308 @ case 5
	.4byte _0807B2F4 @ case 6
	.4byte _0807B328 @ case 7
	.4byte _0807B336 @ case 8
_0807B2D0:
	adds r0, r4, #0
	movs r1, #2
	b _0807B2E8
_0807B2D6:
	adds r0, r4, #0
	bl sub_8081E3C
	b _0807B2EC
_0807B2DE:
	adds r0, r4, #0
	movs r1, #4
	b _0807B2E8
_0807B2E4:
	adds r0, r4, #0
	movs r1, #0
_0807B2E8:
	bl sub_80815BC
_0807B2EC:
	adds r0, r4, #0
	bl sub_807ACE8
	b _0807B3C4
_0807B2F4:
	ldr r0, [r4, #0x58]
	bl Proc_End
	ldr r0, _0807B304 @ =ProcScr_Unk_0868B010
	adds r1, r4, #0
	bl SpawnProcLocking
	b _0807B350
	.align 2, 0
_0807B304: .4byte ProcScr_Unk_0868B010
_0807B308:
	ldr r0, [r4, #0x58]
	bl Proc_End
	movs r0, #0x80
	lsls r0, r0, #1
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #0
	bl StartBgmVolumeChange
	bl InitPlayerDeployUnitPositions
	adds r0, r4, #0
	bl sub_8089234
	b _0807B350
_0807B328:
	ldr r0, [r4, #0x58]
	bl Proc_End
	adds r0, r4, #0
	bl sub_8076250
	b _0807B350
_0807B336:
	ldr r0, [r4, #0x58]
	bl Proc_End
	ldr r1, _0807B378 @ =0x0200E6D4
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r4, #0
	bl sub_8095DF0
_0807B350:
	adds r0, r4, #0
	bl sub_807ACE8
	ldr r2, _0807B37C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	b _0807B3C4
	.align 2, 0
_0807B378: .4byte 0x0200E6D4
_0807B37C: .4byte gDispIo
_0807B380:
	ldr r0, [r4, #0x58]
	bl Proc_End
	adds r0, r4, #0
	bl sub_807ACE8
	ldr r2, _0807B3D0 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #4
	bl sub_806EAE4
	ldr r1, _0807B3D4 @ =0x0200E6D4
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r1, r4, #0
	bl sub_80702BC
_0807B3C4:
	adds r0, r4, #0
	bl Proc_Break
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807B3D0: .4byte gDispIo
_0807B3D4: .4byte 0x0200E6D4

	thumb_func_start sub_807B3D8
sub_807B3D8: @ 0x0807B3D8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r0, #0x3b
	ldrb r0, [r0]
	subs r0, #2
	cmp r0, #8
	bhi _0807B466
	lsls r0, r0, #2
	ldr r1, _0807B3F0 @ =_0807B3F4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B3F0: .4byte _0807B3F4
_0807B3F4: @ jump table
	.4byte _0807B418 @ case 0
	.4byte _0807B418 @ case 1
	.4byte _0807B418 @ case 2
	.4byte _0807B418 @ case 3
	.4byte _0807B458 @ case 4
	.4byte _0807B432 @ case 5
	.4byte _0807B458 @ case 6
	.4byte _0807B458 @ case 7
	.4byte _0807B440 @ case 8
_0807B418:
	adds r0, r4, #0
	bl sub_807A268
	ldr r0, [r4, #0x50]
	movs r1, #0
	bl Proc_Goto
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r4, #0
	bl sub_80829E8
	b _0807B466
_0807B432:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x80
	movs r2, #0x20
	movs r3, #0
	bl StartBgmVolumeChange
_0807B440:
	movs r0, #0x22
	movs r1, #0
	bl StartBgm
	adds r0, r4, #0
	bl sub_807A59C
	ldr r0, [r4, #0x50]
	movs r1, #0
	bl Proc_Goto
	b _0807B466
_0807B458:
	adds r0, r4, #0
	bl sub_807A59C
	ldr r0, [r4, #0x50]
	movs r1, #0
	bl Proc_Goto
_0807B466:
	adds r0, r4, #0
	adds r0, #0x3b
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #6
	bne _0807B47C
	adds r0, r4, #0
	movs r1, #0xf
	bl Proc_Goto
	b _0807B490
_0807B47C:
	cmp r1, #6
	bls _0807B48A
	adds r0, r4, #0
	movs r1, #0xc
	bl Proc_Goto
	b _0807B490
_0807B48A:
	adds r0, r4, #0
	bl Proc_Break
_0807B490:
	movs r0, #0
	strb r0, [r5]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807B49C
sub_807B49C: @ 0x0807B49C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, _0807B4BC @ =0x0200E6D4
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_80796B0
	adds r4, #0x42
	movs r0, #0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807B4BC: .4byte 0x0200E6D4

	thumb_func_start sub_807B4C0
sub_807B4C0: @ 0x0807B4C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	mov r5, r8
	adds r5, #0x42
	ldrh r0, [r5]
	cmp r0, #0
	bne _0807B50C
	mov r1, r8
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	mov r0, r8
	bl sub_807A67C
	ldr r0, _0807B594 @ =gBg0Tm
	movs r1, #0xc
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807B598 @ =gBg1Tm
	movs r1, #0xc
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	mov r0, r8
	bl sub_8079D84
_0807B50C:
	ldrh r4, [r5]
	adds r4, #0x10
	ldrh r0, [r5]
	movs r1, #0xc
	bl __udivsi3
	subs r4, r4, r0
	strh r4, [r5]
	lsls r4, r4, #0x10
	lsrs r7, r4, #0x13
	movs r0, #0
	rsbs r1, r7, #0
	str r1, [sp]
_0807B526:
	adds r1, r0, #1
	mov ip, r1
	cmp r7, #0
	beq _0807B56C
	ldr r3, _0807B59C @ =0x0200E8A4
	adds r2, r0, #0
	adds r2, #0xa
	lsls r2, r2, #6
	ldr r1, [sp]
	adds r1, #0xd
	lsls r4, r0, #6
	ldr r0, _0807B598 @ =gBg1Tm
	mov sl, r0
	ldr r0, _0807B594 @ =gBg0Tm
	mov sb, r0
	adds r6, r7, #0
	lsls r1, r1, #1
	adds r0, r4, r3
	adds r5, r1, r0
	adds r2, r2, r3
	adds r2, r1, r2
_0807B550:
	mov r0, sl
	adds r1, r4, r0
	ldrh r0, [r2]
	strh r0, [r1]
	mov r0, sb
	adds r1, r4, r0
	ldrh r0, [r5]
	strh r0, [r1]
	adds r5, #2
	adds r2, #2
	adds r4, #2
	subs r6, #1
	cmp r6, #0
	bne _0807B550
_0807B56C:
	mov r0, ip
	cmp r0, #7
	ble _0807B526
	movs r0, #3
	bl EnableBgSync
	cmp r7, #0xc
	ble _0807B582
	mov r0, r8
	bl Proc_Break
_0807B582:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B594: .4byte gBg0Tm
_0807B598: .4byte gBg1Tm
_0807B59C: .4byte 0x0200E8A4

	thumb_func_start sub_807B5A0
sub_807B5A0: @ 0x0807B5A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x42
	ldrh r1, [r5]
	cmp r1, #0
	bne _0807B5BA
	adds r0, #0x2b
	strb r1, [r0]
_0807B5BA:
	ldrh r4, [r5]
	adds r4, #0x10
	ldrh r0, [r5]
	movs r1, #0xc
	bl __udivsi3
	subs r4, r4, r0
	strh r4, [r5]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x13
	mov sl, r4
	movs r2, #0
	movs r0, #0xd
	mov r1, sl
	subs r1, r0, r1
	mov r8, r1
	movs r3, #0
	mov sb, r3
	mov r0, sl
	lsls r7, r0, #1
_0807B5E2:
	movs r5, #0
	lsls r1, r2, #6
	adds r3, r2, #1
	mov ip, r3
	adds r0, r7, r1
	ldr r3, _0807B610 @ =0x0200E8A4
	adds r4, r0, r3
	ldr r0, _0807B614 @ =gBg0Tm
	adds r3, r1, r0
	ldr r0, _0807B618 @ =gBg1Tm
	adds r1, r1, r0
	adds r0, r2, #0
	adds r0, #0xa
	lsls r0, r0, #6
	ldr r2, _0807B610 @ =0x0200E8A4
	adds r0, r0, r2
	adds r2, r7, r0
_0807B604:
	cmp r5, r8
	blt _0807B61C
	mov r0, sb
	strh r0, [r1]
	b _0807B622
	.align 2, 0
_0807B610: .4byte 0x0200E8A4
_0807B614: .4byte gBg0Tm
_0807B618: .4byte gBg1Tm
_0807B61C:
	ldrh r0, [r2]
	strh r0, [r1]
	ldrh r0, [r4]
_0807B622:
	strh r0, [r3]
	adds r4, #2
	adds r3, #2
	adds r2, #2
	adds r1, #2
	adds r5, #1
	cmp r5, #0xc
	ble _0807B604
	mov r2, ip
	cmp r2, #7
	ble _0807B5E2
	movs r0, #3
	bl EnableBgSync
	mov r1, sl
	cmp r1, #0xc
	ble _0807B68A
	adds r1, r6, #0
	adds r1, #0x29
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_8079A94
	adds r0, r6, #0
	bl Proc_Break
	ldr r1, _0807B698 @ =0x0200E6D4
	adds r0, r6, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r4, [r0, #4]
	bl sub_8079A28
	adds r0, r6, #0
	movs r1, #0
	bl sub_807A1C8
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #1
	bl sub_8079928
	adds r0, r6, #0
	bl sub_807A67C
_0807B68A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B698: .4byte 0x0200E6D4

	thumb_func_start sub_807B69C
sub_807B69C: @ 0x0807B69C
	ldr r2, _0807B6B8 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	bx lr
	.align 2, 0
_0807B6B8: .4byte gDispIo

	thumb_func_start sub_807B6BC
sub_807B6BC: @ 0x0807B6BC
	push {lr}
	ldr r0, _0807B6CC @ =gUnk_08678E38
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0807B6CC: .4byte gUnk_08678E38

	thumb_func_start sub_807B6D0
sub_807B6D0: @ 0x0807B6D0
	push {lr}
	ldr r0, _0807B6E8 @ =gUnk_08678E38
	movs r1, #3
	bl SpawnProc
	bl sub_807A194
	bl sub_80791A0
	pop {r0}
	bx r0
	.align 2, 0
_0807B6E8: .4byte gUnk_08678E38

	thumb_func_start sub_807B6EC
sub_807B6EC: @ 0x0807B6EC
	adds r0, #0x42
	movs r1, #0
	strh r1, [r0]
	ldr r3, _0807B70C @ =gPal
	ldr r2, _0807B710 @ =0x020100A4
	movs r1, #0x80
	lsls r1, r1, #2
_0807B6FA:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _0807B6FA
	bx lr
	.align 2, 0
_0807B70C: .4byte gPal
_0807B710: .4byte 0x020100A4

	thumb_func_start sub_807B714
sub_807B714: @ 0x0807B714
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	adds r0, #0x42
	ldrb r5, [r0]
	ldr r2, _0807B7B8 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r6, #0
	ldr r4, _0807B7BC @ =gPal
	mov sl, r4
	movs r0, #0xf8
	lsls r0, r0, #7
	mov r8, r0
	ldr r1, _0807B7C0 @ =0x020100A4
	mov ip, r1
_0807B74E:
	lsls r7, r6, #1
	mov r4, ip
	ldrh r1, [r4]
	mov r0, r8
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #4
	mov r0, r8
	ands r2, r0
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #4
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #4
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _0807B7C4 @ =0x000001FF
	cmp r6, r0
	ble _0807B74E
	bl EnablePalSync
	mov r1, sb
	adds r1, #0x42
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	cmp r5, #0x10
	bne _0807B7A8
	mov r0, sb
	bl Proc_Break
_0807B7A8:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B7B8: .4byte gDispIo
_0807B7BC: .4byte gPal
_0807B7C0: .4byte 0x020100A4
_0807B7C4: .4byte 0x000001FF

	thumb_func_start sub_807B7C8
sub_807B7C8: @ 0x0807B7C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov r1, sb
	adds r1, #0x42
	movs r0, #0x10
	ldrb r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r6, #0
	ldr r0, _0807B878 @ =gPal
	mov sl, r0
	movs r1, #0xf8
	lsls r1, r1, #7
	mov r8, r1
	ldr r4, _0807B87C @ =0x020100A4
	mov ip, r4
_0807B7F2:
	lsls r7, r6, #1
	mov r0, ip
	ldrh r1, [r0]
	mov r0, r8
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #4
	mov r4, r8
	ands r2, r4
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #4
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #4
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _0807B880 @ =0x000001FF
	cmp r6, r0
	ble _0807B7F2
	bl EnablePalSync
	mov r1, sb
	adds r1, #0x42
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	cmp r5, #0
	bne _0807B86A
	ldr r2, _0807B884 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	mov r0, sb
	bl Proc_Break
_0807B86A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807B878: .4byte gPal
_0807B87C: .4byte 0x020100A4
_0807B880: .4byte 0x000001FF
_0807B884: .4byte gDispIo

	thumb_func_start sub_807B888
sub_807B888: @ 0x0807B888
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807B898 @ =gUnk_08679008
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_0807B898: .4byte gUnk_08679008

	thumb_func_start sub_807B89C
sub_807B89C: @ 0x0807B89C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807B8AC @ =gUnk_08679028
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_0807B8AC: .4byte gUnk_08679028

	thumb_func_start sub_807B8B0
sub_807B8B0: @ 0x0807B8B0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r2, r0, #0
	adds r2, #0x43
	ldrb r3, [r2]
	cmp r3, r1
	beq _0807B8C0
	strb r1, [r2]
_0807B8C0:
	adds r1, r0, #0
	adds r1, #0x44
	movs r0, #1
	strb r0, [r1]
	bx lr
	.align 2, 0

	thumb_func_start sub_807B8CC
sub_807B8CC: @ 0x0807B8CC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r0, #0x34
	strb r1, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #2
	strb r3, [r0]
	ldr r4, _0807B908 @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	adds r0, #0x3f
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x38
	strb r1, [r0]
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	adds r0, #0x40
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x39
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807B908: .4byte gPlaySt

	thumb_func_start sub_807B90C
sub_807B90C: @ 0x0807B90C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, r1, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r0, r0, #0x18
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	lsrs r0, r0, #0x1b
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x19
	lsrs r3, r0, #0x18
	adds r5, r3, #0
	cmp r4, #0
	bne _0807B978
	lsls r0, r6, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _0807B960
	ldr r2, _0807B954 @ =gBg0Tm
	ldr r1, _0807B958 @ =0x0000F240
	adds r0, r3, r1
	movs r4, #0x94
	lsls r4, r4, #1
	adds r1, r2, r4
	strh r0, [r1]
	ldr r1, _0807B95C @ =0x0000F241
	adds r0, r3, r1
	movs r3, #0x95
	lsls r3, r3, #1
	adds r1, r2, r3
	strh r0, [r1]
	b _0807B9B8
	.align 2, 0
_0807B954: .4byte gBg0Tm
_0807B958: .4byte 0x0000F240
_0807B95C: .4byte 0x0000F241
_0807B960:
	ldr r1, _0807B974 @ =gBg0Tm
	movs r4, #0x94
	lsls r4, r4, #1
	adds r0, r1, r4
	strh r2, [r0]
	movs r3, #0x95
	lsls r3, r3, #1
	adds r0, r1, r3
	b _0807B9B6
	.align 2, 0
_0807B974: .4byte gBg0Tm
_0807B978:
	lsls r0, r6, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _0807B9A8
	ldr r1, _0807B99C @ =gBg0Tm
	ldr r4, _0807B9A0 @ =0x0000FA40
	adds r2, r5, r4
	movs r3, #0x9d
	lsls r3, r3, #3
	adds r0, r1, r3
	strh r2, [r0]
	adds r4, #1
	adds r0, r5, r4
	ldr r2, _0807B9A4 @ =0x000004EA
	adds r1, r1, r2
	strh r0, [r1]
	b _0807B9B8
	.align 2, 0
_0807B99C: .4byte gBg0Tm
_0807B9A0: .4byte 0x0000FA40
_0807B9A4: .4byte 0x000004EA
_0807B9A8:
	ldr r0, _0807B9C4 @ =gBg0Tm
	movs r3, #0x9d
	lsls r3, r3, #3
	adds r1, r0, r3
	strh r2, [r1]
	ldr r4, _0807B9C8 @ =0x000004EA
	adds r0, r0, r4
_0807B9B6:
	strh r2, [r0]
_0807B9B8:
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807B9C4: .4byte gBg0Tm
_0807B9C8: .4byte 0x000004EA

	thumb_func_start sub_807B9CC
sub_807B9CC: @ 0x0807B9CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	ldr r0, [r0, #0x14]
	adds r0, #0x44
	ldrh r2, [r0]
	rsbs r1, r2, #0
	adds r0, r1, #0
	cmp r1, #0
	bge _0807B9EA
	adds r0, #0xf
_0807B9EA:
	asrs r0, r0, #4
	lsls r0, r0, #4
	subs r0, r1, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsrs r0, r2, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	mov r0, sl
	adds r0, #0x40
	ldrh r0, [r0]
	cmp r0, r2
	beq _0807BAAC
	ldr r0, _0807BAA8 @ =gDispIo
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	ldrb r1, [r1, #1]
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r2, ip
	strb r0, [r2, #1]
	mov r1, ip
	adds r1, #0x35
	movs r2, #1
	ldrb r0, [r1]
	orrs r0, r2
	movs r6, #2
	orrs r0, r6
	movs r3, #5
	rsbs r3, r3, #0
	mov sb, r3
	ands r0, r3
	movs r5, #8
	orrs r0, r5
	movs r4, #0x10
	orrs r0, r4
	strb r0, [r1]
	mov r3, ip
	adds r3, #0x34
	ldrb r0, [r3]
	orrs r0, r2
	orrs r0, r6
	movs r1, #4
	orrs r0, r1
	orrs r0, r5
	orrs r0, r4
	strb r0, [r3]
	mov r0, ip
	adds r0, #0x2d
	movs r3, #0
	strb r3, [r0]
	adds r0, #4
	movs r1, #0x28
	mov r8, r1
	mov r1, r8
	strb r1, [r0]
	subs r0, #5
	movs r4, #0xf0
	strb r4, [r0]
	mov r1, ip
	adds r1, #0x30
	movs r0, #0x98
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x2f
	strb r3, [r0]
	adds r0, #4
	strb r3, [r0]
	subs r0, #5
	strb r4, [r0]
	adds r0, #4
	mov r3, r8
	strb r3, [r0]
	adds r1, #6
	ldrb r0, [r1]
	orrs r2, r0
	orrs r2, r6
	mov r3, sb
	ands r2, r3
	orrs r2, r5
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r2, r0
	strb r2, [r1]
	mov r1, sl
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	b _0807BB2A
	.align 2, 0
_0807BAA8: .4byte gDispIo
_0807BAAC:
	mov r7, sl
	adds r7, #0x29
	ldrb r0, [r7]
	cmp r0, #1
	bne _0807BB2A
	ldr r1, _0807BBFC @ =gDispIo
	mov r8, r1
	movs r0, #0x20
	ldrb r2, [r1, #1]
	orrs r0, r2
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r3, r8
	strb r0, [r3, #1]
	mov r2, r8
	adds r2, #0x35
	movs r1, #1
	ldrb r0, [r2]
	orrs r0, r1
	movs r6, #2
	orrs r0, r6
	movs r3, #4
	orrs r0, r3
	movs r5, #8
	orrs r0, r5
	movs r4, #0x10
	orrs r0, r4
	strb r0, [r2]
	subs r2, #1
	ldrb r0, [r2]
	orrs r0, r1
	orrs r0, r6
	orrs r0, r3
	orrs r0, r5
	orrs r0, r4
	strb r0, [r2]
	mov r0, r8
	adds r0, #0x2d
	movs r3, #0
	strb r3, [r0]
	subs r2, #3
	movs r0, #0x28
	strb r0, [r2]
	subs r2, #5
	movs r0, #0xf0
	strb r0, [r2]
	adds r2, #4
	movs r0, #0x98
	strb r0, [r2]
	adds r2, #6
	ldrb r0, [r2]
	orrs r1, r0
	orrs r1, r6
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r5
	orrs r1, r4
	strb r1, [r2]
	strb r3, [r7]
_0807BB2A:
	mov r1, sl
	ldr r0, [r1, #0x14]
	adds r1, r0, #0
	adds r1, #0x31
	ldrb r0, [r1]
	ldr r2, [sp]
	lsls r7, r2, #0x10
	cmp r0, #0xff
	beq _0807BB5C
	adds r2, r0, #0
	lsrs r0, r2, #1
	ldr r3, [sp, #4]
	subs r1, r0, r3
	cmp r1, #6
	bhi _0807BB5C
	movs r0, #1
	ands r2, r0
	lsls r0, r2, #6
	adds r0, #0x70
	lsls r1, r1, #4
	asrs r2, r7, #0x10
	adds r1, r1, r2
	adds r1, #0x28
	bl sub_804163C
_0807BB5C:
	movs r5, #0
	ldr r0, [sp, #4]
	lsls r6, r0, #1
	asrs r0, r7, #0x10
	adds r0, #0x28
	mov r8, r0
_0807BB68:
	adds r3, r6, r5
	mov r1, sl
	ldr r0, [r1, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r3, r0
	bge _0807BB9A
	lsrs r0, r5, #1
	lsls r0, r0, #4
	mov r2, r8
	adds r4, r0, r2
	cmp r4, #0x27
	ble _0807BB9A
	movs r1, #1
	ands r1, r5
	lsls r1, r1, #6
	adds r1, #0x70
	ldr r2, _0807BC00 @ =0x0200E6D4
	lsls r0, r3, #2
	adds r0, r0, r2
	ldr r3, [r0]
	movs r0, #3
	adds r2, r4, #0
	bl PutUnitSprite
_0807BB9A:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xd
	bls _0807BB68
	asrs r0, r7, #0x10
	cmp r0, #0
	beq _0807BBEA
	cmp r5, #0xf
	bhi _0807BBEA
	adds r7, r0, #0
	adds r7, #0x28
_0807BBB2:
	adds r4, r6, r5
	mov r3, sl
	ldr r0, [r3, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r4, r0
	bge _0807BBE0
	movs r1, #1
	ands r1, r5
	lsls r1, r1, #6
	adds r1, #0x70
	lsrs r2, r5, #1
	lsls r2, r2, #4
	adds r2, r2, r7
	movs r0, #0xff
	ands r2, r0
	ldr r3, _0807BC00 @ =0x0200E6D4
	lsls r0, r4, #2
	adds r0, r0, r3
	ldr r3, [r0]
	movs r0, #3
	bl PutUnitSprite
_0807BBE0:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	bls _0807BBB2
_0807BBEA:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807BBFC: .4byte gDispIo
_0807BC00: .4byte 0x0200E6D4

	thumb_func_start sub_807BC04
sub_807BC04: @ 0x0807BC04
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	ldr r1, _0807BC74 @ =gUnk_08327264
	add r0, sp, #4
	movs r2, #6
	bl memcpy
	movs r7, #0x28
	mov r0, r8
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0x1f
	bhi _0807BC2A
	movs r7, #0x74
_0807BC2A:
	mov r1, r8
	ldr r0, [r1, #0x14]
	adds r0, #0x2c
	movs r2, #1
	adds r5, r2, #0
	ldrb r0, [r0]
	ands r5, r0
	cmp r5, #0
	bne _0807BD28
	mov r0, r8
	adds r0, #0x37
	ldrb r1, [r0]
	mov sl, r0
	cmp r1, #0
	beq _0807BD28
	adds r4, r2, #0
	ands r4, r1
	cmp r4, #0
	beq _0807BC80
	movs r2, #0xa4
	mov sb, r2
	adds r2, r7, #2
	ldr r3, _0807BC78 @ =gUnk_086790BA
	str r5, [sp]
	movs r0, #4
	movs r1, #0xa6
	bl PutSpriteExt
	ldr r0, _0807BC7C @ =gUnk_0867913C
	ldr r3, [r0, #0x28]
	str r5, [sp]
	movs r0, #4
	movs r1, #0xdc
	adds r2, r7, #0
	bl PutSpriteExt
	b _0807BCA0
	.align 2, 0
_0807BC74: .4byte gUnk_08327264
_0807BC78: .4byte gUnk_086790BA
_0807BC7C: .4byte gUnk_0867913C
_0807BC80:
	movs r6, #0xa8
	mov sb, r6
	adds r2, r7, #2
	ldr r3, _0807BCD0 @ =gUnk_086790A0
	str r4, [sp]
	movs r0, #4
	movs r1, #0xaa
	bl PutSpriteExt
	ldr r3, _0807BCD4 @ =gUnk_08679098
	str r4, [sp]
	movs r0, #4
	movs r1, #0xe0
	adds r2, r7, #0
	bl PutSpriteExt
_0807BCA0:
	ldr r3, _0807BCD8 @ =gUnk_0867908A
	movs r6, #0
	str r6, [sp]
	movs r0, #4
	mov r1, sb
	adds r2, r7, #0
	bl PutSpriteExt
	mov r1, sl
	ldrb r1, [r1]
	lsrs r0, r1, #1
	cmp r0, #9
	bhi _0807BCE0
	mov r1, sb
	adds r1, #0x28
	ldr r0, _0807BCDC @ =gUnk_0867913C
	ldr r3, [r0, #0x2c]
	str r6, [sp]
	movs r0, #4
	adds r2, r7, #0
	bl PutSpriteExt
	b _0807BD00
	.align 2, 0
_0807BCD0: .4byte gUnk_086790A0
_0807BCD4: .4byte gUnk_08679098
_0807BCD8: .4byte gUnk_0867908A
_0807BCDC: .4byte gUnk_0867913C
_0807BCE0:
	mov r5, sb
	adds r5, #0x28
	ldr r4, _0807BDC4 @ =gUnk_0867913C
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r3, [r0]
	str r6, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
_0807BD00:
	mov r5, sb
	adds r5, #0x30
	ldr r4, _0807BDC4 @ =gUnk_0867913C
	mov r2, sl
	ldrb r2, [r2]
	lsrs r0, r2, #1
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r3, [r0]
	movs r0, #0
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
_0807BD28:
	mov r0, r8
	adds r0, #0x33
	ldrb r3, [r0]
	movs r1, #0xf
	ands r1, r3
	adds r2, r0, #0
	cmp r1, #0
	bne _0807BD5A
	adds r0, r3, #0
	adds r0, #0x10
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x5f
	bls _0807BD48
	strb r1, [r2]
_0807BD48:
	ldrb r0, [r2]
	movs r1, #0xf0
	ands r1, r0
	lsrs r0, r0, #4
	add r0, sp
	adds r0, #4
	ldrb r0, [r0]
	adds r1, r0, r1
	strb r1, [r2]
_0807BD5A:
	ldrb r0, [r2]
	subs r0, #1
	movs r6, #0
	strb r0, [r2]
	mov r4, r8
	adds r4, #0x34
	ldrb r7, [r4]
	cmp r7, #0x1f
	bhi _0807BDE0
	adds r1, r7, #0
	adds r1, #0x68
	mov r5, r8
	adds r5, #0x35
	ldrb r2, [r5]
	adds r2, #0x26
	ldr r3, _0807BDC8 @ =gUnk_08679048
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #2
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r0, [r4]
	ldr r2, _0807BDCC @ =0x00001088
	adds r1, r0, r2
	ldrb r2, [r5]
	adds r2, #0x1e
	ldr r3, _0807BDD0 @ =gUnk_0867907A
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r7, [r4]
	ldr r0, _0807BDD4 @ =0x00001068
	adds r1, r7, r0
	ldrb r2, [r5]
	adds r2, #0x1e
	ldr r3, _0807BDD8 @ =gUnk_08679082
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r1, [r4]
	adds r1, #0x68
	ldrb r2, [r5]
	adds r2, #0x16
	ldr r3, _0807BDDC @ =gUnk_08679050
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
	b _0807BE32
	.align 2, 0
_0807BDC4: .4byte gUnk_0867913C
_0807BDC8: .4byte gUnk_08679048
_0807BDCC: .4byte 0x00001088
_0807BDD0: .4byte gUnk_0867907A
_0807BDD4: .4byte 0x00001068
_0807BDD8: .4byte gUnk_08679082
_0807BDDC: .4byte gUnk_08679050
_0807BDE0:
	ldrb r1, [r4]
	adds r1, #0x62
	mov r5, r8
	adds r5, #0x35
	ldrb r2, [r5]
	adds r2, #0x26
	ldr r3, _0807BE70 @ =gUnk_08679048
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #2
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r1, [r4]
	adds r1, #0x42
	ldrb r2, [r5]
	adds r2, #0x1e
	ldr r3, _0807BE74 @ =gUnk_0867907A
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r1, [r4]
	adds r1, #0x62
	ldrb r2, [r5]
	adds r2, #0x1e
	ldr r3, _0807BE78 @ =gUnk_08679082
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r1, [r4]
	adds r1, #0x42
	ldrb r2, [r5]
	adds r2, #0x16
	ldr r3, _0807BE7C @ =gUnk_08679050
	str r6, [sp]
	movs r0, #4
	bl PutSpriteExt
_0807BE32:
	movs r1, #0
	ldr r3, _0807BE80 @ =gPal
	ldr r6, _0807BE84 @ =0x000002CA
	adds r2, r3, r6
	movs r5, #0xf
	movs r4, #0xc8
	lsls r4, r4, #1
_0807BE40:
	mov r7, r8
	ldrh r7, [r7, #0x3e]
	lsrs r0, r7, #1
	adds r0, r0, r1
	ands r0, r5
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, #2
	adds r1, #1
	cmp r1, #9
	ble _0807BE40
	bl EnablePalSync
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807BE70: .4byte gUnk_08679048
_0807BE74: .4byte gUnk_0867907A
_0807BE78: .4byte gUnk_08679082
_0807BE7C: .4byte gUnk_08679050
_0807BE80: .4byte gPal
_0807BE84: .4byte 0x000002CA

	thumb_func_start sub_807BE88
sub_807BE88: @ 0x0807BE88
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r2, [r5, #0x14]
	adds r0, r2, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807BEA0
	cmp r0, #1
	beq _0807BED0
	b _0807BF5A
_0807BEA0:
	adds r1, r2, #0
	adds r1, #0x35
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807BEB6
	adds r0, r2, #0
	adds r0, #0x33
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x28
	b _0807BEC8
_0807BEB6:
	cmp r0, #1
	bne _0807BF5A
	adds r0, r2, #0
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
_0807BEC8:
	movs r0, #0xc
	bl sub_80415CC
	b _0807BF5A
_0807BED0:
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #2
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807BEF2
	adds r0, r2, #0
	adds r0, #0x33
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807BEF2
	movs r0, #0x6c
	movs r1, #8
	bl sub_80415CC
	b _0807BF5A
_0807BEF2:
	ldr r1, [r5, #0x14]
	adds r2, r1, #0
	adds r2, #0x30
	movs r4, #1
	adds r0, r4, #0
	ldrb r2, [r2]
	ands r0, r2
	lsls r0, r0, #6
	adds r0, #0x70
	adds r1, #0x36
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r1, r1, #4
	adds r1, #0x28
	bl sub_80415CC
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x30
	ldrb r1, [r1]
	ands r4, r1
	lsls r4, r4, #6
	adds r4, #0x70
	adds r0, #0x36
	movs r2, #0
	ldrsb r2, [r0, r2]
	lsls r2, r2, #4
	adds r2, #0x30
	ldr r3, _0807BF64 @ =gUnk_0867916C
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #0xd
	adds r1, r4, #0
	bl PutSpriteExt
	ldr r2, _0807BF68 @ =gPal
	ldr r3, _0807BF6C @ =0x02016874
	ldrh r5, [r5, #0x3e]
	lsrs r0, r5, #2
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	movs r1, #0x9f
	lsls r1, r1, #2
	adds r2, r2, r1
	strh r0, [r2]
	bl EnablePalSync
_0807BF5A:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807BF64: .4byte gUnk_0867916C
_0807BF68: .4byte gPal
_0807BF6C: .4byte 0x02016874

	thumb_func_start sub_807BF70
sub_807BF70: @ 0x0807BF70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r2, [r7, #0x14]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807BFA2
	adds r0, r2, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807BFA2
	ldrh r0, [r7, #0x3c]
	cmp r0, #0xff
	bhi _0807BFAC
	adds r0, #0x20
	b _0807BFAA
_0807BFA2:
	ldrh r0, [r7, #0x3c]
	cmp r0, #0
	beq _0807BFAC
	subs r0, #0x20
_0807BFAA:
	strh r0, [r7, #0x3c]
_0807BFAC:
	ldrh r0, [r7, #0x3c]
	cmp r0, #0x10
	bls _0807C06A
	ldr r2, _0807C07C @ =gPal
	ldrh r1, [r7, #0x3e]
	lsrs r0, r1, #3
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	ldr r1, _0807C080 @ =gUnk_0831AAFC
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, _0807C084 @ =0x0000027A
	adds r2, r2, r1
	strh r0, [r2]
	bl EnablePalSync
	movs r2, #0x2a
	adds r2, r2, r7
	mov sl, r2
	ldrb r0, [r2]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bhi _0807C05E
	ldr r4, _0807C088 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov r8, r2
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	ldrh r1, [r7, #0x3c]
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	ldrh r1, [r7, #0x3c]
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	movs r2, #0xff
	lsls r2, r2, #1
	ldr r3, _0807C08C @ =gUnk_086791A2
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	movs r1, #0x68
	bl PutSprite
_0807C05E:
	mov r1, sl
	ldrb r0, [r1]
	cmp r0, #0
	beq _0807C06A
	adds r0, #1
	strb r0, [r1]
_0807C06A:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C07C: .4byte gPal
_0807C080: .4byte gUnk_0831AAFC
_0807C084: .4byte 0x0000027A
_0807C088: .4byte gSinLut
_0807C08C: .4byte gUnk_086791A2

	thumb_func_start sub_807C090
sub_807C090: @ 0x0807C090
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r0, #0
	ldr r3, _0807C118 @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0xe
	strb r0, [r1]
	adds r1, #1
	movs r0, #8
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _0807C11C @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	ldr r1, _0807C120 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r4, #0
	movs r5, #0x80
	lsls r5, r5, #6
_0807C0DA:
	lsls r1, r4, #5
	str r5, [sp]
	movs r0, #0xd
	movs r2, #4
	ldr r3, _0807C124 @ =gUnk_0867917A
	bl PutSprite
	adds r4, #1
	cmp r4, #7
	ble _0807C0DA
	adds r4, r6, #0
	adds r4, #0x30
	ldrb r0, [r4]
	cmp r0, #0
	beq _0807C12C
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #6
	lsls r2, r1, #4
	muls r1, r2, r1
	subs r0, r0, r1
	movs r1, #0xa
	bl __divsi3
	strh r0, [r6, #0x3a]
	ldrb r0, [r4]
	cmp r0, #9
	bhi _0807C128
	adds r0, #1
	b _0807C12A
	.align 2, 0
_0807C118: .4byte gDispIo
_0807C11C: .4byte 0x0000FFE0
_0807C120: .4byte 0x0000E0FF
_0807C124: .4byte gUnk_0867917A
_0807C128:
	movs r0, #0
_0807C12A:
	strb r0, [r4]
_0807C12C:
	ldr r0, [r6, #0x14]
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C13E
	ldrh r0, [r6, #0x3a]
	subs r0, #0xa0
	mov r8, r0
	b _0807C144
_0807C13E:
	ldrh r1, [r6, #0x3a]
	rsbs r1, r1, #0
	mov r8, r1
_0807C144:
	ldr r0, [r6, #0x14]
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807C1A8
	adds r2, r6, #0
	adds r2, #0x44
	ldrb r0, [r2]
	cmp r0, #0
	bne _0807C16C
	adds r0, r6, #0
	adds r0, #0x46
	ldrh r1, [r0]
	adds r7, r0, #0
	cmp r1, #0xff
	bhi _0807C19C
	adds r0, r1, #0
	adds r0, #0x20
	strh r0, [r7]
	b _0807C19C
_0807C16C:
	adds r0, r6, #0
	adds r0, #0x46
	ldrh r1, [r0]
	adds r7, r0, #0
	cmp r1, #0x3f
	bls _0807C180
	adds r0, r1, #0
	subs r0, #0x40
	strh r0, [r7]
	b _0807C19C
_0807C180:
	movs r0, #0
	strb r0, [r2]
	strh r0, [r7]
	ldr r0, [r6, #0x14]
	ldr r0, [r0, #0x60]
	adds r1, r6, #0
	adds r1, #0x43
	ldrb r1, [r1]
	bl sub_8082D54
	adds r1, r6, #0
	adds r1, #0x48
	movs r0, #0x60
	strh r0, [r1]
_0807C19C:
	ldr r1, [r6, #0x14]
	adds r0, r1, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	beq _0807C208
_0807C1A8:
	mov r1, r8
	adds r1, #8
	ldr r5, _0807C1E4 @ =0x000001FF
	ands r1, r5
	ldr r3, _0807C1E8 @ =gUnk_08679182
	movs r4, #0x80
	lsls r4, r4, #6
	str r4, [sp]
	movs r0, #0xd
	movs r2, #8
	bl PutSprite
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C1EC
	ldr r2, [r6, #0x14]
	adds r1, r2, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _0807C24E
	adds r0, r6, #0
	bl sub_807BF70
	b _0807C23E
	.align 2, 0
_0807C1E4: .4byte 0x000001FF
_0807C1E8: .4byte gUnk_08679182
_0807C1EC:
	movs r1, #0xa0
	lsls r1, r1, #1
	add r1, r8
	ands r1, r5
	ldr r3, _0807C204 @ =gUnk_086791B0
	str r4, [sp]
	movs r0, #0xd
	movs r2, #8
	bl PutSprite
	b _0807C23E
	.align 2, 0
_0807C204: .4byte gUnk_086791B0
_0807C208:
	ldr r0, [r1, #0x60]
	adds r4, r6, #0
	adds r4, #0x48
	movs r1, #0x80
	lsls r1, r1, #2
	ldrh r2, [r4]
	subs r1, r1, r2
	ldr r5, _0807C280 @ =0x000001FF
	ands r1, r5
	ldrh r3, [r7]
	movs r2, #7
	bl sub_8082DA4
	ldr r0, [r6, #0x14]
	ldr r0, [r0, #0x60]
	movs r1, #0x80
	lsls r1, r1, #1
	ldrh r2, [r4]
	subs r1, r1, r2
	ands r1, r5
	ldrh r3, [r7]
	movs r2, #7
	bl sub_8082DA4
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_0807C23E:
	ldr r2, [r6, #0x14]
	adds r1, r2, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807C272
_0807C24E:
	adds r0, r2, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C272
	mov r0, r8
	asrs r1, r0, #1
	adds r1, #0xbc
	ldr r0, _0807C280 @ =0x000001FF
	ands r1, r0
	ldr r3, _0807C284 @ =gUnk_086791BE
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #4
	movs r2, #8
	bl PutSpriteExt
_0807C272:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C280: .4byte 0x000001FF
_0807C284: .4byte gUnk_086791BE

	thumb_func_start sub_807C288
sub_807C288: @ 0x0807C288
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r0, #0x2a
	movs r6, #0
	strb r6, [r0]
	movs r4, #0
	strh r6, [r5, #0x3e]
	subs r0, #1
	strb r4, [r0]
	ldr r0, [r5, #0x14]
	adds r0, #0x44
	ldrh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x40
	strh r1, [r0]
	bl ForceSyncUnitSpriteSheet
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x35
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x2b
	strb r0, [r1]
	ldr r0, [r5, #0x14]
	adds r0, #0x35
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x2c
	strb r1, [r0]
	movs r0, #0xa0
	strh r0, [r5, #0x3a]
	ldr r0, [r5, #0x14]
	adds r0, #0x29
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x2d
	strb r0, [r1]
	ldr r0, [r5, #0x14]
	adds r0, #0x2a
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	ldr r0, [r5, #0x14]
	adds r0, #0x2b
	ldrb r0, [r0]
	adds r1, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x30
	strb r4, [r0]
	adds r0, #2
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, [r5, #0x14]
	bl sub_807CE98
	adds r1, r5, #0
	adds r1, #0x31
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x44
	strb r4, [r0]
	ldr r0, [r5, #0x14]
	adds r0, #0x34
	ldrb r0, [r0]
	adds r2, r5, #0
	adds r2, #0x43
	strb r0, [r2]
	adds r1, #0x17
	movs r0, #0x60
	strh r0, [r1]
	ldr r0, [r5, #0x14]
	ldrh r1, [r0, #0x34]
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	bne _0807C33E
	adds r0, r5, #0
	adds r0, #0x46
	strh r1, [r0]
	ldr r0, [r5, #0x14]
	ldr r0, [r0, #0x60]
	movs r1, #5
	bl sub_8082D54
	b _0807C35E
_0807C33E:
	adds r0, r5, #0
	adds r0, #0x46
	strh r6, [r0]
	ldr r0, [r5, #0x14]
	ldr r4, [r0, #0x60]
	ldrb r0, [r2]
	movs r1, #1
	bl sub_807CF2C
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	subs r1, #5
	adds r0, r4, #0
	bl sub_8082D54
_0807C35E:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_807C364
sub_807C364: @ 0x0807C364
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, [r5, #0x14]
	adds r0, #0x2a
	adds r1, r5, #0
	adds r1, #0x2e
	ldrb r0, [r0]
	ldrb r2, [r1]
	cmp r0, r2
	beq _0807C37A
	strb r0, [r1]
_0807C37A:
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x2b
	adds r4, r5, #0
	adds r4, #0x2f
	ldrb r1, [r1]
	ldrb r2, [r4]
	cmp r1, r2
	beq _0807C3A4
	bl sub_807CE98
	adds r1, r5, #0
	adds r1, #0x31
	strb r0, [r1]
	ldr r0, [r5, #0x14]
	adds r0, #0x2b
	ldrb r0, [r0]
	strb r0, [r4]
	subs r1, #1
	movs r0, #1
	strb r0, [r1]
_0807C3A4:
	bl SyncUnitSpriteSheet
	ldr r2, [r5, #0x14]
	adds r0, r2, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C3C0
	adds r0, r5, #0
	bl sub_807BC04
	adds r4, r5, #0
	adds r4, #0x32
	b _0807C432
_0807C3C0:
	ldr r1, _0807C3F4 @ =0x0000FF80
	adds r0, r2, #0
	adds r0, #0x44
	ldrh r2, [r0]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	adds r0, r5, #0
	bl sub_807B9CC
	ldr r0, [r5, #0x14]
	adds r0, #0x44
	ldrh r0, [r0]
	cmp r0, #0
	beq _0807C3F8
	adds r4, r5, #0
	adds r4, #0x32
	ldrb r1, [r4]
	movs r0, #0
	movs r2, #1
	bl sub_807B90C
	b _0807C406
	.align 2, 0
_0807C3F4: .4byte 0x0000FF80
_0807C3F8:
	adds r4, r5, #0
	adds r4, #0x32
	ldrb r1, [r4]
	movs r0, #0
	movs r2, #0
	bl sub_807B90C
_0807C406:
	ldr r1, [r5, #0x14]
	adds r0, r1, #0
	adds r0, #0x44
	ldrh r0, [r0]
	lsrs r0, r0, #4
	adds r0, #7
	lsls r0, r0, #1
	adds r1, #0x2d
	ldrb r1, [r1]
	cmp r0, r1
	bge _0807C428
	ldrb r1, [r4]
	movs r0, #1
	movs r2, #1
	bl sub_807B90C
	b _0807C432
_0807C428:
	ldrb r1, [r4]
	movs r0, #1
	movs r2, #0
	bl sub_807B90C
_0807C432:
	adds r0, r5, #0
	bl sub_807BE88
	adds r0, r5, #0
	bl sub_807C090
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x1b
	cmp r0, #5
	bls _0807C450
	movs r0, #0
	strb r0, [r4]
_0807C450:
	ldr r0, [r5, #0x14]
	adds r0, #0x44
	ldrh r1, [r0]
	adds r0, r5, #0
	adds r0, #0x40
	strh r1, [r0]
	adds r3, r5, #0
	adds r3, #0x2c
	ldr r0, [r5, #0x14]
	adds r2, r0, #0
	adds r2, #0x35
	ldrb r1, [r2]
	ldrb r4, [r3]
	cmp r4, r1
	beq _0807C476
	strb r1, [r3]
	adds r4, r5, #0
	adds r4, #0x2b
	b _0807C4E4
_0807C476:
	adds r1, r5, #0
	adds r1, #0x2b
	ldrb r2, [r2]
	adds r0, #0x33
	adds r0, r0, r2
	adds r4, r1, #0
	ldrb r1, [r4]
	ldrb r0, [r0]
	cmp r1, r0
	beq _0807C4E4
	cmp r2, #0
	bne _0807C4B6
	lsls r1, r1, #1
	adds r1, #5
	movs r0, #1
	movs r2, #0xa
	bl sub_8041728
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x35
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, #5
	movs r0, #1
	movs r2, #0xa
	bl sub_804169C
	b _0807C4DE
_0807C4B6:
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r0, #1
	movs r2, #0xa
	bl sub_8041728
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x35
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, #9
	movs r0, #1
	movs r2, #0xa
	bl sub_804169C
_0807C4DE:
	movs r0, #2
	bl EnableBgSync
_0807C4E4:
	ldr r0, [r5, #0x14]
	adds r1, r0, #0
	adds r1, #0x35
	adds r0, #0x33
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r4]
	ldrh r0, [r5, #0x3e]
	adds r0, #1
	strh r0, [r5, #0x3e]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start nullsub_38
nullsub_38: @ 0x0807C500
	bx lr
	.align 2, 0

	thumb_func_start nullsub_39
nullsub_39: @ 0x0807C504
	bx lr
	.align 2, 0

	thumb_func_start sub_807C508
sub_807C508: @ 0x0807C508
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807C51C @ =gUnk_0867923C
	bl SpawnProc
	movs r1, #0
	strh r1, [r0, #0x3c]
	pop {r1}
	bx r1
	.align 2, 0
_0807C51C: .4byte gUnk_0867923C

	thumb_func_start sub_807C520
sub_807C520: @ 0x0807C520
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r2, r0, #0
	adds r3, r2, #0
	subs r3, #0x38
	cmp r3, #0
	bge _0807C536
	movs r7, #0
	adds r6, r2, #0
	b _0807C54C
_0807C536:
	adds r0, r2, #0
	adds r0, #0x38
	cmp r0, #0xf0
	ble _0807C546
	movs r7, #0xf
	adds r6, r2, #0
	subs r6, #0x78
	b _0807C54C
_0807C546:
	asrs r7, r3, #3
	lsls r0, r7, #3
	subs r6, r2, r0
_0807C54C:
	adds r3, r1, #0
	subs r3, #0x28
	adds r0, r1, #0
	adds r0, #0x30
	cmp r0, #0xa0
	ble _0807C55E
	movs r5, #8
	subs r1, #0x40
	b _0807C56E
_0807C55E:
	adds r0, r3, #0
	cmp r0, #0
	bge _0807C568
	adds r0, r1, #0
	subs r0, #0x21
_0807C568:
	asrs r5, r0, #3
	lsls r0, r5, #3
	subs r1, r1, r0
_0807C56E:
	mov r8, r1
	ldr r4, _0807C5B4 @ =gBg0Tm+0x8
	adds r0, r4, #0
	movs r1, #2
	adds r2, r7, #0
	bl PutNumberOrBlank
	adds r0, r4, #0
	adds r0, #0x80
	movs r1, #2
	adds r2, r5, #0
	bl PutNumberOrBlank
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #2
	adds r2, r6, #0
	bl PutNumberOrBlank
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #2
	mov r2, r8
	bl PutNumberOrBlank
	movs r0, #1
	bl EnableBgSync
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C5B4: .4byte gBg0Tm+0x8

	thumb_func_start sub_807C5B8
sub_807C5B8: @ 0x0807C5B8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r5, [r0]
	cmp r5, #0
	bne _0807C5F8
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #1
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #9
	bl Proc_Goto
	ldr r0, _0807C5F4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807C5EA
	b _0807C7A6
_0807C5EA:
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807C7A6
	.align 2, 0
_0807C5F4: .4byte gPlaySt
_0807C5F8:
	cmp r5, #1
	beq _0807C5FE
	b _0807C7A6
_0807C5FE:
	adds r1, r4, #0
	adds r1, #0x2f
	ldrb r0, [r1]
	mov sb, r0
	adds r0, r4, #0
	adds r0, #0x3c
	ldrb r2, [r0]
	adds r0, r5, #0
	ands r0, r2
	mov r8, r1
	cmp r0, #0
	beq _0807C64C
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0807C64C
	mov r1, sb
	cmp r1, #0
	beq _0807C6D4
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	ldr r0, [r4, #0x50]
	adds r0, #0x2a
	strb r5, [r0]
	ldr r0, _0807C648 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807C63E
	b _0807C798
_0807C63E:
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807C798
	.align 2, 0
_0807C648: .4byte gPlaySt
_0807C64C:
	ldr r7, _0807C6C8 @ =0x0200E6D4
	adds r5, r4, #0
	adds r5, #0x30
	ldrb r2, [r5]
	lsls r0, r2, #2
	adds r0, r0, r7
	ldr r2, [r0]
	movs r0, #8
	ldrh r1, [r2, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _0807C714
	adds r1, r4, #0
	adds r1, #0x2c
	movs r6, #1
	adds r0, r6, #0
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807C680
	adds r0, r2, #0
	bl sub_8082B74
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807C6EC
_0807C680:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	mov r2, r8
	ldrb r2, [r2]
	cmp r0, r2
	bls _0807C6D4
	ldrb r1, [r5]
	lsls r0, r1, #2
	adds r0, r0, r7
	ldr r1, [r0]
	ldr r0, _0807C6CC @ =0x0000FFF5
	ldrh r2, [r1, #0xc]
	ands r0, r2
	strh r0, [r1, #0xc]
	ldrb r5, [r5]
	lsls r0, r5, #2
	adds r0, r0, r7
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	bl sub_80791B4
	ldr r0, _0807C6D0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C6BE
	movs r0, #0x6a
	bl m4aSongNumStart
_0807C6BE:
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	b _0807C764
	.align 2, 0
_0807C6C8: .4byte 0x0200E6D4
_0807C6CC: .4byte 0x0000FFF5
_0807C6D0: .4byte gPlaySt
_0807C6D4:
	ldr r0, _0807C6E8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C798
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807C798
	.align 2, 0
_0807C6E8: .4byte gPlaySt
_0807C6EC:
	adds r0, r6, #0
	ldrb r5, [r5]
	ands r0, r5
	lsls r0, r0, #6
	adds r0, #0x70
	adds r1, r4, #0
	adds r1, #0x36
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r1, r1, #4
	adds r1, #0x28
	ldr r2, _0807C710 @ =0x000006C1
	adds r3, r4, #0
	bl sub_8082B00
	b _0807C7A6
	.align 2, 0
_0807C710: .4byte 0x000006C1
_0807C714:
	adds r1, r4, #0
	adds r1, #0x2c
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _0807C72E
	adds r0, r2, #0
	bl sub_8079404
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807C788
_0807C72E:
	ldrb r2, [r5]
	lsls r0, r2, #2
	adds r0, r0, r7
	ldr r1, [r0]
	movs r0, #0xa
	ldrh r2, [r1, #0xc]
	orrs r0, r2
	strh r0, [r1, #0xc]
	ldrb r5, [r5]
	lsls r0, r5, #2
	adds r0, r0, r7
	ldr r0, [r0]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	bl sub_80791DC
	ldr r0, _0807C784 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C75E
	movs r0, #0x6b
	bl m4aSongNumStart
_0807C75E:
	mov r1, r8
	ldrb r0, [r1]
	subs r0, #1
_0807C764:
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x44
	ldrh r0, [r0]
	lsrs r1, r0, #4
	adds r0, r4, #0
	adds r0, #0x36
	ldrb r0, [r0]
	adds r1, r0, r1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_8079F50
	b _0807C798
	.align 2, 0
_0807C784: .4byte gPlaySt
_0807C788:
	ldr r0, _0807C7B4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C798
	movs r0, #0x6c
	bl m4aSongNumStart
_0807C798:
	mov r2, r8
	ldrb r2, [r2]
	cmp sb, r2
	beq _0807C7A6
	adds r0, r4, #0
	bl sub_8079EA0
_0807C7A6:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C7B4: .4byte gPlaySt

	thumb_func_start sub_807C7B8
sub_807C7B8: @ 0x0807C7B8
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x29
	adds r0, r0, r4
	mov ip, r0
	ldrb r3, [r0]
	cmp r3, #0
	bne _0807C7E8
	adds r0, r4, #0
	movs r1, #9
	bl Proc_Goto
	ldr r0, _0807C7E4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C834
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807C834
	.align 2, 0
_0807C7E4: .4byte gPlaySt
_0807C7E8:
	cmp r3, #1
	bne _0807C834
	adds r1, r4, #0
	adds r1, #0x30
	ldrb r0, [r1]
	adds r2, r4, #0
	adds r2, #0x31
	strb r0, [r2]
	ldrb r0, [r1]
	adds r1, #2
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x44
	ldrh r1, [r0]
	subs r0, #4
	movs r2, #0
	strh r1, [r0]
	subs r0, #0xa
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x37
	strb r0, [r1]
	mov r0, ip
	strb r2, [r0]
	adds r0, r4, #0
	adds r0, #0x35
	strb r3, [r0]
	ldr r0, _0807C83C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C82E
	movs r0, #0x6a
	bl m4aSongNumStart
_0807C82E:
	adds r0, r4, #0
	bl sub_8079A94
_0807C834:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807C83C: .4byte gPlaySt

	thumb_func_start sub_807C840
sub_807C840: @ 0x0807C840
	mov ip, r0
	mov r3, ip
	adds r3, #0x30
	adds r0, #0x31
	ldrb r1, [r3]
	ldrb r0, [r0]
	cmp r1, r0
	bne _0807C882
	ldrb r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807C87E
	adds r2, r1, #1
	mov r0, ip
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r2, r0
	bge _0807C86A
	strb r2, [r3]
	b _0807C882
_0807C86A:
	cmp r1, #1
	bls _0807C882
	subs r0, r1, #2
	strb r0, [r3]
	mov r1, ip
	adds r1, #0x36
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	b _0807C882
_0807C87E:
	subs r0, r1, #1
	strb r0, [r3]
_0807C882:
	bx lr

	thumb_func_start sub_807C884
sub_807C884: @ 0x0807C884
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x29
	ldrb r0, [r4]
	cmp r0, #0
	bne _0807C8E0
	adds r0, r5, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #1
	beq _0807C916
	ldr r0, [r5, #0x50]
	movs r1, #5
	bl sub_807B8B0
	adds r0, r5, #0
	adds r0, #0x32
	ldrb r1, [r0]
	subs r0, #2
	strb r1, [r0]
	movs r0, #1
	strb r0, [r4]
	adds r0, r5, #0
	bl sub_807C840
	adds r0, r5, #0
	bl sub_8079D84
	adds r0, r5, #0
	bl sub_80798EC
	ldr r0, _0807C8DC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C96C
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807C96C
	.align 2, 0
_0807C8DC: .4byte gPlaySt
_0807C8E0:
	cmp r0, #1
	bne _0807C96C
	adds r7, r5, #0
	adds r7, #0x30
	adds r6, r5, #0
	adds r6, #0x31
	ldrb r0, [r7]
	ldrb r1, [r6]
	cmp r0, r1
	beq _0807C916
	ldr r0, _0807C928 @ =0x0200E6D4
	mov r8, r0
	ldrb r1, [r7]
	lsls r0, r1, #2
	add r0, r8
	ldr r0, [r0]
	bl GetUnitItemCount
	adds r4, r0, #0
	ldrb r1, [r6]
	lsls r0, r1, #2
	add r0, r8
	ldr r0, [r0]
	bl GetUnitItemCount
	cmn r4, r0
	bne _0807C930
_0807C916:
	ldr r0, _0807C92C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C96C
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807C96C
	.align 2, 0
_0807C928: .4byte 0x0200E6D4
_0807C92C: .4byte gPlaySt
_0807C930:
	ldrb r6, [r6]
	lsls r0, r6, #2
	add r0, r8
	ldr r0, [r0]
	str r0, [r5, #0x48]
	ldrb r7, [r7]
	lsls r0, r7, #2
	add r0, r8
	ldr r0, [r0]
	str r0, [r5, #0x4c]
	adds r0, r5, #0
	movs r1, #1
	bl sub_80829E8
	adds r1, r5, #0
	adds r1, #0x3b
	movs r0, #2
	strb r0, [r1]
	adds r0, r5, #0
	movs r1, #3
	bl Proc_Goto
	ldr r0, _0807C978 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C96C
	movs r0, #0x6a
	bl m4aSongNumStart
_0807C96C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807C978: .4byte gPlaySt

	thumb_func_start sub_807C97C
sub_807C97C: @ 0x0807C97C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807C9EA
	ldr r6, _0807C9B0 @ =0x0200E6D4
	adds r5, r4, #0
	adds r5, #0x30
	ldrb r1, [r5]
	lsls r0, r1, #2
	adds r0, r0, r6
	ldr r0, [r0]
	bl GetUnitItemCount
	cmp r0, #0
	bne _0807C9B8
	ldr r0, _0807C9B4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C9EA
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807C9EA
	.align 2, 0
_0807C9B0: .4byte 0x0200E6D4
_0807C9B4: .4byte gPlaySt
_0807C9B8:
	ldrb r5, [r5]
	lsls r0, r5, #2
	adds r0, r0, r6
	ldr r0, [r0]
	str r0, [r4, #0x48]
	adds r0, r4, #0
	movs r1, #1
	bl sub_80829E8
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #4
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
	ldr r0, _0807C9F0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807C9EA
	movs r0, #0x6a
	bl m4aSongNumStart
_0807C9EA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807C9F0: .4byte gPlaySt

	thumb_func_start sub_807C9F4
sub_807C9F4: @ 0x0807C9F4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CA38
	ldr r1, _0807CA40 @ =0x0200E6D4
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x48]
	adds r0, r4, #0
	movs r1, #1
	bl sub_80829E8
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #3
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
	ldr r0, _0807CA44 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CA38
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CA38:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CA40: .4byte 0x0200E6D4
_0807CA44: .4byte gPlaySt

	thumb_func_start sub_807CA48
sub_807CA48: @ 0x0807CA48
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CA8C
	ldr r1, _0807CA94 @ =0x0200E6D4
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r4, #0x48]
	adds r0, r4, #0
	movs r1, #1
	bl sub_80829E8
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #5
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
	ldr r0, _0807CA98 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CA8C
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CA8C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CA94: .4byte 0x0200E6D4
_0807CA98: .4byte gPlaySt

	thumb_func_start sub_807CA9C
sub_807CA9C: @ 0x0807CA9C
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CAC8
	ldr r0, _0807CAD0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CAB8
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CAB8:
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #0xa
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
_0807CAC8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CAD0: .4byte gPlaySt

	thumb_func_start sub_807CAD4
sub_807CAD4: @ 0x0807CAD4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CAFE
	adds r1, r4, #0
	adds r1, #0x35
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0807CB04 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CAF8
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CAF8:
	adds r0, r4, #0
	bl sub_8079A94
_0807CAFE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CB04: .4byte gPlaySt

	thumb_func_start sub_807CB08
sub_807CB08: @ 0x0807CB08
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CB34
	ldr r0, _0807CB3C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CB24
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CB24:
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #8
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
_0807CB34:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CB3C: .4byte gPlaySt

	thumb_func_start sub_807CB40
sub_807CB40: @ 0x0807CB40
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CB6C
	ldr r0, _0807CB74 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CB5C
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CB5C:
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #9
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
_0807CB6C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CB74: .4byte gPlaySt

	thumb_func_start sub_807CB78
sub_807CB78: @ 0x0807CB78
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CBA4
	ldr r0, _0807CBAC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CB94
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CB94:
	adds r1, r4, #0
	adds r1, #0x3b
	movs r0, #7
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
_0807CBA4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807CBAC: .4byte gPlaySt

	thumb_func_start sub_807CBB0
sub_807CBB0: @ 0x0807CBB0
	push {lr}
	adds r1, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CBD4
	adds r0, r1, #0
	movs r1, #6
	bl Proc_Goto
	ldr r0, _0807CBD8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CBD4
	movs r0, #0x6a
	bl m4aSongNumStart
_0807CBD4:
	pop {r0}
	bx r0
	.align 2, 0
_0807CBD8: .4byte gPlaySt

	thumb_func_start sub_807CBDC
sub_807CBDC: @ 0x0807CBDC
	push {lr}
	adds r1, r0, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807CC20
	adds r0, r1, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807CC10
	adds r0, r1, #0
	movs r1, #0xe
	bl Proc_Goto
	ldr r0, _0807CC0C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CC20
	movs r0, #0x6a
	bl m4aSongNumStart
	b _0807CC20
	.align 2, 0
_0807CC0C: .4byte gPlaySt
_0807CC10:
	ldr r0, _0807CC24 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807CC20
	movs r0, #0x6c
	bl m4aSongNumStart
_0807CC20:
	pop {r0}
	bx r0
	.align 2, 0
_0807CC24: .4byte gPlaySt

	thumb_func_start sub_807CC28
sub_807CC28: @ 0x0807CC28
	ldr r1, _0807CC30 @ =0x020155E4
	movs r0, #0
	strb r0, [r1]
	bx lr
	.align 2, 0
_0807CC30: .4byte 0x020155E4

	thumb_func_start sub_807CC34
sub_807CC34: @ 0x0807CC34
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r2, #0
	ldr r0, [sp, #0x18]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r3, r3, #0x18
	lsrs r4, r3, #0x18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov ip, r0
	ldr r3, _0807CCBC @ =0x020155E4
	ldrb r0, [r3]
	cmp r0, #0xf
	bhi _0807CCB4
	ldr r2, _0807CCC0 @ =0x020154A4
	lsls r0, r0, #2
	ldrb r7, [r3]
	adds r0, r0, r7
	lsls r0, r0, #2
	adds r0, r0, r2
	strb r1, [r0, #9]
	ldrb r1, [r3]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	str r5, [r0]
	ldrb r7, [r3]
	lsls r0, r7, #2
	adds r1, r7, #0
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	strb r4, [r0, #8]
	ldrb r7, [r3]
	lsls r0, r7, #2
	adds r1, r7, #0
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r2, #0
	adds r1, #0xc
	adds r0, r0, r1
	str r6, [r0]
	ldrb r7, [r3]
	lsls r0, r7, #2
	adds r1, r7, #0
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r2, #4
	adds r0, r0, r1
	ldr r1, [sp, #0x14]
	str r1, [r0]
	ldrb r7, [r3]
	lsls r0, r7, #2
	adds r1, r7, #0
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	mov r7, ip
	strb r7, [r0, #0x10]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_0807CCB4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807CCBC: .4byte 0x020155E4
_0807CCC0: .4byte 0x020154A4

	thumb_func_start sub_807CCC4
sub_807CCC4: @ 0x0807CCC4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r5, #0
	movs r3, #0
	ldr r0, _0807CD04 @ =0x020155E4
	adds r6, r0, #0
	ldrb r0, [r6]
	cmp r3, r0
	bge _0807CD1C
	adds r2, r4, #0
	adds r2, #0x35
	ldr r1, _0807CD08 @ =0x020154A4
_0807CCDC:
	ldrb r7, [r1, #9]
	ldrb r0, [r2]
	cmp r7, r0
	bne _0807CD12
	adds r0, r4, #0
	adds r0, #0x33
	ldrb r7, [r2]
	adds r0, r7, r0
	ldrb r0, [r0]
	cmp r5, r0
	bne _0807CD0C
	ldrb r0, [r1, #8]
	cmp r0, #1
	beq _0807CD1C
	ldr r1, [r1]
	adds r0, r4, #0
	bl _call_via_r1
	movs r0, #1
	b _0807CD1E
	.align 2, 0
_0807CD04: .4byte 0x020155E4
_0807CD08: .4byte 0x020154A4
_0807CD0C:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0807CD12:
	adds r1, #0x14
	adds r3, #1
	ldrb r7, [r6]
	cmp r3, r7
	blt _0807CCDC
_0807CD1C:
	movs r0, #0
_0807CD1E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_807CD24
sub_807CD24: @ 0x0807CD24
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r3, #0
	ldr r0, _0807CD54 @ =0x020155E4
	ldrb r0, [r0]
	cmp r3, r0
	bge _0807CD4C
	ldr r2, _0807CD58 @ =0x020154A4
	adds r1, r0, #0
_0807CD38:
	ldrb r0, [r2, #9]
	cmp r0, r4
	bne _0807CD44
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_0807CD44:
	adds r2, #0x14
	subs r1, #1
	cmp r1, #0
	bne _0807CD38
_0807CD4C:
	adds r0, r3, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0807CD54: .4byte 0x020155E4
_0807CD58: .4byte 0x020154A4

	thumb_func_start sub_807CD5C
sub_807CD5C: @ 0x0807CD5C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov sb, r3
	movs r0, #0
	mov r8, r0
	movs r7, #0
	ldr r0, _0807CDEC @ =0x020155E4
	ldrb r0, [r0]
	cmp r7, r0
	bge _0807CDDC
	ldr r0, _0807CDF0 @ =0x020154A4
	adds r5, r0, #0
	adds r5, #8
	adds r6, r2, #0
_0807CD8A:
	ldrb r0, [r5, #1]
	cmp r0, sl
	bne _0807CDD0
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	movs r1, #0
	ldrb r0, [r5]
	cmp r0, #1
	bne _0807CDA8
	movs r1, #1
_0807CDA8:
	adds r0, r4, #0
	bl Text_SetColor
	ldr r0, [r5, #4]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	adds r1, r6, #0
	bl PutText
	adds r6, #0x80
	adds r4, #8
	movs r0, #1
	add r8, r0
	cmp r8, sb
	bge _0807CDDC
_0807CDD0:
	adds r5, #0x14
	adds r7, #1
	ldr r0, _0807CDEC @ =0x020155E4
	ldrb r0, [r0]
	cmp r7, r0
	blt _0807CD8A
_0807CDDC:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807CDEC: .4byte 0x020155E4
_0807CDF0: .4byte 0x020154A4

	thumb_func_start sub_807CDF4
sub_807CDF4: @ 0x0807CDF4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	movs r0, #0
	mov sl, r0
	movs r4, #0
	ldr r0, _0807CE4C @ =0x020155E4
	mov sb, r0
	ldrb r1, [r0]
	cmp r4, r1
	bge _0807CE8A
	ldr r7, _0807CE50 @ =0x020154A4
	mov ip, r7
	mov r3, r8
	adds r3, #0x35
	mov r6, ip
	movs r5, #0
_0807CE1C:
	ldrb r0, [r6, #9]
	ldrb r1, [r3]
	cmp r0, r1
	bne _0807CE7C
	ldrb r0, [r3]
	mov r2, r8
	adds r2, #0x33
	adds r1, r2, r0
	ldrb r7, [r1]
	cmp sl, r7
	bne _0807CE72
	cmp r0, #0
	bne _0807CE54
	ldrb r2, [r2]
	lsls r1, r2, #4
	adds r1, #0x28
	mov r0, ip
	adds r0, #4
	adds r0, r5, r0
	ldr r2, [r0]
	movs r0, #0xc
	bl sub_80706C8
	b _0807CE68
	.align 2, 0
_0807CE4C: .4byte 0x020155E4
_0807CE50: .4byte 0x020154A4
_0807CE54:
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r1, #0x48
	mov r0, ip
	adds r0, #4
	adds r0, r5, r0
	ldr r2, [r0]
	movs r0, #0xc
	bl sub_80706C8
_0807CE68:
	mov r1, r8
	adds r1, #0x3d
	movs r0, #1
	strb r0, [r1]
	b _0807CE8A
_0807CE72:
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
_0807CE7C:
	adds r6, #0x14
	adds r5, #0x14
	adds r4, #1
	mov r0, sb
	ldrb r0, [r0]
	cmp r4, r0
	blt _0807CE1C
_0807CE8A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807CE98
sub_807CE98: @ 0x0807CE98
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r4, #0
	movs r2, #0
	ldr r0, _0807CED0 @ =0x020155E4
	ldrb r1, [r0]
	cmp r2, r1
	bge _0807CEE6
	ldr r0, _0807CED4 @ =0x020154A4
	adds r3, r5, #0
	adds r3, #0x35
	ldrb r6, [r3]
	mov ip, r6
	adds r6, r1, #0
	adds r1, r0, #0
	adds r1, #9
	adds r5, #0x33
_0807CEBA:
	ldrb r7, [r1]
	cmp r7, ip
	bne _0807CEDE
	ldrb r7, [r3]
	adds r0, r7, r5
	ldrb r0, [r0]
	cmp r4, r0
	bne _0807CED8
	ldrb r0, [r1, #7]
	b _0807CEE8
	.align 2, 0
_0807CED0: .4byte 0x020155E4
_0807CED4: .4byte 0x020154A4
_0807CED8:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0807CEDE:
	adds r1, #0x14
	adds r2, #1
	cmp r2, r6
	blt _0807CEBA
_0807CEE6:
	movs r0, #0xff
_0807CEE8:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_807CEF0
sub_807CEF0: @ 0x0807CEF0
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #0
	ldr r3, _0807CF14 @ =0x020155E4
	ldrb r0, [r3]
	cmp r2, r0
	bge _0807CF26
	ldr r0, _0807CF18 @ =0x020154A4
	adds r0, #8
_0807CF08:
	ldrb r5, [r0, #8]
	cmp r5, r4
	bne _0807CF1C
	strb r1, [r0]
	b _0807CF26
	.align 2, 0
_0807CF14: .4byte 0x020155E4
_0807CF18: .4byte 0x020154A4
_0807CF1C:
	adds r0, #0x14
	adds r2, #1
	ldrb r5, [r3]
	cmp r2, r5
	blt _0807CF08
_0807CF26:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_807CF2C
sub_807CF2C: @ 0x0807CF2C
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	movs r1, #0
	movs r3, #0
	ldr r0, _0807CF58 @ =0x020155E4
	ldrb r2, [r0]
	cmp r3, r2
	bge _0807CF6E
	ldr r0, _0807CF5C @ =0x020154A4
	adds r4, r2, #0
	adds r2, r0, #0
	adds r2, #9
_0807CF4A:
	ldrb r0, [r2]
	cmp r0, r5
	bne _0807CF66
	cmp r1, r6
	bne _0807CF60
	ldrb r0, [r2, #7]
	b _0807CF70
	.align 2, 0
_0807CF58: .4byte 0x020155E4
_0807CF5C: .4byte 0x020154A4
_0807CF60:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_0807CF66:
	adds r2, #0x14
	adds r3, #1
	cmp r3, r4
	blt _0807CF4A
_0807CF6E:
	movs r0, #0xff
_0807CF70:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_807CF78
sub_807CF78: @ 0x0807CF78
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x34
	movs r1, #0xc
	bl InitTextDb
	adds r0, r4, #0
	adds r0, #0x3c
	movs r1, #0xc
	bl InitTextDb
	adds r0, r4, #0
	adds r0, #0x44
	movs r1, #0xc
	bl InitText
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start nullsub_40
nullsub_40: @ 0x0807CFA0
	bx lr
	.align 2, 0

	thumb_func_start sub_807CFA4
sub_807CFA4: @ 0x0807CFA4
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807CFB4 @ =gUnk_08679368
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0807CFB4: .4byte gUnk_08679368

	thumb_func_start nullsub_6
nullsub_6: @ 0x0807CFB8
	bx lr
	.align 2, 0

	thumb_func_start sub_807CFBC
sub_807CFBC: @ 0x0807CFBC
	adds r1, r0, #0
	movs r0, #0
	strh r0, [r1, #0x2a]
	ldr r0, [r1, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807CFD2
	movs r0, #0xe4
	lsls r0, r0, #7
	b _0807CFD6
_0807CFD2:
	movs r0, #0xa0
	lsls r0, r0, #7
_0807CFD6:
	str r0, [r1, #0x30]
	bx lr
	.align 2, 0

	thumb_func_start sub_807CFDC
sub_807CFDC: @ 0x0807CFDC
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r3, _0807D06C @ =gUnk_086792B6
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807CFEC
	adds r0, #0x1f
_0807CFEC:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #0
	bl PutSpriteExt
	ldr r3, _0807D070 @ =gUnk_086792A8
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D006
	adds r0, #0x1f
_0807D006:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0xb0
	movs r2, #0
	bl PutSpriteExt
	ldr r1, [r4, #0x14]
	adds r2, r1, #0
	adds r2, #0x2f
	ldrb r3, [r2]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r1, #0x48
	bl sub_80415CC
	ldr r1, [r4, #0x14]
	adds r2, r1, #0
	adds r2, #0x30
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _0807D052
	ldrb r3, [r2]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #0x31
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r1, #0x48
	bl sub_804163C
_0807D052:
	ldrh r2, [r4, #0x2a]
	movs r0, #0
	movs r1, #4
	bl nullsub_6
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D06C: .4byte gUnk_086792B6
_0807D070: .4byte gUnk_086792A8

	thumb_func_start sub_807D074
sub_807D074: @ 0x0807D074
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807D084 @ =gUnk_08679388
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0807D084: .4byte gUnk_08679388

	thumb_func_start sub_807D088
sub_807D088: @ 0x0807D088
	adds r1, r0, #0
	movs r0, #0
	strh r0, [r1, #0x2a]
	ldr r0, [r1, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807D09E
	movs r0, #0xe4
	lsls r0, r0, #7
	b _0807D0A2
_0807D09E:
	movs r0, #0xa0
	lsls r0, r0, #7
_0807D0A2:
	str r0, [r1, #0x30]
	bx lr
	.align 2, 0

	thumb_func_start sub_807D0A8
sub_807D0A8: @ 0x0807D0A8
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r3, _0807D160 @ =gUnk_086792B6
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D0B8
	adds r0, #0x1f
_0807D0B8:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #0
	bl PutSpriteExt
	ldr r3, _0807D164 @ =gUnk_086792A8
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D0D2
	adds r0, #0x1f
_0807D0D2:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0xb0
	movs r2, #0
	bl PutSpriteExt
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #0x64
	bne _0807D0FC
	adds r0, r1, #0
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x28
	movs r0, #0x80
	bl sub_804163C
_0807D0FC:
	ldr r0, [r4, #0x14]
	adds r0, #0x46
	ldrb r0, [r0]
	ldrh r1, [r4, #0x2a]
	ldr r2, [r4, #0x30]
	bl sub_807DFEC
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	bl sub_80415CC
	ldr r1, [r4, #0x14]
	ldr r0, [r1, #0x60]
	adds r1, #0x50
	ldrh r1, [r1]
	str r1, [sp]
	ldr r1, _0807D168 @ =0x0201636A
	ldrh r1, [r1]
	str r1, [sp, #4]
	movs r1, #7
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x30
	movs r3, #0xc
	bl sub_8082320
	ldrh r2, [r4, #0x2a]
	movs r0, #3
	movs r1, #4
	bl nullsub_6
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	add sp, #0xc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D160: .4byte gUnk_086792B6
_0807D164: .4byte gUnk_086792A8
_0807D168: .4byte 0x0201636A

	thumb_func_start sub_807D16C
sub_807D16C: @ 0x0807D16C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807D17C @ =gUnk_086793A8
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0807D17C: .4byte gUnk_086793A8

	thumb_func_start sub_807D180
sub_807D180: @ 0x0807D180
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	strh r0, [r4, #0x2a]
	adds r0, r4, #0
	bl sub_807CFA4
	str r0, [r4, #0x2c]
	ldr r0, [r4, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807D1A0
	movs r0, #0xe4
	lsls r0, r0, #7
	b _0807D1A4
_0807D1A0:
	movs r0, #0xa0
	lsls r0, r0, #7
_0807D1A4:
	str r0, [r4, #0x30]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_807D1AC
sub_807D1AC: @ 0x0807D1AC
	push {r4, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r3, _0807D204 @ =gUnk_086792C4
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D1BC
	adds r0, #0x1f
_0807D1BC:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x88
	movs r2, #0
	bl PutSpriteExt
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807D20C
	ldr r3, _0807D208 @ =gUnk_086792B6
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D1E0
	adds r0, #0x1f
_0807D1E0:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #0
	bl PutSpriteExt
	ldr r0, [r4, #0x14]
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
	movs r0, #0xa0
	bl sub_80415CC
	b _0807D2BA
	.align 2, 0
_0807D204: .4byte gUnk_086792C4
_0807D208: .4byte gUnk_086792B6
_0807D20C:
	adds r0, r1, #0
	adds r0, #0x31
	ldrb r0, [r0]
	cmp r0, #2
	beq _0807D230
	ldr r3, _0807D26C @ =gUnk_086792B6
	ldr r0, [r4, #0x30]
	cmp r0, #0
	bge _0807D220
	adds r0, #0x1f
_0807D220:
	asrs r0, r0, #5
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #0
	bl PutSpriteExt
_0807D230:
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #0x14
	bne _0807D270
	adds r0, r1, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	bl sub_804163C
	ldr r0, [r4, #0x14]
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r0, #0x24
	movs r1, #0x40
	bl sub_80415CC
	b _0807D28E
	.align 2, 0
_0807D26C: .4byte gUnk_086792B6
_0807D270:
	adds r0, r1, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	bl sub_80415CC
_0807D28E:
	ldr r0, [r4, #0x14]
	adds r0, #0x46
	ldrb r0, [r0]
	ldrh r1, [r4, #0x2a]
	ldr r2, [r4, #0x30]
	bl sub_807DFEC
	ldr r1, [r4, #0x14]
	ldr r0, [r1, #0x60]
	adds r1, #0x50
	ldrh r1, [r1]
	str r1, [sp]
	ldr r1, _0807D2DC @ =0x0201636A
	ldrh r1, [r1]
	str r1, [sp, #4]
	movs r1, #7
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x30
	movs r3, #0xc
	bl sub_8082320
_0807D2BA:
	ldr r0, [r4, #0x14]
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807D2CE
	ldrh r2, [r4, #0x2a]
	movs r0, #2
	movs r1, #4
	bl nullsub_6
_0807D2CE:
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	add sp, #0xc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0807D2DC: .4byte 0x0201636A

	thumb_func_start sub_807D2E0
sub_807D2E0: @ 0x0807D2E0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0807D2F0 @ =gUnk_086793C8
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0807D2F0: .4byte gUnk_086793C8

	thumb_func_start sub_807D2F4
sub_807D2F4: @ 0x0807D2F4
	push {r4, lr}
	adds r3, r0, #0
	movs r2, #0
	ldr r1, _0807D324 @ =0x02015698
_0807D2FC:
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r0, [r0]
	cmp r0, r3
	beq _0807D332
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x13
	bls _0807D2FC
	movs r2, #0
	ldr r4, _0807D324 @ =0x02015698
_0807D314:
	lsls r0, r2, #2
	adds r1, r0, r4
	ldr r0, [r1]
	cmp r0, #0xff
	bne _0807D328
	str r3, [r1]
	b _0807D332
	.align 2, 0
_0807D324: .4byte 0x02015698
_0807D328:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x13
	bls _0807D314
_0807D332:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_807D338
sub_807D338: @ 0x0807D338
	push {lr}
	bl InitIcons
	ldr r1, _0807D354 @ =0x02015698
	movs r2, #0xff
	adds r0, r1, #0
	adds r0, #0x4c
_0807D346:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _0807D346
	pop {r0}
	bx r0
	.align 2, 0
_0807D354: .4byte 0x02015698

	thumb_func_start sub_807D358
sub_807D358: @ 0x0807D358
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x50
	mov r8, r0
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	mov sb, r0
	mov r0, r8
	ldr r7, [r0, #0x54]
	adds r0, r7, #0
	bl GetUnitItemCount
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r5, #0
	movs r4, #0
	cmp r4, r6
	bhs _0807D3A6
_0807D382:
	lsls r1, r4, #1
	adds r0, r7, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	bl GetItemIcon
	lsls r1, r5, #2
	add r1, sp
	str r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r6
	blo _0807D382
_0807D3A6:
	ldr r6, _0807D45C @ =0x0201636A
	ldrh r0, [r6]
	cmp r0, #0
	beq _0807D3D8
	ldr r2, _0807D460 @ =0x02015D28
	mov r0, r8
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	mov r1, r8
	adds r1, #0x2e
	ldrb r1, [r1]
	adds r0, r1, r0
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r0, [r0, #2]
	bl GetItemKind
	lsls r1, r5, #2
	add r1, sp
	adds r0, #0x70
	str r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0807D3D8:
	mov r0, sb
	cmp r0, #0
	beq _0807D3E6
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
_0807D3E6:
	mov r4, sb
	adds r0, r4, #0
	adds r0, #9
	cmp r4, r0
	bge _0807D424
	ldrh r6, [r6]
	cmp r4, r6
	bhs _0807D424
	ldr r6, _0807D460 @ =0x02015D28
_0807D3F8:
	lsls r0, r4, #2
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	bl GetItemIcon
	lsls r1, r5, #2
	add r1, sp
	str r0, [r1]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov r0, sb
	adds r0, #9
	cmp r4, r0
	bge _0807D424
	ldr r0, _0807D45C @ =0x0201636A
	ldrh r0, [r0]
	cmp r4, r0
	blo _0807D3F8
_0807D424:
	cmp r5, #0x13
	bhi _0807D43A
	movs r1, #0xff
_0807D42A:
	lsls r0, r5, #2
	add r0, sp
	str r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x13
	bls _0807D42A
_0807D43A:
	movs r4, #0
	ldr r7, _0807D464 @ =0x02015698
_0807D43E:
	ldr r0, _0807D464 @ =0x02015698
	lsls r1, r4, #2
	adds r0, r1, r0
	ldr r3, [r0]
	adds r6, r4, #1
	adds r5, r1, #0
	cmp r3, #0xff
	beq _0807D492
	movs r4, #0
	movs r2, #0
	ldr r0, [sp]
	cmp r3, r0
	bne _0807D468
	movs r4, #1
	b _0807D492
	.align 2, 0
_0807D45C: .4byte 0x0201636A
_0807D460: .4byte 0x02015D28
_0807D464: .4byte 0x02015698
_0807D468:
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x13
	bhi _0807D482
	adds r1, r5, r7
	lsls r0, r2, #2
	add r0, sp
	ldr r1, [r1]
	ldr r0, [r0]
	cmp r1, r0
	bne _0807D468
	movs r4, #1
_0807D482:
	cmp r4, #0
	bne _0807D492
	adds r4, r5, r7
	ldr r0, [r4]
	bl ClearIcon
	movs r0, #0xff
	str r0, [r4]
_0807D492:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x13
	bls _0807D43E
	add sp, #0x50
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807D4A8
sub_807D4A8: @ 0x0807D4A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r2, [sp, #8]
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #4]
	ldr r6, [r3, #0x2c]
	adds r0, r6, #0
	adds r0, #0x34
	bl ClearText
	adds r0, r6, #0
	adds r0, #0x3c
	bl ClearText
	adds r0, r6, #0
	adds r0, #0x44
	bl ClearText
	ldr r0, _0807D4FC @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807D508
	ldr r0, _0807D500 @ =gBg0Tm
	movs r1, #0xe
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807D504 @ =gBg1Tm
	movs r1, #0xe
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	b _0807D692
	.align 2, 0
_0807D4FC: .4byte 0x0201636A
_0807D500: .4byte gBg0Tm
_0807D504: .4byte gBg1Tm
_0807D508:
	movs r0, #0
	str r0, [sp]
	adds r0, r7, #0
	ldr r1, [sp, #4]
	movs r2, #0xe
	movs r3, #8
	bl sub_8041358
	ldr r0, [sp, #8]
	bl GetItemKind
	cmp r0, #9
	beq _0807D530
	cmp r0, #9
	bgt _0807D52C
	cmp r0, #4
	beq _0807D530
	b _0807D578
_0807D52C:
	cmp r0, #0xb
	bne _0807D578
_0807D530:
	ldr r0, [sp, #8]
	bl GetItemUseDescMsg
	bl DecodeMsg
	adds r4, r0, #0
	ldr r0, [sp, #4]
	adds r0, #1
	adds r6, #0x34
	lsls r0, r0, #5
	adds r0, #1
	adds r5, r0, r7
	b _0807D550
_0807D54A:
	adds r4, #1
	adds r5, #0x40
	adds r6, #8
_0807D550:
	lsls r1, r5, #1
	ldr r0, _0807D574 @ =gBg0Tm
	adds r1, r1, r0
	str r4, [sp]
	adds r0, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r4, #0
	bl GetStringLineEnd
	adds r4, r0, #0
	ldrb r0, [r4]
	cmp r0, #0
	bne _0807D54A
	b _0807D692
	.align 2, 0
_0807D574: .4byte gBg0Tm
_0807D578:
	adds r5, r6, #0
	adds r5, #0x44
	ldr r3, _0807D6A8 @ =gUnk_0832726C
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl Text_InsertDrawString
	adds r4, r6, #0
	adds r4, #0x34
	ldr r3, _0807D6AC @ =gUnk_08327274
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	bl Text_InsertDrawString
	adds r6, #0x3c
	mov sl, r6
	ldr r3, _0807D6B0 @ =gUnk_0832727C
	mov r0, sl
	movs r1, #2
	movs r2, #0
	bl Text_InsertDrawString
	ldr r3, _0807D6B4 @ =gUnk_08327284
	adds r0, r4, #0
	movs r1, #0x32
	movs r2, #0
	bl Text_InsertDrawString
	ldr r3, _0807D6B8 @ =gUnk_0832728C
	mov r0, sl
	movs r1, #0x32
	movs r2, #0
	bl Text_InsertDrawString
	ldr r6, [sp, #4]
	adds r6, #3
	lsls r6, r6, #5
	adds r1, r6, #1
	adds r1, r1, r7
	lsls r1, r1, #1
	ldr r0, _0807D6BC @ =gBg0Tm
	mov sb, r0
	add r1, sb
	adds r0, r4, #0
	bl PutText
	ldr r0, [sp, #4]
	adds r0, #1
	lsls r0, r0, #5
	mov r8, r0
	mov r1, r8
	adds r1, #5
	adds r1, r1, r7
	lsls r1, r1, #1
	add r1, sb
	adds r0, r5, #0
	bl PutText
	ldr r5, [sp, #4]
	adds r5, #5
	lsls r5, r5, #5
	adds r1, r5, #1
	adds r1, r1, r7
	lsls r1, r1, #1
	add r1, sb
	mov r0, sl
	bl PutText
	adds r4, r6, #5
	adds r4, r4, r7
	lsls r4, r4, #1
	add r4, sb
	ldr r0, [sp, #8]
	bl GetItemMight
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl PutNumber
	adds r4, r5, #5
	adds r4, r4, r7
	lsls r4, r4, #1
	add r4, sb
	ldr r0, [sp, #8]
	bl GetItemHit
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #2
	bl PutNumber
	adds r6, #0xb
	adds r6, r6, r7
	lsls r6, r6, #1
	add r6, sb
	ldr r0, [sp, #8]
	bl GetItemCrit
	adds r2, r0, #0
	adds r0, r6, #0
	movs r1, #2
	bl PutNumber
	adds r5, #0xb
	adds r5, r5, r7
	lsls r5, r5, #1
	add r5, sb
	ldr r0, [sp, #8]
	bl GetItemWeight
	adds r2, r0, #0
	adds r0, r5, #0
	movs r1, #2
	bl PutNumber
	movs r0, #7
	add r8, r0
	add r8, r7
	mov r0, r8
	lsls r0, r0, #1
	mov r8, r0
	add r8, sb
	ldr r0, [sp, #8]
	bl GetItemKind
	adds r1, r0, #0
	adds r1, #0x70
	movs r2, #0xa0
	lsls r2, r2, #7
	mov r0, r8
	bl PutIcon
	ldr r0, [sp, #8]
	bl GetItemKind
	adds r0, #0x70
	bl sub_807D2F4
_0807D692:
	movs r0, #3
	bl EnableBgSync
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807D6A8: .4byte gUnk_0832726C
_0807D6AC: .4byte gUnk_08327274
_0807D6B0: .4byte gUnk_0832727C
_0807D6B4: .4byte gUnk_08327284
_0807D6B8: .4byte gUnk_0832728C
_0807D6BC: .4byte gBg0Tm

	thumb_func_start sub_807D6C0
sub_807D6C0: @ 0x0807D6C0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	str r1, [sp, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	adds r0, r1, #0
	bl GetUnitItemCount
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	movs r0, #0
	mov sl, r0
	ldr r2, [sp]
	lsls r1, r2, #2
	adds r0, r1, r2
	lsls r5, r0, #4
	adds r6, r1, #0
	lsls r3, r2, #3
	str r3, [sp, #0x14]
	subs r0, r3, r2
	lsls r4, r0, #1
_0807D6F6:
	mov r1, sl
	lsls r0, r1, #3
	ldr r1, _0807D82C @ =0x020155E8
	adds r0, r0, r1
	adds r0, r5, r0
	bl ClearText
	mov r2, sl
	lsls r0, r2, #6
	movs r3, #0x91
	lsls r3, r3, #1
	adds r0, r0, r3
	adds r0, r0, r4
	lsls r0, r0, #1
	ldr r1, _0807D830 @ =gBg0Tm
	adds r0, r0, r1
	movs r1, #0xb
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #4
	bls _0807D6F6
	movs r0, #0
	mov sl, r0
	ldr r1, [sp, #8]
	cmp sl, r1
	bhs _0807D816
	ldr r2, [sp]
	adds r0, r6, r2
	lsls r0, r0, #4
	str r0, [sp, #0xc]
_0807D740:
	mov r3, sl
	lsls r5, r3, #1
	ldr r0, [sp, #4]
	adds r0, #0x1c
	adds r0, r0, r5
	mov r8, r0
	ldrh r1, [r0]
	ldr r0, [sp, #4]
	bl IsItemDisplayUseable
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	rsbs r2, r0, #0
	orrs r2, r0
	mov r1, sl
	lsls r0, r1, #3
	ldr r1, _0807D82C @ =0x020155E8
	adds r0, r0, r1
	ldr r3, [sp, #0xc]
	adds r4, r3, r0
	movs r1, #0
	lsrs r2, r2, #0x1f
	str r2, [sp, #0x10]
	cmp r2, #0
	bne _0807D774
	movs r1, #1
_0807D774:
	adds r0, r4, #0
	bl Text_SetColor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	mov r1, r8
	ldrh r0, [r1]
	bl GetItemName
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r5, #0
	adds r0, #9
	lsls r6, r0, #5
	adds r1, r6, #4
	ldr r2, [sp, #0x14]
	ldr r3, [sp]
	subs r0, r2, r3
	lsls r5, r0, #1
	adds r1, r1, r5
	lsls r1, r1, #1
	ldr r0, _0807D830 @ =gBg0Tm
	mov sb, r0
	add r1, sb
	adds r0, r4, #0
	bl PutText
	adds r0, r6, #0
	adds r0, #0xd
	adds r0, r0, r5
	lsls r0, r0, #1
	mov r1, sb
	adds r4, r0, r1
	movs r7, #1
	ldr r2, [sp, #0x10]
	cmp r2, #0
	beq _0807D7C8
	movs r7, #2
_0807D7C8:
	mov r3, r8
	ldrh r0, [r3]
	bl GetItemUses
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r7, #0
	bl PutNumberOrBlank
	adds r4, r6, #2
	adds r4, r4, r5
	lsls r4, r4, #1
	add r4, sb
	mov r1, r8
	ldrh r0, [r1]
	bl GetItemIcon
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0x80
	lsls r2, r2, #7
	bl PutIcon
	mov r2, r8
	ldrh r0, [r2]
	bl GetItemIcon
	bl sub_807D2F4
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #4
	bhi _0807D816
	ldr r3, [sp, #8]
	cmp sl, r3
	blo _0807D740
_0807D816:
	movs r0, #1
	bl EnableBgSync
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807D82C: .4byte 0x020155E8
_0807D830: .4byte gBg0Tm

	thumb_func_start sub_807D834
sub_807D834: @ 0x0807D834
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x18
	mov sl, r0
	ldr r1, _0807D8A8 @ =0x0201636A
	movs r0, #0
	strh r0, [r1]
	movs r4, #0
	ldr r0, _0807D8AC @ =0x02016368
	ldrh r0, [r0]
	cmp r4, r0
	bge _0807D8A2
	ldr r7, _0807D8B0 @ =gUnk_08679354
	mov r0, sl
	adds r0, #1
	adds r0, r0, r7
	mov r8, r0
	ldr r0, _0807D8B4 @ =0x020156E8
	mov sb, r0
	adds r6, r1, #0
_0807D866:
	ldr r1, _0807D8B8 @ =0x02015D28
	lsls r0, r4, #2
	adds r5, r0, r1
	ldrh r0, [r5, #2]
	bl GetItemKind
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	mov r2, sl
	adds r0, r2, r7
	ldrb r0, [r0]
	cmp r1, r0
	blo _0807D898
	mov r0, r8
	ldrb r0, [r0]
	cmp r1, r0
	bhi _0807D898
	ldrh r1, [r6]
	lsls r0, r1, #2
	add r0, sb
	ldr r1, [r5]
	str r1, [r0]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
_0807D898:
	adds r4, #1
	ldr r0, _0807D8AC @ =0x02016368
	ldrh r0, [r0]
	cmp r4, r0
	blt _0807D866
_0807D8A2:
	movs r2, #1
	b _0807D8C2
	.align 2, 0
_0807D8A8: .4byte 0x0201636A
_0807D8AC: .4byte 0x02016368
_0807D8B0: .4byte gUnk_08679354
_0807D8B4: .4byte 0x020156E8
_0807D8B8: .4byte 0x02015D28
_0807D8BC:
	lsls r0, r2, #1
	adds r0, r0, r2
	adds r2, r0, #1
_0807D8C2:
	ldr r1, _0807D8E0 @ =0x0201636A
	ldrh r0, [r1]
	movs r1, #3
	str r2, [sp]
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, [sp]
	cmp r2, r0
	blt _0807D8BC
	cmp r2, #0
	ble _0807D95C
_0807D8DC:
	adds r4, r2, #0
	b _0807D946
	.align 2, 0
_0807D8E0: .4byte 0x0201636A
_0807D8E4:
	subs r7, r4, r2
	adds r4, #1
	mov sb, r4
	cmp r7, #0
	blt _0807D944
	ldr r1, _0807D9D0 @ =0x020156E8
	mov r8, r1
_0807D8F2:
	lsls r0, r7, #2
	mov r1, r8
	adds r6, r0, r1
	ldrh r0, [r6, #2]
	str r2, [sp]
	bl GetItemIid
	adds r4, r0, #0
	ldr r2, [sp]
	adds r0, r7, r2
	lsls r0, r0, #2
	mov r1, r8
	adds r5, r0, r1
	ldrh r0, [r5, #2]
	bl GetItemIid
	ldr r2, [sp]
	cmp r4, r0
	bgt _0807D936
	ldrh r0, [r6, #2]
	str r2, [sp]
	bl GetItemIid
	adds r4, r0, #0
	ldrh r0, [r5, #2]
	bl GetItemIid
	ldr r2, [sp]
	cmp r4, r0
	bne _0807D944
	ldrh r0, [r6, #2]
	ldrh r1, [r5, #2]
	cmp r0, r1
	bls _0807D93E
_0807D936:
	ldr r1, [r6]
	ldr r0, [r5]
	str r0, [r6]
	str r1, [r5]
_0807D93E:
	subs r7, r7, r2
	cmp r7, #0
	bge _0807D8F2
_0807D944:
	mov r4, sb
_0807D946:
	ldr r0, _0807D9D4 @ =0x0201636A
	ldrh r0, [r0]
	cmp r4, r0
	blt _0807D8E4
	adds r0, r2, #0
	movs r1, #3
	bl __divsi3
	adds r2, r0, #0
	cmp r2, #0
	bgt _0807D8DC
_0807D95C:
	movs r7, #0
	movs r4, #0
	ldr r0, _0807D9D8 @ =0x02016368
	ldrh r0, [r0]
	cmp r4, r0
	bge _0807D9B2
	ldr r6, _0807D9DC @ =gUnk_08679354
	mov r0, sl
	adds r0, #1
	adds r0, r0, r6
	mov r8, r0
	ldr r2, _0807D9D0 @ =0x020156E8
	mov sb, r2
_0807D976:
	ldr r1, _0807D9E0 @ =0x02015D28
	lsls r0, r4, #2
	adds r5, r0, r1
	ldrh r0, [r5, #2]
	bl GetItemKind
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	mov r2, sl
	adds r0, r2, r6
	ldrb r0, [r0]
	cmp r1, r0
	blo _0807D998
	mov r0, r8
	ldrb r0, [r0]
	cmp r1, r0
	bls _0807D9A8
_0807D998:
	ldr r0, _0807D9D4 @ =0x0201636A
	ldrh r0, [r0]
	adds r0, r0, r7
	lsls r0, r0, #2
	add r0, sb
	ldr r1, [r5]
	str r1, [r0]
	adds r7, #1
_0807D9A8:
	adds r4, #1
	ldr r0, _0807D9D8 @ =0x02016368
	ldrh r0, [r0]
	cmp r4, r0
	blt _0807D976
_0807D9B2:
	ldr r0, _0807D9E0 @ =0x02015D28
	ldr r1, _0807D9D0 @ =0x020156E8
	movs r2, #0xc8
	lsls r2, r2, #3
	bl memcpy
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807D9D0: .4byte 0x020156E8
_0807D9D4: .4byte 0x0201636A
_0807D9D8: .4byte 0x02016368
_0807D9DC: .4byte gUnk_08679354
_0807D9E0: .4byte 0x02015D28

	thumb_func_start sub_807D9E4
sub_807D9E4: @ 0x0807D9E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov sl, r0
	str r2, [sp]
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #4]
	ldr r5, _0807DAC4 @ =gBg2Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r6, _0807DAC8 @ =0x0201636A
	ldrh r0, [r6]
	cmp r0, #0
	bne _0807DA40
	mov r0, sl
	bl ClearText
	mov r0, sl
	movs r1, #0
	bl Text_SetCursor
	mov r0, sl
	movs r1, #1
	bl Text_SetColor
	ldr r1, _0807DACC @ =gUnk_08327294
	mov r0, sl
	bl Text_DrawString
	lsls r1, r4, #3
	subs r1, r1, r4
	lsls r1, r1, #2
	adds r0, r5, #0
	adds r0, #8
	adds r1, r1, r0
	mov r0, sl
	bl PutText
_0807DA40:
	ldr r0, [sp, #4]
	mov r8, r0
	adds r0, #7
	cmp r8, r0
	blt _0807DA4C
	b _0807DB5E
_0807DA4C:
	ldrh r6, [r6]
	cmp r8, r6
	blo _0807DA54
	b _0807DB5E
_0807DA54:
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #1
	str r0, [sp, #8]
_0807DA5C:
	movs r4, #7
	mov r1, r8
	ands r4, r1
	lsls r4, r4, #3
	add r4, sl
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	mov r0, r8
	lsls r6, r0, #1
	movs r4, #0x1f
	ands r4, r6
	lsls r4, r4, #5
	adds r4, #2
	ldr r1, [sp, #8]
	adds r4, r4, r1
	lsls r4, r4, #1
	ldr r0, _0807DAC4 @ =gBg2Tm
	adds r4, r4, r0
	ldr r0, _0807DAD0 @ =0x02015D28
	mov r1, r8
	lsls r5, r1, #2
	adds r7, r5, r0
	ldrh r0, [r7, #2]
	bl GetItemIcon
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #0x80
	lsls r2, r2, #7
	bl PutIcon
	ldrh r0, [r7, #2]
	bl GetItemIcon
	bl sub_807D2F4
	ldr r0, [sp]
	cmp r0, #0
	beq _0807DAC0
	ldrh r1, [r7, #2]
	bl IsItemDisplayUseable
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807DAD4
_0807DAC0:
	movs r2, #1
	b _0807DAD6
	.align 2, 0
_0807DAC4: .4byte gBg2Tm
_0807DAC8: .4byte 0x0201636A
_0807DACC: .4byte gUnk_08327294
_0807DAD0: .4byte 0x02015D28
_0807DAD4:
	movs r2, #0
_0807DAD6:
	movs r0, #7
	mov r1, r8
	ands r0, r1
	lsls r0, r0, #3
	mov r1, sl
	adds r7, r1, r0
	movs r1, #0
	mov sb, r2
	cmp r2, #0
	bne _0807DAEC
	movs r1, #1
_0807DAEC:
	adds r0, r7, #0
	bl Text_SetColor
	ldr r0, _0807DB74 @ =0x02015D28
	adds r5, r5, r0
	ldrh r0, [r5, #2]
	bl GetItemName
	adds r1, r0, #0
	adds r0, r7, #0
	bl Text_DrawString
	movs r4, #0x1f
	ands r4, r6
	lsls r4, r4, #5
	adds r1, r4, #4
	ldr r0, [sp, #8]
	adds r1, r1, r0
	lsls r1, r1, #1
	ldr r0, _0807DB78 @ =gBg2Tm
	adds r1, r1, r0
	adds r0, r7, #0
	bl PutText
	adds r4, #0xd
	ldr r1, [sp, #8]
	adds r4, r4, r1
	lsls r4, r4, #1
	ldr r0, _0807DB78 @ =gBg2Tm
	adds r4, r4, r0
	movs r6, #1
	mov r1, sb
	cmp r1, #0
	beq _0807DB32
	movs r6, #2
_0807DB32:
	ldrh r0, [r5, #2]
	bl GetItemUses
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r6, #0
	bl PutNumberOrBlank
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r0, [sp, #4]
	adds r0, #7
	cmp r8, r0
	bge _0807DB5E
	ldr r0, _0807DB7C @ =0x0201636A
	ldrh r0, [r0]
	cmp r8, r0
	bhs _0807DB5E
	b _0807DA5C
_0807DB5E:
	movs r0, #4
	bl EnableBgSync
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DB74: .4byte 0x02015D28
_0807DB78: .4byte gBg2Tm
_0807DB7C: .4byte 0x0201636A

	thumb_func_start sub_807DB80
sub_807DB80: @ 0x0807DB80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp]
	adds r7, r3, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	movs r0, #0xf
	mov sb, r8
	mov r1, sb
	ands r1, r0
	mov sb, r1
	lsls r4, r1, #6
	mov r2, sl
	lsls r5, r2, #3
	subs r5, r5, r2
	lsls r5, r5, #1
	adds r0, r4, r5
	lsls r0, r0, #1
	ldr r6, _0807DC14 @ =gBg2Tm
	adds r0, r0, r6
	movs r1, #0x10
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #7
	mov r1, r8
	ands r0, r1
	lsls r0, r0, #3
	ldr r2, [sp]
	adds r0, r2, r0
	bl ClearText
	adds r4, #2
	adds r4, r4, r5
	lsls r4, r4, #1
	adds r4, r4, r6
	ldr r1, _0807DC18 @ =0x02015D28
	mov r2, r8
	lsls r0, r2, #2
	adds r5, r0, r1
	ldrh r0, [r5, #2]
	bl GetItemIcon
	adds r1, r0, #0
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r4, #0
	bl PutIcon
	ldrh r0, [r5, #2]
	bl GetItemIcon
	bl sub_807D2F4
	cmp r7, #0
	beq _0807DC10
	ldrh r1, [r5, #2]
	adds r0, r7, #0
	bl IsItemDisplayUseable
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807DC1C
_0807DC10:
	movs r2, #1
	b _0807DC1E
	.align 2, 0
_0807DC14: .4byte gBg2Tm
_0807DC18: .4byte 0x02015D28
_0807DC1C:
	movs r2, #0
_0807DC1E:
	movs r0, #7
	mov r1, r8
	ands r0, r1
	lsls r0, r0, #3
	ldr r1, [sp]
	adds r7, r1, r0
	movs r1, #0
	str r2, [sp, #4]
	cmp r2, #0
	bne _0807DC34
	movs r1, #1
_0807DC34:
	adds r0, r7, #0
	bl Text_SetColor
	adds r0, r7, #0
	movs r1, #0
	bl Text_SetCursor
	ldr r1, _0807DCB0 @ =0x02015D28
	mov r2, r8
	lsls r0, r2, #2
	adds r0, r0, r1
	mov r8, r0
	ldrh r0, [r0, #2]
	bl GetItemName
	adds r1, r0, #0
	adds r0, r7, #0
	bl Text_DrawString
	mov r0, sb
	lsls r4, r0, #6
	adds r1, r4, #4
	mov r2, sl
	lsls r5, r2, #3
	subs r5, r5, r2
	lsls r5, r5, #1
	adds r1, r1, r5
	lsls r1, r1, #1
	ldr r6, _0807DCB4 @ =gBg2Tm
	adds r1, r1, r6
	adds r0, r7, #0
	bl PutText
	adds r4, #0xd
	adds r4, r4, r5
	lsls r4, r4, #1
	adds r4, r4, r6
	movs r5, #1
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _0807DC88
	movs r5, #2
_0807DC88:
	mov r1, r8
	ldrh r0, [r1, #2]
	bl GetItemUses
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl PutNumberOrBlank
	movs r0, #4
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DCB0: .4byte 0x02015D28
_0807DCB4: .4byte gBg2Tm

	thumb_func_start sub_807DCB8
sub_807DCB8: @ 0x0807DCB8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r6, r4, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	mov r0, r8
	str r0, [sp]
	lsls r3, r3, #0x18
	lsrs r7, r3, #0x18
	mov sl, r7
	ldr r0, _0807DD04 @ =gBg0Tm+0x1E
	mov sb, r0
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807DD08 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807DD0C
	mov r0, sb
	adds r0, #0xa
	movs r1, #9
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	b _0807DDB0
	.align 2, 0
_0807DD04: .4byte gBg0Tm+0x1E
_0807DD08: .4byte 0x0201636A
_0807DD0C:
	cmp r4, #0
	bne _0807DD58
	adds r0, r5, #0
	bl ClearText
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetColor
	ldr r4, _0807DD54 @ =gUnk_083272A4
	adds r0, r4, #0
	bl GetStringTextLen
	movs r1, #0x28
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r5, #0
	bl Text_SetCursor
	adds r0, r5, #0
	adds r1, r4, #0
	bl Text_DrawString
	lsls r1, r7, #5
	add r1, r8
	lsls r1, r1, #1
	mov r0, sb
	subs r0, #0x1e
	adds r1, r1, r0
	adds r0, r5, #0
	bl PutText
	b _0807DDB0
	.align 2, 0
_0807DD54: .4byte gUnk_083272A4
_0807DD58:
	adds r0, r6, #0
	bl GetUnitByPid
	adds r4, r0, #0
	adds r0, r5, #0
	bl ClearText
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetColor
	ldr r0, [r4]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x28
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r5, #0
	bl Text_SetCursor
	ldr r0, [r4]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r5, #0
	bl Text_DrawString
	mov r0, sl
	lsls r1, r0, #5
	ldr r0, [sp]
	adds r1, r1, r0
	lsls r1, r1, #1
	mov r0, sb
	subs r0, #0x1e
	adds r1, r1, r0
	adds r0, r5, #0
	bl PutText
_0807DDB0:
	movs r0, #1
	bl EnableBgSync
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807DDC8
sub_807DDC8: @ 0x0807DDC8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_8082A08
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	lsls r4, r4, #5
	subs r0, r4, #3
	adds r0, r0, r5
	lsls r0, r0, #1
	ldr r1, _0807DE54 @ =gBg0Tm
	mov r8, r1
	add r0, r8
	movs r1, #6
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807DE58 @ =0x02015690
	mov r1, r8
	adds r1, #0x24
	ldr r2, _0807DE5C @ =gUnk_083272A4
	str r2, [sp]
	movs r2, #0
	movs r3, #4
	bl sub_8082360
	adds r0, r4, r5
	lsls r0, r0, #1
	add r0, r8
	movs r1, #2
	adds r2, r6, #0
	bl PutNumber
	adds r0, r4, #4
	adds r0, r0, r5
	lsls r0, r0, #1
	add r0, r8
	movs r1, #2
	movs r2, #0x64
	bl PutNumber
	adds r4, #1
	adds r4, r4, r5
	lsls r4, r4, #1
	add r4, r8
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0x16
	bl PutSpecialChar
	movs r0, #1
	bl EnableBgSync
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807DE54: .4byte gBg0Tm
_0807DE58: .4byte 0x02015690
_0807DE5C: .4byte gUnk_083272A4

	thumb_func_start sub_807DE60
sub_807DE60: @ 0x0807DE60
	push {r4, r5, r6, lr}
	bl GetSupplyItems
	adds r4, r0, #0
	movs r2, #0
	movs r3, #0
	ldr r0, _0807DEC0 @ =0x02016368
	ldrh r1, [r0]
	cmp r2, r1
	bhs _0807DE9C
	ldr r6, _0807DEC4 @ =0x02015D28
	adds r5, r0, #0
_0807DE78:
	lsls r0, r3, #2
	adds r1, r0, r6
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807DE90
	lsls r0, r2, #1
	adds r0, r0, r4
	ldrh r1, [r1, #2]
	strh r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_0807DE90:
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r5]
	cmp r3, r0
	blo _0807DE78
_0807DE9C:
	cmp r2, #0x63
	bhi _0807DEB2
	movs r1, #0
_0807DEA2:
	lsls r0, r2, #1
	adds r0, r0, r4
	strh r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x63
	bls _0807DEA2
_0807DEB2:
	movs r0, #0x18
	movs r1, #0
	bl sub_807DDC8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807DEC0: .4byte 0x02016368
_0807DEC4: .4byte 0x02015D28

	thumb_func_start sub_807DEC8
sub_807DEC8: @ 0x0807DEC8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	bl GetItemKind
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r2, #0
	ldr r0, _0807DF58 @ =gUnk_08679354
	ldrb r1, [r0]
	cmp r3, r1
	beq _0807DF0A
	ldrb r1, [r0, #1]
	cmp r3, r1
	beq _0807DF0A
	adds r4, r0, #0
_0807DEEC:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #8
	bhi _0807DF0A
	lsls r1, r2, #1
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r3, r0
	beq _0807DF0A
	adds r0, r1, #1
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r3, r0
	bne _0807DEEC
_0807DF0A:
	adds r5, r6, #0
	adds r5, #0x46
	ldrb r0, [r5]
	cmp r0, r2
	beq _0807DF4E
	strb r2, [r5]
	adds r0, r6, #0
	adds r0, #0x32
	adds r0, r2, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r4, r6, #0
	adds r4, #0x50
	strh r0, [r4]
	ldrb r0, [r5]
	bl sub_807D834
	ldrb r0, [r5]
	adds r0, #0x3b
	adds r0, r6, r0
	adds r1, r4, #0
	bl sub_80823A0
	ldr r0, _0807DF5C @ =0x02015638
	ldr r2, [r6, #0x54]
	ldrh r4, [r4]
	lsrs r3, r4, #4
	movs r1, #1
	str r1, [sp]
	bl sub_807D9E4
	adds r0, r6, #0
	bl sub_807D358
_0807DF4E:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807DF58: .4byte gUnk_08679354
_0807DF5C: .4byte 0x02015638

	thumb_func_start sub_807DF60
sub_807DF60: @ 0x0807DF60
	push {r4, r5, r6, r7, lr}
	lsls r1, r1, #0x18
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	ldr r6, _0807DFD4 @ =0x02015D28
	lsls r4, r5, #2
	adds r4, r4, r6
	ldr r3, [r4]
	lsrs r1, r1, #0x17
	adds r2, r0, #0
	adds r2, #0x1c
	adds r2, r2, r1
	ldrh r1, [r2]
	strh r1, [r4, #2]
	lsrs r3, r3, #0x10
	strh r3, [r2]
	bl UnitRemoveInvalidItems
	ldrh r0, [r4, #2]
	cmp r0, #0
	bne _0807DFE0
	adds r2, r5, #0
	ldr r0, _0807DFD8 @ =0x02016368
	adds r4, r0, #0
	ldr r7, _0807DFDC @ =0x0201636A
	ldrh r0, [r4]
	cmp r2, r0
	bhs _0807DFC0
	adds r3, r6, #0
	adds r5, r4, #0
_0807DF9C:
	lsls r0, r2, #2
	adds r1, r0, r3
	adds r2, #1
	lsls r0, r2, #2
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [r1]
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807DFB6
	ldrb r0, [r1, #1]
	subs r0, #1
	strb r0, [r1, #1]
_0807DFB6:
	lsls r0, r2, #0x10
	lsrs r2, r0, #0x10
	ldrh r0, [r5]
	cmp r2, r0
	blo _0807DF9C
_0807DFC0:
	ldrh r0, [r7]
	subs r0, #1
	strh r0, [r7]
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	bl sub_807DE60
	movs r0, #1
	b _0807DFE6
	.align 2, 0
_0807DFD4: .4byte 0x02015D28
_0807DFD8: .4byte 0x02016368
_0807DFDC: .4byte 0x0201636A
_0807DFE0:
	bl sub_807DE60
	movs r0, #0
_0807DFE6:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_807DFEC
sub_807DFEC: @ 0x0807DFEC
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r1, r1, #0x18
	ldr r3, _0807E058 @ =gUnk_0831B068
	ldr r2, _0807E05C @ =gPal
	lsrs r1, r1, #0x1a
	movs r0, #0xf
	ands r1, r0
	lsls r1, r1, #1
	adds r1, r1, r3
	ldrh r0, [r1]
	ldr r1, _0807E060 @ =0x0000025A
	adds r2, r2, r1
	strh r0, [r2]
	bl EnablePalSync
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r6, r0, #0
	adds r6, #0x7c
	ldr r0, _0807E064 @ =gUnk_08679330
	lsls r4, r4, #2
	adds r4, r4, r0
	ldr r3, [r4]
	adds r0, r5, #0
	cmp r5, #0
	bge _0807E02E
	adds r0, #0x1f
_0807E02E:
	asrs r0, r0, #5
	movs r1, #0x80
	lsls r1, r1, #6
	adds r4, r0, r1
	str r4, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r2, #0x18
	bl PutSprite
	ldr r3, _0807E068 @ =gUnk_08679326
	str r4, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r2, #0x18
	bl PutSprite
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0807E058: .4byte gUnk_0831B068
_0807E05C: .4byte gPal
_0807E060: .4byte 0x0000025A
_0807E064: .4byte gUnk_08679330
_0807E068: .4byte gUnk_08679326

	thumb_func_start sub_807E06C
sub_807E06C: @ 0x0807E06C
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807E0A8
	movs r1, #0
	ldr r0, _0807E0A0 @ =gBg0Tm
	ldr r2, _0807E0A4 @ =0x00003328
	adds r5, r2, #0
	adds r2, #0x40
	adds r4, r2, #0
	movs r2, #0x8f
	lsls r2, r2, #1
	adds r3, r0, r2
	adds r2, r0, #0
	adds r2, #0xde
_0807E08A:
	adds r0, r1, r5
	strh r0, [r2]
	adds r0, r1, r4
	strh r0, [r3]
	adds r3, #2
	adds r2, #2
	adds r1, #1
	cmp r1, #0xe
	ble _0807E08A
	b _0807E0C4
	.align 2, 0
_0807E0A0: .4byte gBg0Tm
_0807E0A4: .4byte 0x00003328
_0807E0A8:
	ldr r0, _0807E0D0 @ =gBg0Tm
	movs r3, #0
	movs r1, #0x8f
	lsls r1, r1, #1
	adds r2, r0, r1
	adds r0, #0xde
	movs r1, #0xe
_0807E0B6:
	strh r3, [r0]
	strh r3, [r2]
	adds r2, #2
	adds r0, #2
	subs r1, #1
	cmp r1, #0
	bge _0807E0B6
_0807E0C4:
	movs r0, #3
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0807E0D0: .4byte gBg0Tm

	thumb_func_start sub_807E0D4
sub_807E0D4: @ 0x0807E0D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x2d
	ldrb r0, [r6]
	cmp r0, #3
	bhi _0807E0F4
	adds r1, r5, #0
	adds r1, #0x4b
	movs r0, #0
	strb r0, [r1]
_0807E0F4:
	bl ResetText
	bl ResetTextFont
	ldr r3, _0807E2B4 @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r3, #0xc]
	ands r0, r2
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r2, [r3, #0x10]
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r3, #0x10]
	adds r0, r1, #0
	ldrb r2, [r3, #0x14]
	ands r0, r2
	strb r0, [r3, #0x14]
	ldrb r0, [r3, #0x18]
	ands r1, r0
	movs r0, #2
	orrs r1, r0
	strb r1, [r3, #0x18]
	bl ClearIcons
	movs r4, #0
	str r6, [sp, #0x28]
	adds r1, r5, #0
	adds r1, #0x4b
	str r1, [sp, #0x10]
	adds r2, r5, #0
	adds r2, #0x50
	str r2, [sp, #0x18]
	adds r3, r5, #0
	adds r3, #0x45
	str r3, [sp, #4]
	movs r0, #0x2e
	adds r0, r0, r5
	mov sl, r0
	movs r1, #0x30
	adds r1, r1, r5
	mov r8, r1
	movs r2, #0x31
	adds r2, r2, r5
	mov sb, r2
	adds r3, #3
	str r3, [sp, #0xc]
	adds r0, r5, #0
	adds r0, #0x2c
	str r0, [sp, #0x24]
	adds r1, r5, #0
	adds r1, #0x52
	str r1, [sp, #0x1c]
	adds r2, r5, #0
	adds r2, #0x29
	str r2, [sp, #0x20]
	adds r3, #6
	str r3, [sp, #0x14]
	adds r0, #0x1b
	str r0, [sp, #8]
	adds r7, r5, #0
	adds r7, #0x4c
	subs r1, #0x20
	str r1, [sp, #0x2c]
	adds r2, #0x12
	str r2, [sp, #0x30]
	ldr r2, _0807E2B8 @ =0x02015698
	movs r1, #0xff
_0807E182:
	lsls r0, r4, #2
	adds r0, r0, r2
	str r1, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x13
	bls _0807E182
	ldr r0, _0807E2BC @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0807E2C0 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0807E2C4 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	bl InitIcons
	movs r0, #4
	bl ApplyIconPalettes
	bl LoadUiFrameGraphics
	ldr r4, _0807E2C8 @ =0x02015688
	adds r0, r4, #0
	movs r1, #6
	bl InitText
	adds r4, #8
	adds r0, r4, #0
	movs r1, #5
	bl InitTextDb
	movs r4, #0
	ldr r6, _0807E2CC @ =0x020155E8
_0807E1D0:
	lsls r0, r4, #3
	adds r0, r0, r6
	movs r1, #7
	bl InitTextDb
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bls _0807E1D0
	movs r4, #0
	ldr r6, _0807E2D0 @ =0x02015638
_0807E1E8:
	lsls r0, r4, #3
	adds r0, r0, r6
	movs r1, #7
	bl InitTextDb
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0807E1E8
	ldr r0, _0807E2D4 @ =gUnk_08319E88
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x60
	bl ApplyPaletteExt
	ldr r0, _0807E2D8 @ =gUnk_0831AABC
	movs r1, #0xc0
	lsls r1, r1, #2
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0807E2DC @ =gUnk_0831A248
	movs r1, #0x60
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0807E2E0 @ =gUnk_08319EE8
	ldr r1, _0807E2E4 @ =gBg0Tm+0x500
	bl Decompress
	ldr r0, _0807E2E8 @ =gUnk_0831A088
	ldr r1, _0807E2EC @ =gBg1Tm+0x500
	bl Decompress
	movs r4, #0
	movs r2, #0
	ldr r3, [sp, #0x18]
	strh r2, [r3]
	ldr r0, [sp, #4]
	strb r4, [r0]
	mov r1, sl
	strb r4, [r1]
	movs r0, #0xff
	mov r3, r8
	ldrb r1, [r3]
	orrs r1, r0
	strb r1, [r3]
	mov r1, sb
	ldrb r1, [r1]
	orrs r0, r1
	mov r3, sb
	strb r0, [r3]
	ldr r0, [sp, #0xc]
	strb r4, [r0]
	ldr r1, [sp, #0x24]
	strb r4, [r1]
	ldr r3, [sp, #0x1c]
	strh r2, [r3]
	ldr r0, [sp, #0x20]
	strb r4, [r0]
	ldr r1, [sp, #0x14]
	strh r2, [r1]
	ldr r2, [sp, #8]
	strb r4, [r2]
	adds r0, r5, #0
	bl sub_808230C
	str r0, [r5, #0x60]
	ldr r3, [sp, #0x28]
	ldrb r3, [r3]
	cmp r3, #3
	bhi _0807E300
	ldr r0, _0807E2F0 @ =gUnk_0831AB1C
	ldr r1, _0807E2F4 @ =0x06011000
	bl Decompress
	ldr r0, _0807E2F8 @ =gUnk_083198CC
	ldr r1, _0807E2FC @ =0x06017200
	bl Decompress
	ldr r1, [r5, #0x14]
	ldr r0, [r1, #0x48]
	str r0, [r5, #0x54]
	ldr r0, [r1, #0x4c]
	str r0, [r5, #0x58]
	ldr r0, [r5, #0x60]
	movs r1, #0xe4
	lsls r1, r1, #7
	movs r2, #2
	bl sub_8082348
	ldr r1, [r5, #0x14]
	adds r1, #0x2c
	movs r2, #1
	adds r0, r2, #0
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _0807E314
	strb r2, [r7]
	b _0807E316
	.align 2, 0
_0807E2B4: .4byte gDispIo
_0807E2B8: .4byte 0x02015698
_0807E2BC: .4byte gBg0Tm
_0807E2C0: .4byte gBg1Tm
_0807E2C4: .4byte gBg2Tm
_0807E2C8: .4byte 0x02015688
_0807E2CC: .4byte 0x020155E8
_0807E2D0: .4byte 0x02015638
_0807E2D4: .4byte gUnk_08319E88
_0807E2D8: .4byte gUnk_0831AABC
_0807E2DC: .4byte gUnk_0831A248
_0807E2E0: .4byte gUnk_08319EE8
_0807E2E4: .4byte gBg0Tm+0x500
_0807E2E8: .4byte gUnk_0831A088
_0807E2EC: .4byte gBg1Tm+0x500
_0807E2F0: .4byte gUnk_0831AB1C
_0807E2F4: .4byte 0x06011000
_0807E2F8: .4byte gUnk_083198CC
_0807E2FC: .4byte 0x06017200
_0807E300:
	ldr r0, _0807E40C @ =gUnk_083198CC
	ldr r1, _0807E410 @ =0x06015000
	bl Decompress
	ldr r0, [r5, #0x60]
	movs r1, #0xa0
	lsls r1, r1, #7
	movs r2, #2
	bl sub_8082348
_0807E314:
	strb r4, [r7]
_0807E316:
	ldr r1, [sp, #0x10]
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807E394
	str r0, [sp]
	movs r0, #1
	movs r1, #8
	movs r2, #0xe
	movs r3, #0xc
	bl sub_8041358
	ldr r4, _0807E414 @ =0x02015688
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r0, [r5, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x30
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r4, #0
	bl Text_SetCursor
	ldr r0, [r5, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	ldr r1, _0807E418 @ =gBg0Tm
	adds r0, r4, #0
	bl PutText
	ldr r1, [r5, #0x54]
	movs r0, #0
	bl sub_807D6C0
	ldr r0, [r5, #0x54]
	bl GetUnitFid
	adds r1, r0, #0
	movs r3, #4
	rsbs r3, r3, #0
	movs r0, #3
	str r0, [sp]
	movs r0, #0
	movs r2, #0x40
	bl StartFace
_0807E394:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r2, [sp, #4]
	ldrb r1, [r2]
	ldr r3, [sp, #0x18]
	ldrh r2, [r3]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	movs r4, #0
	ldr r3, [sp, #0x2c]
	movs r1, #0
	ldr r2, [sp, #0x30]
_0807E3C4:
	adds r0, r3, r4
	strb r1, [r0]
	adds r0, r2, r4
	strb r1, [r0]
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #8
	bls _0807E3C4
	movs r0, #7
	bl EnableBgSync
	ldr r0, [sp, #0x28]
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807E3F0
	adds r0, r5, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	adds r0, r5, #0
	bl Proc_Goto
_0807E3F0:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807E40C: .4byte gUnk_083198CC
_0807E410: .4byte 0x06015000
_0807E414: .4byte 0x02015688
_0807E418: .4byte gBg0Tm

	thumb_func_start sub_807E41C
sub_807E41C: @ 0x0807E41C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r6, #0
	str r6, [sp]
	movs r0, #0xf
	movs r1, #8
	movs r2, #0xe
	movs r3, #0xc
	bl sub_8041358
	ldr r4, _0807E4B8 @ =0x02015690
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r0, [r5, #0x58]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x28
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r4, #0
	bl Text_SetCursor
	ldr r0, [r5, #0x58]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	ldr r1, _0807E4BC @ =gBg0Tm+0x30
	adds r0, r4, #0
	bl PutText
	ldr r1, [r5, #0x58]
	movs r0, #1
	bl sub_807D6C0
	ldr r0, [r5, #0x58]
	bl GetUnitFid
	adds r1, r0, #0
	movs r3, #4
	rsbs r3, r3, #0
	movs r0, #2
	str r0, [sp]
	movs r0, #1
	movs r2, #0xac
	bl StartFace
	adds r0, r5, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	beq _0807E4CE
	ldr r0, [r5, #0x54]
	bl GetUnitItemCount
	cmp r0, #0
	bne _0807E4C0
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #1
	strb r0, [r1]
	b _0807E4C6
	.align 2, 0
_0807E4B8: .4byte 0x02015690
_0807E4BC: .4byte gBg0Tm+0x30
_0807E4C0:
	adds r0, r5, #0
	adds r0, #0x2f
	strb r6, [r0]
_0807E4C6:
	adds r1, r5, #0
	adds r1, #0x2e
	movs r0, #0
	strb r0, [r1]
_0807E4CE:
	adds r2, r5, #0
	adds r2, #0x30
	movs r0, #0xff
	ldrb r1, [r2]
	orrs r1, r0
	strb r1, [r2]
	adds r1, r5, #0
	adds r1, #0x31
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	subs r1, #2
	ldrb r2, [r1]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	subs r1, #1
	ldrb r1, [r1]
	lsls r1, r1, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	movs r0, #0xf
	bl EnableBgSync
	adds r1, r5, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	bne _0807E524
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r5, #0
	bl sub_80829E8
	b _0807E52E
_0807E524:
	cmp r1, #3
	bne _0807E52E
	ldr r0, [r5, #0x5c]
	bl Proc_End
_0807E52E:
	adds r0, r5, #0
	bl sub_807D074
	str r0, [r5, #0x5c]
	movs r0, #1
	strb r0, [r4]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807E544
sub_807E544: @ 0x0807E544
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x54]
	bl GetUnitItemCount
	adds r5, r4, #0
	adds r5, #0x3b
	strb r0, [r5]
	ldr r0, [r4, #0x58]
	bl GetUnitItemCount
	adds r1, r4, #0
	adds r1, #0x3c
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807E57E
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807E57E
	ldrb r0, [r5]
	cmp r0, #4
	bhi _0807E57E
	adds r0, #1
	strb r0, [r5]
_0807E57E:
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807E5A0
	adds r0, r4, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807E5A0
	adds r1, r4, #0
	adds r1, #0x3c
	ldrb r0, [r1]
	cmp r0, #4
	bhi _0807E5A0
	adds r0, #1
	strb r0, [r1]
_0807E5A0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807E5A8
sub_807E5A8: @ 0x0807E5A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	str r0, [sp]
	adds r0, r6, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	str r0, [sp, #4]
	adds r0, r6, #0
	bl sub_807E544
	adds r4, r6, #0
	adds r4, #0x29
	ldrb r0, [r4]
	cmp r0, #2
	bne _0807E5F4
	ldr r0, _0807E5F0 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807E5F4
	bl sub_807089C
	movs r0, #0
	strb r0, [r4]
	b _0807EB60
	.align 2, 0
_0807E5F0: .4byte gKeySt
_0807E5F4:
	ldr r2, _0807E674 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x20
	ldrh r1, [r1, #6]
	ands r0, r1
	mov r8, r2
	cmp r0, #0
	beq _0807E67C
	adds r0, r6, #0
	adds r0, #0x2f
	adds r5, r0, #0
	ldrb r1, [r5]
	cmp r1, #1
	bne _0807E67C
	adds r7, r6, #0
	adds r7, #0x3b
	ldrb r0, [r7]
	adds r2, r6, #0
	adds r2, #0x29
	str r2, [sp, #8]
	cmp r0, #0
	bne _0807E622
	b _0807EB1A
_0807E622:
	ldr r0, _0807E678 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E632
	movs r0, #0x67
	bl m4aSongNumStart
_0807E632:
	ldrb r3, [r5]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	subs r0, #1
	strb r0, [r5]
	adds r0, r0, r7
	ldrb r0, [r0]
	ldrb r3, [r4]
	cmp r3, r0
	blo _0807E660
	subs r0, #1
	strb r0, [r4]
_0807E660:
	ldrb r7, [r5]
	lsls r0, r7, #3
	adds r5, r7, #0
	subs r0, r0, r5
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	b _0807EAB2
	.align 2, 0
_0807E674: .4byte gKeySt
_0807E678: .4byte gPlaySt
_0807E67C:
	mov r0, r8
	ldr r1, [r0]
	movs r0, #0x10
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807E700
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _0807E700
	adds r0, #0xd
	ldrb r0, [r0]
	adds r1, r6, #0
	adds r1, #0x29
	str r1, [sp, #8]
	cmp r0, #0
	bne _0807E6A6
	b _0807EB1A
_0807E6A6:
	ldr r0, _0807E6FC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E6B6
	movs r0, #0x67
	bl m4aSongNumStart
_0807E6B6:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r3, [r4]
	lsls r1, r3, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r7, [r5]
	adds r0, r7, r0
	ldrb r0, [r0]
	ldrb r1, [r4]
	cmp r1, r0
	blo _0807E6EA
	subs r0, #1
	strb r0, [r4]
_0807E6EA:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	b _0807EAB2
	.align 2, 0
_0807E6FC: .4byte gPlaySt
_0807E700:
	mov r3, r8
	ldr r1, [r3]
	movs r4, #0x40
	mov sb, r4
	mov r0, sb
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807E7AC
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	adds r7, r6, #0
	adds r7, #0x3b
	adds r1, r7, r2
	ldrb r1, [r1]
	adds r5, r0, #0
	cmp r1, #0
	beq _0807E7AC
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r4]
	cmp r0, #0
	beq _0807E760
	subs r0, #1
	strb r0, [r4]
	ldr r0, _0807E75C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E788
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807E788
	.align 2, 0
_0807E75C: .4byte gPlaySt
_0807E760:
	mov r3, r8
	ldr r1, [r3]
	mov r0, sb
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807E788
	ldrb r1, [r5]
	adds r0, r1, r7
	ldrb r0, [r0]
	subs r0, #1
	strb r0, [r4]
	ldr r0, _0807E7A8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E788
	movs r0, #0x66
	bl m4aSongNumStart
_0807E788:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	adds r3, r6, #0
	adds r3, #0x29
	str r3, [sp, #8]
	b _0807EB1A
	.align 2, 0
_0807E7A8: .4byte gPlaySt
_0807E7AC:
	mov r4, r8
	ldr r1, [r4]
	movs r7, #0x80
	mov sb, r7
	mov r0, sb
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807E858
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	adds r7, r6, #0
	adds r7, #0x3b
	adds r1, r7, r2
	ldrb r1, [r1]
	adds r5, r0, #0
	cmp r1, #0
	beq _0807E858
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r1, [r4]
	ldrb r3, [r5]
	adds r0, r3, r7
	ldrb r0, [r0]
	subs r0, #1
	cmp r1, r0
	bge _0807E814
	adds r0, r1, #1
	strb r0, [r4]
	ldr r0, _0807E810 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E836
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807E836
	.align 2, 0
_0807E810: .4byte gPlaySt
_0807E814:
	mov r7, r8
	ldr r1, [r7]
	mov r0, sb
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807E836
	movs r0, #0
	strb r0, [r4]
	ldr r0, _0807E854 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E836
	movs r0, #0x66
	bl m4aSongNumStart
_0807E836:
	ldrb r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	adds r2, r6, #0
	adds r2, #0x29
	str r2, [sp, #8]
	b _0807EB1A
	.align 2, 0
_0807E854: .4byte gPlaySt
_0807E858:
	mov r3, r8
	ldr r1, [r3]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	adds r4, r6, #0
	adds r4, #0x29
	str r4, [sp, #8]
	cmp r0, #0
	bne _0807E86E
	b _0807EA22
_0807E86E:
	ldrb r0, [r4]
	cmp r0, #0
	beq _0807E876
	b _0807EA22
_0807E876:
	ldr r0, _0807E8F8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807E886
	movs r0, #0x6a
	bl m4aSongNumStart
_0807E886:
	adds r0, r6, #0
	adds r0, #0x30
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0xff
	bne _0807E8FC
	adds r5, r6, #0
	adds r5, #0x2f
	ldrb r0, [r5]
	mov r7, sb
	strb r0, [r7]
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r0, [r4]
	adds r1, r6, #0
	adds r1, #0x31
	strb r0, [r1]
	ldrb r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	adds r0, #1
	movs r1, #1
	ands r0, r1
	strb r0, [r5]
	lsls r1, r0, #2
	adds r0, r6, #0
	adds r0, #0x54
	adds r0, r0, r1
	ldr r0, [r0]
	bl GetUnitItemCount
	cmp r0, #4
	bgt _0807E8E6
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r3, [r5]
	adds r0, r3, r0
	ldrb r0, [r0]
	strb r0, [r4]
_0807E8E6:
	ldrb r7, [r5]
	lsls r0, r7, #3
	adds r5, r7, #0
	subs r0, r0, r5
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	b _0807EAB2
	.align 2, 0
_0807E8F8: .4byte gPlaySt
_0807E8FC:
	adds r0, r6, #0
	adds r0, #0x4c
	ldrb r0, [r0]
	adds r5, r6, #0
	adds r5, #0x2f
	adds r4, r6, #0
	adds r4, #0x2e
	movs r1, #0x31
	adds r1, r1, r6
	mov sl, r1
	adds r7, r6, #0
	adds r7, #0x54
	cmp r0, #0
	beq _0807E958
	mov r2, sb
	ldrb r2, [r2]
	lsls r0, r2, #2
	adds r0, r7, r0
	ldr r0, [r0]
	ldrb r1, [r1]
	ldrb r3, [r5]
	lsls r2, r3, #2
	adds r2, r7, r2
	ldr r2, [r2]
	ldrb r3, [r4]
	bl sub_8082B98
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807E958
	ldrb r7, [r5]
	lsls r0, r7, #3
	adds r5, r7, #0
	subs r0, r0, r5
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r4, [r4]
	lsls r1, r4, #4
	adds r1, #0x48
	ldr r2, _0807E954 @ =0x000006C2
	adds r3, r6, #0
	bl sub_8082B00
	b _0807EB1A
	.align 2, 0
_0807E954: .4byte 0x000006C2
_0807E958:
	mov r1, sb
	ldrb r1, [r1]
	lsls r0, r1, #2
	adds r0, r7, r0
	ldr r1, [r0]
	mov r8, sl
	mov r2, r8
	ldrb r2, [r2]
	lsls r0, r2, #1
	adds r1, #0x1c
	adds r1, r1, r0
	ldrh r3, [r1]
	mov ip, r3
	ldrb r2, [r5]
	lsls r0, r2, #2
	adds r0, r7, r0
	ldr r0, [r0]
	ldrb r3, [r4]
	lsls r2, r3, #1
	adds r0, #0x1c
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r1]
	ldrb r1, [r5]
	lsls r0, r1, #2
	adds r0, r7, r0
	ldr r0, [r0]
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r0, r0, r1
	mov r3, ip
	strh r3, [r0]
	ldrb r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldr r0, [r6, #0x54]
	bl UnitRemoveInvalidItems
	ldr r0, [r6, #0x58]
	bl UnitRemoveInvalidItems
	ldr r1, [r6, #0x54]
	movs r0, #0
	bl sub_807D6C0
	ldr r1, [r6, #0x58]
	movs r0, #1
	bl sub_807D6C0
	mov r0, sb
	ldrb r3, [r0]
	lsls r0, r3, #2
	adds r0, r7, r0
	ldr r2, [r0]
	mov r7, r8
	ldrb r7, [r7]
	lsls r1, r7, #1
	adds r0, r2, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0
	beq _0807E9F0
	strb r3, [r5]
	mov r1, r8
	ldrb r0, [r1]
	b _0807EA0A
_0807E9F0:
	adds r0, r2, #0
	bl GetUnitItemCount
	cmp r0, #0
	ble _0807EA08
	mov r2, sb
	ldrb r0, [r2]
	strb r0, [r5]
	mov r3, sl
	ldrb r0, [r3]
	subs r0, #1
	b _0807EA0A
_0807EA08:
	movs r0, #0
_0807EA0A:
	strb r0, [r4]
	movs r0, #0xff
	mov r7, sb
	strb r0, [r7]
	ldrb r1, [r5]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	b _0807EAB2
_0807EA22:
	mov r2, r8
	ldr r0, [r2]
	ldrh r1, [r0, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807EABC
	ldr r0, _0807EA60 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807EA40
	movs r0, #0x6b
	bl m4aSongNumStart
_0807EA40:
	adds r7, r6, #0
	adds r7, #0x30
	ldrb r0, [r7]
	cmp r0, #0xff
	bne _0807EA76
	adds r0, r6, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807EA64
	adds r0, r6, #0
	movs r1, #7
	bl Proc_Goto
	b _0807EB1A
	.align 2, 0
_0807EA60: .4byte gPlaySt
_0807EA64:
	adds r0, r6, #0
	movs r1, #1
	bl sub_80829E8
	adds r0, r6, #0
	movs r1, #6
	bl Proc_Goto
	b _0807EB1A
_0807EA76:
	adds r4, r6, #0
	adds r4, #0x2f
	ldrb r3, [r4]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	adds r5, r6, #0
	adds r5, #0x2e
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r7]
	strb r0, [r4]
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r0, [r0]
	strb r0, [r5]
	movs r0, #0xff
	strb r0, [r7]
	ldrb r3, [r4]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	ldrb r5, [r5]
	lsls r1, r5, #1
_0807EAB2:
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	b _0807EB1A
_0807EABC:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807EB1A
	ldr r4, [sp, #8]
	ldrb r0, [r4]
	cmp r0, #0
	bne _0807EB1A
	adds r3, r6, #0
	adds r3, #0x2f
	ldrb r7, [r3]
	lsls r0, r7, #2
	adds r5, r6, #0
	adds r5, #0x54
	adds r0, r5, r0
	ldr r0, [r0]
	adds r2, r6, #0
	adds r2, #0x2e
	ldrb r4, [r2]
	lsls r1, r4, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	adds r4, r2, #0
	cmp r0, #0
	beq _0807EB1A
	movs r0, #2
	ldr r7, [sp, #8]
	strb r0, [r7]
	ldrb r2, [r3]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r3, [r4]
	lsls r1, r3, #4
	adds r1, #0x48
	lsls r2, r2, #2
	adds r2, r5, r2
	ldr r2, [r2]
	lsls r3, r3, #1
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r2, [r2]
	bl sub_80706FC
_0807EB1A:
	ldr r0, [sp, #8]
	ldrb r0, [r0]
	cmp r0, #2
	bne _0807EB60
	adds r0, r6, #0
	adds r0, #0x2f
	adds r4, r6, #0
	adds r4, #0x2e
	ldr r1, [sp]
	ldrb r2, [r0]
	cmp r1, r2
	bne _0807EB3A
	ldr r3, [sp, #4]
	ldrb r7, [r4]
	cmp r3, r7
	beq _0807EB60
_0807EB3A:
	ldrb r3, [r0]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r4, [r4]
	lsls r1, r4, #4
	adds r1, #0x48
	lsls r3, r3, #2
	adds r2, r6, #0
	adds r2, #0x54
	adds r2, r2, r3
	ldr r2, [r2]
	lsls r4, r4, #1
	adds r2, #0x1c
	adds r2, r2, r4
	ldrh r2, [r2]
	bl sub_80706FC
_0807EB60:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807EB70
sub_807EB70: @ 0x0807EB70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	adds r6, r0, #0
	bl GetSupplyItems
	mov sl, r0
	movs r4, #0
	str r4, [sp]
	movs r0, #0xf
	movs r1, #4
	movs r2, #0xf
	movs r3, #0x10
	bl sub_8041358
	ldr r0, _0807ED78 @ =0x02016368
	strh r4, [r0]
	movs r4, #1
_0807EB9A:
	adds r0, r4, #0
	bl GetUnit
	adds r5, r0, #0
	adds r4, #1
	mov sb, r4
	adds r0, r6, #0
	adds r0, #0x46
	str r0, [sp, #0x28]
	adds r1, r6, #0
	adds r1, #0x4e
	str r1, [sp, #0x30]
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	adds r3, r6, #0
	adds r3, #0x47
	str r3, [sp, #0x2c]
	adds r4, r6, #0
	adds r4, #0x2e
	str r4, [sp, #0x14]
	adds r7, r6, #0
	adds r7, #0x45
	str r7, [sp, #0x24]
	subs r0, #0x17
	str r0, [sp, #0x18]
	subs r1, #0x1e
	str r1, [sp, #0x1c]
	adds r2, r6, #0
	adds r2, #0x31
	str r2, [sp, #0x20]
	subs r3, #0x1b
	str r3, [sp, #0xc]
	subs r4, #1
	str r4, [sp, #0x10]
	cmp r5, #0
	beq _0807EC46
	ldr r0, [r5]
	cmp r0, #0
	beq _0807EC46
	movs r0, #4
	ldrh r7, [r5, #0xc]
	ands r0, r7
	cmp r0, #0
	bne _0807EC46
	ldr r0, [r6, #0x54]
	cmp r5, r0
	beq _0807EC46
	adds r0, r5, #0
	bl GetUnitItemCount
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r3, #0
	cmp r3, r2
	bhs _0807EC46
	ldr r7, _0807ED7C @ =0x02015D28
	ldr r4, _0807ED78 @ =0x02016368
	movs r0, #0x1c
	adds r0, r0, r5
	mov ip, r0
_0807EC14:
	ldrh r0, [r4]
	lsls r1, r0, #2
	adds r1, r1, r7
	ldr r0, [r5]
	ldrb r0, [r0, #4]
	strb r0, [r1]
	ldrh r0, [r4]
	lsls r1, r0, #2
	adds r1, r1, r7
	lsls r0, r3, #1
	add r0, ip
	ldrh r0, [r0]
	strh r0, [r1, #2]
	ldrh r1, [r4]
	lsls r0, r1, #2
	adds r0, r0, r7
	strb r3, [r0, #1]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r2
	blo _0807EC14
_0807EC46:
	mov r4, sb
	cmp r4, #0x3f
	ble _0807EB9A
	ldr r1, _0807ED78 @ =0x02016368
	ldrh r4, [r1]
	movs r2, #0
	mov r3, sl
	ldrh r0, [r3]
	cmp r0, #0
	beq _0807EC8C
	ldr r7, _0807ED7C @ =0x02015D28
	movs r5, #0
	adds r3, r1, #0
_0807EC60:
	adds r1, r2, r4
	lsls r1, r1, #2
	adds r1, r1, r7
	lsls r0, r2, #1
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1, #2]
	strb r5, [r1]
	strb r2, [r1, #1]
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0x63
	bhi _0807EC8C
	lsls r0, r2, #1
	add r0, sl
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807EC60
_0807EC8C:
	ldr r0, [r6, #0x14]
	adds r0, #0x39
	ldrb r0, [r0]
	movs r4, #0
	ldr r7, [sp, #0x28]
	strb r0, [r7]
	ldrb r0, [r7]
	bl sub_807D834
	ldr r1, [sp, #0x30]
	ldrh r0, [r1]
	movs r5, #0
	mov r2, r8
	strh r0, [r2]
	ldr r3, [sp, #0x2c]
	ldrb r0, [r3]
	ldr r7, [sp, #0x14]
	strb r0, [r7]
	ldr r0, [sp, #0x14]
	mov r1, r8
	bl sub_80823A0
	ldr r0, _0807ED80 @ =0x02015638
	ldr r2, [r6, #0x54]
	mov r1, r8
	ldrh r1, [r1]
	lsrs r3, r1, #4
	str r4, [sp]
	movs r1, #1
	bl sub_807D9E4
	adds r0, r6, #0
	bl sub_807D358
	ldr r2, [sp, #0x24]
	strb r5, [r2]
	movs r0, #1
	ldr r3, [sp, #0x18]
	strb r0, [r3]
	movs r0, #0xff
	ldr r4, [sp, #0x1c]
	ldrb r1, [r4]
	orrs r1, r0
	strb r1, [r4]
	ldr r7, [sp, #0x20]
	ldrb r7, [r7]
	orrs r0, r7
	ldr r1, [sp, #0x20]
	strb r0, [r1]
	ldr r0, _0807ED84 @ =0x02015690
	ldr r2, _0807ED7C @ =0x02015D28
	mov r3, r8
	ldrh r3, [r3]
	lsrs r1, r3, #4
	ldr r4, [sp, #0x14]
	ldrb r4, [r4]
	adds r1, r4, r1
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
	ldr r7, [sp, #0x18]
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldr r3, [sp, #0x14]
	ldrb r3, [r3]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	ldr r4, [sp, #0x24]
	ldrb r1, [r4]
	mov r7, r8
	ldrh r2, [r7]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	ldr r0, [r6, #0x60]
	ldrh r1, [r7]
	str r1, [sp]
	ldr r1, _0807ED88 @ =0x0201636A
	ldrh r1, [r1]
	str r1, [sp, #4]
	movs r1, #7
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x34
	movs r3, #0xb
	bl sub_8082320
	movs r0, #0xf
	bl EnableBgSync
	ldr r0, [sp, #0xc]
	strb r5, [r0]
	ldr r1, [sp, #0x10]
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807ED8C
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r6, #0
	bl sub_80829E8
	b _0807ED96
	.align 2, 0
_0807ED78: .4byte 0x02016368
_0807ED7C: .4byte 0x02015D28
_0807ED80: .4byte 0x02015638
_0807ED84: .4byte 0x02015690
_0807ED88: .4byte 0x0201636A
_0807ED8C:
	cmp r0, #1
	bne _0807ED96
	ldr r0, [r6, #0x5c]
	bl Proc_End
_0807ED96:
	adds r0, r6, #0
	bl sub_807D16C
	str r0, [r6, #0x5c]
	movs r0, #1
	bl sub_807E06C
	movs r0, #3
	ldr r2, [sp, #0x10]
	strb r0, [r2]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807EDBC
sub_807EDBC: @ 0x0807EDBC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r0, #0x46
	ldrb r0, [r0]
	str r0, [sp, #4]
	mov r1, r8
	adds r1, #0x2e
	mov r0, r8
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldrb r1, [r1]
	adds r1, r1, r0
	str r1, [sp, #8]
	mov r4, r8
	adds r4, #0x29
	ldrb r2, [r4]
	cmp r2, #0
	beq _0807EE14
	ldr r0, _0807EE0C @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807EE14
	cmp r2, #1
	beq _0807EE10
	bl sub_807089C
	movs r0, #0
	strb r0, [r4]
	bl _0807FBD8
	.align 2, 0
_0807EE0C: .4byte gKeySt
_0807EE10:
	movs r0, #0
	strb r0, [r4]
_0807EE14:
	mov r0, r8
	adds r0, #0x2c
	ldrb r1, [r0]
	mov sb, r0
	cmp r1, #0x64
	bls _0807EE24
	bl _0807FA9A
_0807EE24:
	lsls r0, r1, #2
	ldr r1, _0807EE30 @ =_0807EE34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807EE30: .4byte _0807EE34
_0807EE34: @ jump table
	.4byte _0807F2FE @ case 0
	.4byte _0807F7FC @ case 1
	.4byte _0807F844 @ case 2
	.4byte _0807FA9A @ case 3
	.4byte _0807FA9A @ case 4
	.4byte _0807F88C @ case 5
	.4byte _0807F8A4 @ case 6
	.4byte _0807F970 @ case 7
	.4byte _0807FA9A @ case 8
	.4byte _0807FA9A @ case 9
	.4byte _0807F97A @ case 10
	.4byte _0807F996 @ case 11
	.4byte _0807FA84 @ case 12
	.4byte _0807FA9A @ case 13
	.4byte _0807FA9A @ case 14
	.4byte _0807FA9A @ case 15
	.4byte _0807FA9A @ case 16
	.4byte _0807FA9A @ case 17
	.4byte _0807FA9A @ case 18
	.4byte _0807FA9A @ case 19
	.4byte _0807FA9A @ case 20
	.4byte _0807FA9A @ case 21
	.4byte _0807FA9A @ case 22
	.4byte _0807FA9A @ case 23
	.4byte _0807FA9A @ case 24
	.4byte _0807FA9A @ case 25
	.4byte _0807FA9A @ case 26
	.4byte _0807FA9A @ case 27
	.4byte _0807FA9A @ case 28
	.4byte _0807FA9A @ case 29
	.4byte _0807FA9A @ case 30
	.4byte _0807FA9A @ case 31
	.4byte _0807FA9A @ case 32
	.4byte _0807FA9A @ case 33
	.4byte _0807FA9A @ case 34
	.4byte _0807FA9A @ case 35
	.4byte _0807FA9A @ case 36
	.4byte _0807FA9A @ case 37
	.4byte _0807FA9A @ case 38
	.4byte _0807FA9A @ case 39
	.4byte _0807FA9A @ case 40
	.4byte _0807FA9A @ case 41
	.4byte _0807FA9A @ case 42
	.4byte _0807FA9A @ case 43
	.4byte _0807FA9A @ case 44
	.4byte _0807FA9A @ case 45
	.4byte _0807FA9A @ case 46
	.4byte _0807FA9A @ case 47
	.4byte _0807FA9A @ case 48
	.4byte _0807FA9A @ case 49
	.4byte _0807FA9A @ case 50
	.4byte _0807FA9A @ case 51
	.4byte _0807FA9A @ case 52
	.4byte _0807FA9A @ case 53
	.4byte _0807FA9A @ case 54
	.4byte _0807FA9A @ case 55
	.4byte _0807FA9A @ case 56
	.4byte _0807FA9A @ case 57
	.4byte _0807FA9A @ case 58
	.4byte _0807FA9A @ case 59
	.4byte _0807FA9A @ case 60
	.4byte _0807FA9A @ case 61
	.4byte _0807FA9A @ case 62
	.4byte _0807FA9A @ case 63
	.4byte _0807FA9A @ case 64
	.4byte _0807FA9A @ case 65
	.4byte _0807FA9A @ case 66
	.4byte _0807FA9A @ case 67
	.4byte _0807FA9A @ case 68
	.4byte _0807FA9A @ case 69
	.4byte _0807FA9A @ case 70
	.4byte _0807FA9A @ case 71
	.4byte _0807FA9A @ case 72
	.4byte _0807FA9A @ case 73
	.4byte _0807FA9A @ case 74
	.4byte _0807FA9A @ case 75
	.4byte _0807FA9A @ case 76
	.4byte _0807FA9A @ case 77
	.4byte _0807FA9A @ case 78
	.4byte _0807FA9A @ case 79
	.4byte _0807FA9A @ case 80
	.4byte _0807FA9A @ case 81
	.4byte _0807FA9A @ case 82
	.4byte _0807FA9A @ case 83
	.4byte _0807FA9A @ case 84
	.4byte _0807FA9A @ case 85
	.4byte _0807FA9A @ case 86
	.4byte _0807FA9A @ case 87
	.4byte _0807FA9A @ case 88
	.4byte _0807FA9A @ case 89
	.4byte _0807FA9A @ case 90
	.4byte _0807FA9A @ case 91
	.4byte _0807FA9A @ case 92
	.4byte _0807FA9A @ case 93
	.4byte _0807FA9A @ case 94
	.4byte _0807FA9A @ case 95
	.4byte _0807FA9A @ case 96
	.4byte _0807FA9A @ case 97
	.4byte _0807FA9A @ case 98
	.4byte _0807FA9A @ case 99
	.4byte _0807EFC8 @ case 100
_0807EFC8:
	mov r1, r8
	ldr r0, [r1, #0x54]
	bl GetUnitItemCount
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r0, r8
	adds r0, #0x29
	ldrb r1, [r0]
	adds r3, r0, #0
	cmp r1, #0
	bne _0807EFEA
	cmp r7, #4
	bhi _0807EFEA
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_0807EFEA:
	ldr r2, _0807F054 @ =gKeySt
	ldr r1, [r2]
	movs r4, #0x40
	mov sl, r4
	mov r0, sl
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807F078
	cmp r7, #1
	bls _0807F078
	mov r5, r8
	adds r5, #0x2f
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	mov r4, r8
	adds r4, #0x2e
	ldrb r3, [r4]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r4]
	adds r6, r4, #0
	adds r4, r5, #0
	cmp r0, #0
	bne _0807F05C
	ldr r0, _0807F054 @ =gKeySt
	ldr r1, [r0]
	mov r0, sl
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	bne _0807F03C
	b _0807F5A6
_0807F03C:
	subs r0, r7, #1
_0807F03E:
	strb r0, [r6]
	ldr r0, _0807F058 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807F04C
	b _0807F5A6
_0807F04C:
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807F5A6
	.align 2, 0
_0807F054: .4byte gKeySt
_0807F058: .4byte gPlaySt
_0807F05C:
	subs r0, #1
	strb r0, [r6]
	ldr r0, _0807F074 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807F06C
	b _0807F5A6
_0807F06C:
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807F5A6
	.align 2, 0
_0807F074: .4byte gPlaySt
_0807F078:
	ldr r2, _0807F0C0 @ =gKeySt
	ldr r1, [r2]
	movs r4, #0x80
	mov sl, r4
	mov r0, sl
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _0807F0F4
	cmp r7, #1
	bls _0807F0F4
	mov r5, r8
	adds r5, #0x2f
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	mov r4, r8
	adds r4, #0x2e
	ldrb r3, [r4]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r1, [r4]
	subs r0, r7, #1
	adds r6, r4, #0
	adds r4, r5, #0
	cmp r1, r0
	bge _0807F0C4
	adds r0, r1, #1
	b _0807F03E
	.align 2, 0
_0807F0C0: .4byte gKeySt
_0807F0C4:
	ldr r0, _0807F0EC @ =gKeySt
	ldr r1, [r0]
	mov r0, sl
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	bne _0807F0D4
	b _0807F5A6
_0807F0D4:
	movs r0, #0
	strb r0, [r6]
	ldr r0, _0807F0F0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807F0E4
	b _0807F5A6
_0807F0E4:
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807F5A6
	.align 2, 0
_0807F0EC: .4byte gKeySt
_0807F0F0: .4byte gPlaySt
_0807F0F4:
	ldr r2, _0807F164 @ =gKeySt
	ldr r1, [r2]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	bne _0807F104
	b _0807F230
_0807F104:
	ldrb r0, [r3]
	cmp r0, #0
	beq _0807F10C
	b _0807F230
_0807F10C:
	mov r0, r8
	adds r0, #0x4c
	ldrb r0, [r0]
	mov r6, r8
	adds r6, #0x2e
	mov r5, r8
	adds r5, #0x31
	cmp r0, #0
	beq _0807F170
	mov r3, r8
	ldr r0, [r3, #0x54]
	ldrb r1, [r6]
	ldr r3, _0807F168 @ =0x02015D28
	mov r2, r8
	adds r2, #0x50
	ldrh r2, [r2]
	lsrs r2, r2, #4
	ldrb r4, [r5]
	adds r2, r4, r2
	lsls r2, r2, #2
	adds r2, r2, r3
	ldrh r2, [r2, #2]
	bl sub_8082C34
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807F170
	mov r1, r8
	adds r1, #0x2f
	ldrb r2, [r1]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r6, [r6]
	lsls r1, r6, #4
	adds r1, #0x48
	ldr r2, _0807F16C @ =0x000006C2
	mov r3, r8
	bl sub_8082B00
	bl _0807FA9A
	.align 2, 0
_0807F164: .4byte gKeySt
_0807F168: .4byte 0x02015D28
_0807F16C: .4byte 0x000006C2
_0807F170:
	ldr r0, _0807F220 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F180
	movs r0, #0x6a
	bl m4aSongNumStart
_0807F180:
	mov r3, r8
	ldr r0, [r3, #0x54]
	ldrb r1, [r6]
	mov r4, r8
	adds r4, #0x50
	ldrh r3, [r4]
	lsrs r2, r3, #4
	ldrb r3, [r5]
	adds r2, r3, r2
	bl sub_807DF60
	mov r7, r8
	adds r7, #0x2f
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r6]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	movs r5, #0
	strb r0, [r6]
	movs r0, #1
	strb r0, [r7]
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_80823A0
	mov r0, r8
	ldr r1, [r0, #0x54]
	movs r0, #0
	bl sub_807D6C0
	ldr r0, _0807F224 @ =0x02015638
	mov r1, r8
	ldr r2, [r1, #0x54]
	ldrh r1, [r4]
	lsrs r3, r1, #4
	str r5, [sp]
	movs r1, #1
	bl sub_807D9E4
	ldr r0, _0807F228 @ =0x02015690
	ldr r2, _0807F22C @ =0x02015D28
	ldrh r4, [r4]
	lsrs r1, r4, #4
	ldrb r3, [r6]
	adds r1, r3, r1
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r6, [r6]
	lsls r1, r6, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	mov r4, sb
	strb r5, [r4]
	bl _0807FA9A
	.align 2, 0
_0807F220: .4byte gPlaySt
_0807F224: .4byte 0x02015638
_0807F228: .4byte 0x02015690
_0807F22C: .4byte 0x02015D28
_0807F230:
	ldr r1, _0807F294 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807F29C
	ldr r0, _0807F298 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F24E
	movs r0, #0x6b
	bl m4aSongNumStart
_0807F24E:
	mov r5, r8
	adds r5, #0x2f
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	mov r4, r8
	adds r4, #0x2e
	ldrb r3, [r4]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	mov r0, r8
	adds r0, #0x31
	ldrb r0, [r0]
	movs r1, #0
	strb r0, [r4]
	movs r0, #1
	strb r0, [r5]
	mov r0, sb
	strb r1, [r0]
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	b _0807F5B4
	.align 2, 0
_0807F294: .4byte gKeySt
_0807F298: .4byte gPlaySt
_0807F29C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807F2AA
	bl _0807FA9A
_0807F2AA:
	mov r2, r8
	adds r2, #0x29
	ldrb r0, [r2]
	cmp r0, #0
	beq _0807F2B8
	bl _0807FA9A
_0807F2B8:
	mov r1, r8
	ldr r0, [r1, #0x54]
	mov r3, r8
	adds r3, #0x2e
	ldrb r4, [r3]
	lsls r1, r4, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807F2D0
	b _0807FA9A
_0807F2D0:
	movs r0, #2
	strb r0, [r2]
	mov r0, r8
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r3, [r3]
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	mov r4, r8
	ldr r2, [r4, #0x54]
	lsls r3, r3, #1
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r2, [r2]
	bl sub_80706FC
	b _0807FA9A
_0807F2FE:
	ldr r2, _0807F318 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0807F31C
	mov r1, r8
	adds r1, #0x4a
	movs r0, #2
	b _0807F322
	.align 2, 0
_0807F318: .4byte gKeySt
_0807F31C:
	mov r1, r8
	adds r1, #0x4a
	movs r0, #1
_0807F322:
	strb r0, [r1]
	adds r7, r1, #0
	ldr r0, _0807F358 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807F410
	mov r0, r8
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807F410
	ldr r0, _0807F35C @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807F364
	ldr r0, _0807F360 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F410
	movs r0, #0x6c
	bl m4aSongNumStart
	b _0807F410
	.align 2, 0
_0807F358: .4byte gKeySt
_0807F35C: .4byte 0x0201636A
_0807F360: .4byte gPlaySt
_0807F364:
	ldr r2, _0807F3D8 @ =0x02015D28
	mov r1, r8
	adds r1, #0x2e
	mov r0, r8
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldrb r3, [r1]
	adds r0, r3, r0
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r5, [r0]
	adds r6, r1, #0
	cmp r5, #0
	bne _0807F3F0
	ldr r0, _0807F3DC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F392
	movs r0, #0x6a
	bl m4aSongNumStart
_0807F392:
	movs r0, #0x64
	mov r4, sb
	strb r0, [r4]
	ldrb r0, [r6]
	mov r1, r8
	adds r1, #0x31
	strb r0, [r1]
	mov r4, r8
	adds r4, #0x2f
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r6]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	mov r1, r8
	ldr r0, [r1, #0x54]
	bl GetUnitItemCount
	cmp r0, #4
	bgt _0807F3E0
	mov r2, r8
	ldr r0, [r2, #0x54]
	bl GetUnitItemCount
	strb r0, [r6]
	b _0807F3E2
	.align 2, 0
_0807F3D8: .4byte 0x02015D28
_0807F3DC: .4byte gPlaySt
_0807F3E0:
	strb r5, [r6]
_0807F3E2:
	movs r0, #0
	strb r0, [r4]
	ldrb r6, [r6]
	lsls r1, r6, #1
	adds r1, #9
	movs r0, #2
	b _0807F5BA
_0807F3F0:
	ldr r0, _0807F40C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F400
	movs r0, #0x6a
	bl m4aSongNumStart
_0807F400:
	mov r0, r8
	movs r1, #7
	bl Proc_Goto
	b _0807FA9A
	.align 2, 0
_0807F40C: .4byte gPlaySt
_0807F410:
	ldr r1, _0807F440 @ =gKeySt
	ldr r0, [r1]
	ldrh r3, [r0, #8]
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	beq _0807F448
	ldr r0, _0807F444 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F42E
	movs r0, #0x6b
	bl m4aSongNumStart
_0807F42E:
	mov r0, r8
	movs r1, #1
	bl sub_80829E8
	mov r0, r8
	movs r1, #6
	bl Proc_Goto
	b _0807FBD8
	.align 2, 0
_0807F440: .4byte gKeySt
_0807F444: .4byte gPlaySt
_0807F448:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0807F4A4
	mov r1, r8
	adds r1, #0x29
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807F4A4
	ldr r0, _0807F49C @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807F466
	b _0807FA9A
_0807F466:
	movs r0, #2
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x2f
	ldrb r3, [r0]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #4
	adds r0, #0x10
	adds r1, #5
	ldrb r2, [r1]
	lsls r1, r2, #4
	lsls r3, r3, #5
	subs r3, #0x48
	subs r1, r1, r3
	ldr r4, _0807F4A0 @ =0x02015D28
	mov r3, r8
	adds r3, #0x50
	ldrh r3, [r3]
	lsrs r3, r3, #4
	adds r2, r2, r3
	lsls r2, r2, #2
	adds r2, r2, r4
	ldrh r2, [r2, #2]
	bl sub_80706FC
	b _0807FA9A
	.align 2, 0
_0807F49C: .4byte 0x0201636A
_0807F4A0: .4byte 0x02015D28
_0807F4A4:
	ldr r3, _0807F548 @ =gKeySt
	ldr r1, [r3]
	movs r2, #0x40
	adds r0, r2, #0
	ldrh r4, [r1, #6]
	ands r0, r4
	cmp r0, #0
	bne _0807F4C8
	adds r0, r2, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	bne _0807F4C0
	b _0807F5CC
_0807F4C0:
	ldrb r0, [r7]
	cmp r0, #2
	beq _0807F4C8
	b _0807F5CC
_0807F4C8:
	mov r0, r8
	adds r0, #0x2e
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	beq _0807F5CC
	ldr r0, _0807F54C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F4E4
	movs r0, #0x66
	bl m4aSongNumStart
_0807F4E4:
	ldrb r4, [r6]
	cmp r4, #1
	bne _0807F55C
	mov r5, r8
	adds r5, #0x50
	ldrh r0, [r5]
	cmp r0, #0
	beq _0807F55C
	ldr r0, _0807F550 @ =0x02015638
	ldrh r1, [r5]
	lsrs r2, r1, #4
	subs r2, #1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r1, r8
	ldr r3, [r1, #0x54]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807DB80
	mov r0, r8
	bl sub_807D358
	ldr r1, _0807F554 @ =0x02015D28
	ldrh r2, [r5]
	lsrs r0, r2, #4
	ldrb r6, [r6]
	adds r0, r6, r0
	subs r0, #1
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r3, #0xff
	ldrb r0, [r1]
	cmp r3, r0
	beq _0807F538
	ldr r0, _0807F558 @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807F538:
	ldrb r7, [r7]
	lsls r0, r7, #2
	ldrh r1, [r5]
	subs r0, r1, r0
	strh r0, [r5]
	mov r2, sb
	strb r4, [r2]
	b _0807FA9A
	.align 2, 0
_0807F548: .4byte gKeySt
_0807F54C: .4byte gPlaySt
_0807F550: .4byte 0x02015638
_0807F554: .4byte 0x02015D28
_0807F558: .4byte 0x02015690
_0807F55C:
	mov r4, r8
	adds r4, #0x2f
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r6]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r6]
	subs r0, #1
	strb r0, [r6]
	ldr r1, _0807F5C4 @ =0x02015D28
	mov r0, r8
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldrb r2, [r6]
	adds r0, r2, r0
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r3, #0xff
	ldrb r0, [r1]
	cmp r3, r0
	beq _0807F5A6
	ldr r0, _0807F5C8 @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807F5A6:
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r6, [r6]
	lsls r1, r6, #1
_0807F5B4:
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
_0807F5BA:
	movs r2, #0xc
	bl sub_804169C
	b _0807FA9A
	.align 2, 0
_0807F5C4: .4byte 0x02015D28
_0807F5C8: .4byte 0x02015690
_0807F5CC:
	ldr r2, _0807F664 @ =gKeySt
	ldr r1, [r2]
	movs r2, #0x80
	adds r0, r2, #0
	ldrh r3, [r1, #6]
	ands r0, r3
	cmp r0, #0
	bne _0807F5F0
	adds r0, r2, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	bne _0807F5E8
	b _0807F710
_0807F5E8:
	ldrb r4, [r7]
	cmp r4, #2
	beq _0807F5F0
	b _0807F710
_0807F5F0:
	mov r0, r8
	adds r0, #0x2e
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #5
	bls _0807F5FE
	b _0807F710
_0807F5FE:
	ldr r3, _0807F668 @ =0x0201636A
	cmp r1, #5
	bne _0807F678
	mov r5, r8
	adds r5, #0x50
	ldrh r0, [r5]
	lsrs r2, r0, #4
	adds r1, r2, #7
	ldrh r0, [r3]
	cmp r1, r0
	bge _0807F678
	ldr r0, _0807F66C @ =0x02015638
	adds r2, r1, #0
	mov r1, r8
	ldr r3, [r1, #0x54]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807DB80
	mov r0, r8
	bl sub_807D358
	ldr r1, _0807F670 @ =0x02015D28
	ldrh r2, [r5]
	lsrs r0, r2, #4
	ldrb r6, [r6]
	adds r0, r6, r0
	adds r0, #1
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r3, #0xff
	ldrb r4, [r1]
	cmp r3, r4
	beq _0807F650
	ldr r0, _0807F674 @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807F650:
	ldrb r7, [r7]
	lsls r0, r7, #2
	ldrh r1, [r5]
	adds r0, r1, r0
	strh r0, [r5]
	movs r0, #2
	mov r2, sb
	strb r0, [r2]
	b _0807F6EE
	.align 2, 0
_0807F664: .4byte gKeySt
_0807F668: .4byte 0x0201636A
_0807F66C: .4byte 0x02015638
_0807F670: .4byte 0x02015D28
_0807F674: .4byte 0x02015690
_0807F678:
	mov r5, r8
	adds r5, #0x50
	ldrh r4, [r5]
	lsrs r0, r4, #4
	adds r4, r6, #0
	ldrb r1, [r4]
	adds r0, r0, r1
	adds r0, #1
	ldrh r3, [r3]
	cmp r0, r3
	blt _0807F690
	b _0807FA9A
_0807F690:
	mov r7, r8
	adds r7, #0x2f
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	lsls r1, r1, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldr r1, _0807F704 @ =0x02015D28
	ldrh r5, [r5]
	lsrs r0, r5, #4
	ldrb r4, [r4]
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r0, #0xff
	ldrb r2, [r1]
	cmp r0, r2
	beq _0807F6D4
	ldr r0, _0807F708 @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807F6D4:
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r6, [r6]
	lsls r1, r6, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
_0807F6EE:
	ldr r0, _0807F70C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	bge _0807F6FA
	b _0807FA9A
_0807F6FA:
	movs r0, #0x66
	bl m4aSongNumStart
	b _0807FA9A
	.align 2, 0
_0807F704: .4byte 0x02015D28
_0807F708: .4byte 0x02015690
_0807F70C: .4byte gPlaySt
_0807F710:
	ldr r3, _0807F780 @ =gKeySt
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0807F788
	ldr r0, _0807F784 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F72E
	movs r0, #0x67
	bl m4aSongNumStart
_0807F72E:
	mov r2, r8
	adds r2, #0x46
	mov r0, r8
	adds r0, #0x32
	ldrb r4, [r2]
	adds r0, r4, r0
	mov r1, r8
	adds r1, #0x50
	ldrh r1, [r1]
	lsrs r1, r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x3b
	ldrb r2, [r2]
	adds r0, r2, r0
	mov r3, r8
	adds r3, #0x2e
	ldrb r1, [r3]
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r3]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	mov r1, r8
	adds r1, #0x45
	movs r0, #0x38
	strb r0, [r1]
	movs r0, #5
	b _0807FA6E
	.align 2, 0
_0807F780: .4byte gKeySt
_0807F784: .4byte gPlaySt
_0807F788:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0807F792
	b _0807FA9A
_0807F792:
	ldr r0, _0807F7F8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0807F7A2
	movs r0, #0x67
	bl m4aSongNumStart
_0807F7A2:
	mov r2, r8
	adds r2, #0x46
	mov r0, r8
	adds r0, #0x32
	ldrb r3, [r2]
	adds r0, r3, r0
	mov r1, r8
	adds r1, #0x50
	ldrh r1, [r1]
	lsrs r1, r1, #4
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x3b
	ldrb r2, [r2]
	adds r0, r2, r0
	mov r3, r8
	adds r3, #0x2e
	ldrb r1, [r3]
	strb r1, [r0]
	mov r0, r8
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r3]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	mov r1, r8
	adds r1, #0x45
	movs r0, #0xc8
	strb r0, [r1]
	movs r0, #0xa
	mov r4, sb
	strb r0, [r4]
	b _0807FA9A
	.align 2, 0
_0807F7F8: .4byte gPlaySt
_0807F7FC:
	mov r0, r8
	adds r0, #0x50
	mov r1, r8
	adds r1, #0x4a
	ldrb r1, [r1]
	lsls r1, r1, #2
	ldrh r2, [r0]
	subs r1, r2, r1
	strh r1, [r0]
	ldrh r1, [r0]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	beq _0807F81A
	b _0807FA9A
_0807F81A:
	lsrs r0, r1, #4
	adds r0, #7
	lsls r0, r0, #1
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _0807F840 @ =gBg2Tm+0x1E
	adds r0, r0, r1
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
	movs r0, #0
	b _0807F990
	.align 2, 0
_0807F840: .4byte gBg2Tm+0x1E
_0807F844:
	mov r0, r8
	adds r0, #0x50
	mov r1, r8
	adds r1, #0x4a
	ldrb r1, [r1]
	lsls r1, r1, #2
	ldrh r4, [r0]
	adds r1, r4, r1
	strh r1, [r0]
	ldrh r1, [r0]
	movs r0, #0xf
	ands r0, r1
	cmp r0, #0
	beq _0807F862
	b _0807FA9A
_0807F862:
	lsrs r0, r1, #4
	subs r0, #1
	lsls r0, r0, #1
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _0807F888 @ =gBg2Tm+0x1E
	adds r0, r0, r1
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
	movs r0, #0
	b _0807FA6E
	.align 2, 0
_0807F888: .4byte gBg2Tm+0x1E
_0807F88C:
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	adds r0, #0x38
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x70
	beq _0807F8A0
	b _0807FA9A
_0807F8A0:
	movs r0, #6
	b _0807FA96
_0807F8A4:
	mov r1, r8
	adds r1, #0x45
	movs r0, #0x90
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x46
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #8
	bne _0807F8BC
	movs r0, #0
	b _0807F8BE
_0807F8BC:
	adds r0, r1, #1
_0807F8BE:
	strb r0, [r7]
	mov r0, r8
	adds r0, #0x32
	ldrb r3, [r7]
	adds r0, r3, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	mov r5, r8
	adds r5, #0x50
	movs r6, #0
	strh r0, [r5]
	mov r0, r8
	adds r0, #0x3b
	ldrb r4, [r7]
	adds r0, r4, r0
	ldrb r0, [r0]
	mov r4, r8
	adds r4, #0x2e
	strb r0, [r4]
	ldrb r0, [r7]
	bl sub_807D834
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80823A0
	ldr r0, _0807F960 @ =0x02015638
	mov r1, r8
	ldr r2, [r1, #0x54]
	ldrh r1, [r5]
	lsrs r3, r1, #4
	str r6, [sp]
	movs r1, #1
	bl sub_807D9E4
	mov r0, r8
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r4]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	ldr r1, _0807F964 @ =0x02015D28
	ldrh r5, [r5]
	lsrs r0, r5, #4
	ldrb r4, [r4]
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r4, #0xff
	ldrb r0, [r1]
	cmp r4, r0
	bne _0807F940
	ldr r0, _0807F968 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807F94C
_0807F940:
	ldr r0, _0807F96C @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807F94C:
	mov r0, r8
	bl sub_807D358
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	adds r0, #0xe
	strb r0, [r1]
	movs r0, #7
	b _0807FA6E
	.align 2, 0
_0807F960: .4byte 0x02015638
_0807F964: .4byte 0x02015D28
_0807F968: .4byte 0x0201636A
_0807F96C: .4byte 0x02015690
_0807F970:
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	adds r0, #0xe
	b _0807FA8C
_0807F97A:
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	subs r0, #0x38
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x90
	beq _0807F98E
	b _0807FA9A
_0807F98E:
	movs r0, #0xb
_0807F990:
	mov r3, sb
	strb r0, [r3]
	b _0807FA9A
_0807F996:
	mov r1, r8
	adds r1, #0x45
	movs r0, #0x70
	strb r0, [r1]
	mov r0, r8
	adds r0, #0x46
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #0
	bne _0807F9AE
	movs r0, #8
	b _0807F9B0
_0807F9AE:
	subs r0, r1, #1
_0807F9B0:
	strb r0, [r7]
	movs r4, #0x2f
	add r4, r8
	mov sl, r4
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	mov r5, r8
	adds r5, #0x2e
	ldrb r3, [r5]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	mov r0, r8
	adds r0, #0x32
	ldrb r4, [r7]
	adds r0, r4, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	mov r4, r8
	adds r4, #0x50
	movs r6, #0
	strh r0, [r4]
	mov r0, r8
	adds r0, #0x3b
	ldrb r1, [r7]
	adds r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r5]
	ldrb r0, [r7]
	bl sub_807D834
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_80823A0
	ldr r0, _0807FA74 @ =0x02015638
	mov r3, r8
	ldr r2, [r3, #0x54]
	ldrh r1, [r4]
	lsrs r3, r1, #4
	str r6, [sp]
	movs r1, #1
	bl sub_807D9E4
	mov r3, sl
	ldrb r2, [r3]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r5]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	ldr r1, _0807FA78 @ =0x02015D28
	ldrh r4, [r4]
	lsrs r0, r4, #4
	ldrb r5, [r5]
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r1, r0, r1
	movs r4, #0xff
	ldrb r0, [r1]
	cmp r4, r0
	bne _0807FA50
	ldr r0, _0807FA7C @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807FA5C
_0807FA50:
	ldr r0, _0807FA80 @ =0x02015690
	ldrb r1, [r1]
	movs r2, #0x18
	movs r3, #0
	bl sub_807DCB8
_0807FA5C:
	mov r0, r8
	bl sub_807D358
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	subs r0, #0xe
	strb r0, [r1]
	movs r0, #0xc
_0807FA6E:
	mov r1, sb
	strb r0, [r1]
	b _0807FA9A
	.align 2, 0
_0807FA74: .4byte 0x02015638
_0807FA78: .4byte 0x02015D28
_0807FA7C: .4byte 0x0201636A
_0807FA80: .4byte 0x02015690
_0807FA84:
	mov r1, r8
	adds r1, #0x45
	ldrb r0, [r1]
	subs r0, #0xe
_0807FA8C:
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0807FA9A
_0807FA96:
	mov r2, sb
	strb r0, [r2]
_0807FA9A:
	mov r0, r8
	adds r0, #0x45
	ldrb r1, [r0]
	mov r5, r8
	adds r5, #0x50
	ldrh r2, [r5]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	mov r6, r8
	adds r6, #0x29
	ldrb r2, [r6]
	cmp r2, #0
	beq _0807FB52
	mov r0, r8
	adds r0, #0x46
	ldr r3, [sp, #4]
	ldrb r0, [r0]
	cmp r3, r0
	bne _0807FADA
	mov r1, r8
	adds r1, #0x2e
	ldrh r4, [r5]
	lsrs r0, r4, #4
	ldrb r1, [r1]
	adds r0, r1, r0
	ldr r1, [sp, #8]
	cmp r1, r0
	beq _0807FB52
_0807FADA:
	mov r1, r8
	adds r1, #0x2f
	ldrb r0, [r1]
	cmp r0, #0
	bne _0807FB0C
	adds r2, r0, #0
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	subs r1, #1
	ldrb r3, [r1]
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	mov r4, r8
	ldr r2, [r4, #0x54]
	lsls r3, r3, #1
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r2, [r2]
	bl sub_80706FC
	b _0807FB52
_0807FB0C:
	ldr r0, _0807FB20 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807FB24
	cmp r2, #1
	beq _0807FB1C
	bl sub_807089C
_0807FB1C:
	movs r0, #1
	b _0807FB50
	.align 2, 0
_0807FB20: .4byte 0x0201636A
_0807FB24:
	ldrb r3, [r1]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #4
	adds r0, #0x10
	mov r1, r8
	adds r1, #0x2e
	ldrb r2, [r1]
	lsls r1, r2, #4
	lsls r3, r3, #5
	subs r3, #0x48
	subs r1, r1, r3
	ldr r4, _0807FBC8 @ =0x02015D28
	ldrh r5, [r5]
	lsrs r3, r5, #4
	adds r2, r2, r3
	lsls r2, r2, #2
	adds r2, r2, r4
	ldrh r2, [r2, #2]
	bl sub_80706FC
	movs r0, #2
_0807FB50:
	strb r0, [r6]
_0807FB52:
	mov r7, r8
	adds r7, #0x52
	ldrh r0, [r7]
	adds r1, r0, #0
	cmp r1, #1
	bne _0807FBD0
	ldr r0, _0807FBCC @ =gDispIo
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	ldrb r1, [r1, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r2, ip
	strb r0, [r2, #1]
	mov r1, ip
	adds r1, #0x2d
	movs r0, #0x80
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x28
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xe0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x98
	strb r0, [r1]
	mov r5, ip
	adds r5, #0x34
	movs r1, #1
	ldrb r0, [r5]
	orrs r0, r1
	movs r6, #2
	orrs r0, r6
	movs r2, #4
	orrs r0, r2
	movs r4, #8
	orrs r0, r4
	movs r3, #0x10
	orrs r0, r3
	strb r0, [r5]
	mov r2, ip
	adds r2, #0x36
	ldrb r0, [r2]
	orrs r1, r0
	orrs r1, r6
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r4
	orrs r1, r3
	strb r1, [r2]
	movs r0, #2
	b _0807FBD6
	.align 2, 0
_0807FBC8: .4byte 0x02015D28
_0807FBCC: .4byte gDispIo
_0807FBD0:
	cmp r1, #1
	bhi _0807FBD8
	adds r0, #1
_0807FBD6:
	strh r0, [r7]
_0807FBD8:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_807FBE8
sub_807FBE8: @ 0x0807FBE8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r0, _0807FCF0 @ =gDispIo
	mov ip, r0
	movs r0, #0x20
	mov r1, ip
	ldrb r1, [r1, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r2, ip
	strb r0, [r2, #1]
	mov r1, ip
	adds r1, #0x2d
	movs r0, #0
	mov r8, r0
	movs r0, #0x80
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x28
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xe0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x98
	strb r0, [r1]
	mov r5, ip
	adds r5, #0x34
	movs r1, #1
	ldrb r0, [r5]
	orrs r0, r1
	movs r6, #2
	orrs r0, r6
	movs r2, #4
	orrs r0, r2
	movs r4, #8
	orrs r0, r4
	movs r3, #0x10
	orrs r0, r3
	strb r0, [r5]
	mov r2, ip
	adds r2, #0x36
	ldrb r0, [r2]
	orrs r1, r0
	orrs r1, r6
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	orrs r1, r4
	orrs r1, r3
	strb r1, [r2]
	mov r1, r8
	str r1, [sp]
	movs r0, #0xf
	movs r1, #4
	movs r2, #0xf
	movs r3, #0x10
	bl sub_8041358
	ldr r0, _0807FCF4 @ =0x02015638
	ldr r2, [r7, #0x54]
	adds r4, r7, #0
	adds r4, #0x50
	ldrh r1, [r4]
	lsrs r3, r1, #4
	movs r5, #1
	str r5, [sp]
	movs r1, #1
	bl sub_807D9E4
	movs r0, #7
	bl EnableBgSync
	adds r0, r7, #0
	adds r0, #0x45
	ldrb r1, [r0]
	ldrh r2, [r4]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	ldr r0, [r7, #0x60]
	ldrh r1, [r4]
	str r1, [sp]
	ldr r1, _0807FCF8 @ =0x0201636A
	ldrh r1, [r1]
	str r1, [sp, #4]
	movs r1, #7
	str r1, [sp, #8]
	movs r1, #0xe0
	movs r2, #0x30
	movs r3, #0xc
	bl sub_8082320
	adds r0, r7, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r1, r7, #0
	adds r1, #0x2e
	ldrb r1, [r1]
	lsls r1, r1, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	movs r0, #1
	bl sub_807E06C
	adds r0, r7, #0
	adds r0, #0x2b
	strb r5, [r0]
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FCF0: .4byte gDispIo
_0807FCF4: .4byte 0x02015638
_0807FCF8: .4byte 0x0201636A

	thumb_func_start sub_807FCFC
sub_807FCFC: @ 0x0807FCFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	ldr r0, _0807FDB0 @ =gBg0Tm+0x1E
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807FDB4 @ =gBg1Tm+0x1E
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0807FDB8 @ =gBg2Tm+0x1E
	movs r1, #0xf
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	ldr r0, [r6, #0x60]
	movs r5, #0
	str r5, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #0
	movs r2, #0
	movs r3, #0xd
	bl sub_8082320
	adds r4, r6, #0
	adds r4, #0x30
	ldrb r0, [r4]
	cmp r0, #0xff
	bne _0807FDD2
	bl GetSupplyItems
	adds r3, r0, #0
	strb r5, [r4]
	adds r0, r6, #0
	adds r0, #0x31
	strb r5, [r0]
	ldr r1, _0807FDBC @ =0x02016368
	strh r5, [r1]
	movs r2, #0
	ldrh r0, [r3]
	adds r5, r6, #0
	adds r5, #0x46
	cmp r0, #0
	beq _0807FD9C
	ldr r0, _0807FDC0 @ =0x02015D28
	mov ip, r0
	movs r7, #0
	adds r4, r1, #0
_0807FD72:
	lsls r1, r2, #2
	add r1, ip
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1, #2]
	strb r7, [r1]
	strb r2, [r1, #1]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x63
	bhi _0807FD9C
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	cmp r0, #0
	bne _0807FD72
_0807FD9C:
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _0807FDC4
	ldr r0, [r6, #0x14]
	adds r0, #0x3a
	ldrb r0, [r0]
	b _0807FDC6
	.align 2, 0
_0807FDB0: .4byte gBg0Tm+0x1E
_0807FDB4: .4byte gBg1Tm+0x1E
_0807FDB8: .4byte gBg2Tm+0x1E
_0807FDBC: .4byte 0x02016368
_0807FDC0: .4byte 0x02015D28
_0807FDC4:
	movs r0, #0
_0807FDC6:
	strb r0, [r5]
	adds r0, r6, #0
	adds r0, #0x46
	ldrb r0, [r0]
	bl sub_807D834
_0807FDD2:
	adds r2, r6, #0
	adds r2, #0x46
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r1, [r2]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r5, r6, #0
	adds r5, #0x50
	strh r0, [r5]
	adds r1, r6, #0
	adds r1, #0x2f
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r2, [r2]
	adds r0, r2, r0
	ldrb r0, [r0]
	adds r4, r6, #0
	adds r4, #0x2e
	strb r0, [r4]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80823A0
	adds r0, r6, #0
	adds r0, #0x4b
	ldrb r1, [r0]
	mov sb, r5
	mov sl, r4
	mov r8, r0
	cmp r1, #0
	bne _0807FEA8
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	movs r2, #0
	cmp r0, #0
	bne _0807FE26
	movs r2, #1
_0807FE26:
	ldr r4, _0807FE6C @ =0x02015638
	ldr r5, _0807FE70 @ =gBg2Tm+0x12A
	ldr r0, _0807FE74 @ =gUnk_083272AC
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0
	bl sub_8082360
	adds r3, r4, #0
	adds r3, #8
	adds r1, r5, #0
	adds r1, #0x80
	movs r2, #0
	ldr r7, _0807FE78 @ =0x02016368
	ldrh r0, [r7]
	cmp r0, #0
	bne _0807FE4C
	movs r2, #1
_0807FE4C:
	ldr r0, _0807FE7C @ =gUnk_083272B8
	str r0, [sp]
	adds r0, r3, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r6, #0
	adds r0, #0x4c
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807FE80
	adds r1, r6, #0
	adds r1, #0x49
	movs r0, #2
	b _0807FEA6
	.align 2, 0
_0807FE6C: .4byte 0x02015638
_0807FE70: .4byte gBg2Tm+0x12A
_0807FE74: .4byte gUnk_083272AC
_0807FE78: .4byte 0x02016368
_0807FE7C: .4byte gUnk_083272B8
_0807FE80:
	adds r3, r4, #0
	adds r3, #0x10
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r2, #0
	ldrh r0, [r7]
	cmp r0, #0
	bne _0807FE94
	movs r2, #1
_0807FE94:
	ldr r0, _0807FF44 @ =gUnk_083272C4
	str r0, [sp]
	adds r0, r3, #0
	movs r3, #0
	bl sub_8082360
	adds r1, r6, #0
	adds r1, #0x49
	movs r0, #3
_0807FEA6:
	strb r0, [r1]
_0807FEA8:
	movs r0, #2
	movs r1, #0
	movs r2, #0xd8
	bl SetBgOffset
	adds r0, r6, #0
	adds r0, #0x2c
	movs r5, #0
	strb r5, [r0]
	subs r0, #1
	strb r5, [r0]
	movs r0, #7
	bl EnableBgSync
	adds r4, r6, #0
	adds r4, #0x2d
	ldrb r0, [r4]
	cmp r0, #0
	bne _0807FEE0
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r6, #0
	bl sub_80829E8
	adds r0, r6, #0
	bl sub_807D2E0
	str r0, [r6, #0x5c]
_0807FEE0:
	movs r0, #0x18
	movs r1, #0
	bl sub_807DDC8
	ldrb r0, [r4]
	cmp r0, #4
	bne _0807FF50
	adds r0, r6, #0
	bl sub_807D2E0
	str r0, [r6, #0x5c]
	movs r0, #5
	strb r0, [r4]
	mov r3, r8
	ldrb r0, [r3]
	cmp r0, #0
	beq _0807FF5C
	adds r1, r6, #0
	adds r1, #0x31
	movs r0, #2
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_807FBE8
	adds r0, r6, #0
	movs r1, #7
	bl Proc_Goto
	ldr r1, _0807FF48 @ =0x02015D28
	mov r2, sb
	ldrh r2, [r2]
	lsrs r0, r2, #4
	mov r3, sl
	ldrb r3, [r3]
	adds r0, r3, r0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r2, [r0, #2]
	ldr r3, [r6, #0x5c]
	movs r0, #1
	movs r1, #0xb
	bl sub_807D4A8
	ldr r2, _0807FF4C @ =0x00000C47
	movs r0, #0x10
	movs r1, #0x10
	adds r3, r6, #0
	bl sub_8071B80
	b _0807FF86
	.align 2, 0
_0807FF44: .4byte gUnk_083272C4
_0807FF48: .4byte 0x02015D28
_0807FF4C: .4byte 0x00000C47
_0807FF50:
	cmp r0, #3
	bhi _0807FF5C
	movs r0, #2
	strb r0, [r4]
	mov r0, r8
	strb r5, [r0]
_0807FF5C:
	adds r0, r6, #0
	adds r0, #0x49
	ldrb r0, [r0]
	lsls r3, r0, #1
	adds r3, #2
	movs r0, #0
	str r0, [sp]
	movs r0, #0x12
	movs r1, #8
	movs r2, #0xa
	bl sub_8041358
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r1, r0, #1
	adds r1, #9
	movs r0, #0x13
	movs r2, #7
	bl sub_804169C
_0807FF86:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_807FF98
sub_807FF98: @ 0x0807FF98
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r0, #0x31
	ldrb r0, [r0]
	mov r8, r0
	adds r4, r5, #0
	adds r4, #0x29
	ldrb r0, [r4]
	ldr r7, _0807FFCC @ =gKeySt
	cmp r0, #0
	beq _0807FFD0
	ldr r1, [r7]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0807FFD0
	bl sub_807089C
	movs r0, #0
	strb r0, [r4]
	b _08080274
	.align 2, 0
_0807FFCC: .4byte gKeySt
_0807FFD0:
	ldr r2, [r7]
	ldrh r1, [r2, #6]
	movs r6, #0x80
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _0808004C
	adds r4, r5, #0
	adds r4, #0x31
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, #9
	movs r0, #0x13
	movs r2, #7
	bl sub_8041728
	ldrb r1, [r4]
	adds r0, r5, #0
	adds r0, #0x49
	ldrb r0, [r0]
	subs r0, #1
	cmp r1, r0
	bge _08080018
	adds r0, r1, #1
	strb r0, [r4]
	ldr r0, _08080014 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080038
	movs r0, #0x66
	bl m4aSongNumStart
	b _08080038
	.align 2, 0
_08080014: .4byte gPlaySt
_08080018:
	ldr r1, [r7]
	adds r0, r6, #0
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08080038
	movs r0, #0
	strb r0, [r4]
	ldr r0, _08080048 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080038
	movs r0, #0x66
	bl m4aSongNumStart
_08080038:
	ldrb r4, [r4]
	lsls r1, r4, #1
	adds r1, #9
	movs r0, #0x13
	movs r2, #7
	bl sub_804169C
	b _080800F8
	.align 2, 0
_08080048: .4byte gPlaySt
_0808004C:
	movs r6, #0x40
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080800C4
	adds r4, r5, #0
	adds r4, #0x31
	ldrb r0, [r4]
	lsls r1, r0, #1
	adds r1, #9
	movs r0, #0x13
	movs r2, #7
	bl sub_8041728
	ldrb r0, [r4]
	cmp r0, #0
	beq _08080088
	subs r0, #1
	strb r0, [r4]
	ldr r0, _08080084 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080800AE
	movs r0, #0x66
	bl m4aSongNumStart
	b _080800AE
	.align 2, 0
_08080084: .4byte gPlaySt
_08080088:
	ldr r1, [r7]
	adds r0, r6, #0
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080800AE
	ldr r0, _080800C0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080800A4
	movs r0, #0x66
	bl m4aSongNumStart
_080800A4:
	adds r0, r5, #0
	adds r0, #0x49
	ldrb r0, [r0]
	subs r0, #1
	strb r0, [r4]
_080800AE:
	ldrb r4, [r4]
	lsls r1, r4, #1
	adds r1, #9
	movs r0, #0x13
	movs r2, #7
	bl sub_804169C
	b _080800F8
	.align 2, 0
_080800C0: .4byte gPlaySt
_080800C4:
	ldrh r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080104
	ldr r0, _08080100 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080800DE
	movs r0, #0x6b
	bl m4aSongNumStart
_080800DE:
	adds r0, r5, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _080800F0
	adds r0, r5, #0
	movs r1, #1
	bl sub_80829E8
_080800F0:
	adds r0, r5, #0
	movs r1, #6
	bl Proc_Goto
_080800F8:
	adds r6, r5, #0
	adds r6, #0x29
	b _08080250
	.align 2, 0
_08080100: .4byte gPlaySt
_08080104:
	movs r0, #1
	ands r0, r1
	adds r6, r5, #0
	adds r6, #0x29
	cmp r0, #0
	bne _08080112
	b _08080220
_08080112:
	ldrb r0, [r6]
	cmp r0, #0
	beq _0808011A
	b _08080220
_0808011A:
	adds r0, r5, #0
	adds r0, #0x31
	ldrb r4, [r0]
	cmp r4, #0
	bne _08080150
	ldr r0, [r5, #0x54]
	bl GetUnitItemCount
	cmp r0, #0
	beq _08080184
	ldr r0, _0808014C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808013E
	movs r0, #0x6a
	bl m4aSongNumStart
_0808013E:
	adds r0, r5, #0
	adds r0, #0x2e
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	b _080801FC
	.align 2, 0
_0808014C: .4byte gPlaySt
_08080150:
	cmp r4, #1
	bne _08080178
	ldr r0, _08080170 @ =0x02016368
	ldrh r0, [r0]
	cmp r0, #0
	beq _08080184
	ldr r0, _08080174 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080801FC
	movs r0, #0x6a
	bl m4aSongNumStart
	b _080801FC
	.align 2, 0
_08080170: .4byte 0x02016368
_08080174: .4byte gPlaySt
_08080178:
	cmp r4, #2
	bne _080801FC
	ldr r0, _08080198 @ =0x02016368
	ldrh r0, [r0]
	cmp r0, #0
	bne _080801A0
_08080184:
	ldr r0, _0808019C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080274
	movs r0, #0x6c
	bl m4aSongNumStart
	b _08080274
	.align 2, 0
_08080198: .4byte 0x02016368
_0808019C: .4byte gPlaySt
_080801A0:
	ldr r0, _0808020C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080801B0
	movs r0, #0x6a
	bl m4aSongNumStart
_080801B0:
	movs r0, #0
	bl EndFaceById
	ldr r0, _08080210 @ =gBg0Tm
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08080214 @ =gBg1Tm
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08080218 @ =gBg2Tm
	movs r1, #0xf
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	ldr r1, _0808021C @ =0x02015D28
	adds r0, r5, #0
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	adds r2, r5, #0
	adds r2, #0x2e
	ldrb r2, [r2]
	adds r0, r2, r0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r2, [r0, #2]
	ldr r3, [r5, #0x5c]
	movs r0, #1
	movs r1, #0xb
	bl sub_807D4A8
_080801FC:
	adds r0, r5, #0
	bl sub_807FBE8
	adds r0, r5, #0
	bl Proc_Break
	b _08080250
	.align 2, 0
_0808020C: .4byte gPlaySt
_08080210: .4byte gBg0Tm
_08080214: .4byte gBg1Tm
_08080218: .4byte gBg2Tm
_0808021C: .4byte 0x02015D28
_08080220:
	ldr r1, [r7]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08080250
	ldrb r0, [r6]
	cmp r0, #0
	bne _08080250
	movs r0, #2
	strb r0, [r6]
	adds r0, r5, #0
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
	ldr r2, _08080280 @ =gUnk_0867929C
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0xa0
	bl sub_80706C8
_08080250:
	ldrb r6, [r6]
	cmp r6, #2
	bne _08080274
	adds r0, r5, #0
	adds r0, #0x31
	ldrb r1, [r0]
	cmp r1, r8
	beq _08080274
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
	ldr r2, _08080280 @ =gUnk_0867929C
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0xa0
	bl sub_80706C8
_08080274:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08080280: .4byte gUnk_0867929C

	thumb_func_start sub_8080284
sub_8080284: @ 0x08080284
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2e
	adds r0, #0x50
	ldrh r0, [r0]
	lsrs r0, r0, #4
	ldrb r1, [r1]
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #4]
	adds r0, r6, #0
	adds r0, #0x46
	ldrb r0, [r0]
	str r0, [sp, #8]
	adds r4, r6, #0
	adds r4, #0x29
	ldrb r2, [r4]
	cmp r2, #0
	beq _080802E0
	ldr r0, _080802D8 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080802E0
	cmp r2, #1
	beq _080802DC
	bl sub_807089C
	movs r0, #0
	strb r0, [r4]
	bl _080813D2
	.align 2, 0
_080802D8: .4byte gKeySt
_080802DC:
	movs r0, #0
	strb r0, [r4]
_080802E0:
	adds r4, r6, #0
	adds r4, #0x2c
	ldrb r0, [r4]
	str r4, [sp, #0xc]
	cmp r0, #7
	bne _080802F0
	bl _080811E4
_080802F0:
	cmp r0, #7
	bgt _0808034C
	cmp r0, #2
	bne _080802FC
	bl _080810D0
_080802FC:
	cmp r0, #2
	bgt _08080322
	cmp r0, #0
	bne _08080306
	b _080806B0
_08080306:
	cmp r0, #1
	bne _0808030E
	bl _08081078
_0808030E:
	adds r7, r6, #0
	adds r7, #0x2e
	movs r0, #0x50
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0x45
	adds r1, r1, r6
	mov sb, r1
	bl _080812C6
_08080322:
	cmp r0, #5
	bne _0808032A
	bl _08081128
_0808032A:
	cmp r0, #6
	bne _08080332
	bl _08081152
_08080332:
	adds r7, r6, #0
	adds r7, #0x2e
	movs r3, #0x50
	adds r3, r3, r6
	mov r8, r3
	movs r4, #0x45
	adds r4, r4, r6
	mov sb, r4
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	bl _080812FA
_0808034C:
	cmp r0, #0xc
	bne _08080354
	bl _080812D4
_08080354:
	cmp r0, #0xc
	bgt _0808037C
	cmp r0, #0xa
	bne _08080360
	bl _080811EE
_08080360:
	cmp r0, #0xb
	bne _08080368
	bl _08081216
_08080368:
	adds r7, r6, #0
	adds r7, #0x2e
	movs r0, #0x50
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0x45
	adds r1, r1, r6
	mov sb, r1
	bl _080812C6
_0808037C:
	cmp r0, #0x14
	bne _08080382
	b _080804B8
_08080382:
	adds r7, r6, #0
	adds r7, #0x2e
	movs r3, #0x50
	adds r3, r3, r6
	mov r8, r3
	movs r4, #0x45
	adds r4, r4, r6
	mov sb, r4
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	cmp r0, #0xff
	beq _080803A0
	bl _080812FA
_080803A0:
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r1, [r0]
	str r0, [sp, #0x10]
	cmp r1, #0
	bne _080803CA
	subs r0, #2
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	b _080803EA
_080803CA:
	adds r2, r6, #0
	adds r2, #0x46
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r4, [r2]
	adds r0, r4, r0
	ldrb r1, [r7]
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r2, [r2]
	adds r0, r2, r0
	mov r5, r8
	ldrh r5, [r5]
	lsrs r1, r5, #4
	strb r1, [r0]
_080803EA:
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	cmp r0, #2
	bne _0808047E
	ldr r0, [r6, #0x54]
	bl GetUnitFid
	adds r1, r0, #0
	movs r3, #4
	rsbs r3, r3, #0
	movs r0, #3
	str r0, [sp]
	movs r0, #0
	movs r2, #0x40
	bl StartFace
	ldr r5, _080804A8 @ =gBg0Tm
	adds r0, r5, #0
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _080804AC @ =gBg1Tm
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _080804B0 @ =gBg2Tm
	movs r1, #0xf
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	movs r0, #0
	str r0, [sp]
	movs r0, #1
	movs r1, #8
	movs r2, #0xe
	movs r3, #0xc
	bl sub_8041358
	bl sub_807D338
	ldr r0, [r6, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r4, #0x30
	subs r4, r4, r0
	lsrs r0, r4, #0x1f
	adds r4, r4, r0
	asrs r4, r4, #1
	ldr r0, [r6, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	ldr r1, _080804B4 @ =0x02015688
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r5, #0
	movs r2, #0
	adds r3, r4, #0
	bl sub_8082360
	ldr r1, [r6, #0x54]
	movs r0, #0
	bl sub_807D6C0
_0808047E:
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _08080494
	ldr r0, [r6, #0x14]
	adds r1, r6, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r0, #0x3a
	strb r1, [r0]
_08080494:
	adds r0, r6, #0
	movs r1, #4
	bl Proc_Goto
	movs r1, #0x45
	adds r1, r1, r6
	mov sb, r1
	bl _080812C6
	.align 2, 0
_080804A8: .4byte gBg0Tm
_080804AC: .4byte gBg1Tm
_080804B0: .4byte gBg2Tm
_080804B4: .4byte 0x02015688
_080804B8:
	ldr r0, _080805D4 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x20
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _080804E4
	adds r1, r6, #0
	adds r1, #0x30
	ldrb r0, [r1]
	cmp r0, #0
	beq _080804E4
	movs r0, #0
	strb r0, [r1]
	ldr r0, _080805D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080804E4
	movs r0, #0x66
	bl m4aSongNumStart
_080804E4:
	ldr r0, _080805D4 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x10
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08080510
	adds r1, r6, #0
	adds r1, #0x30
	ldrb r3, [r1]
	cmp r3, #1
	beq _08080510
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080805D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080510
	movs r0, #0x66
	bl m4aSongNumStart
_08080510:
	ldr r0, _080805D4 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r4, #1
	ands r4, r1
	cmp r4, #0
	beq _080805F0
	ldr r0, _080805D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808052E
	movs r0, #0x6a
	bl m4aSongNumStart
_0808052E:
	adds r0, r6, #0
	adds r0, #0x30
	ldrb r0, [r0]
	adds r7, r6, #0
	adds r7, #0x2e
	movs r4, #0x50
	adds r4, r4, r6
	mov r8, r4
	movs r5, #0x45
	adds r5, r5, r6
	mov sb, r5
	movs r1, #0x52
	adds r1, r1, r6
	mov sl, r1
	cmp r0, #0
	bne _080805CC
	ldrh r2, [r4]
	lsrs r0, r2, #4
	ldrb r3, [r7]
	adds r0, r3, r0
	lsls r1, r0, #0x10
	ldr r4, _080805DC @ =0x02016368
	adds r5, r4, #0
	ldr r2, _080805E0 @ =0x0201636A
	mov ip, r2
	adds r3, r6, #0
	adds r3, #0x4b
	str r3, [sp, #0x14]
	ldrh r2, [r4]
	cmp r0, r2
	bge _08080588
	ldr r3, _080805E4 @ =0x02015D28
_0808056E:
	asrs r1, r1, #0x10
	lsls r2, r1, #2
	adds r2, r2, r3
	adds r1, #1
	lsls r0, r1, #2
	adds r0, r0, r3
	ldrh r0, [r0, #2]
	strh r0, [r2, #2]
	lsls r1, r1, #0x10
	asrs r0, r1, #0x10
	ldrh r2, [r4]
	cmp r0, r2
	blt _0808056E
_08080588:
	ldrh r0, [r5]
	subs r0, #1
	strh r0, [r5]
	mov r3, ip
	ldrh r0, [r3]
	subs r0, #1
	strh r0, [r3]
	adds r0, r7, #0
	mov r1, r8
	bl sub_80823A0
	ldr r0, _080805E8 @ =0x02015638
	ldr r2, [r6, #0x54]
	mov r4, r8
	ldrh r4, [r4]
	lsrs r3, r4, #4
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807D9E4
	bl sub_807DE60
	ldr r1, _080805EC @ =gAction
	movs r0, #0x19
	strb r0, [r1, #0x11]
	ldr r5, [sp, #0x14]
	ldrb r0, [r5]
	cmp r0, #0
	beq _080805CC
	adds r0, r6, #0
	movs r1, #6
	bl Proc_Goto
_080805CC:
	movs r0, #0
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	b _08080622
	.align 2, 0
_080805D4: .4byte gKeySt
_080805D8: .4byte gPlaySt
_080805DC: .4byte 0x02016368
_080805E0: .4byte 0x0201636A
_080805E4: .4byte 0x02015D28
_080805E8: .4byte 0x02015638
_080805EC: .4byte gAction
_080805F0:
	movs r0, #2
	ands r0, r1
	adds r7, r6, #0
	adds r7, #0x2e
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	movs r3, #0x45
	adds r3, r3, r6
	mov sb, r3
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	cmp r0, #0
	beq _08080622
	ldr r0, _0808069C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808061E
	movs r0, #0x6b
	bl m4aSongNumStart
_0808061E:
	ldr r0, [sp, #0xc]
	strb r4, [r0]
_08080622:
	ldr r1, [sp, #0xc]
	ldrb r0, [r1]
	cmp r0, #0
	beq _0808062E
	bl _080812FA
_0808062E:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	ldr r0, _080806A0 @ =gBg0Tm
	movs r1, #0xe
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _080806A4 @ =gBg1Tm
	movs r1, #0xe
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r1, _080806A8 @ =0x02015D28
	mov r4, r8
	ldrh r4, [r4]
	lsrs r0, r4, #4
	ldrb r5, [r7]
	adds r0, r5, r0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r2, [r0, #2]
	ldr r3, [r6, #0x5c]
	movs r0, #1
	movs r1, #0xb
	bl sub_807D4A8
	movs r0, #3
	bl EnableBgSync
	ldr r0, _080806AC @ =0x02016368
	ldrh r0, [r0]
	cmp r0, #0
	beq _08080692
	bl _080812FA
_08080692:
	movs r0, #0xff
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	bl _080812FA
	.align 2, 0
_0808069C: .4byte gPlaySt
_080806A0: .4byte gBg0Tm
_080806A4: .4byte gBg1Tm
_080806A8: .4byte 0x02015D28
_080806AC: .4byte 0x02016368
_080806B0:
	ldr r1, _080806F8 @ =gKeySt
	ldr r0, [r1]
	ldrh r2, [r0, #8]
	movs r0, #2
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	beq _08080720
	adds r0, r6, #0
	adds r0, #0x4b
	ldrb r0, [r0]
	cmp r0, #0
	beq _08080700
	ldr r0, _080806FC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	adds r7, r6, #0
	adds r7, #0x2e
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	movs r3, #0x45
	adds r3, r3, r6
	mov sb, r3
	movs r4, #0x52
	adds r4, r4, r6
	mov sl, r4
	cmp r0, #0
	bge _080806EE
	bl _080812FA
_080806EE:
	movs r0, #0x6c
	bl m4aSongNumStart
	bl _080812FA
	.align 2, 0
_080806F8: .4byte gKeySt
_080806FC: .4byte gPlaySt
_08080700:
	ldr r0, _0808071C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080710
	movs r0, #0x6b
	bl m4aSongNumStart
_08080710:
	movs r0, #0xff
	strb r0, [r4]
	adds r7, r6, #0
	adds r7, #0x2e
	b _08080BBA
	.align 2, 0
_0808071C: .4byte gPlaySt
_08080720:
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _0808072A
	b _08080B68
_0808072A:
	adds r0, r6, #0
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0
	beq _08080736
	b _08080B68
_08080736:
	adds r4, r6, #0
	adds r4, #0x2f
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r5, r6, #0
	adds r5, #0x2e
	ldrb r3, [r5]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r1, [r0]
	adds r7, r5, #0
	str r0, [sp, #0x10]
	adds r5, r4, #0
	cmp r1, #0
	beq _0808076A
	b _08080918
_0808076A:
	bl sub_8082A08
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x64
	bne _080807A0
	ldr r0, _0808079C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	movs r4, #0x50
	adds r4, r4, r6
	mov r8, r4
	movs r1, #0x45
	adds r1, r1, r6
	mov sb, r1
	movs r2, #0x52
	adds r2, r2, r6
	mov sl, r2
	cmp r0, #0
	bge _08080794
	b _08080A3E
_08080794:
	movs r0, #0x6c
	bl m4aSongNumStart
	b _08080A3E
	.align 2, 0
_0808079C: .4byte gPlaySt
_080807A0:
	adds r0, r6, #0
	adds r0, #0x4c
	ldrb r0, [r0]
	cmp r0, #0
	beq _080807E0
	ldr r0, [r6, #0x54]
	ldrb r1, [r7]
	bl sub_8082C80
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080807E0
	ldrb r3, [r7]
	lsls r1, r3, #4
	adds r1, #0x48
	ldr r2, _080807DC @ =0x000006C2
	movs r0, #0x10
	adds r3, r6, #0
	bl sub_8082B00
	movs r4, #0x50
	adds r4, r4, r6
	mov r8, r4
	movs r0, #0x45
	adds r0, r0, r6
	mov sb, r0
	movs r1, #0x52
	adds r1, r1, r6
	mov sl, r1
	b _08080A3E
	.align 2, 0
_080807DC: .4byte 0x000006C2
_080807E0:
	ldr r0, _080808C8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080807F0
	movs r0, #0x6a
	bl m4aSongNumStart
_080807F0:
	ldr r0, [r6, #0x54]
	ldrb r2, [r7]
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r6, #0
	bl sub_807DEC8
	ldr r0, _080808CC @ =0x02016368
	ldrh r0, [r0]
	lsls r2, r0, #0x10
	asrs r1, r2, #0x10
	adds r3, r6, #0
	adds r3, #0x50
	ldrh r4, [r3]
	lsrs r0, r4, #4
	mov r8, r3
	cmp r1, r0
	blt _08080842
	ldr r0, _080808D0 @ =0x02015D28
	mov sl, r0
	movs r1, #0
	mov sb, r1
_08080820:
	asrs r2, r2, #0x10
	adds r1, r2, #1
	lsls r1, r1, #2
	add r1, sl
	lsls r0, r2, #2
	add r0, sl
	ldrh r0, [r0, #2]
	strh r0, [r1, #2]
	mov r4, sb
	strb r4, [r1]
	subs r2, #1
	lsls r2, r2, #0x10
	asrs r1, r2, #0x10
	ldrh r4, [r3]
	lsrs r0, r4, #4
	cmp r1, r0
	bge _08080820
_08080842:
	ldr r3, _080808D0 @ =0x02015D28
	mov r0, r8
	ldrh r0, [r0]
	lsrs r1, r0, #4
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r0, [r6, #0x54]
	ldrb r4, [r7]
	lsls r2, r4, #1
	adds r0, #0x1c
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r2, #0
	strh r0, [r1, #2]
	mov r1, r8
	ldrh r1, [r1]
	lsrs r0, r1, #4
	lsls r0, r0, #2
	adds r0, r0, r3
	strb r2, [r0]
	ldr r1, _080808CC @ =0x02016368
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r1, _080808D4 @ =0x0201636A
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r0, [r6, #0x54]
	ldrb r1, [r7]
	bl UnitRemoveItem
	ldr r1, [r6, #0x54]
	movs r0, #0
	bl sub_807D6C0
	bl sub_807DE60
	ldr r1, _080808D8 @ =gAction
	movs r0, #0x19
	strb r0, [r1, #0x11]
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	cmp r0, #0
	bne _080808DC
	adds r0, r6, #0
	bl sub_807D358
	adds r0, r6, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bhi _080808BA
	ldr r0, [r6, #0x14]
	adds r1, r6, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r0, #0x3a
	strb r1, [r0]
_080808BA:
	adds r0, r6, #0
	movs r1, #4
	bl Proc_Goto
	bl _080813D2
	.align 2, 0
_080808C8: .4byte gPlaySt
_080808CC: .4byte 0x02016368
_080808D0: .4byte 0x02015D28
_080808D4: .4byte 0x0201636A
_080808D8: .4byte gAction
_080808DC:
	ldr r0, _08080914 @ =0x02015638
	ldr r2, [r6, #0x54]
	mov r4, r8
	ldrh r4, [r4]
	lsrs r3, r4, #4
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807D9E4
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	ldrb r2, [r7]
	adds r1, r2, #1
	movs r3, #0x45
	adds r3, r3, r6
	mov sb, r3
	movs r4, #0x52
	adds r4, r4, r6
	mov sl, r4
	cmp r0, r1
	blt _0808090C
	b _08080A3E
_0808090C:
	subs r0, r2, #1
	strb r0, [r7]
	b _08080A3E
	.align 2, 0
_08080914: .4byte 0x02015638
_08080918:
	movs r0, #0x50
	adds r0, r0, r6
	mov r8, r0
	movs r2, #0x45
	adds r2, r2, r6
	mov sb, r2
	movs r3, #0x52
	adds r3, r3, r6
	mov sl, r3
	cmp r1, #1
	beq _08080930
	b _08080A3E
_08080930:
	ldr r0, _08080A04 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	beq _08080A1C
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	cmp r0, #4
	bgt _08080A1C
	ldr r0, _08080A08 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080952
	movs r0, #0x6a
	bl m4aSongNumStart
_08080952:
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	ldr r1, [r6, #0x54]
	lsls r0, r0, #1
	adds r1, #0x1c
	adds r1, r1, r0
	mov r4, r8
	ldrh r4, [r4]
	lsrs r0, r4, #4
	ldrb r2, [r7]
	adds r0, r2, r0
	lsls r0, r0, #2
	ldr r3, _08080A0C @ =0x02015D28
	adds r0, r0, r3
	ldrh r0, [r0, #2]
	strh r0, [r1]
	ldr r0, [r6, #0x54]
	bl UnitRemoveInvalidItems
	mov r4, r8
	ldrh r4, [r4]
	lsrs r0, r4, #4
	ldrb r1, [r7]
	adds r0, r1, r0
	lsls r1, r0, #0x10
	ldr r4, _08080A10 @ =0x02016368
	ldrh r2, [r4]
	cmp r0, r2
	bge _080809AA
	ldr r3, _08080A0C @ =0x02015D28
_08080990:
	asrs r1, r1, #0x10
	lsls r2, r1, #2
	adds r2, r2, r3
	adds r1, #1
	lsls r0, r1, #2
	adds r0, r0, r3
	ldrh r0, [r0, #2]
	strh r0, [r2, #2]
	lsls r1, r1, #0x10
	asrs r0, r1, #0x10
	ldrh r2, [r4]
	cmp r0, r2
	blt _08080990
_080809AA:
	ldr r4, _08080A10 @ =0x02016368
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	ldr r1, _08080A04 @ =0x0201636A
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	adds r0, r7, #0
	mov r1, r8
	bl sub_80823A0
	ldr r0, _08080A14 @ =0x02015638
	ldr r2, [r6, #0x54]
	mov r3, r8
	ldrh r1, [r3]
	lsrs r1, r1, #4
	mov ip, r1
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	mov r3, ip
	bl sub_807D9E4
	ldr r1, [r6, #0x54]
	movs r0, #0
	bl sub_807D6C0
	bl sub_807DE60
	ldr r1, _08080A18 @ =gAction
	movs r0, #0x19
	strb r0, [r1, #0x11]
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	cmp r0, #5
	beq _080809FC
	ldrh r0, [r4]
	cmp r0, #0
	bne _08080A3E
_080809FC:
	movs r0, #0xff
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	b _08080A3E
	.align 2, 0
_08080A04: .4byte 0x0201636A
_08080A08: .4byte gPlaySt
_08080A0C: .4byte 0x02015D28
_08080A10: .4byte 0x02016368
_08080A14: .4byte 0x02015638
_08080A18: .4byte gAction
_08080A1C:
	ldr r0, _08080A90 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	movs r3, #0x50
	adds r3, r3, r6
	mov r8, r3
	movs r4, #0x45
	adds r4, r4, r6
	mov sb, r4
	movs r1, #0x52
	adds r1, r1, r6
	mov sl, r1
	cmp r0, #0
	blt _08080A3E
	movs r0, #0x6c
	bl m4aSongNumStart
_08080A3E:
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	cmp r2, #2
	beq _08080A48
	b _08080B60
_08080A48:
	ldr r0, _08080A94 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	beq _08080B3C
	ldr r1, _08080A98 @ =0x02015D28
	mov r3, r8
	ldrh r3, [r3]
	lsrs r0, r3, #4
	ldrb r4, [r7]
	adds r0, r4, r0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r0, [r0, #2]
	bl GetItemAttributes
	adds r4, r0, #0
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	beq _08080AA0
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r3, [r7]
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	ldr r2, _08080A9C @ =0x00000C33
	adds r3, r6, #0
	bl sub_8082B00
	b _08080E2E
	.align 2, 0
_08080A90: .4byte gPlaySt
_08080A94: .4byte 0x0201636A
_08080A98: .4byte 0x02015D28
_08080A9C: .4byte 0x00000C33
_08080AA0:
	ldr r0, _08080B20 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080AB0
	movs r0, #0x6a
	bl m4aSongNumStart
_08080AB0:
	adds r1, r6, #0
	adds r1, #0x30
	movs r0, #1
	strb r0, [r1]
	movs r0, #0x14
	ldr r5, [sp, #0xc]
	strb r0, [r5]
	str r4, [sp]
	movs r0, #2
	movs r1, #4
	movs r2, #0xc
	movs r3, #7
	bl sub_8041358
	ldr r4, _08080B24 @ =0x020155E8
	ldr r5, _08080B28 @ =gBg0Tm+0x148
	ldr r0, _08080B2C @ =gUnk_083272CC
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r4, #0
	adds r0, #8
	adds r1, r5, #6
	ldr r2, _08080B30 @ =gUnk_083272D4
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r5, #0
	adds r1, #0xc2
	ldr r2, _08080B34 @ =gUnk_083272E0
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r4, #0x18
	adds r5, #0xca
	ldr r0, _08080B38 @ =gUnk_083272E8
	str r0, [sp]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	bl _080812FA
	.align 2, 0
_08080B20: .4byte gPlaySt
_08080B24: .4byte 0x020155E8
_08080B28: .4byte gBg0Tm+0x148
_08080B2C: .4byte gUnk_083272CC
_08080B30: .4byte gUnk_083272D4
_08080B34: .4byte gUnk_083272E0
_08080B38: .4byte gUnk_083272E8
_08080B3C:
	ldr r0, _08080B5C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080B4C
	movs r0, #0x6c
	bl m4aSongNumStart
_08080B4C:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	b _08080E3C
	.align 2, 0
_08080B5C: .4byte gPlaySt
_08080B60:
	adds r0, r6, #0
	bl sub_807D358
	b _08080E2E
_08080B68:
	ldr r1, [r3]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08080C34
	adds r1, r6, #0
	adds r1, #0x29
	ldrb r0, [r1]
	cmp r0, #0
	bne _08080C34
	adds r0, r6, #0
	adds r0, #0x31
	ldrb r2, [r0]
	cmp r2, #0
	bne _08080BCE
	movs r0, #2
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r3, [r4]
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	ldr r2, [r6, #0x54]
	lsls r3, r3, #1
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r2, [r2]
	bl sub_80706FC
	adds r7, r4, #0
_08080BBA:
	movs r5, #0x50
	adds r5, r5, r6
	mov r8, r5
	movs r0, #0x45
	adds r0, r0, r6
	mov sb, r0
	movs r1, #0x52
	adds r1, r1, r6
	mov sl, r1
	b _080812FA
_08080BCE:
	ldr r0, _08080C2C @ =0x0201636A
	ldrh r0, [r0]
	adds r7, r6, #0
	adds r7, #0x2e
	movs r3, #0x50
	adds r3, r3, r6
	mov r8, r3
	movs r4, #0x45
	adds r4, r4, r6
	mov sb, r4
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	cmp r0, #0
	bne _08080BEE
	b _080812FA
_08080BEE:
	subs r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _08080BFA
	b _080812FA
_08080BFA:
	movs r0, #2
	strb r0, [r1]
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	ldrb r4, [r7]
	lsls r1, r4, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	ldr r2, _08080C30 @ =0x02015D28
	mov ip, r2
	ldrh r3, [r3]
	lsrs r2, r3, #4
	adds r2, r2, r4
	lsls r2, r2, #2
	add r2, ip
	ldrh r2, [r2, #2]
	bl sub_80706FC
	b _080812FA
	.align 2, 0
_08080C2C: .4byte 0x0201636A
_08080C30: .4byte 0x02015D28
_08080C34:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	adds r5, r0, #0
	cmp r2, #1
	beq _08080C42
	b _08080E50
_08080C42:
	ldr r1, [r3]
	movs r0, #0x80
	lsls r0, r0, #2
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _08080C5C
	adds r1, r6, #0
	adds r1, #0x4a
	movs r0, #2
	strb r0, [r1]
	adds r4, r1, #0
	b _08080C64
_08080C5C:
	adds r0, r6, #0
	adds r0, #0x4a
	strb r2, [r0]
	adds r4, r0, #0
_08080C64:
	ldr r1, [r3]
	movs r2, #0x40
	adds r0, r2, #0
	ldrh r7, [r1, #6]
	ands r0, r7
	cmp r0, #0
	bne _08080C82
	adds r0, r2, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	cmp r0, #0
	beq _08080D34
	ldrb r0, [r4]
	cmp r0, #2
	bne _08080D34
_08080C82:
	adds r0, r6, #0
	adds r0, #0x2e
	ldrb r1, [r0]
	mov sb, r1
	adds r7, r0, #0
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	cmp r1, #1
	bne _08080CEC
	ldrh r0, [r2]
	cmp r0, #0
	beq _08080CEC
	ldr r0, _08080CE4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080CAC
	movs r0, #0x66
	bl m4aSongNumStart
_08080CAC:
	ldr r0, _08080CE8 @ =0x02015638
	mov r3, r8
	ldrh r3, [r3]
	lsrs r2, r3, #4
	subs r2, #1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r3, [r6, #0x54]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807DB80
	adds r0, r6, #0
	bl sub_807D358
	ldrb r4, [r4]
	lsls r0, r4, #2
	mov r4, r8
	ldrh r4, [r4]
	subs r0, r4, r0
	mov r5, r8
	strh r0, [r5]
	mov r1, sb
	ldr r0, [sp, #0xc]
	strb r1, [r0]
	b _08080DC2
	.align 2, 0
_08080CE4: .4byte gPlaySt
_08080CE8: .4byte 0x02015638
_08080CEC:
	ldrb r0, [r7]
	movs r4, #0x45
	adds r4, r4, r6
	mov sb, r4
	movs r1, #0x52
	adds r1, r1, r6
	mov sl, r1
	cmp r0, #0
	bne _08080D00
	b _080812FA
_08080D00:
	ldr r0, _08080D30 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080D10
	movs r0, #0x66
	bl m4aSongNumStart
_08080D10:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r7]
	subs r0, #1
	b _08080E2C
	.align 2, 0
_08080D30: .4byte gPlaySt
_08080D34:
	ldr r1, [r3]
	movs r2, #0x80
	adds r0, r2, #0
	ldrh r7, [r1, #6]
	ands r0, r7
	cmp r0, #0
	bne _08080D5A
	adds r0, r2, #0
	ldrh r1, [r1, #0x10]
	ands r0, r1
	adds r7, r6, #0
	adds r7, #0x2e
	cmp r0, #0
	bne _08080D52
	b _08080F84
_08080D52:
	ldrb r0, [r4]
	cmp r0, #2
	beq _08080D5A
	b _08080F84
_08080D5A:
	adds r0, r6, #0
	adds r0, #0x2e
	ldrb r1, [r0]
	adds r7, r0, #0
	cmp r1, #5
	bls _08080D68
	b _08080F84
_08080D68:
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	ldr r3, _08080DD0 @ =0x0201636A
	mov ip, r3
	cmp r1, #5
	bne _08080DDC
	ldrh r1, [r2]
	lsrs r0, r1, #4
	adds r0, #7
	ldrh r1, [r3]
	cmp r0, r1
	bge _08080DDC
	ldr r0, _08080DD4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080D92
	movs r0, #0x66
	bl m4aSongNumStart
_08080D92:
	ldr r0, _08080DD8 @ =0x02015638
	mov r3, r8
	ldrh r3, [r3]
	lsrs r2, r3, #4
	adds r2, #7
	ldr r3, [r6, #0x54]
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	bl sub_807DB80
	adds r0, r6, #0
	bl sub_807D358
	ldrb r4, [r4]
	lsls r0, r4, #2
	mov r4, r8
	ldrh r4, [r4]
	adds r0, r4, r0
	mov r5, r8
	strh r0, [r5]
	movs r0, #2
	ldr r1, [sp, #0xc]
	strb r0, [r1]
_08080DC2:
	movs r2, #0x45
	adds r2, r2, r6
	mov sb, r2
	movs r3, #0x52
	adds r3, r3, r6
	mov sl, r3
	b _080812FA
	.align 2, 0
_08080DD0: .4byte 0x0201636A
_08080DD4: .4byte gPlaySt
_08080DD8: .4byte 0x02015638
_08080DDC:
	mov r4, r8
	ldrh r4, [r4]
	lsrs r0, r4, #4
	ldrb r1, [r7]
	adds r0, r1, r0
	adds r0, #1
	movs r2, #0x45
	adds r2, r2, r6
	mov sb, r2
	movs r3, #0x52
	adds r3, r3, r6
	mov sl, r3
	mov r4, ip
	ldrh r4, [r4]
	cmp r0, r4
	blt _08080DFE
	b _080812FA
_08080DFE:
	ldr r0, _08080E4C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080E0E
	movs r0, #0x66
	bl m4aSongNumStart
_08080E0E:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r7]
	adds r0, #1
_08080E2C:
	strb r0, [r7]
_08080E2E:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r7]
	lsls r1, r4, #1
_08080E3C:
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	b _080812FA
	.align 2, 0
_08080E4C: .4byte gPlaySt
_08080E50:
	ldr r0, [r3]
	ldrh r1, [r0, #6]
	movs r7, #0x40
	mov r8, r7
	mov r0, r8
	ands r0, r1
	cmp r0, #0
	beq _08080EF4
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r6, #0
	adds r4, #0x2e
	ldrb r7, [r4]
	lsls r1, r7, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	str r3, [sp, #0x18]
	bl sub_8041728
	ldrb r0, [r4]
	adds r7, r4, #0
	ldr r3, [sp, #0x18]
	cmp r0, #0
	beq _08080EA4
	ldr r0, _08080EA0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080E9A
	movs r0, #0x66
	bl m4aSongNumStart
_08080E9A:
	ldrb r0, [r7]
	b _08080ED0
	.align 2, 0
_08080EA0: .4byte gPlaySt
_08080EA4:
	ldr r1, [r3]
	mov r0, r8
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08080ED4
	ldr r0, _08080EF0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080EC0
	movs r0, #0x66
	bl m4aSongNumStart
_08080EC0:
	ldrb r0, [r5]
	lsls r1, r0, #2
	adds r0, r6, #0
	adds r0, #0x54
	adds r0, r0, r1
	ldr r0, [r0]
	bl GetUnitItemCount
_08080ED0:
	subs r0, #1
	strb r0, [r7]
_08080ED4:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	b _08080F84
	.align 2, 0
_08080EF0: .4byte gPlaySt
_08080EF4:
	movs r0, #0x80
	ands r0, r1
	adds r7, r6, #0
	adds r7, #0x2e
	cmp r0, #0
	beq _08080F84
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r7]
	lsls r1, r4, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	ldrb r4, [r7]
	ldr r0, [r6, #0x54]
	bl GetUnitItemCount
	subs r0, #1
	cmp r4, r0
	bge _08080F48
	ldrb r0, [r7]
	cmp r0, #3
	bhi _08080F48
	ldr r0, _08080F44 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080F3E
	movs r0, #0x66
	bl m4aSongNumStart
_08080F3E:
	ldrb r0, [r7]
	adds r0, #1
	b _08080F68
	.align 2, 0
_08080F44: .4byte gPlaySt
_08080F48:
	ldr r0, _08081008 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x80
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08080F6A
	ldr r0, _0808100C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080F66
	movs r0, #0x66
	bl m4aSongNumStart
_08080F66:
	movs r0, #0
_08080F68:
	strb r0, [r7]
_08080F6A:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
_08080F84:
	adds r4, r5, #0
	movs r0, #0x50
	adds r0, r0, r6
	mov r8, r0
	movs r1, #0x45
	adds r1, r1, r6
	mov sb, r1
	movs r2, #0x52
	adds r2, r2, r6
	mov sl, r2
	ldrb r3, [r4]
	cmp r3, #1
	beq _08080FA0
	b _080812FA
_08080FA0:
	ldr r0, _08081008 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08081010
	ldr r0, _0808100C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08080FBE
	movs r0, #0x67
	bl m4aSongNumStart
_08080FBE:
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r7]
	lsls r1, r4, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	adds r2, r6, #0
	adds r2, #0x46
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r5, [r2]
	adds r0, r5, r0
	mov r3, r8
	ldrh r3, [r3]
	lsrs r1, r3, #4
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r2, [r2]
	adds r0, r2, r0
	ldrb r1, [r7]
	strb r1, [r0]
	movs r0, #0x38
	mov r4, sb
	strb r0, [r4]
	movs r0, #5
	ldr r5, [sp, #0xc]
	strb r0, [r5]
	b _080812FA
	.align 2, 0
_08081008: .4byte gKeySt
_0808100C: .4byte gPlaySt
_08081010:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0808101A
	b _080812FA
_0808101A:
	ldr r0, _08081074 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808102A
	movs r0, #0x67
	bl m4aSongNumStart
_0808102A:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	adds r2, r6, #0
	adds r2, #0x46
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r4, [r2]
	adds r0, r4, r0
	mov r5, r8
	ldrh r5, [r5]
	lsrs r1, r5, #4
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r2, [r2]
	adds r0, r2, r0
	ldrb r1, [r7]
	strb r1, [r0]
	movs r0, #0xc8
	mov r1, sb
	strb r0, [r1]
	movs r0, #0xa
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	b _080812FA
	.align 2, 0
_08081074: .4byte gPlaySt
_08081078:
	adds r0, r6, #0
	adds r0, #0x50
	adds r1, r6, #0
	adds r1, #0x4a
	ldrb r1, [r1]
	lsls r1, r1, #2
	ldrh r3, [r0]
	subs r1, r3, r1
	strh r1, [r0]
	ldrh r2, [r0]
	movs r1, #0xf
	ands r1, r2
	adds r7, r6, #0
	adds r7, #0x2e
	mov r8, r0
	movs r5, #0x45
	adds r5, r5, r6
	mov sb, r5
	movs r0, #0x52
	adds r0, r0, r6
	mov sl, r0
	cmp r1, #0
	beq _080810A8
	b _080812FA
_080810A8:
	lsrs r0, r2, #4
	adds r0, #7
	lsls r0, r0, #1
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _080810CC @ =gBg2Tm+0x1E
	adds r0, r0, r1
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
	movs r0, #0
	b _080812F8
	.align 2, 0
_080810CC: .4byte gBg2Tm+0x1E
_080810D0:
	adds r0, r6, #0
	adds r0, #0x50
	adds r1, r6, #0
	adds r1, #0x4a
	ldrb r1, [r1]
	lsls r1, r1, #2
	ldrh r2, [r0]
	adds r1, r2, r1
	strh r1, [r0]
	ldrh r2, [r0]
	movs r1, #0xf
	ands r1, r2
	adds r7, r6, #0
	adds r7, #0x2e
	mov r8, r0
	movs r3, #0x45
	adds r3, r3, r6
	mov sb, r3
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	cmp r1, #0
	beq _08081100
	b _080812FA
_08081100:
	lsrs r0, r2, #4
	subs r0, #1
	lsls r0, r0, #1
	movs r1, #0x1f
	ands r0, r1
	lsls r0, r0, #6
	ldr r1, _08081124 @ =gBg2Tm+0x1E
	adds r0, r0, r1
	movs r1, #0xf
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
	movs r0, #4
	bl EnableBgSync
	movs r0, #0
	b _080812F8
	.align 2, 0
_08081124: .4byte gBg2Tm+0x1E
_08081128:
	adds r1, r6, #0
	adds r1, #0x45
	ldrb r0, [r1]
	adds r0, #0x38
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r6, #0
	adds r7, #0x2e
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	mov sb, r1
	movs r3, #0x52
	adds r3, r3, r6
	mov sl, r3
	cmp r0, #0x70
	beq _0808114E
	b _080812FA
_0808114E:
	movs r0, #6
	b _080812F8
_08081152:
	adds r2, r6, #0
	adds r2, #0x45
	movs r0, #0x90
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x46
	ldrb r1, [r0]
	adds r5, r0, #0
	mov sb, r2
	cmp r1, #8
	bne _0808116C
	movs r0, #0
	b _0808116E
_0808116C:
	adds r0, r1, #1
_0808116E:
	strb r0, [r5]
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r4, [r5]
	adds r0, r4, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r4, r6, #0
	adds r4, #0x50
	strh r0, [r4]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r7, [r5]
	adds r0, r7, r0
	ldrb r0, [r0]
	adds r7, r6, #0
	adds r7, #0x2e
	strb r0, [r7]
	ldrb r0, [r5]
	bl sub_807D834
	adds r0, r7, #0
	adds r1, r4, #0
	bl sub_80823A0
	ldr r0, _080811E0 @ =0x02015638
	ldr r2, [r6, #0x54]
	ldrh r1, [r4]
	lsrs r3, r1, #4
	movs r1, #1
	str r1, [sp]
	bl sub_807D9E4
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	adds r0, r6, #0
	bl sub_807D358
	mov r5, sb
	ldrb r0, [r5]
	adds r0, #0xe
	strb r0, [r5]
	movs r0, #7
	b _080812C0
	.align 2, 0
_080811E0: .4byte 0x02015638
_080811E4:
	adds r1, r6, #0
	adds r1, #0x45
	ldrb r0, [r1]
	adds r0, #0xe
	b _080812DC
_080811EE:
	adds r1, r6, #0
	adds r1, #0x45
	ldrb r0, [r1]
	subs r0, #0x38
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r6, #0
	adds r7, #0x2e
	movs r2, #0x50
	adds r2, r2, r6
	mov r8, r2
	mov sb, r1
	movs r3, #0x52
	adds r3, r3, r6
	mov sl, r3
	cmp r0, #0x90
	bne _080812FA
	movs r0, #0xb
	b _080812F8
_08081216:
	adds r2, r6, #0
	adds r2, #0x45
	movs r0, #0x70
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0x46
	ldrb r1, [r0]
	adds r5, r0, #0
	mov sb, r2
	cmp r1, #0
	bne _08081230
	movs r0, #8
	b _08081232
_08081230:
	subs r0, r1, #1
_08081232:
	strb r0, [r5]
	movs r4, #0x2f
	adds r4, r4, r6
	mov r8, r4
	ldrb r2, [r4]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	adds r7, r6, #0
	adds r7, #0x2e
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
	adds r0, r6, #0
	adds r0, #0x32
	ldrb r4, [r5]
	adds r0, r4, r0
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r4, r6, #0
	adds r4, #0x50
	strh r0, [r4]
	adds r0, r6, #0
	adds r0, #0x3b
	ldrb r1, [r5]
	adds r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r7]
	ldrb r0, [r5]
	bl sub_807D834
	adds r0, r7, #0
	adds r1, r4, #0
	bl sub_80823A0
	ldr r0, _080812D0 @ =0x02015638
	ldr r2, [r6, #0x54]
	ldrh r5, [r4]
	lsrs r3, r5, #4
	movs r1, #1
	str r1, [sp]
	bl sub_807D9E4
	mov r0, r8
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldrb r3, [r7]
	lsls r1, r3, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_804169C
	adds r0, r6, #0
	bl sub_807D358
	mov r5, sb
	ldrb r0, [r5]
	subs r0, #0xe
	strb r0, [r5]
	movs r0, #0xc
_080812C0:
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	mov r8, r4
_080812C6:
	movs r2, #0x52
	adds r2, r2, r6
	mov sl, r2
	b _080812FA
	.align 2, 0
_080812D0: .4byte 0x02015638
_080812D4:
	adds r1, r6, #0
	adds r1, #0x45
	ldrb r0, [r1]
	subs r0, #0xe
_080812DC:
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r6, #0
	adds r7, #0x2e
	movs r3, #0x50
	adds r3, r3, r6
	mov r8, r3
	mov sb, r1
	movs r5, #0x52
	adds r5, r5, r6
	mov sl, r5
	cmp r0, #0
	bne _080812FA
_080812F8:
	strb r0, [r4]
_080812FA:
	mov r1, r8
	ldrh r1, [r1]
	lsrs r0, r1, #4
	ldrb r3, [r7]
	adds r5, r0, r3
	ldr r2, [sp, #4]
	cmp r2, r5
	bne _08081316
	adds r0, r6, #0
	adds r0, #0x46
	ldr r4, [sp, #8]
	ldrb r0, [r0]
	cmp r4, r0
	beq _080813B6
_08081316:
	adds r4, r6, #0
	adds r4, #0x29
	ldrb r1, [r4]
	adds r0, r6, #0
	adds r0, #0x31
	str r0, [sp, #0x10]
	cmp r1, #0
	beq _08081392
	ldrb r0, [r0]
	cmp r0, #0
	bne _08081352
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	ldr r2, [r6, #0x54]
	lsls r3, r3, #1
	adds r2, #0x1c
	adds r2, r2, r3
	ldrh r2, [r2]
	bl sub_80706FC
	b _08081392
_08081352:
	ldr r0, _08081368 @ =0x0201636A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808136C
	cmp r1, #1
	beq _08081362
	bl sub_807089C
_08081362:
	movs r0, #1
	b _08081390
	.align 2, 0
_08081368: .4byte 0x0201636A
_0808136C:
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #4
	adds r0, #0x10
	lsls r1, r3, #4
	lsls r2, r2, #5
	subs r2, #0x48
	subs r1, r1, r2
	ldr r3, _080813E4 @ =0x02015D28
	lsls r2, r5, #2
	adds r2, r2, r3
	ldrh r2, [r2, #2]
	bl sub_80706FC
	movs r0, #2
_08081390:
	strb r0, [r4]
_08081392:
	ldr r1, [sp, #0x10]
	ldrb r1, [r1]
	cmp r1, #2
	bne _080813B6
	ldr r1, _080813E4 @ =0x02015D28
	mov r2, r8
	ldrh r2, [r2]
	lsrs r0, r2, #4
	ldrb r7, [r7]
	adds r0, r7, r0
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrh r2, [r0, #2]
	ldr r3, [r6, #0x5c]
	movs r0, #1
	movs r1, #0xb
	bl sub_807D4A8
_080813B6:
	mov r3, sb
	ldrb r1, [r3]
	mov r4, r8
	ldrh r2, [r4]
	subs r2, #0x28
	movs r0, #0xff
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	mov r5, sl
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080813D2:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080813E4: .4byte 0x02015D28

	thumb_func_start sub_80813E8
sub_80813E8: @ 0x080813E8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bne _08081460
	ldr r0, [r4, #0x14]
	adds r1, r4, #0
	adds r1, #0x46
	ldrb r2, [r1]
	adds r0, #0x39
	movs r1, #0
	strb r2, [r0]
	ldr r0, [r4, #0x60]
	str r1, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r2, #0
	movs r3, #0xd
	bl sub_8082320
	adds r3, r4, #0
	adds r3, #0x50
	ldrh r0, [r3]
	adds r1, r4, #0
	adds r1, #0x4e
	strh r0, [r1]
	adds r2, r4, #0
	adds r2, #0x2e
	ldrb r0, [r2]
	subs r1, #7
	strb r0, [r1]
	ldr r5, _0808145C @ =0x02015D28
	ldrh r1, [r3]
	lsrs r0, r1, #4
	ldrb r1, [r2]
	adds r0, r1, r0
	lsls r0, r0, #2
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _08081460
	adds r1, r4, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	ldrh r3, [r3]
	lsrs r0, r3, #4
	ldrb r2, [r2]
	adds r0, r2, r0
	lsls r0, r0, #2
	adds r0, r0, r5
	ldrb r1, [r0, #1]
	adds r0, r4, #0
	adds r0, #0x48
	strb r1, [r0]
	b _08081536
	.align 2, 0
_0808145C: .4byte 0x02015D28
_08081460:
	adds r1, r4, #0
	adds r1, #0x2f
	ldrb r0, [r1]
	cmp r0, #0
	bne _08081486
	adds r2, r0, #0
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	subs r1, #1
	ldrb r1, [r1]
	lsls r1, r1, #1
	lsls r2, r2, #2
	subs r2, #9
	subs r1, r1, r2
	movs r2, #0xc
	bl sub_8041728
_08081486:
	ldr r0, _080814F0 @ =gBg0Tm+0x1E
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _080814F4 @ =gBg1Tm+0x1E
	movs r1, #0xf
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _080814F8 @ =gBg2Tm+0x1E
	movs r1, #0xf
	movs r2, #0x1f
	movs r3, #0
	bl TmFillRect_t
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #3
	bne _08081522
	ldr r0, [r4, #0x14]
	adds r1, r4, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r0, #0x39
	strb r1, [r0]
	ldr r7, _080814FC @ =0x02015D28
	adds r5, r4, #0
	adds r5, #0x2e
	adds r6, r4, #0
	adds r6, #0x50
	ldrh r1, [r6]
	lsrs r0, r1, #4
	ldrb r1, [r5]
	adds r0, r1, r0
	lsls r0, r0, #2
	adds r1, r0, r7
	ldrb r0, [r1]
	cmp r0, #0
	bne _08081500
	ldrb r1, [r1, #1]
	adds r0, r4, #0
	adds r0, #0x48
	strb r1, [r0]
	adds r0, r4, #0
	movs r1, #4
	bl Proc_Goto
	b _08081530
	.align 2, 0
_080814F0: .4byte gBg0Tm+0x1E
_080814F4: .4byte gBg1Tm+0x1E
_080814F8: .4byte gBg2Tm+0x1E
_080814FC: .4byte 0x02015D28
_08081500:
	ldrb r0, [r1]
	bl GetUnitByPid
	str r0, [r4, #0x58]
	ldrh r6, [r6]
	lsrs r0, r6, #4
	ldrb r1, [r5]
	adds r0, r1, r0
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r0, [r0, #1]
	strb r0, [r5]
	adds r0, r4, #0
	movs r1, #2
	bl Proc_Goto
	b _08081530
_08081522:
	movs r0, #1
	bl EndFaceById
	adds r0, r4, #0
	movs r1, #0
	bl Proc_Goto
_08081530:
	movs r0, #7
	bl EnableBgSync
_08081536:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8081540
sub_8081540: @ 0x08081540
	push {lr}
	adds r2, r0, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #5
	beq _0808157A
	adds r3, r2, #0
	adds r3, #0x2a
	ldrb r0, [r3]
	cmp r0, #0
	bne _08081562
	ldr r0, [r2, #0x14]
	adds r1, r2, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r0, #0x39
	strb r1, [r0]
_08081562:
	ldrb r3, [r3]
	cmp r3, #4
	bne _08081574
	ldr r0, [r2, #0x14]
	adds r1, r2, #0
	adds r1, #0x46
	ldrb r1, [r1]
	adds r0, #0x3a
	strb r1, [r0]
_08081574:
	bl InitBmBgLayers
	b _08081580
_0808157A:
	ldr r0, [r2, #0x5c]
	bl Proc_End
_08081580:
	movs r0, #0
	bl EndFaceById
	movs r0, #1
	bl EndFaceById
	ldr r0, _080815B0 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080815B4 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080815B8 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	movs r0, #7
	bl EnableBgSync
	pop {r0}
	bx r0
	.align 2, 0
_080815B0: .4byte gBg0Tm
_080815B4: .4byte gBg1Tm
_080815B8: .4byte gBg2Tm

	thumb_func_start sub_80815BC
sub_80815BC: @ 0x080815BC
	push {r4, lr}
	adds r2, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080815E0 @ =gUnk_086793E8
	adds r1, r2, #0
	bl SpawnProcLocking
	adds r2, r0, #0
	adds r2, #0x2a
	movs r1, #0
	strb r4, [r2]
	adds r0, #0x2d
	strb r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080815E0: .4byte gUnk_086793E8

	thumb_func_start sub_80815E4
sub_80815E4: @ 0x080815E4
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0
	bne _080815FC
	ldr r0, _080815F8 @ =gUnk_08679490
	movs r1, #3
	bl SpawnProc
	b _08081602
	.align 2, 0
_080815F8: .4byte gUnk_08679490
_080815FC:
	ldr r0, _0808161C @ =gUnk_08679490
	bl SpawnProcLocking
_08081602:
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0x2d
	movs r0, #0
	movs r1, #4
	strb r1, [r3]
	str r4, [r2, #0x54]
	adds r1, r2, #0
	adds r1, #0x4b
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808161C: .4byte gUnk_08679490

	thumb_func_start sub_8081620
sub_8081620: @ 0x08081620
	push {r4, lr}
	adds r4, r0, #0
	cmp r1, #0
	bne _08081638
	ldr r0, _08081634 @ =gUnk_08679490
	movs r1, #3
	bl SpawnProc
	b _0808163E
	.align 2, 0
_08081634: .4byte gUnk_08679490
_08081638:
	ldr r0, _08081658 @ =gUnk_08679490
	bl SpawnProcLocking
_0808163E:
	adds r1, r0, #0
	adds r2, r1, #0
	adds r2, #0x2d
	movs r0, #4
	strb r0, [r2]
	str r4, [r1, #0x54]
	adds r1, #0x4b
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08081658: .4byte gUnk_08679490

	thumb_func_start sub_808165C
sub_808165C: @ 0x0808165C
	push {lr}
	adds r0, #0x2e
	ldrb r0, [r0]
	bl UpdateEquipInfoWindow
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808166C
sub_808166C: @ 0x0808166C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	cmp r1, #1
	bne _080816EC
	movs r0, #0
	str r0, [sp]
	movs r0, #0x11
	movs r1, #4
	movs r2, #0xc
	movs r3, #7
	bl sub_8041358
	ldr r4, _080816D8 @ =gBg0Tm+0x166
	ldr r0, _080816DC @ =gUnk_083272F0
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r5, #0
	adds r0, #8
	adds r1, r4, #6
	ldr r2, _080816E0 @ =gUnk_083272F8
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r5, #0
	adds r0, #0x10
	adds r1, r4, #0
	adds r1, #0xc2
	ldr r2, _080816E4 @ =gUnk_08327304
	str r2, [sp]
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	adds r0, r5, #0
	adds r0, #0x18
	adds r4, #0xca
	ldr r1, _080816E8 @ =gUnk_0832730C
	str r1, [sp]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_8082360
	b _08081704
	.align 2, 0
_080816D8: .4byte gBg0Tm+0x166
_080816DC: .4byte gUnk_083272F0
_080816E0: .4byte gUnk_083272F8
_080816E4: .4byte gUnk_08327304
_080816E8: .4byte gUnk_0832730C
_080816EC:
	ldr r0, _08081714 @ =gBg0Tm+0x164
	movs r1, #0xd
	movs r2, #5
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08081718 @ =gBg1Tm+0x122
	movs r1, #0xc
	movs r2, #6
	movs r3, #0
	bl TmFillRect_t
_08081704:
	movs r0, #3
	bl EnableBgSync
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08081714: .4byte gBg0Tm+0x164
_08081718: .4byte gBg1Tm+0x122

	thumb_func_start sub_808171C
sub_808171C: @ 0x0808171C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r5, r0, #0
	bl ResetTextFont
	bl ClearIcons
	ldr r3, _0808193C @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r3, #0xc]
	ands r0, r2
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r2, [r3, #0x10]
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	strb r0, [r3, #0x10]
	ldrb r0, [r3, #0x14]
	ands r1, r0
	strb r1, [r3, #0x14]
	movs r0, #3
	ldrb r1, [r3, #0x18]
	orrs r0, r1
	strb r0, [r3, #0x18]
	ldr r0, _08081940 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08081944 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08081948 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	bl ApplySystemObjectsGraphics
	bl InitIcons
	movs r0, #4
	bl ApplyIconPalettes
	ldr r0, _0808194C @ =0x02015688
	movs r1, #6
	bl InitText
	movs r4, #0
	ldr r6, _08081950 @ =0x020155E8
_0808178C:
	lsls r0, r4, #3
	adds r0, r0, r6
	movs r1, #7
	bl InitTextDb
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _0808178C
	movs r4, #0
	adds r7, r5, #0
	adds r7, #0x2f
	adds r2, r5, #0
	adds r2, #0x2e
	str r2, [sp, #0x18]
	movs r3, #0x30
	adds r3, r3, r5
	mov sl, r3
	movs r0, #0x31
	adds r0, r0, r5
	mov r8, r0
	movs r1, #0x45
	adds r1, r1, r5
	mov sb, r1
	adds r2, #0x22
	str r2, [sp, #4]
	adds r3, r5, #0
	adds r3, #0x2c
	str r3, [sp, #0x10]
	adds r0, r5, #0
	adds r0, #0x52
	str r0, [sp, #8]
	adds r1, r5, #0
	adds r1, #0x29
	str r1, [sp, #0xc]
	subs r2, #0x23
	str r2, [sp, #0x14]
	ldr r6, _08081954 @ =0x02015638
_080817DA:
	lsls r0, r4, #3
	adds r0, r0, r6
	movs r1, #7
	bl InitText
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _080817DA
	ldr r0, [r5, #0x14]
	ldr r1, [r0, #0x48]
	str r1, [r5, #0x54]
	ldr r0, [r0, #0x4c]
	str r0, [r5, #0x58]
	adds r0, r5, #0
	movs r2, #0x10
	movs r3, #0xb
	bl StartEquipInfoWindow
	movs r4, #0
	strb r4, [r7]
	ldr r3, [sp, #0x18]
	strb r4, [r3]
	mov r0, sl
	strb r4, [r0]
	mov r1, r8
	strb r4, [r1]
	mov r2, sb
	strb r4, [r2]
	movs r0, #0
	ldr r3, [sp, #4]
	strh r4, [r3]
	ldr r1, [sp, #0x10]
	strb r0, [r1]
	ldr r2, [sp, #8]
	strh r4, [r2]
	ldr r3, [sp, #0xc]
	strb r0, [r3]
	ldr r1, [sp, #0x14]
	strb r0, [r1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl LoadUiFrameGraphics
	str r4, [sp]
	movs r0, #0x10
	movs r1, #0xb
	movs r2, #0xe
	movs r3, #8
	bl sub_8041358
	adds r0, r5, #0
	bl sub_808165C
	str r4, [sp]
	movs r0, #1
	movs r1, #8
	movs r2, #0xe
	movs r3, #0xc
	bl sub_8041358
	ldr r0, [r5, #0x54]
	bl GetUnitFid
	adds r1, r0, #0
	movs r3, #4
	rsbs r3, r3, #0
	movs r0, #3
	str r0, [sp]
	movs r0, #0
	movs r2, #0x40
	bl StartFace
	ldr r1, [r5, #0x54]
	movs r0, #0
	bl sub_807D6C0
	ldrb r2, [r7]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	ldr r3, [sp, #0x18]
	ldrb r3, [r3]
	lsls r1, r3, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	ldr r0, [r5, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r4, #0x30
	subs r4, r4, r0
	lsrs r0, r4, #0x1f
	adds r4, r4, r0
	asrs r4, r4, #1
	ldr r0, [r5, #0x54]
	ldr r0, [r0]
	ldrh r0, [r0]
	bl DecodeMsg
	ldr r2, _0808194C @ =0x02015688
	ldr r1, _08081940 @ =gBg0Tm
	str r0, [sp]
	adds r0, r2, #0
	movs r2, #0
	adds r3, r4, #0
	bl sub_8082360
	ldr r0, _08081958 @ =gUnk_083198CC
	ldr r1, _0808195C @ =0x06017200
	bl Decompress
	ldr r0, _08081960 @ =gUnk_08319E88
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x60
	bl ApplyPaletteExt
	ldr r0, _08081964 @ =gUnk_0831AB1C
	ldr r1, _08081968 @ =0x06011000
	bl Decompress
	ldr r0, _0808196C @ =gUnk_0831AABC
	movs r1, #0xc0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #7
	bl EnableBgSync
	adds r0, r5, #0
	bl sub_8081ED4
	movs r4, #1
	rsbs r4, r4, #0
	movs r0, #0
	adds r1, r4, #0
	bl sub_8070E70
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_80829E8
	adds r0, r5, #0
	movs r1, #0
	bl Proc_Goto
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808193C: .4byte gDispIo
_08081940: .4byte gBg0Tm
_08081944: .4byte gBg1Tm
_08081948: .4byte gBg2Tm
_0808194C: .4byte 0x02015688
_08081950: .4byte 0x020155E8
_08081954: .4byte 0x02015638
_08081958: .4byte gUnk_083198CC
_0808195C: .4byte 0x06017200
_08081960: .4byte gUnk_08319E88
_08081964: .4byte gUnk_0831AB1C
_08081968: .4byte 0x06011000
_0808196C: .4byte gUnk_0831AABC

	thumb_func_start sub_8081970
sub_8081970: @ 0x08081970
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	str r0, [sp]
	adds r4, r7, #0
	adds r4, #0x29
	ldrb r0, [r4]
	cmp r0, #0
	beq _080819AC
	ldr r0, _080819A8 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x81
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080819AC
	bl sub_807089C
	movs r0, #0
	strb r0, [r4]
	b _08081DDC
	.align 2, 0
_080819A8: .4byte gKeySt
_080819AC:
	adds r0, r7, #0
	adds r0, #0x2c
	ldrb r4, [r0]
	adds r6, r0, #0
	cmp r4, #0
	beq _080819C0
	cmp r4, #1
	bne _080819BE
	b _08081C20
_080819BE:
	b _08081C84
_080819C0:
	ldr r2, _08081A00 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	movs r1, #0x29
	adds r1, r1, r7
	mov sb, r1
	mov sl, r2
	cmp r0, #0
	beq _08081A04
	ldrb r0, [r1]
	cmp r0, #0
	bne _08081A04
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x2e
	ldrb r2, [r0]
	lsls r1, r2, #4
	adds r1, #0x48
	ldr r0, [r7, #0x54]
	lsls r2, r2, #1
	adds r0, #0x1c
	adds r0, r0, r2
	ldrh r2, [r0]
	movs r0, #0x10
	bl sub_80706FC
	b _08081DB2
	.align 2, 0
_08081A00: .4byte gKeySt
_08081A04:
	mov r2, sl
	ldr r1, [r2]
	movs r0, #0x40
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08081A8C
	ldr r0, [r7, #0x54]
	bl GetUnitItemCount
	cmp r0, #1
	ble _08081A8C
	adds r5, r7, #0
	adds r5, #0x2f
	ldrb r3, [r5]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	adds r4, r7, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r4]
	mov r8, r4
	cmp r0, #0
	beq _08081A60
	ldr r0, _08081A5C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081A52
	movs r0, #0x66
	bl m4aSongNumStart
_08081A52:
	mov r3, r8
	ldrb r0, [r3]
	subs r0, #1
	b _08081AFE
	.align 2, 0
_08081A5C: .4byte gPlaySt
_08081A60:
	mov r0, sl
	ldr r1, [r0]
	movs r0, #0x40
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08081B3A
	ldr r0, _08081A88 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081A7E
	movs r0, #0x66
	bl m4aSongNumStart
_08081A7E:
	ldr r0, [r7, #0x54]
	bl GetUnitItemCount
	subs r0, #1
	b _08081B30
	.align 2, 0
_08081A88: .4byte gPlaySt
_08081A8C:
	ldr r0, _08081B08 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x80
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08081B5C
	ldr r0, [r7, #0x54]
	bl GetUnitItemCount
	cmp r0, #1
	ble _08081B5C
	adds r6, r7, #0
	adds r6, #0x2f
	ldrb r0, [r6]
	lsls r1, r0, #2
	adds r0, r7, #0
	adds r0, #0x54
	adds r0, r0, r1
	ldr r0, [r0]
	bl GetUnitItemCount
	adds r4, r0, #0
	subs r4, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldrb r1, [r6]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	adds r5, r7, #0
	adds r5, #0x2e
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	mov r8, r5
	adds r5, r6, #0
	cmp r0, r4
	bhs _08081B10
	cmp r0, #3
	bhi _08081B10
	ldr r0, _08081B0C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081AF8
	movs r0, #0x66
	bl m4aSongNumStart
_08081AF8:
	mov r3, r8
	ldrb r0, [r3]
	adds r0, #1
_08081AFE:
	strb r0, [r3]
	adds r0, r7, #0
	bl sub_808165C
	b _08081B3A
	.align 2, 0
_08081B08: .4byte gKeySt
_08081B0C: .4byte gPlaySt
_08081B10:
	ldr r0, _08081B54 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x80
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08081B3A
	ldr r0, _08081B58 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081B2E
	movs r0, #0x66
	bl m4aSongNumStart
_08081B2E:
	movs r0, #0
_08081B30:
	mov r1, r8
	strb r0, [r1]
	adds r0, r7, #0
	bl sub_808165C
_08081B3A:
	ldrb r2, [r5]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	mov r3, r8
	ldrb r3, [r3]
	lsls r1, r3, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
	b _08081DB2
	.align 2, 0
_08081B54: .4byte gKeySt
_08081B58: .4byte gPlaySt
_08081B5C:
	ldr r0, _08081BA4 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r5, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08081BF0
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #0
	beq _08081B76
	b _08081DBA
_08081B76:
	ldr r0, [r7, #0x54]
	adds r4, r7, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	bl GetItemAttributes
	movs r1, #0x10
	ands r1, r0
	cmp r1, #0
	beq _08081BAC
	ldrb r4, [r4]
	lsls r1, r4, #4
	adds r1, #0x48
	ldr r2, _08081BA8 @ =0x00000C33
	movs r0, #0x10
	adds r3, r7, #0
	bl sub_8082B00
	b _08081DB2
	.align 2, 0
_08081BA4: .4byte gKeySt
_08081BA8: .4byte 0x00000C33
_08081BAC:
	ldr r0, _08081BE8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081BBC
	movs r0, #0x6a
	bl m4aSongNumStart
_08081BBC:
	ldr r0, _08081BEC @ =0x02015638
	movs r1, #1
	bl sub_808166C
	adds r1, r7, #0
	adds r1, #0x2f
	ldrb r3, [r1]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	ldrb r4, [r4]
	lsls r1, r4, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	adds r0, r7, #0
	adds r0, #0x30
	strb r5, [r0]
	strb r5, [r6]
	b _08081DB2
	.align 2, 0
_08081BE8: .4byte gPlaySt
_08081BEC: .4byte 0x02015638
_08081BF0:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08081BFA
	b _08081DB2
_08081BFA:
	ldr r0, _08081C1C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081C0A
	movs r0, #0x6b
	bl m4aSongNumStart
_08081C0A:
	adds r0, r7, #0
	movs r1, #1
	bl sub_80829E8
	adds r0, r7, #0
	movs r1, #1
	bl Proc_Goto
	b _08081DB2
	.align 2, 0
_08081C1C: .4byte gPlaySt
_08081C20:
	ldr r2, _08081C50 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x10
	ldrh r1, [r1, #6]
	ands r0, r1
	mov sl, r2
	cmp r0, #0
	beq _08081C58
	adds r5, r7, #0
	adds r5, #0x30
	ldrb r0, [r5]
	cmp r0, #0
	bne _08081C58
	ldr r0, _08081C54 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081C4A
	movs r0, #0x66
	bl m4aSongNumStart
_08081C4A:
	strb r4, [r5]
	b _08081C84
	.align 2, 0
_08081C50: .4byte gKeySt
_08081C54: .4byte gPlaySt
_08081C58:
	mov r2, sl
	ldr r1, [r2]
	movs r0, #0x20
	ldrh r1, [r1, #6]
	ands r0, r1
	cmp r0, #0
	beq _08081C90
	adds r4, r7, #0
	adds r4, #0x30
	ldrb r3, [r4]
	cmp r3, #1
	bne _08081C90
	ldr r0, _08081C8C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081C80
	movs r0, #0x66
	bl m4aSongNumStart
_08081C80:
	movs r0, #0
	strb r0, [r4]
_08081C84:
	movs r0, #0x29
	adds r0, r0, r7
	mov sb, r0
	b _08081DB2
	.align 2, 0
_08081C8C: .4byte gPlaySt
_08081C90:
	mov r2, sl
	ldr r1, [r2]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08081D60
	ldr r0, _08081CF8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081CAE
	movs r0, #0x6a
	bl m4aSongNumStart
_08081CAE:
	adds r0, r7, #0
	adds r0, #0x30
	ldrb r0, [r0]
	mov r8, r0
	cmp r0, #0
	bne _08081D54
	ldr r0, [r7, #0x54]
	adds r5, r7, #0
	adds r5, #0x2e
	ldrb r1, [r5]
	bl UnitRemoveItem
	ldr r0, [r7, #0x54]
	bl UnitRemoveInvalidItems
	ldr r1, [r7, #0x54]
	movs r0, #0
	bl sub_807D6C0
	ldr r0, [r7, #0x54]
	bl GetUnitItemCount
	cmp r0, #0
	bne _08081CFC
	adds r0, r7, #0
	movs r1, #1
	bl sub_80829E8
	adds r0, r7, #0
	movs r1, #1
	bl Proc_Goto
	movs r3, #0x29
	adds r3, r3, r7
	mov sb, r3
	b _08081DB2
	.align 2, 0
_08081CF8: .4byte gPlaySt
_08081CFC:
	ldrb r4, [r5]
	ldr r0, [r7, #0x54]
	bl GetUnitItemCount
	cmp r4, r0
	blt _08081D3E
	adds r4, r7, #0
	adds r4, #0x2f
	ldrb r1, [r4]
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #1
	adds r0, #2
	ldrb r2, [r5]
	lsls r1, r2, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_8041728
	ldrb r0, [r5]
	subs r0, #1
	strb r0, [r5]
	ldrb r3, [r4]
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #1
	adds r0, #2
	ldrb r5, [r5]
	lsls r1, r5, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
_08081D3E:
	adds r0, r7, #0
	bl sub_808165C
	ldr r0, _08081D50 @ =0x02015638
	movs r1, #0
	bl sub_808166C
	mov r0, r8
	b _08081D5E
	.align 2, 0
_08081D50: .4byte 0x02015638
_08081D54:
	ldr r0, _08081DEC @ =0x02015638
	movs r1, #0
	bl sub_808166C
	movs r0, #0
_08081D5E:
	strb r0, [r6]
_08081D60:
	ldr r0, _08081DF0 @ =gKeySt
	ldr r1, [r0]
	movs r0, #2
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08081D8A
	ldr r0, _08081DF4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08081D7E
	movs r0, #0x6b
	bl m4aSongNumStart
_08081D7E:
	ldr r0, _08081DEC @ =0x02015638
	movs r1, #0
	bl sub_808166C
	movs r0, #0
	strb r0, [r6]
_08081D8A:
	ldrb r0, [r6]
	movs r1, #0x29
	adds r1, r1, r7
	mov sb, r1
	cmp r0, #0
	bne _08081DB2
	adds r1, r7, #0
	adds r1, #0x2f
	ldrb r2, [r1]
	lsls r0, r2, #3
	subs r0, r0, r2
	lsls r0, r0, #1
	adds r0, #2
	subs r1, #1
	ldrb r1, [r1]
	lsls r1, r1, #1
	adds r1, #9
	movs r2, #0xc
	bl sub_804169C
_08081DB2:
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, #0
	beq _08081DDC
_08081DBA:
	adds r0, r7, #0
	adds r0, #0x2e
	ldr r1, [sp]
	ldrb r2, [r0]
	cmp r1, r2
	beq _08081DDC
	ldrb r2, [r0]
	lsls r1, r2, #4
	adds r1, #0x48
	ldr r0, [r7, #0x54]
	lsls r2, r2, #1
	adds r0, #0x1c
	adds r0, r0, r2
	ldrh r2, [r0]
	movs r0, #0x10
	bl sub_80706FC
_08081DDC:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08081DEC: .4byte 0x02015638
_08081DF0: .4byte gKeySt
_08081DF4: .4byte gPlaySt

	thumb_func_start sub_8081DF8
sub_8081DF8: @ 0x08081DF8
	push {lr}
	movs r0, #0
	bl EndFaceById
	ldr r0, _08081E30 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08081E34 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08081E38 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	movs r0, #7
	bl EnableBgSync
	bl ResetTextFont
	bl ClearIcons
	bl InitBmBgLayers
	pop {r0}
	bx r0
	.align 2, 0
_08081E30: .4byte gBg0Tm
_08081E34: .4byte gBg1Tm
_08081E38: .4byte gBg2Tm

	thumb_func_start sub_8081E3C
sub_8081E3C: @ 0x08081E3C
	push {lr}
	adds r1, r0, #0
	ldr r0, _08081E4C @ =gUnk_08679518
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08081E4C: .4byte gUnk_08679518

	thumb_func_start sub_8081E50
sub_8081E50: @ 0x08081E50
	adds r0, #0x52
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_8081E58
sub_8081E58: @ 0x08081E58
	push {r4, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r0, #0x52
	ldrh r2, [r0]
	movs r0, #1
	movs r1, #4
	bl nullsub_6
	movs r1, #0x80
	lsls r1, r1, #5
	ldr r3, _08081EAC @ =gUnk_086792B6
	movs r0, #0xe4
	lsls r0, r0, #2
	str r0, [sp]
	movs r0, #0xb
	movs r2, #0
	bl PutSpriteExt
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #1
	bne _08081EB0
	adds r0, r1, #0
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r0, #0x9c
	movs r1, #0x40
	bl sub_80415CC
	ldr r0, [r4, #0x14]
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
	movs r0, #0x10
	bl sub_804163C
	b _08081EC0
	.align 2, 0
_08081EAC: .4byte gUnk_086792B6
_08081EB0:
	adds r0, r1, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x48
	movs r0, #0x10
	bl sub_80415CC
_08081EC0:
	adds r1, r4, #0
	adds r1, #0x52
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8081ED4
sub_8081ED4: @ 0x08081ED4
	push {lr}
	adds r1, r0, #0
	ldr r0, _08081EE4 @ =gUnk_08679558
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_08081EE4: .4byte gUnk_08679558

	thumb_func_start sub_8081EE8
sub_8081EE8: @ 0x08081EE8
	adds r3, r0, #0
	adds r0, #0x2a
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	movs r2, #0
	strh r1, [r3, #0x2e]
	strh r1, [r3, #0x32]
	adds r0, #8
	strb r2, [r0]
	ldrh r0, [r3, #0x2e]
	strh r0, [r3, #0x30]
	movs r0, #0xe4
	lsls r0, r0, #2
	strh r0, [r3, #0x36]
	movs r0, #0x80
	lsls r0, r0, #5
	strh r0, [r3, #0x38]
	adds r0, r3, #0
	adds r0, #0x3a
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8081F20
sub_8081F20: @ 0x08081F20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	adds r6, r0, #0
	adds r0, #0x34
	ldrh r1, [r6, #0x32]
	ldrb r0, [r0]
	cmp r1, r0
	bhi _08081F3A
	b _080822EC
_08081F3A:
	movs r4, #0
	adds r0, r6, #0
	adds r0, #0x2c
	ldrb r2, [r0]
	lsrs r1, r2, #2
	str r0, [sp, #0x10]
	adds r3, r6, #0
	adds r3, #0x3a
	str r3, [sp, #0x18]
	adds r5, r6, #0
	adds r5, #0x3b
	str r5, [sp, #0x1c]
	cmp r4, r1
	bhs _08081F84
_08081F56:
	adds r0, r6, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	adds r0, #1
	lsls r2, r4, #5
	ldrb r0, [r0]
	adds r2, r0, r2
	ldrh r7, [r6, #0x38]
	ldrh r3, [r6, #0x36]
	adds r0, r7, r3
	str r0, [sp]
	movs r0, #4
	ldr r3, _080821E4 @ =gUnk_08679588
	bl PutSpriteExt
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r5, [sp, #0x10]
	ldrb r5, [r5]
	lsrs r0, r5, #2
	cmp r4, r0
	blo _08081F56
_08081F84:
	movs r7, #0
	lsls r1, r4, #2
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	subs r0, r2, r1
	asrs r0, r0, #1
	adds r5, r1, #0
	cmp r7, r0
	bge _08081FCE
_08081F96:
	adds r0, r6, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	adds r0, #1
	lsls r2, r7, #4
	ldrb r0, [r0]
	adds r2, r0, r2
	lsls r0, r4, #5
	adds r2, r2, r0
	mov r8, r2
	ldrh r3, [r6, #0x38]
	ldrh r2, [r6, #0x36]
	adds r0, r3, r2
	str r0, [sp]
	movs r0, #4
	mov r2, r8
	ldr r3, _080821E8 @ =gUnk_08679580
	bl PutSpriteExt
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r3, [sp, #0x10]
	ldrb r3, [r3]
	subs r0, r3, r5
	asrs r0, r0, #1
	cmp r7, r0
	blt _08081F96
_08081FCE:
	movs r0, #0
	mov sb, r0
	lsls r1, r7, #1
	adds r0, r5, r1
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	subs r0, r2, r0
	mov r8, r1
	adds r3, r4, r7
	mov sl, r3
	cmp sb, r0
	bge _0808202A
_08081FE6:
	adds r0, r6, #0
	adds r0, #0x2a
	ldrb r1, [r0]
	adds r0, #1
	mov r3, sb
	lsls r2, r3, #3
	ldrb r0, [r0]
	adds r2, r0, r2
	lsls r0, r7, #4
	adds r2, r2, r0
	lsls r0, r4, #5
	adds r2, r2, r0
	mov ip, r2
	ldrh r2, [r6, #0x38]
	ldrh r3, [r6, #0x36]
	adds r0, r2, r3
	str r0, [sp]
	movs r0, #4
	mov r2, ip
	ldr r3, _080821EC @ =gUnk_08679578
	bl PutSpriteExt
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	mov r1, r8
	adds r0, r5, r1
	ldr r2, [sp, #0x10]
	ldrb r2, [r2]
	subs r0, r2, r0
	cmp sb, r0
	blt _08081FE6
_0808202A:
	mov r0, sl
	add r0, sb
	cmp r0, #0
	bgt _08082034
	b _0808229A
_08082034:
	ldr r3, [sp, #0x10]
	ldrb r3, [r3]
	lsls r4, r3, #0x13
	ldrh r5, [r6, #0x2e]
	mov r8, r5
	ldrh r5, [r6, #0x32]
	adds r0, r6, #0
	adds r0, #0x34
	ldrb r7, [r0]
	str r0, [sp, #0x14]
	subs r0, #0xa
	str r0, [sp, #8]
	adds r1, r6, #0
	adds r1, #0x2b
	str r1, [sp, #0xc]
	cmp r5, r7
	bhi _08082058
	b _08082260
_08082058:
	adds r0, r4, #0
	adds r1, r5, #0
	bl __udivsi3
	mov sb, r0
	adds r0, r4, #0
	muls r0, r7, r0
	adds r1, r5, #0
	bl __udivsi3
	adds r7, r0, #0
	mov r2, r8
	cmp r2, #0
	beq _080820A2
	ldr r3, [sp, #8]
	ldrb r1, [r3]
	adds r1, #1
	movs r0, #0x80
	lsls r0, r0, #6
	orrs r1, r0
	ldr r4, [sp, #0xc]
	ldrb r2, [r4]
	subs r2, #8
	ldr r3, _080821F0 @ =gUnk_08679654
	ldr r5, [sp, #0x18]
	ldrb r5, [r5]
	lsrs r0, r5, #3
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r3, [r0]
	ldrh r4, [r6, #0x38]
	ldrh r5, [r6, #0x36]
	adds r0, r4, r5
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_080820A2:
	movs r4, #0
	lsrs r0, r7, #0x15
	str r0, [sp, #0x2c]
	mov r2, r8
	mov r1, sb
	muls r1, r2, r1
	str r1, [sp, #0x24]
	lsrs r7, r7, #0x10
	mov sl, r7
	cmp r4, r0
	bhs _080820E4
_080820B8:
	ldr r3, [sp, #8]
	ldrb r1, [r3]
	ldr r5, [sp, #0x24]
	lsrs r2, r5, #0x14
	ldr r7, [sp, #0xc]
	ldrb r7, [r7]
	adds r2, r7, r2
	lsls r0, r4, #5
	adds r2, r2, r0
	ldr r0, _080821F4 @ =gUnk_086795F8
	ldr r3, [r0, #0x28]
	ldrh r5, [r6, #0x38]
	ldrh r7, [r6, #0x36]
	adds r0, r5, r7
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	adds r4, #1
	ldr r0, [sp, #0x2c]
	cmp r4, r0
	blo _080820B8
_080820E4:
	movs r7, #0
	lsls r5, r4, #5
	mov r1, sl
	subs r0, r1, r5
	lsrs r0, r0, #4
	str r5, [sp, #0x20]
	cmp r7, r0
	bhs _08082132
_080820F4:
	ldr r2, [sp, #8]
	ldrb r1, [r2]
	ldr r3, [sp, #0x24]
	lsrs r2, r3, #0x14
	ldr r4, [sp, #0xc]
	ldrb r4, [r4]
	adds r2, r4, r2
	mov r8, r5
	adds r2, r2, r5
	lsls r0, r7, #4
	adds r2, r2, r0
	ldr r0, _080821F4 @ =gUnk_086795F8
	ldr r0, [r0, #0x24]
	mov sb, r0
	ldrh r3, [r6, #0x38]
	ldrh r4, [r6, #0x36]
	adds r0, r3, r4
	str r0, [sp]
	movs r0, #4
	mov r3, sb
	bl PutSpriteExt
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r0, sl
	mov r1, r8
	subs r4, r0, r1
	lsrs r4, r4, #4
	cmp r7, r4
	blo _080820F4
_08082132:
	movs r2, #0
	mov sb, r2
	ldr r3, [sp, #0x20]
	mov r8, r3
	mov r4, sl
	subs r0, r4, r3
	lsls r7, r7, #4
	subs r0, r0, r7
	lsrs r0, r0, #3
	str r7, [sp, #4]
	cmp sb, r0
	bhs _08082194
_0808214A:
	ldr r5, [sp, #8]
	ldrb r1, [r5]
	ldr r0, [sp, #0x24]
	lsrs r2, r0, #0x14
	ldr r3, [sp, #0xc]
	ldrb r3, [r3]
	adds r2, r3, r2
	mov r4, r8
	str r4, [sp, #0x28]
	add r2, r8
	str r7, [sp, #0x2c]
	adds r2, r2, r7
	mov r5, sb
	lsls r0, r5, #3
	adds r2, r2, r0
	ldr r0, _080821F4 @ =gUnk_086795F8
	ldr r3, [r0, #0x20]
	ldrh r4, [r6, #0x38]
	ldrh r5, [r6, #0x36]
	adds r0, r4, r5
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	mov r0, sl
	ldr r1, [sp, #0x28]
	subs r4, r0, r1
	ldr r2, [sp, #0x2c]
	subs r4, r4, r2
	lsrs r4, r4, #3
	cmp sb, r4
	blo _0808214A
_08082194:
	ldrh r3, [r6, #0x2e]
	lsrs r0, r3, #4
	ldr r4, [sp, #0x14]
	ldrb r4, [r4]
	adds r0, r4, r0
	ldrh r5, [r6, #0x32]
	cmp r0, r5
	bne _080821F8
	ldr r7, [sp, #8]
	ldrb r1, [r7]
	ldr r0, [sp, #0x24]
	lsrs r4, r0, #0x14
	ldr r3, [sp, #0xc]
	ldrb r3, [r3]
	adds r2, r3, r4
	ldr r5, [sp, #0x20]
	ldr r7, [sp, #4]
	adds r3, r5, r7
	mov r5, sb
	lsls r0, r5, #3
	adds r3, r3, r0
	adds r2, r2, r3
	ldr r7, _080821F4 @ =gUnk_086795F8
	mov r8, r7
	ldr r5, [sp, #0x10]
	ldrb r5, [r5]
	lsls r0, r5, #3
	adds r4, r4, r3
	subs r0, r0, r4
	lsls r0, r0, #2
	add r0, r8
	ldr r3, [r0]
	ldrh r7, [r6, #0x38]
	ldrh r4, [r6, #0x36]
	adds r0, r7, r4
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	b _08082260
	.align 2, 0
_080821E4: .4byte gUnk_08679588
_080821E8: .4byte gUnk_08679580
_080821EC: .4byte gUnk_08679578
_080821F0: .4byte gUnk_08679654
_080821F4: .4byte gUnk_086795F8
_080821F8:
	ldr r5, [sp, #8]
	ldrb r1, [r5]
	ldr r7, [sp, #0x24]
	lsrs r2, r7, #0x14
	ldr r0, [sp, #0xc]
	ldrb r0, [r0]
	adds r2, r0, r2
	ldr r3, [sp, #0x20]
	ldr r4, [sp, #4]
	adds r0, r3, r4
	mov r5, sb
	lsls r3, r5, #3
	adds r0, r0, r3
	adds r2, r2, r0
	ldr r3, _080822FC @ =gUnk_086795F8
	movs r0, #7
	mov r7, sl
	ands r7, r0
	lsls r0, r7, #2
	adds r0, r0, r3
	ldr r3, [r0]
	ldrh r4, [r6, #0x38]
	ldrh r5, [r6, #0x36]
	adds r0, r4, r5
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldr r7, [sp, #8]
	ldrb r1, [r7]
	adds r1, #1
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	lsls r2, r0, #3
	ldr r3, [sp, #0xc]
	ldrb r3, [r3]
	adds r2, r3, r2
	adds r2, #1
	ldr r3, _08082300 @ =gUnk_08679654
	ldr r4, [sp, #0x1c]
	ldrb r4, [r4]
	lsrs r0, r4, #3
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r3, [r0]
	ldrh r5, [r6, #0x38]
	ldrh r7, [r6, #0x36]
	adds r0, r5, r7
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_08082260:
	ldr r0, [sp, #8]
	ldrb r1, [r0]
	ldr r3, [sp, #0xc]
	ldrb r2, [r3]
	subs r2, #8
	ldr r3, _08082304 @ =gUnk_08679590
	ldrh r4, [r6, #0x38]
	ldrh r5, [r6, #0x36]
	adds r0, r4, r5
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldr r7, [sp, #8]
	ldrb r1, [r7]
	ldr r0, [sp, #0x10]
	ldrb r0, [r0]
	lsls r2, r0, #3
	ldr r3, [sp, #0xc]
	ldrb r3, [r3]
	adds r2, r3, r2
	ldr r3, _08082308 @ =gUnk_08679598
	ldrh r4, [r6, #0x38]
	ldrh r5, [r6, #0x36]
	adds r0, r4, r5
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_0808229A:
	ldrh r1, [r6, #0x30]
	ldrh r0, [r6, #0x2e]
	cmp r1, r0
	beq _080822C2
	cmp r1, r0
	bls _080822AE
	ldr r7, [sp, #0x18]
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
_080822AE:
	ldrh r0, [r6, #0x30]
	ldrh r1, [r6, #0x2e]
	cmp r0, r1
	bhs _080822BE
	ldr r2, [sp, #0x1c]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_080822BE:
	ldrh r0, [r6, #0x2e]
	strh r0, [r6, #0x30]
_080822C2:
	ldr r3, [sp, #0x18]
	ldrb r0, [r3]
	adds r0, #1
	movs r1, #0
	strb r0, [r3]
	ldr r4, [sp, #0x1c]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	ldrb r5, [r3]
	lsrs r0, r5, #3
	cmp r0, #5
	bls _080822DE
	strb r1, [r3]
_080822DE:
	ldr r7, [sp, #0x1c]
	ldrb r7, [r7]
	lsrs r0, r7, #3
	cmp r0, #5
	bls _080822EC
	ldr r0, [sp, #0x1c]
	strb r1, [r0]
_080822EC:
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080822FC: .4byte gUnk_086795F8
_08082300: .4byte gUnk_08679654
_08082304: .4byte gUnk_08679590
_08082308: .4byte gUnk_08679598

	thumb_func_start sub_808230C
sub_808230C: @ 0x0808230C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808231C @ =gUnk_0867966C
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808231C: .4byte gUnk_0867966C

	thumb_func_start sub_8082320
sub_8082320: @ 0x08082320
	push {r4, r5, r6, lr}
	mov ip, r0
	ldr r4, [sp, #0x10]
	ldr r5, [sp, #0x14]
	ldr r6, [sp, #0x18]
	adds r0, #0x2a
	strb r1, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r3, [r0]
	mov r0, ip
	strh r4, [r0, #0x2e]
	strh r5, [r0, #0x32]
	adds r0, #0x34
	strb r6, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8082348
sub_8082348: @ 0x08082348
	adds r3, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	cmp r1, #0
	bge _08082354
	adds r1, #0x1f
_08082354:
	asrs r0, r1, #5
	strh r0, [r3, #0x36]
	lsls r0, r2, #0xc
	strh r0, [r3, #0x38]
	bx lr
	.align 2, 0

	thumb_func_start sub_8082360
sub_8082360: @ 0x08082360
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	mov r8, r1
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r7, [sp, #0x18]
	bl ClearText
	adds r0, r4, #0
	adds r1, r5, #0
	bl Text_SetColor
	adds r0, r4, #0
	adds r1, r6, #0
	bl Text_SetCursor
	adds r0, r4, #0
	adds r1, r7, #0
	bl Text_DrawString
	adds r0, r4, #0
	mov r1, r8
	bl PutText
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80823A0
sub_80823A0: @ 0x080823A0
	push {r4, lr}
	adds r3, r0, #0
	ldr r4, _080823B4 @ =0x0201636A
	ldrh r0, [r4]
	adds r2, r0, #0
	cmp r2, #0
	bne _080823B8
	strb r2, [r3]
	strh r2, [r1]
	b _080823EC
	.align 2, 0
_080823B4: .4byte 0x0201636A
_080823B8:
	cmp r2, #7
	bhi _080823CA
	ldrb r4, [r3]
	cmp r4, r2
	blo _080823C6
	subs r0, #1
	strb r0, [r3]
_080823C6:
	movs r0, #0
	b _080823EA
_080823CA:
	ldrh r2, [r1]
	lsrs r0, r2, #4
	adds r2, r0, #7
	ldrh r0, [r4]
	cmp r2, r0
	bge _080823E2
	ldrb r4, [r3]
	cmp r4, #6
	bne _080823EC
	movs r0, #5
	strb r0, [r3]
	b _080823EC
_080823E2:
	cmp r2, r0
	ble _080823EC
	subs r0, #7
	lsls r0, r0, #4
_080823EA:
	strh r0, [r1]
_080823EC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80823F4
sub_80823F4: @ 0x080823F4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	ldr r4, _0808248C @ =gBg3Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	ldr r0, _08082490 @ =gUnk_08320436
	mov sb, r0
	movs r0, #0
	movs r1, #0x2c
	adds r1, r1, r7
	mov sl, r1
	mov ip, r4
	movs r3, #0x27
	mov r8, r3
	movs r1, #0xa0
	lsls r1, r1, #8
	adds r4, r1, #0
_08082422:
	movs r2, #0
	adds r6, r0, #1
	lsls r5, r0, #6
	mov r3, r8
	subs r1, r3, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	mov r1, sb
	adds r3, r0, r1
_08082436:
	lsls r0, r2, #1
	adds r1, r5, r0
	add r1, ip
	adds r0, r0, r3
	ldrh r0, [r0]
	adds r0, r4, r0
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1d
	bls _08082436
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1f
	bls _08082422
	movs r0, #8
	bl EnableBgSync
	movs r6, #0
	movs r5, #0
	strh r5, [r7, #0x2a]
	movs r4, #0xff
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _08082494 @ =0x0400001E
	ldrh r3, [r7, #0x2a]
	ands r4, r3
	strh r4, [r0]
	mov r0, sl
	strb r6, [r0]
	strh r5, [r7, #0x2a]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808248C: .4byte gBg3Tm
_08082490: .4byte gUnk_08320436
_08082494: .4byte 0x0400001E

	thumb_func_start sub_8082498
sub_8082498: @ 0x08082498
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x2c
	ldrb r0, [r6]
	cmp r0, #3
	bne _080824D6
	ldrh r0, [r5, #0x2a]
	adds r0, #1
	strh r0, [r5, #0x2a]
	lsls r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #0x13
	cmp r0, r1
	bne _080824BA
	movs r0, #0
	strh r0, [r5, #0x2a]
_080824BA:
	movs r4, #0xff
	adds r2, r4, #0
	ldrh r1, [r5, #0x2a]
	ands r2, r1
	movs r0, #3
	movs r1, #0
	bl SetBgOffset
	ldr r0, _0808254C @ =0x0400001E
	ldrh r1, [r5, #0x2a]
	ands r4, r1
	strh r4, [r0]
	movs r0, #0
	strb r0, [r6]
_080824D6:
	adds r1, r5, #0
	adds r1, #0x2c
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r1, [r5, #0x2a]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08082544
	ldr r5, _08082550 @ =gUnk_08320436
	lsrs r0, r1, #3
	subs r4, r0, #1
	movs r1, #0x1f
	ands r4, r1
	adds r0, #0x1e
	movs r1, #0x28
	bl __modsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0
	ldr r1, _08082554 @ =gBg3Tm
	mov ip, r1
	lsls r4, r4, #6
	mov r7, ip
	movs r1, #0x27
	subs r1, r1, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	movs r0, #0xa0
	lsls r0, r0, #8
	adds r6, r0, #0
	adds r5, r4, #0
_0808251E:
	lsls r0, r2, #1
	adds r1, r4, r0
	adds r1, r1, r7
	adds r0, r0, r3
	ldrh r0, [r0]
	adds r0, r6, r0
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1d
	bls _0808251E
	mov r1, ip
	adds r0, r5, r1
	ldr r1, _08082558 @ =0x06007800
	adds r1, r5, r1
	movs r2, #0xf
	bl CpuFastSet
_08082544:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808254C: .4byte 0x0400001E
_08082550: .4byte gUnk_08320436
_08082554: .4byte gBg3Tm
_08082558: .4byte 0x06007800

	thumb_func_start nullsub_41
nullsub_41: @ 0x0808255C
	bx lr
	.align 2, 0

	thumb_func_start sub_8082560
sub_8082560: @ 0x08082560
	push {lr}
	ldr r0, _08082570 @ =gUnk_0867968C
	movs r1, #0
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_08082570: .4byte gUnk_0867968C

	thumb_func_start sub_8082574
sub_8082574: @ 0x08082574
	ldr r0, _0808258C @ =0x04000006
	ldrh r0, [r0]
	adds r3, r0, #0
	cmp r3, #0xa0
	bne _08082594
	movs r3, #0
	ldr r0, _08082590 @ =0x0201686C
	ldr r2, [r0]
	ldr r1, [r0, #4]
	str r1, [r0]
	str r2, [r0, #4]
	b _0808259C
	.align 2, 0
_0808258C: .4byte 0x04000006
_08082590: .4byte 0x0201686C
_08082594:
	ldr r0, _080825B0 @ =0x0201686C
	cmp r3, #0xa0
	bls _0808259C
	movs r3, #0
_0808259C:
	ldr r2, _080825B4 @ =0x04000042
	ldr r0, [r0]
	lsls r1, r3, #2
	adds r1, r1, r0
	ldrb r3, [r1]
	lsls r0, r3, #8
	ldrb r1, [r1, #1]
	orrs r0, r1
	strh r0, [r2]
	bx lr
	.align 2, 0
_080825B0: .4byte 0x0201686C
_080825B4: .4byte 0x04000042

	thumb_func_start sub_80825B8
sub_80825B8: @ 0x080825B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	ldr r2, _08082634 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	adds r0, r4, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov ip, r2
	cmp r0, #0
	bge _08082644
	movs r0, #0x96
	str r0, [r4, #0x2c]
	movs r3, #0
	ldr r0, _08082638 @ =0x0201636C
	mov sb, r0
	adds r4, #0x29
	mov r8, r4
	ldr r1, _0808263C @ =0x0201686C
	mov sl, r1
	mov r7, sb
	movs r4, #0
	movs r2, #0xf0
	movs r6, #0xa0
	lsls r6, r6, #2
	ldr r5, _08082640 @ =0x00000281
_08082606:
	lsls r0, r3, #2
	adds r0, r0, r7
	strb r4, [r0]
	strb r2, [r0, #1]
	adds r1, r0, r6
	strb r4, [r1]
	adds r0, r0, r5
	strb r2, [r0]
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0x9f
	bls _08082606
	mov r1, ip
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
	adds r1, #4
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	b _0808268C
	.align 2, 0
_08082634: .4byte gDispIo
_08082638: .4byte 0x0201636C
_0808263C: .4byte 0x0201686C
_08082640: .4byte 0x00000281
_08082644:
	movs r0, #0
	str r0, [r4, #0x2c]
	movs r3, #0
	ldr r0, _080826F8 @ =0x0201636C
	mov sb, r0
	adds r4, #0x29
	mov r8, r4
	ldr r1, _080826FC @ =0x0201686C
	mov sl, r1
	mov r6, sb
	movs r2, #0x78
	movs r5, #0xa0
	lsls r5, r5, #2
	ldr r4, _08082700 @ =0x00000281
_08082660:
	lsls r0, r3, #2
	adds r0, r0, r6
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, r5
	strb r2, [r1]
	adds r0, r0, r4
	strb r2, [r0]
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0x9f
	bls _08082660
	mov r2, ip
	adds r2, #0x2f
	movs r1, #0
	movs r0, #0x78
	strb r0, [r2]
	adds r2, #4
	strb r1, [r2]
	mov r1, ip
	adds r1, #0x2e
_0808268C:
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
	mov r2, ip
	adds r2, #0x35
	movs r0, #1
	ldrb r1, [r2]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
	adds r2, #1
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2]
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	mov r0, sb
	mov r1, sl
	str r0, [r1]
	movs r0, #0xa0
	lsls r0, r0, #2
	add r0, sb
	str r0, [r1, #4]
	ldr r0, _08082704 @ =sub_8082574
	bl SetOnHBlankA
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080826F8: .4byte 0x0201636C
_080826FC: .4byte 0x0201686C
_08082700: .4byte 0x00000281
_08082704: .4byte sub_8082574

	thumb_func_start sub_8082708
sub_8082708: @ 0x08082708
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	adds r0, #0x2a
	movs r1, #0
	ldrsb r1, [r0, r1]
	ldr r0, [r6, #0x2c]
	adds r0, r0, r1
	str r0, [r6, #0x2c]
	cmp r0, #0x96
	ble _08082726
	movs r0, #0x96
	str r0, [r6, #0x2c]
_08082726:
	ldr r0, [r6, #0x2c]
	cmp r0, #0
	bge _08082730
	movs r0, #0
	str r0, [r6, #0x2c]
_08082730:
	movs r1, #0
	movs r0, #0x29
	adds r0, r0, r6
	mov sb, r0
	ldr r7, _08082770 @ =0x0201686C
	movs r2, #0x78
	mov r8, r2
_0808273E:
	ldr r0, [r6, #0x2c]
	lsls r5, r1, #0x10
	cmp r0, #0
	ble _0808275E
	adds r4, r0, #0
	muls r4, r0, r4
	adds r0, r4, #0
	asrs r4, r5, #0x10
	adds r1, r4, #0
	subs r1, #0x50
	adds r2, r1, #0
	muls r2, r1, r2
	adds r1, r2, #0
	subs r0, r0, r1
	cmp r0, #0
	bge _08082774
_0808275E:
	ldr r0, [r7, #4]
	asrs r1, r5, #0xe
	adds r0, r1, r0
	mov r4, r8
	strb r4, [r0]
	ldr r0, [r7, #4]
	adds r1, r1, r0
	strb r4, [r1, #1]
	b _0808279A
	.align 2, 0
_08082770: .4byte 0x0201686C
_08082774:
	bl Sqrt
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x78
	ble _08082784
	movs r3, #0x78
_08082784:
	ldr r1, [r7, #4]
	lsls r2, r4, #2
	adds r1, r2, r1
	mov r4, r8
	subs r0, r4, r3
	strb r0, [r1]
	ldr r0, [r7, #4]
	adds r2, r2, r0
	adds r0, r3, #0
	adds r0, #0x78
	strb r0, [r2, #1]
_0808279A:
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r5, r1
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _0808273E
	mov r2, sb
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x28
	bne _080827BE
	adds r0, r6, #0
	bl Proc_Break
_080827BE:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80827CC
sub_80827CC: @ 0x080827CC
	push {lr}
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0

	thumb_func_start sub_80827D8
sub_80827D8: @ 0x080827D8
	push {r4, lr}
	adds r2, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080827F4 @ =gUnk_086796C4
	adds r1, r2, #0
	bl SpawnProcLocking
	adds r1, r0, #0
	adds r1, #0x2a
	strb r4, [r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080827F4: .4byte gUnk_086796C4

	thumb_func_start sub_80827F8
sub_80827F8: @ 0x080827F8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r1, r0, #0
	adds r1, #0x29
	movs r7, #0
	strb r7, [r1]
	ldr r1, _08082890 @ =gDispIo
	mov ip, r1
	movs r3, #1
	ldrb r1, [r1, #1]
	orrs r1, r3
	movs r2, #2
	mov r8, r2
	mov r2, r8
	orrs r1, r2
	movs r6, #4
	orrs r1, r6
	movs r5, #8
	orrs r1, r5
	movs r4, #0x10
	orrs r1, r4
	movs r2, #0x21
	rsbs r2, r2, #0
	ands r1, r2
	movs r2, #0x40
	orrs r1, r2
	movs r2, #0x7f
	ands r1, r2
	mov r2, ip
	strb r1, [r2, #1]
	mov r1, ip
	adds r1, #0x35
	ldrb r2, [r1]
	orrs r3, r2
	mov r2, r8
	orrs r3, r2
	orrs r3, r6
	orrs r3, r5
	orrs r3, r4
	strb r3, [r1]
	mov r3, ip
	adds r3, #0x36
	movs r1, #2
	rsbs r1, r1, #0
	ldrb r2, [r3]
	ands r1, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	subs r2, #2
	ands r1, r2
	subs r2, #4
	ands r1, r2
	subs r2, #8
	ands r1, r2
	strb r1, [r3]
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _08082894
	mov r0, ip
	adds r0, #0x2f
	strb r7, [r0]
	adds r0, #4
	strb r7, [r0]
	mov r1, ip
	adds r1, #0x2e
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
	b _080828AE
	.align 2, 0
_08082890: .4byte gDispIo
_08082894:
	mov r1, ip
	adds r1, #0x2f
	movs r0, #0x78
	strb r0, [r1]
	mov r2, ip
	adds r2, #0x33
	movs r1, #0x50
	strb r1, [r2]
	subs r2, #5
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x32
	strb r1, [r0]
_080828AE:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80828B8
sub_80828B8: @ 0x080828B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	adds r2, r7, #0
	adds r2, #0x29
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r5, _0808293C @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r5, #1]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r5, #1]
	ldrb r1, [r2]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r4, r0, #8
	lsls r0, r0, #7
	muls r0, r1, r0
	movs r1, #0xf
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xf
	bl __divsi3
	asrs r6, r0, #4
	adds r0, r7, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r5, #0
	cmp r0, #0
	ble _08082940
	lsls r1, r6, #1
	adds r2, r1, r6
	adds r0, r4, #0
	adds r0, #0x2f
	strb r2, [r0]
	adds r0, #4
	strb r1, [r0]
	movs r3, #0x10
	rsbs r3, r3, #0
	adds r0, r3, #0
	subs r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x2e
	strb r0, [r2]
	movs r2, #0x60
	rsbs r2, r2, #0
	adds r0, r2, #0
	subs r0, r0, r1
	adds r1, r4, #0
	adds r1, #0x32
	strb r0, [r1]
	b _08082964
	.align 2, 0
_0808293C: .4byte gDispIo
_08082940:
	lsls r2, r6, #1
	adds r1, r2, r6
	movs r0, #0x78
	subs r0, r0, r1
	adds r3, r4, #0
	adds r3, #0x2f
	strb r0, [r3]
	movs r0, #0x50
	subs r0, r0, r2
	adds r3, #4
	strb r0, [r3]
	adds r1, #0x78
	adds r0, r4, #0
	adds r0, #0x2e
	strb r1, [r0]
	adds r2, #0x50
	adds r0, #4
	strb r2, [r0]
_08082964:
	adds r2, r4, #0
	adds r2, #0x35
	movs r0, #1
	ldrb r3, [r2]
	orrs r0, r3
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x36
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r2, [r1]
	ands r0, r2
	movs r3, #3
	rsbs r3, r3, #0
	mov sl, r3
	ands r0, r3
	movs r2, #5
	rsbs r2, r2, #0
	mov sb, r2
	ands r0, r2
	subs r3, #6
	mov r8, r3
	ands r0, r3
	movs r5, #0x11
	rsbs r5, r5, #0
	ands r0, r5
	strb r0, [r1]
	cmp r6, #0x27
	ble _080829DA
	adds r0, r7, #0
	bl Proc_Break
	adds r0, r7, #0
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _080829DA
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r4, #1]
	ands r0, r1
	mov r2, sl
	ands r0, r2
	mov r3, sb
	ands r0, r3
	mov r1, r8
	ands r0, r1
	ands r0, r5
	strb r0, [r4, #1]
_080829DA:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80829E8
sub_80829E8: @ 0x080829E8
	push {r4, lr}
	adds r2, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08082A04 @ =gUnk_086796F4
	adds r1, r2, #0
	bl SpawnProcLocking
	adds r1, r0, #0
	adds r1, #0x2a
	strb r4, [r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08082A04: .4byte gUnk_086796F4

	thumb_func_start sub_8082A08
sub_8082A08: @ 0x08082A08
	push {r4, lr}
	movs r4, #0
	bl GetSupplyItems
	adds r2, r0, #0
	movs r1, #0
	ldrh r0, [r2]
	cmp r0, #0
	beq _08082A38
	movs r4, #1
_08082A1C:
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0x63
	bhi _08082A38
	lsls r0, r1, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	cmp r0, #0
	beq _08082A38
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _08082A1C
_08082A38:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8082A40
sub_8082A40: @ 0x08082A40
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x2a]
	ldrh r1, [r4, #0x2c]
	cmp r0, r1
	bne _08082A6C
	ldr r2, _08082A78 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r0, r4, #0
	bl Proc_Break
_08082A6C:
	ldrh r0, [r4, #0x2c]
	adds r0, #1
	strh r0, [r4, #0x2c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08082A78: .4byte gDispIo

	thumb_func_start sub_8082A7C
sub_8082A7C: @ 0x08082A7C
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _08082AB4 @ =gUnk_0867971C
	bl SpawnProc
	movs r1, #0
	strh r1, [r0, #0x2c]
	strh r4, [r0, #0x2a]
	ldr r2, _08082AB8 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08082AB4: .4byte gUnk_0867971C
_08082AB8: .4byte gDispIo

	thumb_func_start sub_8082ABC
sub_8082ABC: @ 0x08082ABC
	adds r0, #0x28
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8082AC8
sub_8082AC8: @ 0x08082AC8
	adds r1, r0, #0
	adds r1, #0x28
	ldrb r0, [r1]
	cmp r0, #0
	beq _08082AD6
	subs r0, #1
	strb r0, [r1]
_08082AD6:
	bx lr

	thumb_func_start sub_8082AD8
sub_8082AD8: @ 0x08082AD8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08082AFC @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xf3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08082AF4
	bl sub_807089C
	adds r0, r4, #0
	bl Proc_Break
_08082AF4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08082AFC: .4byte gKeySt

	thumb_func_start sub_8082B00
sub_8082B00: @ 0x08082B00
	push {r4, lr}
	adds r4, r3, #0
	bl sub_80706C8
	ldr r0, _08082B18 @ =gUnk_0867973C
	adds r1, r4, #0
	bl SpawnProcLocking
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08082B18: .4byte gUnk_0867973C

	thumb_func_start sub_8082B1C
sub_8082B1C: @ 0x08082B1C
	push {r4, lr}
	adds r4, r1, #0
	bl CanUnitUseWeapon
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082B3C
	adds r0, r4, #0
	bl GetItemAttributes
	movs r1, #0x80
	ands r1, r0
	cmp r1, #0
	bne _08082B3C
	movs r0, #1
	b _08082B3E
_08082B3C:
	movs r0, #0
_08082B3E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8082B44
sub_8082B44: @ 0x08082B44
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r6, #0
	movs r4, #0
_08082B4C:
	lsls r1, r4, #1
	adds r0, r5, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08082B66
	adds r6, #1
_08082B66:
	adds r4, #1
	cmp r4, #4
	ble _08082B4C
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_8082B74
sub_8082B74: @ 0x08082B74
	push {r4, lr}
	adds r4, r0, #0
	bl ArenaIsUnitAllowed
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082B90
	adds r0, r4, #0
	bl sub_8082B44
	cmp r0, #0
	beq _08082B90
	movs r0, #1
	b _08082B92
_08082B90:
	movs r0, #0
_08082B92:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8082B98
sub_8082B98: @ 0x08082B98
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	cmp r4, r5
	beq _08082C2A
	movs r0, #8
	ldrh r1, [r4, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _08082BE6
	lsls r1, r7, #1
	adds r0, r4, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082BE6
	adds r0, r4, #0
	bl sub_8082B44
	cmp r0, #1
	bgt _08082BE6
	lsls r1, r6, #1
	adds r0, r5, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082C26
_08082BE6:
	movs r0, #8
	ldrh r1, [r5, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _08082C2A
	lsls r1, r6, #1
	adds r0, r5, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082C2A
	adds r0, r5, #0
	bl sub_8082B44
	cmp r0, #1
	bgt _08082C2A
	lsls r1, r7, #1
	adds r0, r4, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082C2A
_08082C26:
	movs r0, #0
	b _08082C2C
_08082C2A:
	movs r0, #1
_08082C2C:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8082C34
sub_8082C34: @ 0x08082C34
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r2, #0
	movs r0, #8
	ldrh r2, [r4, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _08082C76
	lsls r1, r1, #1
	adds r0, r4, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082C76
	adds r0, r4, #0
	bl sub_8082B44
	cmp r0, #1
	bne _08082C76
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082C76
	movs r0, #0
	b _08082C78
_08082C76:
	movs r0, #1
_08082C78:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8082C80
sub_8082C80: @ 0x08082C80
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #8
	ldrh r2, [r4, #0xc]
	ands r0, r2
	cmp r0, #0
	bne _08082CB2
	lsls r1, r1, #1
	adds r0, r4, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r4, #0
	bl sub_8082B1C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08082CB2
	adds r0, r4, #0
	bl sub_8082B44
	cmp r0, #1
	bne _08082CB2
	movs r0, #0
	b _08082CB4
_08082CB2:
	movs r0, #1
_08082CB4:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8082CBC
sub_8082CBC: @ 0x08082CBC
	push {r4, r5, lr}
	movs r1, #0
	ldr r4, _08082CE8 @ =gPlaySt
	ldr r3, _08082CEC @ =gUnk_08321F24
	ldr r2, _08082CF0 @ =0x02016874
_08082CC6:
	ldrb r5, [r4, #0x1d]
	lsls r0, r5, #0x1c
	lsrs r0, r0, #0x1e
	lsls r0, r0, #4
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r2]
	adds r2, #2
	adds r1, #1
	cmp r1, #0xf
	ble _08082CC6
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08082CE8: .4byte gPlaySt
_08082CEC: .4byte gUnk_08321F24
_08082CF0: .4byte 0x02016874

	thumb_func_start sub_8082CF4
sub_8082CF4: @ 0x08082CF4
	push {lr}
	adds r1, r0, #0
	ldr r0, _08082D04 @ =gUnk_08679774
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_08082D04: .4byte gUnk_08679774

	thumb_func_start sub_8082D08
sub_8082D08: @ 0x08082D08
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	lsls r4, r2, #0x10
	lsrs r4, r4, #0x10
	ldr r1, _08082D4C @ =0x06016000
	str r1, [r6, #0x2c]
	movs r5, #0xf
	ands r4, r5
	adds r4, #0x10
	adds r0, #0x30
	adds r2, r4, #0
	bl InitSpriteTextFont
	ldr r0, _08082D50 @ =Pal_TalkText
	lsls r1, r4, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	adds r0, r6, #0
	adds r0, #0x48
	bl InitSpriteText
	movs r0, #0
	bl SetTextFont
	ldrh r1, [r6, #0x2c]
	lsrs r0, r1, #5
	ands r4, r5
	lsls r4, r4, #0xc
	adds r0, r0, r4
	str r0, [r6, #0x50]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08082D4C: .4byte 0x06016000
_08082D50: .4byte Pal_TalkText

	thumb_func_start sub_8082D54
sub_8082D54: @ 0x08082D54
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, #0x30
	bl SetTextFont
	adds r4, #0x48
	adds r0, r4, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	movs r0, #1
	bl SetTextFontGlyphs
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	ldr r0, _08082DA0 @ =gUnk_08679754
	lsls r5, r5, #2
	adds r5, r5, r0
	ldr r0, [r5]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	movs r0, #0
	bl SetTextFont
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08082DA0: .4byte gUnk_08679754

	thumb_func_start sub_8082DA4
sub_8082DA4: @ 0x08082DA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r1, [sp, #4]
	adds r7, r2, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sl, r3
	str r0, [sp, #8]
	cmp r3, #0xf
	bls _08082E56
	adds r2, #8
	adds r0, r3, #0
	asrs r0, r0, #5
	subs r7, r2, r0
	ldr r4, _08082E68 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov r8, r2
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #1
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	movs r5, #0
	ldr r6, _08082E6C @ =0x000001FF
	ldr r4, [sp, #4]
_08082E34:
	adds r1, r4, #0
	ands r1, r6
	lsls r2, r5, #2
	ldr r3, [sp, #8]
	ldr r0, [r3, #0x50]
	adds r0, r0, r2
	str r0, [sp]
	movs r0, #0xc
	adds r2, r7, #0
	ands r2, r6
	ldr r3, _08082E70 @ =gUnk_0867976C
	bl PutSpriteExt
	adds r4, #0x20
	adds r5, #1
	cmp r5, #7
	ble _08082E34
_08082E56:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082E68: .4byte gSinLut
_08082E6C: .4byte 0x000001FF
_08082E70: .4byte gUnk_0867976C

	thumb_func_start sub_8082E74
sub_8082E74: @ 0x08082E74
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r1, #0
	ldr r0, _08082EB0 @ =0x020168E8
	str r4, [r0]
	ldr r1, _08082EB4 @ =0x020168EC
	movs r0, #1
	lsls r0, r4
	subs r0, #1
	str r0, [r1]
	ldr r6, _08082EB8 @ =0x020168F0
	movs r0, #0x1c
	adds r1, r4, #0
	bl __divsi3
	adds r5, r0, #0
	str r5, [r6]
	movs r0, #0x1c
	adds r1, r4, #0
	bl __modsi3
	cmp r0, #0
	ble _08082EA6
	adds r0, r5, #1
	str r0, [r6]
_08082EA6:
	ldr r0, _08082EBC @ =0x020168F4
	str r7, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082EB0: .4byte 0x020168E8
_08082EB4: .4byte 0x020168EC
_08082EB8: .4byte 0x020168F0
_08082EBC: .4byte 0x020168F4

	thumb_func_start sub_8082EC0
sub_8082EC0: @ 0x08082EC0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _08082EE8 @ =0x020168E8
	ldr r4, [r0]
	adds r0, r5, #0
	adds r1, r4, #0
	bl __divsi3
	adds r6, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl __modsi3
	cmp r0, #0
	ble _08082EE0
	adds r6, #1
_08082EE0:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08082EE8: .4byte 0x020168E8

	thumb_func_start sub_8082EEC
sub_8082EEC: @ 0x08082EEC
	push {r4, r5, lr}
	ldr r5, _08082F14 @ =0x02016920
	ldr r0, [r5]
	lsls r4, r0, #4
	adds r4, r4, r0
	lsls r4, r4, #0x13
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	movs r1, #0x47
	bl __udivsi3
	adds r4, r4, r0
	adds r4, #3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [r5]
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08082F14: .4byte 0x02016920

	thumb_func_start sub_8082F18
sub_8082F18: @ 0x08082F18
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r1, _08082F4C @ =0x020168F0
	ldr r0, [r1]
	cmp r4, r0
	bge _08082F44
	ldr r6, _08082F50 @ =0x02016924
	adds r5, r1, #0
_08082F28:
	ldr r0, [r5]
	adds r0, r4, r0
	lsls r1, r4, #1
	adds r0, r0, r1
	adds r0, r0, r6
	ldrb r3, [r0]
	adds r2, r4, r6
	ldrb r1, [r2]
	strb r1, [r0]
	strb r3, [r2]
	adds r4, #1
	ldr r0, [r5]
	cmp r4, r0
	blt _08082F28
_08082F44:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08082F4C: .4byte 0x020168F0
_08082F50: .4byte 0x02016924

	thumb_func_start sub_8082F54
sub_8082F54: @ 0x08082F54
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp]
	mov sl, r1
	mov r8, r2
	mov sb, r3
	bl sub_8082EEC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add r8, r0
	movs r0, #1
	mov r1, sb
	lsls r0, r1
	subs r0, #1
	mov r1, r8
	ands r1, r0
	mov r8, r1
	movs r2, #0
	cmp r2, sb
	bge _08082FD4
_08082F86:
	ldr r0, _08082FE4 @ =0x020168E8
	mov r1, sl
	ldr r6, [r1]
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	str r2, [sp, #4]
	bl __divsi3
	ldr r1, [sp]
	adds r7, r1, r0
	movs r5, #1
	ldr r2, [sp, #4]
	lsls r5, r2
	mov r0, r8
	ands r5, r0
	asrs r5, r2
	adds r0, r6, #0
	adds r1, r4, #0
	bl __modsi3
	adds r1, r0, #0
	ldr r2, [sp, #4]
	cmp r1, #0
	bge _08082FBA
	adds r0, r1, #7
_08082FBA:
	asrs r0, r0, #3
	lsls r0, r0, #3
	subs r0, r1, r0
	lsls r5, r0
	ldrb r1, [r7]
	orrs r5, r1
	strb r5, [r7]
	adds r0, r6, #1
	mov r1, sl
	str r0, [r1]
	adds r2, #1
	cmp r2, sb
	blt _08082F86
_08082FD4:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082FE4: .4byte 0x020168E8

	thumb_func_start sub_8082FE8
sub_8082FE8: @ 0x08082FE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	str r0, [sp]
	mov r8, r1
	mov sb, r2
	movs r0, #0
	mov sl, r0
	movs r7, #0
	cmp sl, sb
	bge _0808304C
_08083004:
	ldr r0, _08083074 @ =0x020168E8
	mov r1, r8
	ldr r6, [r1]
	ldr r4, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl __divsi3
	ldr r2, [sp]
	adds r0, r2, r0
	ldrb r5, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	bl __modsi3
	adds r1, r0, #0
	cmp r1, #0
	bge _0808302A
	adds r0, r1, #7
_0808302A:
	asrs r0, r0, #3
	lsls r0, r0, #3
	subs r0, r1, r0
	movs r1, #1
	lsls r1, r0
	ands r5, r1
	asrs r5, r0
	lsls r5, r7
	mov r0, sl
	orrs r0, r5
	mov sl, r0
	adds r0, r6, #1
	mov r1, r8
	str r0, [r1]
	adds r7, #1
	cmp r7, sb
	blt _08083004
_0808304C:
	bl sub_8082EEC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r2, sl
	subs r0, r2, r0
	movs r1, #1
	mov r2, sb
	lsls r1, r2
	subs r1, #1
	ands r0, r1
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08083074: .4byte 0x020168E8

	thumb_func_start sub_8083078
sub_8083078: @ 0x08083078
	push {r4, lr}
	adds r4, r0, #0
	adds r3, r1, #0
	movs r2, #0
	movs r1, #0
	cmp r2, r3
	bge _08083098
_08083086:
	adds r0, r4, r1
	adds r1, #1
	ldrb r0, [r0]
	muls r0, r1, r0
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r1, r3
	blt _08083086
_08083098:
	lsrs r0, r2, #9
	adds r0, r2, r0
	ldr r2, _080830A8 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080830A8: .4byte 0x000001FF

	thumb_func_start sub_80830AC
sub_80830AC: @ 0x080830AC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r6, #0
	ldr r0, _080830E4 @ =0x020168F0
	ldr r0, [r0]
	ldr r5, _080830E8 @ =0x02016924
	adds r0, r0, r5
	ldr r4, _080830EC @ =0x020169C4
	ldrh r1, [r4, #6]
	bl sub_8083078
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	adds r7, r5, #0
	mov r8, r4
_080830D0:
	adds r0, r6, #0
	movs r1, #3
	bl __modsi3
	adds r5, r0, #0
	cmp r5, #0
	bne _080830F0
	mov r0, r8
	ldrh r4, [r0]
	b _08083108
	.align 2, 0
_080830E4: .4byte 0x020168F0
_080830E8: .4byte 0x02016924
_080830EC: .4byte 0x020169C4
_080830F0:
	cmp r5, #1
	bne _08083104
	mov r0, r8
	ldrh r4, [r0, #2]
	adds r0, r6, #0
	movs r1, #3
	bl __divsi3
	adds r1, r5, #0
	b _08083112
_08083104:
	mov r0, r8
	ldrh r4, [r0, #4]
_08083108:
	adds r0, r6, #0
	movs r1, #3
	bl __divsi3
	movs r1, #1
_08083112:
	lsls r1, r0
	ands r4, r1
	asrs r4, r0
	ldr r5, _08083170 @ =0x020168E8
	ldr r1, [r5]
	adds r0, r6, #0
	bl __modsi3
	lsls r4, r0
	ldrb r0, [r7]
	orrs r4, r0
	strb r4, [r7]
	adds r6, #1
	ldr r1, [r5]
	adds r0, r6, #0
	bl __modsi3
	cmp r0, #0
	bne _0808313A
	adds r7, #1
_0808313A:
	cmp r6, #0x1c
	bne _080830D0
	movs r2, #0
	ldr r3, _08083174 @ =0x020168F0
	ldr r0, [r3]
	cmp r2, r0
	bge _08083160
	ldr r5, _08083178 @ =0x02016924
	ldr r4, _0808317C @ =0x020168EC
_0808314C:
	adds r0, r2, r5
	ldrb r1, [r0]
	add r1, sb
	ldrb r6, [r4]
	ands r1, r6
	strb r1, [r0]
	adds r2, #1
	ldr r0, [r3]
	cmp r2, r0
	blt _0808314C
_08083160:
	bl sub_8082F18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083170: .4byte 0x020168E8
_08083174: .4byte 0x020168F0
_08083178: .4byte 0x02016924
_0808317C: .4byte 0x020168EC

	thumb_func_start sub_8083180
sub_8083180: @ 0x08083180
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r0, #0
	mov sl, r0
	movs r7, #0
	bl sub_8082F18
	ldr r4, _08083218 @ =0x020168F0
	ldr r0, [r4]
	ldr r5, _0808321C @ =0x02016924
	adds r0, r0, r5
	ldr r1, _08083220 @ =0x020169C4
	ldrh r1, [r1, #6]
	bl sub_8083078
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r2, #0
	ldr r0, [r4]
	cmp sl, r0
	bge _080831CA
	mov r8, r5
	ldr r5, _08083224 @ =0x020168EC
_080831B4:
	mov r1, r8
	adds r0, r2, r1
	ldrb r6, [r0]
	subs r1, r6, r3
	ldrb r6, [r5]
	ands r1, r6
	strb r1, [r0]
	adds r2, #1
	ldr r0, [r4]
	cmp r2, r0
	blt _080831B4
_080831CA:
	ldr r0, _08083220 @ =0x020169C4
	movs r1, #0
	strh r1, [r0]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	ldr r1, _0808321C @ =0x02016924
	ldr r2, _08083228 @ =0x020168E8
	mov sb, r2
	mov r8, r0
	mov r0, sl
	adds r6, r0, r1
_080831E0:
	adds r0, r7, #0
	movs r1, #3
	bl __modsi3
	adds r5, r0, #0
	cmp r5, #0
	bne _0808322C
	ldrb r4, [r6]
	mov r2, sb
	ldr r1, [r2]
	adds r0, r7, #0
	bl __modsi3
	asrs r4, r0
	movs r0, #1
	ands r4, r0
	adds r0, r7, #0
	movs r1, #3
	bl __divsi3
	lsls r4, r0
	mov r0, r8
	ldrh r0, [r0]
	orrs r4, r0
	mov r1, r8
	strh r4, [r1]
	b _0808327C
	.align 2, 0
_08083218: .4byte 0x020168F0
_0808321C: .4byte 0x02016924
_08083220: .4byte 0x020169C4
_08083224: .4byte 0x020168EC
_08083228: .4byte 0x020168E8
_0808322C:
	cmp r5, #1
	bne _08083256
	ldrb r4, [r6]
	mov r2, sb
	ldr r1, [r2]
	adds r0, r7, #0
	bl __modsi3
	asrs r4, r0
	ands r4, r5
	adds r0, r7, #0
	movs r1, #3
	bl __divsi3
	lsls r4, r0
	mov r0, r8
	ldrh r0, [r0, #2]
	orrs r4, r0
	mov r1, r8
	strh r4, [r1, #2]
	b _0808327C
_08083256:
	ldrb r4, [r6]
	mov r2, sb
	ldr r1, [r2]
	adds r0, r7, #0
	bl __modsi3
	asrs r4, r0
	movs r0, #1
	ands r4, r0
	adds r0, r7, #0
	movs r1, #3
	bl __divsi3
	lsls r4, r0
	mov r0, r8
	ldrh r0, [r0, #4]
	orrs r4, r0
	mov r1, r8
	strh r4, [r1, #4]
_0808327C:
	adds r7, #1
	mov r2, sb
	ldr r1, [r2]
	adds r0, r7, #0
	bl __modsi3
	cmp r0, #0
	bne _0808328E
	adds r6, #1
_0808328E:
	cmp r7, #0x1c
	bne _080831E0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80832A0
sub_80832A0: @ 0x080832A0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r3, r0, #0
	movs r0, #0
	str r0, [sp]
	ldr r6, _0808335C @ =0x02016924
	ldr r5, _08083360 @ =0x020168F0
	adds r2, r6, #0
	movs r1, #0
	adds r0, r6, #0
	adds r0, #0x9f
_080832B6:
	strb r1, [r0]
	subs r0, #1
	cmp r0, r2
	bge _080832B6
	ldr r1, [r5]
	adds r1, r1, r6
	mov r0, sp
	bl _call_via_r3
	ldr r0, [sp]
	bl sub_8082EC0
	ldr r4, _08083364 @ =0x020169C4
	strh r0, [r4, #6]
	ldr r0, [r5]
	adds r0, r0, r6
	ldrh r1, [r4, #6]
	bl sub_8083078
	strh r0, [r4, #2]
	bl GetGameTime
	lsrs r0, r0, #3
	ldrh r1, [r4, #2]
	adds r0, r1, r0
	ldr r1, _08083368 @ =0x000003FF
	ands r0, r1
	strh r0, [r4]
	ldr r1, _0808336C @ =0x02016920
	ldrh r0, [r4]
	str r0, [r1]
	bl sub_8082EEC
	ldrh r2, [r4, #2]
	adds r0, r0, r2
	ldr r2, _08083370 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	strh r0, [r4, #2]
	movs r5, #0
	ldrh r4, [r4, #6]
	cmp r5, r4
	bge _08083330
	adds r4, r6, #0
_0808330E:
	bl sub_8082EEC
	ldr r1, _08083360 @ =0x020168F0
	ldr r2, [r1]
	adds r2, r5, r2
	adds r2, r2, r4
	ldrb r1, [r2]
	adds r0, r1, r0
	ldr r1, _08083374 @ =0x020168EC
	ldrb r1, [r1]
	ands r0, r1
	strb r0, [r2]
	adds r5, #1
	ldr r0, _08083364 @ =0x020169C4
	ldrh r0, [r0, #6]
	cmp r5, r0
	blt _0808330E
_08083330:
	ldr r0, _08083360 @ =0x020168F0
	ldr r0, [r0]
	ldr r1, _0808335C @ =0x02016924
	adds r0, r0, r1
	ldr r5, _08083364 @ =0x020169C4
	ldrh r1, [r5, #6]
	bl sub_8083078
	adds r4, r0, #0
	bl sub_8082EEC
	adds r4, r4, r0
	ldr r2, _08083370 @ =0x000001FF
	adds r0, r2, #0
	ands r4, r0
	strh r4, [r5, #4]
	bl sub_80830AC
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808335C: .4byte 0x02016924
_08083360: .4byte 0x020168F0
_08083364: .4byte 0x020169C4
_08083368: .4byte 0x000003FF
_0808336C: .4byte 0x02016920
_08083370: .4byte 0x000001FF
_08083374: .4byte 0x020168EC

	thumb_func_start sub_8083378
sub_8083378: @ 0x08083378
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	mov sb, r0
	movs r0, #0
	str r0, [sp, #4]
	bl sub_8083180
	ldr r1, _08083424 @ =0x02016920
	ldr r4, _08083428 @ =0x020169C4
	ldrh r0, [r4]
	str r0, [r1]
	ldr r0, _0808342C @ =0x020168F0
	ldr r0, [r0]
	ldr r7, _08083430 @ =0x02016924
	adds r0, r0, r7
	ldrh r1, [r4, #6]
	bl sub_8083078
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	bl sub_8082EEC
	mov r1, sp
	strh r0, [r1]
	movs r5, #0
	add r0, sp, #4
	mov r8, r0
	ldrh r4, [r4, #6]
	cmp r5, r4
	bge _080833DE
	adds r4, r7, #0
_080833BC:
	bl sub_8082EEC
	ldr r1, _0808342C @ =0x020168F0
	ldr r2, [r1]
	adds r2, r5, r2
	adds r2, r2, r4
	ldrb r1, [r2]
	subs r0, r1, r0
	ldr r1, _08083434 @ =0x020168EC
	ldrb r1, [r1]
	ands r0, r1
	strb r0, [r2]
	adds r5, #1
	ldr r0, _08083428 @ =0x020169C4
	ldrh r0, [r0, #6]
	cmp r5, r0
	blt _080833BC
_080833DE:
	bl sub_8082EEC
	mov r1, sp
	strh r0, [r1, #2]
	ldr r5, _0808342C @ =0x020168F0
	ldr r1, [r5]
	ldr r4, _08083430 @ =0x02016924
	adds r1, r1, r4
	mov r0, r8
	bl _call_via_r9
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r4, _08083428 @ =0x020169C4
	ldrh r1, [r4, #6]
	bl sub_8083078
	mov r1, sp
	ldrh r1, [r1]
	adds r0, r1, r0
	ldr r1, _08083438 @ =0x000001FF
	adds r2, r1, #0
	ands r0, r2
	mov r1, sp
	ldrh r1, [r1, #2]
	adds r6, r6, r1
	ands r6, r2
	ldrh r1, [r4, #2]
	cmp r1, r0
	bne _08083420
	ldrh r4, [r4, #4]
	cmp r4, r6
	beq _0808343C
_08083420:
	movs r0, #0
	b _0808343E
	.align 2, 0
_08083424: .4byte 0x02016920
_08083428: .4byte 0x020169C4
_0808342C: .4byte 0x020168F0
_08083430: .4byte 0x02016924
_08083434: .4byte 0x020168EC
_08083438: .4byte 0x000001FF
_0808343C:
	movs r0, #1
_0808343E:
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_808344C
sub_808344C: @ 0x0808344C
	adds r3, r0, #0
	movs r2, #0
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	beq _08083472
	ldrh r3, [r3]
_0808345A:
	ldrh r0, [r1]
	cmp r0, r3
	bne _08083466
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	b _08083474
_08083466:
	adds r1, #2
	adds r2, #1
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	bne _0808345A
_08083472:
	ldr r0, _08083478 @ =0x0000FFFF
_08083474:
	bx lr
	.align 2, 0
_08083478: .4byte 0x0000FFFF

	thumb_func_start sub_808347C
sub_808347C: @ 0x0808347C
	push {r4, r5, r6, lr}
	adds r2, r0, #0
	adds r6, r1, #0
	movs r5, #0
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #0
	beq _080834A8
	adds r4, r2, #0
_0808348E:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_808344C
	ldr r1, _080834B0 @ =0x02016924
	adds r1, r5, r1
	strb r0, [r1]
	adds r4, #2
	adds r5, #1
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _0808348E
_080834A8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080834B0: .4byte 0x02016924

	thumb_func_start sub_80834B4
sub_80834B4: @ 0x080834B4
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, _08083570 @ =0x02016920
	ldr r0, _08083574 @ =0x020168F4
	ldr r0, [r0]
	str r0, [r1]
	ldr r6, _08083578 @ =0x030048C0
	ldrb r2, [r6, #0x11]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #1
	bl sub_8082F54
	bl sub_808F30C
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0x10
	bl sub_8082F54
	bl sub_808F470
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0x10
	bl sub_8082F54
	bl sub_808F4F0
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #7
	bl sub_8082F54
	bl sub_808F59C
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0xc
	bl sub_8082F54
	bl sub_8017104
	adds r2, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0x18
	bl sub_8082F54
	bl sub_808F648
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0xc
	bl sub_8082F54
	ldrb r2, [r6, #0xe]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #0xa
	bl sub_8082F54
	ldrb r2, [r6, #0xf]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #6
	bl sub_8082F54
	ldrb r2, [r6, #0x10]
	adds r0, r4, #0
	adds r1, r5, #0
	movs r3, #6
	bl sub_8082F54
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08083570: .4byte 0x02016920
_08083574: .4byte 0x020168F4
_08083578: .4byte 0x030048C0

	thumb_func_start sub_808357C
sub_808357C: @ 0x0808357C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	ldr r1, _0808360C @ =0x02016920
	ldr r0, _08083610 @ =0x020168F4
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #1
	bl sub_8082FE8
	ldr r4, _08083614 @ =0x030048C0
	strb r0, [r4, #0x11]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0x10
	bl sub_8082FE8
	strh r0, [r4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0x10
	bl sub_8082FE8
	strh r0, [r4, #2]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #7
	bl sub_8082FE8
	strh r0, [r4, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0xc
	bl sub_8082FE8
	strh r0, [r4, #6]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0x18
	bl sub_8082FE8
	str r0, [r4, #8]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0xc
	bl sub_8082FE8
	strh r0, [r4, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0xa
	bl sub_8082FE8
	strb r0, [r4, #0xe]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #6
	bl sub_8082FE8
	strb r0, [r4, #0xf]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #6
	bl sub_8082FE8
	strb r0, [r4, #0x10]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808360C: .4byte 0x02016920
_08083610: .4byte 0x020168F4
_08083614: .4byte 0x030048C0

	thumb_func_start sub_8083618
sub_8083618: @ 0x08083618
	push {r4, lr}
	sub sp, #0xc
	bl sub_808F30C
	ldr r4, _08083654 @ =0x030048C0
	strh r0, [r4]
	bl sub_808F470
	strh r0, [r4, #2]
	bl sub_808F4F0
	strh r0, [r4, #4]
	bl sub_808F59C
	strh r0, [r4, #6]
	bl sub_8017104
	str r0, [r4, #8]
	bl sub_808F648
	strh r0, [r4, #0xc]
	ldr r1, _08083658 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0808365C
	movs r0, #1
	b _0808365E
	.align 2, 0
_08083654: .4byte 0x030048C0
_08083658: .4byte gPlaySt
_0808365C:
	movs r0, #0
_0808365E:
	strb r0, [r4, #0x11]
	bl sub_808EC1C
	add r2, sp, #4
	add r3, sp, #8
	mov r1, sp
	bl FormatTime
	ldr r1, _08083684 @ =0x030048C0
	ldr r0, [sp]
	strb r0, [r1, #0xe]
	ldr r0, [sp, #4]
	strb r0, [r1, #0xf]
	ldr r0, [sp, #8]
	strb r0, [r1, #0x10]
	add sp, #0xc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08083684: .4byte 0x030048C0

	thumb_func_start sub_8083688
sub_8083688: @ 0x08083688
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	str r0, [sp, #0xc]
	mov r8, r1
	add r1, sp, #8
	movs r0, #0
	strb r0, [r1, #2]
	movs r0, #4
	bl EnableBgSync
	movs r0, #0
	str r0, [sp, #0x10]
	add r7, sp, #8
	movs r1, #0xe0
	lsls r1, r1, #1
	mov sl, r1
	mov sb, r0
	movs r6, #0
_080836B4:
	ldr r2, [sp, #0xc]
	adds r0, r2, r6
	bl ClearText
	movs r5, #2
	bl InitTalkTextFont
	movs r4, #0
_080836C4:
	mov r0, sb
	adds r2, r0, r4
	ldr r1, _08083740 @ =0x020169C4
	ldr r0, _08083744 @ =0x020168F0
	ldr r0, [r0]
	ldrh r1, [r1, #6]
	adds r0, r1, r0
	cmp r2, r0
	beq _08083730
	ldr r1, _08083748 @ =0x02016924
	adds r1, r2, r1
	ldrb r2, [r1]
	lsls r0, r2, #1
	add r0, r8
	ldrb r0, [r0]
	strb r0, [r7]
	ldrb r1, [r1]
	lsls r0, r1, #1
	add r0, r8
	ldrb r0, [r0, #1]
	strb r0, [r7, #1]
	movs r0, #0
	str r0, [sp]
	add r1, sp, #8
	str r1, [sp, #4]
	ldr r2, [sp, #0xc]
	adds r0, r2, r6
	ldr r1, _0808374C @ =gBg2Tm+0x8
	add r1, sl
	movs r2, #1
	adds r3, r5, #0
	bl PutDrawText
	adds r5, #0xb
	adds r4, #1
	adds r0, r4, #0
	movs r1, #5
	bl __modsi3
	cmp r0, #0
	bne _08083718
	adds r5, #0xb
_08083718:
	cmp r4, #0xd
	ble _080836C4
	movs r0, #0xc0
	add sl, r0
	movs r1, #0xe
	add sb, r1
	adds r6, #8
	ldr r2, [sp, #0x10]
	adds r2, #1
	str r2, [sp, #0x10]
	cmp r2, #2
	ble _080836B4
_08083730:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083740: .4byte 0x020169C4
_08083744: .4byte 0x020168F0
_08083748: .4byte 0x02016924
_0808374C: .4byte gBg2Tm+0x8

	thumb_func_start sub_8083750
sub_8083750: @ 0x08083750
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	adds r5, r0, #0
	lsls r4, r5, #6
	ldr r0, _080837C0 @ =gBg2Tm+0x4
	mov r8, r0
	adds r0, r4, r0
	ldr r6, _080837C4 @ =0x030048C0
	ldrh r2, [r6]
	movs r1, #2
	bl PutNumberOrBlank
	mov r0, r8
	adds r0, #8
	adds r0, r4, r0
	ldrh r2, [r6, #2]
	movs r1, #2
	bl PutNumberOrBlank
	mov r0, r8
	adds r0, #0x10
	adds r0, r4, r0
	ldrh r2, [r6, #4]
	movs r1, #2
	bl PutNumberOrBlank
	mov r0, r8
	adds r0, #0x18
	adds r0, r4, r0
	ldrh r2, [r6, #6]
	movs r1, #2
	bl PutNumberOrBlank
	movs r1, #0x28
	add r8, r1
	add r4, r8
	ldrh r2, [r6, #0xc]
	adds r0, r4, #0
	movs r1, #2
	bl PutNumberOrBlank
	adds r5, #2
	lsls r5, r5, #6
	add r5, r8
	ldr r2, [r6, #8]
	adds r0, r5, #0
	movs r1, #2
	bl PutNumberOrBlank
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080837C0: .4byte gBg2Tm+0x4
_080837C4: .4byte 0x030048C0

	thumb_func_start sub_80837C8
sub_80837C8: @ 0x080837C8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	movs r0, #0
	bl InitBgs
	bl ResetTextFont
	bl ResetText
	movs r0, #0
	strh r0, [r6, #0x2a]
	ldr r4, _080838DC @ =gDispIo
	movs r2, #1
	ldrb r0, [r4, #1]
	orrs r0, r2
	movs r3, #2
	orrs r0, r3
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r4, #1]
	adds r1, #0xd
	adds r0, r1, #0
	ldrb r5, [r4, #0xc]
	ands r0, r5
	orrs r0, r2
	strb r0, [r4, #0xc]
	adds r0, r1, #0
	ldrb r2, [r4, #0x10]
	ands r0, r2
	orrs r0, r3
	strb r0, [r4, #0x10]
	ldrb r5, [r4, #0x14]
	ands r1, r5
	strb r1, [r4, #0x14]
	movs r0, #3
	ldrb r1, [r4, #0x18]
	orrs r0, r1
	strb r0, [r4, #0x18]
	bl LoadUiFrameGraphics
	bl EnablePalSync
	ldr r0, _080838E0 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080838E4 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080838E8 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080838EC @ =gBg3Tm
	movs r1, #0
	bl TmFill
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r2, [r4, #1]
	ands r0, r2
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r4, #1]
	movs r0, #2
	str r0, [sp]
	movs r1, #6
	movs r2, #0x1a
	movs r3, #7
	bl sub_8041358
	movs r0, #0xf
	bl EnableBgSync
	ldr r5, _080838F0 @ =0x020168F8
	movs r4, #2
_0808389C:
	adds r0, r5, #0
	movs r1, #0x1b
	bl InitText
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0808389C
	bl sub_8083618
	movs r0, #5
	movs r1, #0xb
	bl sub_8082E74
	ldr r0, _080838F4 @ =sub_80834B4
	bl sub_80832A0
	ldr r0, _080838F0 @ =0x020168F8
	ldr r1, _080838F8 @ =gUnk_0867978C
	bl sub_8083688
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_806EA24
	str r0, [r6, #0x44]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080838DC: .4byte gDispIo
_080838E0: .4byte gBg0Tm
_080838E4: .4byte gBg1Tm
_080838E8: .4byte gBg2Tm
_080838EC: .4byte gBg3Tm
_080838F0: .4byte 0x020168F8
_080838F4: .4byte sub_80834B4
_080838F8: .4byte gUnk_0867978C

	thumb_func_start nullsub_42
nullsub_42: @ 0x080838FC
	bx lr
	.align 2, 0

	thumb_func_start sub_8083900
sub_8083900: @ 0x08083900
	push {lr}
	ldr r0, [r0, #0x44]
	bl Proc_End
	ldr r2, _0808392C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	pop {r0}
	bx r0
	.align 2, 0
_0808392C: .4byte gDispIo

	thumb_func_start sub_8083930
sub_8083930: @ 0x08083930
	push {lr}
	adds r1, r0, #0
	ldr r0, _08083940 @ =gUnk_086797D0
	bl SpawnProcLocking
	pop {r1}
	bx r1
	.align 2, 0
_08083940: .4byte gUnk_086797D0

	thumb_func_start sub_8083944
sub_8083944: @ 0x08083944
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	adds r7, r1, #0
	ldr r0, _08083A54 @ =0x02016920
	ldr r1, _08083A58 @ =0x020168F4
	ldr r1, [r1]
	str r1, [r0]
	ldr r0, _08083A5C @ =0x0203D4A0
	mov sl, r0
	movs r1, #0
	mov sb, r1
	mov r6, sl
_08083964:
	ldrb r2, [r6]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #8
	bl sub_8082F54
	ldrb r2, [r6, #1]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #1
	bl sub_8082F54
	ldrb r2, [r6, #2]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #3]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #6
	bl sub_8082F54
	ldrb r2, [r6, #4]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #5]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #6]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #7]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #8]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #9]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	ldrb r2, [r6, #0xa]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #5
	bl sub_8082F54
	mov r0, sl
	adds r0, #0xb
	mov r1, sb
	adds r4, r1, r0
	movs r5, #7
_080839F2:
	ldrb r2, [r4]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #3
	bl sub_8082F54
	adds r4, #1
	subs r5, #1
	cmp r5, #0
	bge _080839F2
	ldr r4, _08083A60 @ =0x0203D4B3
	add r4, sb
	movs r5, #4
_08083A0C:
	ldrb r2, [r4]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #8
	bl sub_8082F54
	adds r4, #1
	subs r5, #1
	cmp r5, #0
	bge _08083A0C
	movs r0, #0x18
	add sb, r0
	adds r6, #0x18
	mov r0, sl
	adds r0, #0x60
	cmp r6, r0
	ble _08083964
	movs r4, #0
	ldr r5, _08083A64 @ =0x0203D518
_08083A32:
	adds r0, r4, r5
	ldrb r2, [r0]
	adds r0, r7, #0
	mov r1, r8
	movs r3, #2
	bl sub_8082F54
	adds r4, #1
	cmp r4, #9
	ble _08083A32
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083A54: .4byte 0x02016920
_08083A58: .4byte 0x020168F4
_08083A5C: .4byte 0x0203D4A0
_08083A60: .4byte 0x0203D4B3
_08083A64: .4byte 0x0203D518

	thumb_func_start sub_8083A68
sub_8083A68: @ 0x08083A68
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	adds r7, r1, #0
	ldr r0, _08083B78 @ =0x02016920
	ldr r1, _08083B7C @ =0x020168F4
	ldr r1, [r1]
	str r1, [r0]
	ldr r0, _08083B80 @ =0x0203D4A0
	mov sl, r0
	movs r1, #0
	mov sb, r1
	mov r6, sl
_08083A88:
	adds r0, r7, #0
	mov r1, r8
	movs r2, #8
	bl sub_8082FE8
	strb r0, [r6]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #1
	bl sub_8082FE8
	strb r0, [r6, #1]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #2]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #6
	bl sub_8082FE8
	strb r0, [r6, #3]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #4]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #5]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #6]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #7]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #8]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #9]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #5
	bl sub_8082FE8
	strb r0, [r6, #0xa]
	mov r0, sl
	adds r0, #0xb
	mov r1, sb
	adds r4, r1, r0
	movs r5, #7
_08083B16:
	adds r0, r7, #0
	mov r1, r8
	movs r2, #3
	bl sub_8082FE8
	strb r0, [r4]
	adds r4, #1
	subs r5, #1
	cmp r5, #0
	bge _08083B16
	ldr r4, _08083B84 @ =0x0203D4B3
	add r4, sb
	movs r5, #4
_08083B30:
	adds r0, r7, #0
	mov r1, r8
	movs r2, #8
	bl sub_8082FE8
	strb r0, [r4]
	adds r4, #1
	subs r5, #1
	cmp r5, #0
	bge _08083B30
	movs r0, #0x18
	add sb, r0
	adds r6, #0x18
	mov r0, sl
	adds r0, #0x60
	cmp r6, r0
	ble _08083A88
	movs r4, #0
	ldr r5, _08083B88 @ =0x0203D518
_08083B56:
	adds r0, r7, #0
	mov r1, r8
	movs r2, #2
	bl sub_8082FE8
	adds r1, r4, r5
	strb r0, [r1]
	adds r4, #1
	cmp r4, #9
	ble _08083B56
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083B78: .4byte 0x02016920
_08083B7C: .4byte 0x020168F4
_08083B80: .4byte 0x0203D4A0
_08083B84: .4byte 0x0203D4B3
_08083B88: .4byte 0x0203D518

	thumb_func_start sub_8083B8C
sub_8083B8C: @ 0x08083B8C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	movs r1, #0
	movs r0, #0
_08083B96:
	adds r3, r0, #1
	adds r2, r3, #0
	cmp r3, #4
	bgt _08083BB4
_08083B9E:
	cmp r0, r5
	bne _08083BAC
	cmp r2, r4
	bne _08083BAC
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	b _08083BBC
_08083BAC:
	adds r1, #1
	adds r2, #1
	cmp r2, #4
	ble _08083B9E
_08083BB4:
	adds r0, r3, #0
	cmp r0, #4
	ble _08083B96
	movs r0, #0
_08083BBC:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8083BC4
sub_8083BC4: @ 0x08083BC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	str r0, [sp]
	str r1, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	cmp r0, r1
	bge _08083CD8
	ldr r1, _08083E60 @ =0x0203D4A0
	mov sl, r1
	movs r3, #0x1f
	mov sb, r0
	ldr r5, [sp]
	str r0, [sp, #0x10]
	mov r7, sl
_08083BEA:
	ldr r0, [r5]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	strb r0, [r7]
	ldr r0, [r5]
	ldr r1, [r0]
	ldr r2, [r0, #4]
	ldr r0, [r1, #0x28]
	ldr r1, [r2, #0x24]
	orrs r0, r1
	lsrs r0, r0, #8
	movs r1, #1
	ands r0, r1
	strb r0, [r7, #1]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #8]
	ands r0, r1
	strb r0, [r7, #2]
	ldr r1, [r5]
	movs r0, #0x3f
	ldrb r1, [r1, #0x10]
	ands r0, r1
	strb r0, [r7, #3]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x12]
	ands r0, r1
	strb r0, [r7, #4]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x13]
	ands r0, r1
	strb r0, [r7, #5]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x14]
	ands r0, r1
	strb r0, [r7, #6]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x15]
	ands r0, r1
	strb r0, [r7, #7]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x16]
	ands r0, r1
	strb r0, [r7, #8]
	ldr r1, [r5]
	adds r0, r3, #0
	ldrb r1, [r1, #0x17]
	ands r0, r1
	strb r0, [r7, #9]
	ldr r1, [r5]
	ldr r2, [r1, #4]
	ldr r0, [r1]
	ldrb r2, [r2, #0x11]
	ldrb r0, [r0, #0x13]
	adds r0, r2, r0
	ldrb r1, [r1, #0x18]
	adds r0, r1, r0
	movs r1, #0x1f
	ands r0, r1
	strb r0, [r7, #0xa]
	movs r6, #0
	ldr r0, [sp, #0x10]
	mov r8, r0
	mov r0, sl
	adds r0, #0xb
	mov r1, sb
	adds r4, r1, r0
_08083C7A:
	ldr r0, [r5]
	adds r0, #0x26
	adds r0, r0, r6
	ldrb r0, [r0]
	str r3, [sp, #0x18]
	bl GetWeaponLevelFromExp
	movs r1, #7
	ands r0, r1
	strb r0, [r4]
	adds r4, #1
	adds r6, #1
	ldr r3, [sp, #0x18]
	cmp r6, #7
	ble _08083C7A
	movs r6, #0
	ldr r4, _08083E64 @ =0x0203D4B3
	add r4, sb
_08083C9E:
	ldr r0, [sp]
	add r0, r8
	ldr r0, [r0]
	lsls r1, r6, #1
	adds r0, #0x1c
	adds r0, r0, r1
	ldrh r0, [r0]
	str r3, [sp, #0x18]
	bl GetItemIid
	strb r0, [r4]
	adds r4, #1
	adds r6, #1
	ldr r3, [sp, #0x18]
	cmp r6, #4
	ble _08083C9E
	movs r0, #0x18
	add sb, r0
	adds r5, #4
	ldr r1, [sp, #0x10]
	adds r1, #4
	str r1, [sp, #0x10]
	adds r7, #0x18
	ldr r0, [sp, #8]
	adds r0, #1
	str r0, [sp, #8]
	ldr r1, [sp, #4]
	cmp r0, r1
	blt _08083BEA
_08083CD8:
	ldr r4, _08083E68 @ =0x02016920
	bl GetGameTime
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	str r0, [r4]
	ldr r0, [sp, #8]
	cmp r0, #4
	bgt _08083DA6
	ldr r1, _08083E60 @ =0x0203D4A0
	mov sl, r1
	movs r0, #0x1f
	mov r8, r0
	ldr r1, [sp, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	mov sb, r0
	mov r5, sb
	add r5, sl
_08083D00:
	movs r0, #0
	strb r0, [r5]
	bl sub_8082EEC
	movs r1, #1
	ands r1, r0
	strb r1, [r5, #1]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #2]
	bl sub_8082EEC
	movs r1, #0x3f
	ands r1, r0
	strb r1, [r5, #3]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #4]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #5]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #6]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #7]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #8]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #9]
	bl sub_8082EEC
	mov r1, r8
	ands r0, r1
	strb r0, [r5, #0xa]
	mov r0, sl
	adds r0, #0xb
	mov r1, sb
	adds r4, r1, r0
	movs r7, #7
	movs r6, #7
_08083D74:
	bl sub_8082EEC
	ands r0, r7
	strb r0, [r4]
	adds r4, #1
	subs r6, #1
	cmp r6, #0
	bge _08083D74
	ldr r4, _08083E64 @ =0x0203D4B3
	add r4, sb
	movs r6, #4
_08083D8A:
	bl sub_8082EEC
	strb r0, [r4]
	adds r4, #1
	subs r6, #1
	cmp r6, #0
	bge _08083D8A
	movs r0, #0x18
	add sb, r0
	adds r5, #0x18
	mov r0, sl
	adds r0, #0x60
	cmp r5, r0
	ble _08083D00
_08083DA6:
	ldr r1, _08083E6C @ =0x0203D518
	movs r2, #0
	adds r0, r1, #0
	adds r0, #9
_08083DAE:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _08083DAE
	movs r1, #0
	str r1, [sp, #8]
	ldr r0, [sp, #4]
	cmp r1, r0
	bge _08083E50
_08083DC0:
	ldr r1, [sp, #8]
	lsls r0, r1, #2
	ldr r1, [sp]
	adds r4, r0, r1
	ldr r0, [r4]
	bl GetUnitSupportCount
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	movs r6, #0
	ldr r2, [sp, #8]
	adds r2, #1
	cmp r6, r0
	bge _08083E48
	mov r8, r4
_08083DE0:
	mov r1, r8
	ldr r0, [r1]
	adds r1, r6, #0
	str r2, [sp, #0x14]
	bl GetUnitSupportPid
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r2, [sp, #0x14]
	adds r5, r2, #0
	adds r0, r6, #1
	mov sl, r0
	ldr r1, [sp, #4]
	cmp r2, r1
	bge _08083E40
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #3
	ldr r1, _08083E60 @ =0x0203D4A0
	adds r7, r0, r1
_08083E0A:
	ldrb r0, [r7]
	cmp r0, sb
	bne _08083E36
	ldr r0, [sp, #8]
	adds r1, r5, #0
	str r2, [sp, #0x14]
	bl sub_8083B8C
	adds r4, r0, #0
	mov r1, r8
	ldr r0, [r1]
	adds r1, r6, #0
	bl GetUnitSupportLevel
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r1, _08083E6C @ =0x0203D518
	adds r4, r4, r1
	movs r1, #3
	ands r0, r1
	strb r0, [r4]
	ldr r2, [sp, #0x14]
_08083E36:
	adds r7, #0x18
	adds r5, #1
	ldr r0, [sp, #4]
	cmp r5, r0
	blt _08083E0A
_08083E40:
	mov r6, sl
	ldr r1, [sp, #0xc]
	cmp r6, r1
	blt _08083DE0
_08083E48:
	str r2, [sp, #8]
	ldr r0, [sp, #4]
	cmp r2, r0
	blt _08083DC0
_08083E50:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083E60: .4byte 0x0203D4A0
_08083E64: .4byte 0x0203D4B3
_08083E68: .4byte 0x02016920
_08083E6C: .4byte 0x0203D518

	thumb_func_start sub_8083E70
sub_8083E70: @ 0x08083E70
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r0
	str r1, [sp, #0xc]
	add r1, sp, #8
	movs r0, #0
	strb r0, [r1, #2]
	movs r0, #4
	bl EnableBgSync
	bl InitTalkTextFont
	movs r0, #0
	str r0, [sp, #0x10]
	add r7, sp, #8
	movs r1, #0xc0
	mov sb, r1
	mov r8, r0
	movs r6, #0
_08083E9E:
	mov r1, sl
	adds r0, r1, r6
	bl ClearText
	movs r5, #0
	movs r4, #0
_08083EAA:
	mov r0, r8
	adds r2, r0, r4
	ldr r1, _08083F30 @ =0x020169C4
	ldr r0, _08083F34 @ =0x020168F0
	ldr r0, [r0]
	ldrh r1, [r1, #6]
	adds r0, r1, r0
	cmp r2, r0
	beq _08083F1E
	ldr r0, _08083F38 @ =0x02016924
	adds r0, r2, r0
	ldrb r0, [r0]
	lsls r1, r0, #1
	ldr r0, [sp, #0xc]
	adds r1, r0, r1
	ldrb r0, [r1]
	strb r0, [r7]
	ldrb r0, [r1, #1]
	strb r0, [r7, #1]
	movs r1, #0
	str r1, [sp]
	add r0, sp, #8
	str r0, [sp, #4]
	mov r1, sl
	adds r0, r1, r6
	ldr r1, _08083F3C @ =gBg2Tm+0x4
	add r1, sb
	movs r2, #1
	adds r3, r5, #0
	bl PutDrawText
	adds r5, #0xa
	adds r4, #1
	adds r0, r4, #0
	movs r1, #6
	bl __modsi3
	cmp r0, #0
	bne _08083F06
	adds r0, r4, #0
	movs r1, #6
	bl __divsi3
	cmp r0, #2
	bgt _08083F06
	adds r5, #0xa
_08083F06:
	cmp r4, #0x12
	ble _08083EAA
	movs r0, #0xc0
	add sb, r0
	movs r1, #0x13
	add r8, r1
	adds r6, #8
	ldr r0, [sp, #0x10]
	adds r0, #1
	str r0, [sp, #0x10]
	cmp r0, #4
	ble _08083E9E
_08083F1E:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083F30: .4byte 0x020169C4
_08083F34: .4byte 0x020168F0
_08083F38: .4byte 0x02016924
_08083F3C: .4byte gBg2Tm+0x4

	thumb_func_start sub_8083F40
sub_8083F40: @ 0x08083F40
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	lsls r4, r4, #6
	ldr r6, _08083FE8 @ =gBg2Tm+0x4
	adds r0, r4, r6
	ldr r5, _08083FEC @ =0x0203D4A0
	ldrb r2, [r5]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #4
	adds r0, r4, r0
	ldrb r2, [r5, #1]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0xa
	adds r0, r4, r0
	ldrb r2, [r5, #2]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x10
	adds r0, r4, r0
	ldrb r2, [r5, #3]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x16
	adds r0, r4, r0
	ldrb r2, [r5, #4]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r4, r0
	ldrb r2, [r5, #5]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x22
	adds r0, r4, r0
	ldrb r2, [r5, #6]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x28
	adds r0, r4, r0
	ldrb r2, [r5, #7]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x2e
	adds r0, r4, r0
	ldrb r2, [r5, #8]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r4, r0
	ldrb r2, [r5, #9]
	movs r1, #2
	bl PutNumberOrBlank
	adds r0, r6, #0
	adds r0, #0x3a
	adds r4, r4, r0
	ldrb r2, [r5, #0xa]
	adds r0, r4, #0
	movs r1, #2
	bl PutNumberOrBlank
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08083FE8: .4byte gBg2Tm+0x4
_08083FEC: .4byte 0x0203D4A0

	thumb_func_start sub_8083FF0
sub_8083FF0: @ 0x08083FF0
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	movs r0, #0
	bl InitBgs
	bl ResetTextFont
	bl ResetText
	movs r0, #0
	strh r0, [r6, #0x2a]
	ldr r4, _08084110 @ =gDispIo
	movs r2, #1
	ldrb r0, [r4, #1]
	orrs r0, r2
	movs r3, #2
	orrs r0, r3
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r4, #1]
	adds r1, #0xd
	adds r0, r1, #0
	ldrb r5, [r4, #0xc]
	ands r0, r5
	orrs r0, r2
	strb r0, [r4, #0xc]
	adds r0, r1, #0
	ldrb r2, [r4, #0x10]
	ands r0, r2
	orrs r0, r3
	strb r0, [r4, #0x10]
	ldrb r5, [r4, #0x14]
	ands r1, r5
	strb r1, [r4, #0x14]
	movs r0, #3
	ldrb r1, [r4, #0x18]
	orrs r0, r1
	strb r0, [r4, #0x18]
	bl LoadUiFrameGraphics
	bl EnablePalSync
	ldr r0, _08084114 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08084118 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808411C @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08084120 @ =gBg3Tm
	movs r1, #0
	bl TmFill
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r2, _08084124 @ =0x0000FFF8
	movs r0, #1
	movs r1, #8
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r2, [r4, #1]
	ands r0, r2
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r4, #1]
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	movs r1, #2
	movs r2, #0x1e
	movs r3, #0x10
	bl sub_8041358
	movs r0, #0xf
	bl EnableBgSync
	ldr r5, _08084128 @ =0x020168F8
	movs r4, #4
_080840C6:
	adds r0, r5, #0
	movs r1, #0x1c
	bl InitText
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _080840C6
	adds r0, r6, #0
	adds r0, #0x30
	adds r1, r6, #0
	adds r1, #0x2c
	ldrb r1, [r1]
	bl sub_8083BC4
	movs r0, #7
	movs r1, #0xb
	bl sub_8082E74
	ldr r0, _0808412C @ =sub_8083944
	bl sub_80832A0
	ldr r0, _08084128 @ =0x020168F8
	ldr r1, _08084130 @ =gUnk_08679820
	bl sub_8083E70
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_806EA24
	str r0, [r6, #0x44]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08084110: .4byte gDispIo
_08084114: .4byte gBg0Tm
_08084118: .4byte gBg1Tm
_0808411C: .4byte gBg2Tm
_08084120: .4byte gBg3Tm
_08084124: .4byte 0x0000FFF8
_08084128: .4byte 0x020168F8
_0808412C: .4byte sub_8083944
_08084130: .4byte gUnk_08679820

	thumb_func_start nullsub_43
nullsub_43: @ 0x08084134
	bx lr
	.align 2, 0

	thumb_func_start sub_8084138
sub_8084138: @ 0x08084138
	push {lr}
	ldr r0, [r0, #0x44]
	bl Proc_End
	ldr r2, _08084164 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	pop {r0}
	bx r0
	.align 2, 0
_08084164: .4byte gDispIo

	thumb_func_start sub_8084168
sub_8084168: @ 0x08084168
	push {r4, r5, r6, r7, lr}
	adds r1, r0, #0
	ldr r0, _08084184 @ =gUnk_08679924
	bl SpawnProcLocking
	adds r7, r0, #0
	adds r1, r7, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	movs r4, #0
	adds r6, r1, #0
	b _08084190
	.align 2, 0
_08084184: .4byte gUnk_08679924
_08084188:
	ldrb r0, [r6]
	adds r0, #1
	strb r0, [r6]
	adds r4, r5, #0
_08084190:
	cmp r4, #4
	bgt _080841AC
	adds r5, r4, #1
	adds r0, r5, #0
	bl GetUnit
	lsls r2, r4, #2
	adds r1, r7, #0
	adds r1, #0x30
	adds r1, r1, r2
	str r0, [r1]
	ldr r0, [r0]
	cmp r0, #0
	bne _08084188
_080841AC:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80841B4
sub_80841B4: @ 0x080841B4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080841E8 @ =gUnk_08679924
	bl SpawnProcLocking
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	movs r1, #4
	adds r0, r2, #0
	adds r0, #0x40
_080841CE:
	str r4, [r0]
	subs r0, #4
	subs r1, #1
	cmp r1, #0
	bge _080841CE
	adds r1, r2, #0
	adds r1, #0x2c
	movs r0, #5
	strb r0, [r1]
	adds r0, r2, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080841E8: .4byte gUnk_08679924

	thumb_func_start sub_80841EC
sub_80841EC: @ 0x080841EC
	ldr r0, _080841F4 @ =0x0203D524
	movs r1, #0
	strb r1, [r0]
	bx lr
	.align 2, 0
_080841F4: .4byte 0x0203D524

	thumb_func_start nullsub_44
nullsub_44: @ 0x080841F8
	bx lr
	.align 2, 0

	thumb_func_start sub_80841FC
sub_80841FC: @ 0x080841FC
	push {r4, r5, lr}
	sub sp, #8
	ldr r0, _08084254 @ =0x12345678
	str r0, [sp]
	ldr r0, _08084258 @ =0x87654321
	str r0, [sp, #4]
	bl SetSramFastFunc
	ldr r2, _0808425C @ =0x04000200
	ldrh r0, [r2]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	ldr r5, _08084260 @ =gUnk_08689DD8
	ldr r1, [r5]
	ldr r4, _08084264 @ =0x00006EF4
	adds r1, r1, r4
	mov r0, sp
	movs r2, #4
	bl WriteSramFast
	ldr r2, _08084268 @ =ReadSramFast
	ldr r0, [r5]
	adds r0, r0, r4
	add r1, sp, #4
	ldr r3, [r2]
	movs r2, #4
	bl _call_via_r3
	ldr r3, _0808426C @ =0x0203D52E
	movs r2, #0
	ldr r1, [sp, #4]
	ldr r0, [sp]
	cmp r1, r0
	bne _08084248
	movs r2, #1
_08084248:
	strb r2, [r3]
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08084254: .4byte 0x12345678
_08084258: .4byte 0x87654321
_0808425C: .4byte 0x04000200
_08084260: .4byte gUnk_08689DD8
_08084264: .4byte 0x00006EF4
_08084268: .4byte ReadSramFast
_0808426C: .4byte 0x0203D52E

	thumb_func_start IsSramWorking
IsSramWorking: @ 0x08084270
	ldr r0, _0808427C @ =0x0203D52E
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bx lr
	.align 2, 0
_0808427C: .4byte 0x0203D52E

	thumb_func_start sub_8084280
sub_8084280: @ 0x08084280
	push {r4, r5, r6, lr}
	sub sp, #0x40
	movs r1, #1
	rsbs r1, r1, #0
	add r0, sp, #0x3c
_0808428A:
	str r1, [r0]
	subs r0, #4
	cmp r0, sp
	bge _0808428A
	movs r4, #0
	ldr r6, _080842B4 @ =gUnk_08689DD8
	ldr r5, _080842B8 @ =0x000001FF
_08084298:
	lsls r0, r4, #6
	ldr r1, [r6]
	adds r1, r1, r0
	mov r0, sp
	movs r2, #0x40
	bl WriteAndVerifySramFast
	adds r4, #1
	cmp r4, r5
	ble _08084298
	add sp, #0x40
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080842B4: .4byte gUnk_08689DD8
_080842B8: .4byte 0x000001FF

	thumb_func_start ComputeChecksum16
ComputeChecksum16: @ 0x080842BC
	push {r4, lr}
	adds r2, r0, #0
	movs r3, #0
	movs r4, #0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	cmp r3, r1
	bge _080842DC
_080842CE:
	ldrh r0, [r2]
	adds r3, r3, r0
	eors r4, r0
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _080842CE
_080842DC:
	adds r0, r3, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start LoadGlobalSaveInfo
LoadGlobalSaveInfo: @ 0x080842E8
	push {r4, lr}
	sub sp, #0x20
	adds r4, r0, #0
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084358
	cmp r4, #0
	bne _080842FE
	mov r4, sp
_080842FE:
	ldr r1, _08084344 @ =ReadSramFast
	ldr r0, _08084348 @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r3, [r1]
	adds r1, r4, #0
	movs r2, #0x20
	bl _call_via_r3
	ldr r1, _0808434C @ =gUnk_08327314
	adds r0, r4, #0
	bl StringEquals
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084358
	ldr r1, [r4, #8]
	ldr r0, _08084350 @ =0x00011217
	cmp r1, r0
	bne _08084358
	ldr r0, _08084354 @ =0x0000200A
	ldrh r1, [r4, #0xc]
	cmp r1, r0
	bne _08084358
	adds r0, r4, #0
	movs r1, #0x1c
	bl ComputeChecksum16
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r4, #0x1c]
	cmp r4, r0
	bne _08084358
	movs r0, #1
	b _0808435A
	.align 2, 0
_08084344: .4byte ReadSramFast
_08084348: .4byte gUnk_08689DD8
_0808434C: .4byte gUnk_08327314
_08084350: .4byte 0x00011217
_08084354: .4byte 0x0000200A
_08084358:
	movs r0, #0
_0808435A:
	add sp, #0x20
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start SaveGlobalSaveInfo
SaveGlobalSaveInfo: @ 0x08084364
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0x1c
	bl ComputeChecksum16
	strh r0, [r4, #0x1c]
	ldr r0, _08084384 @ =gUnk_08689DD8
	ldr r1, [r0]
	adds r0, r4, #0
	movs r2, #0x20
	bl WriteAndVerifySramFast
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084384: .4byte gUnk_08689DD8

	thumb_func_start sub_8084388
sub_8084388: @ 0x08084388
	push {lr}
	ldr r1, _08084398 @ =gUnk_08689DD8
	ldr r1, [r1]
	movs r2, #0x20
	bl WriteAndVerifySramFast
	pop {r0}
	bx r0
	.align 2, 0
_08084398: .4byte gUnk_08689DD8

	thumb_func_start sub_808439C
sub_808439C: @ 0x0808439C
	push {lr}
	sub sp, #0x20
	bl sub_8084280
	ldr r1, _08084408 @ =gUnk_08327314
	mov r0, sp
	bl StringCopy
	ldr r0, _0808440C @ =0x00011217
	str r0, [sp, #8]
	mov r1, sp
	movs r3, #0
	ldr r0, _08084410 @ =0x0000200A
	strh r0, [r1, #0xc]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r2, [r1, #0xe]
	ands r0, r2
	strb r0, [r1, #0xe]
	mov r2, sp
	movs r1, #5
	rsbs r1, r1, #0
	ands r1, r0
	strb r1, [r2, #0xe]
	mov r0, sp
	movs r2, #3
	rsbs r2, r2, #0
	ands r2, r1
	strb r2, [r0, #0xe]
	mov r1, sp
	movs r0, #9
	rsbs r0, r0, #0
	ands r0, r2
	strb r0, [r1, #0xe]
	movs r0, #0xf
	ldrh r2, [r1, #0xe]
	ands r0, r2
	strh r0, [r1, #0xe]
	mov r0, sp
	strb r3, [r0, #0x1f]
	strb r3, [r0, #0x1e]
	add r1, sp, #0x10
	movs r2, #0
	adds r0, #0x1b
_080843F4:
	strb r2, [r0]
	subs r0, #1
	cmp r0, r1
	bge _080843F4
	mov r0, sp
	bl SaveGlobalSaveInfo
	add sp, #0x20
	pop {r0}
	bx r0
	.align 2, 0
_08084408: .4byte gUnk_08327314
_0808440C: .4byte 0x00011217
_08084410: .4byte 0x0000200A

	thumb_func_start sub_8084414
sub_8084414: @ 0x08084414
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _08084424 @ =gUnk_08689DD8
	ldr r1, [r1]
	adds r1, r1, r0
	adds r0, r1, #0
	bx lr
	.align 2, 0
_08084424: .4byte gUnk_08689DD8

	thumb_func_start sub_8084428
sub_8084428: @ 0x08084428
	ldr r1, _08084434 @ =gUnk_08689DD8
	ldr r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bx lr
	.align 2, 0
_08084434: .4byte gUnk_08689DD8

	thumb_func_start sub_8084438
sub_8084438: @ 0x08084438
	push {r4, r5, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r5, r1, #0
	cmp r4, #0
	bne _08084446
	mov r4, sp
_08084446:
	ldr r2, _08084474 @ =ReadSramFast
	ldr r0, _08084478 @ =gUnk_08689DD8
	lsls r1, r5, #4
	adds r1, #0x20
	ldr r0, [r0]
	adds r0, r0, r1
	ldr r3, [r2]
	adds r1, r4, #0
	movs r2, #0x10
	bl _call_via_r3
	ldr r0, _0808447C @ =0x0000200A
	ldrh r1, [r4, #4]
	cmp r1, r0
	bne _080844C8
	cmp r5, #6
	bhi _080844C8
	lsls r0, r5, #2
	ldr r1, _08084480 @ =_08084484
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084474: .4byte ReadSramFast
_08084478: .4byte gUnk_08689DD8
_0808447C: .4byte 0x0000200A
_08084480: .4byte _08084484
_08084484: @ jump table
	.4byte _080844A0 @ case 0
	.4byte _080844A0 @ case 1
	.4byte _080844A0 @ case 2
	.4byte _080844A0 @ case 3
	.4byte _080844A0 @ case 4
	.4byte _080844A8 @ case 5
	.4byte _080844B0 @ case 6
_080844A0:
	ldr r1, _080844A4 @ =0x00011217
	b _080844B2
	.align 2, 0
_080844A4: .4byte 0x00011217
_080844A8:
	ldr r1, _080844AC @ =0x00020112
	b _080844B2
	.align 2, 0
_080844AC: .4byte 0x00020112
_080844B0:
	ldr r1, _080844C4 @ =0x00020223
_080844B2:
	ldr r0, [r4]
	cmp r0, r1
	bne _080844C8
	adds r0, r4, #0
	bl sub_8085F74
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _080844CA
	.align 2, 0
_080844C4: .4byte 0x00020223
_080844C8:
	movs r0, #0
_080844CA:
	add sp, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80844D4
sub_80844D4: @ 0x080844D4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	movs r7, #0
	movs r5, #0
	ldr r0, _08084504 @ =0x0000200A
	strh r0, [r4, #4]
	adds r0, r6, #0
	bl sub_8084560
	strh r0, [r4, #8]
	cmp r6, #6
	bgt _08084556
	ldrb r0, [r4, #6]
	cmp r0, #2
	beq _08084524
	cmp r0, #2
	bgt _08084508
	cmp r0, #0
	beq _08084512
	cmp r0, #1
	beq _0808451A
	b _08084556
	.align 2, 0
_08084504: .4byte 0x0000200A
_08084508:
	cmp r0, #3
	beq _08084530
	cmp r0, #0xff
	beq _08084538
	b _08084556
_08084512:
	movs r0, #0xdf
	lsls r0, r0, #4
	strh r0, [r4, #0xa]
	b _0808453E
_0808451A:
	ldr r0, _08084520 @ =0x00001DAC
	strh r0, [r4, #0xa]
	b _0808453E
	.align 2, 0
_08084520: .4byte 0x00001DAC
_08084524:
	ldr r0, _0808452C @ =0x0000093C
	strh r0, [r4, #0xa]
	b _0808453E
	.align 2, 0
_0808452C: .4byte 0x0000093C
_08084530:
	movs r0, #0x80
	lsls r0, r0, #5
	strh r0, [r4, #0xa]
	b _0808453E
_08084538:
	strh r5, [r4, #0xa]
	strh r5, [r4, #8]
	strh r5, [r4, #4]
_0808453E:
	adds r0, r4, #0
	bl sub_8085F98
	ldr r0, _0808455C @ =gUnk_08689DD8
	lsls r2, r6, #4
	adds r2, #0x20
	ldr r1, [r0]
	adds r1, r1, r2
	adds r0, r4, #0
	movs r2, #0x10
	bl WriteAndVerifySramFast
_08084556:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808455C: .4byte gUnk_08689DD8

	thumb_func_start sub_8084560
sub_8084560: @ 0x08084560
	cmp r0, #6
	bhi _08084608
	lsls r0, r0, #2
	ldr r1, _08084570 @ =_08084574
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084570: .4byte _08084574
_08084574: @ jump table
	.4byte _08084590 @ case 0
	.4byte _080845A4 @ case 1
	.4byte _080845B8 @ case 2
	.4byte _080845CC @ case 3
	.4byte _080845D8 @ case 4
	.4byte _080845EC @ case 5
	.4byte _08084600 @ case 6
_08084590:
	ldr r0, _0808459C @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r1, _080845A0 @ =0x00003BE8
	adds r0, r0, r1
	b _0808460A
	.align 2, 0
_0808459C: .4byte gUnk_08689DD8
_080845A0: .4byte 0x00003BE8
_080845A4:
	ldr r0, _080845B0 @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r1, _080845B4 @ =0x000049D8
	adds r0, r0, r1
	b _0808460A
	.align 2, 0
_080845B0: .4byte gUnk_08689DD8
_080845B4: .4byte 0x000049D8
_080845B8:
	ldr r0, _080845C4 @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r1, _080845C8 @ =0x000057C8
	adds r0, r0, r1
	b _0808460A
	.align 2, 0
_080845C4: .4byte gUnk_08689DD8
_080845C8: .4byte 0x000057C8
_080845CC:
	ldr r0, _080845D4 @ =gUnk_08689DD8
	ldr r0, [r0]
	adds r0, #0x90
	b _0808460A
	.align 2, 0
_080845D4: .4byte gUnk_08689DD8
_080845D8:
	ldr r0, _080845E4 @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r1, _080845E8 @ =0x00001E3C
	adds r0, r0, r1
	b _0808460A
	.align 2, 0
_080845E4: .4byte gUnk_08689DD8
_080845E8: .4byte 0x00001E3C
_080845EC:
	ldr r0, _080845F8 @ =gUnk_08689DD8
	ldr r0, [r0]
	ldr r1, _080845FC @ =0x000065B8
	adds r0, r0, r1
	b _0808460A
	.align 2, 0
_080845F8: .4byte gUnk_08689DD8
_080845FC: .4byte 0x000065B8
_08084600:
	ldr r0, _08084604 @ =0x0E007000
	b _0808460A
	.align 2, 0
_08084604: .4byte 0x0E007000
_08084608:
	movs r0, #0
_0808460A:
	bx lr

	thumb_func_start sub_808460C
sub_808460C: @ 0x0808460C
	push {lr}
	sub sp, #0x10
	adds r1, r0, #0
	mov r0, sp
	bl sub_8084438
	mov r0, sp
	ldrh r0, [r0, #8]
	bl sub_8084414
	add sp, #0x10
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8084628
sub_8084628: @ 0x08084628
	push {r4, r5, lr}
	adds r4, r0, #0
	bl GetChapterEidData
	adds r5, r0, #0
	bl sub_806BA9C
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl WriteAndVerifySramFast
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8084648
sub_8084648: @ 0x08084648
	push {r4, r5, lr}
	adds r4, r0, #0
	bl GetGlobalEidData
	adds r5, r0, #0
	bl sub_806BA90
	adds r2, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	bl WriteAndVerifySramFast
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8084668
sub_8084668: @ 0x08084668
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r4, _0808468C @ =ReadSramFast
	bl GetChapterEidData
	adds r5, r0, #0
	bl sub_806BA9C
	adds r2, r0, #0
	ldr r3, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl _call_via_r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808468C: .4byte ReadSramFast

	thumb_func_start sub_8084690
sub_8084690: @ 0x08084690
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r4, _080846B4 @ =ReadSramFast
	bl GetGlobalEidData
	adds r5, r0, #0
	bl sub_806BA90
	adds r2, r0, #0
	ldr r3, [r4]
	adds r0, r6, #0
	adds r1, r5, #0
	bl _call_via_r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080846B4: .4byte ReadSramFast

	thumb_func_start sub_80846B8
sub_80846B8: @ 0x080846B8
	push {r4, lr}
	adds r4, r0, #0
	bl GetSupplyItems
	adds r1, r4, #0
	movs r2, #0xc8
	bl WriteAndVerifySramFast
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80846D0
sub_80846D0: @ 0x080846D0
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, _080846EC @ =ReadSramFast
	bl GetSupplyItems
	adds r1, r0, #0
	ldr r3, [r4]
	adds r0, r5, #0
	movs r2, #0xc8
	bl _call_via_r3
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080846EC: .4byte ReadSramFast

	thumb_func_start sub_80846F0
sub_80846F0: @ 0x080846F0
	push {lr}
	sub sp, #0x20
	mov r0, sp
	bl LoadGlobalSaveInfo
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084704
	movs r0, #0
	b _0808470C
_08084704:
	mov r0, sp
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x1f
	lsrs r0, r0, #0x1f
_0808470C:
	add sp, #0x20
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8084714
sub_8084714: @ 0x08084714
	movs r0, #1
	bx lr

	thumb_func_start sub_8084718
sub_8084718: @ 0x08084718
	push {r4, lr}
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084744
	movs r4, #0
_08084726:
	adds r0, r4, #0
	bl sub_8085290
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084736
	movs r0, #1
	b _08084744
_08084736:
	adds r4, #1
	cmp r4, #2
	ble _08084726
	bl sub_8086558
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
_08084744:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808474C
sub_808474C: @ 0x0808474C
	push {lr}
	bl sub_80846F0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808475C
sub_808475C: @ 0x0808475C
	push {r4, lr}
	sub sp, #0x20
	movs r4, #0
_08084762:
	adds r0, r4, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084786
	adds r0, r4, #0
	mov r1, sp
	bl sub_8085270
	mov r1, sp
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _08084786
	movs r0, #1
	b _0808478E
_08084786:
	adds r4, #1
	cmp r4, #2
	ble _08084762
	movs r0, #0
_0808478E:
	add sp, #0x20
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8084798
sub_8084798: @ 0x08084798
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	mov r0, sp
	movs r4, #0
	strh r4, [r0]
	ldr r1, _080847FC @ =0x0203D534
	ldr r2, _08084800 @ =0x01000230
	bl CpuSet
	mov r0, sp
	adds r0, #2
	strh r4, [r0]
	ldr r1, _08084804 @ =0x0203D994
	ldr r2, _08084808 @ =0x01000040
	bl CpuSet
	ldr r0, _0808480C @ =0x00000908
	adds r4, r6, r0
	movs r5, #0x45
_080847C0:
	ldr r0, _080847FC @ =0x0203D534
	adds r1, r4, #0
	movs r2, #0x10
	bl WriteAndVerifySramFast
	adds r4, #0x10
	subs r5, #1
	cmp r5, #0
	bge _080847C0
	ldr r2, _08084810 @ =0x00000D68
	adds r4, r6, r2
	movs r5, #0x1f
_080847D8:
	ldr r0, _08084804 @ =0x0203D994
	adds r1, r4, #0
	movs r2, #4
	bl WriteAndVerifySramFast
	adds r4, #4
	subs r5, #1
	cmp r5, #0
	bge _080847D8
	ldr r1, _08084814 @ =0x0203D530
	ldr r2, _0808480C @ =0x00000908
	adds r0, r6, r2
	str r0, [r1]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080847FC: .4byte 0x0203D534
_08084800: .4byte 0x01000230
_08084804: .4byte 0x0203D994
_08084808: .4byte 0x01000040
_0808480C: .4byte 0x00000908
_08084810: .4byte 0x00000D68
_08084814: .4byte 0x0203D530

	thumb_func_start sub_8084818
sub_8084818: @ 0x08084818
	push {lr}
	sub sp, #4
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r1, _08084834 @ =0x0203D534
	ldr r2, _08084838 @ =0x01000230
	mov r0, sp
	bl CpuSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_08084834: .4byte 0x0203D534
_08084838: .4byte 0x01000230

	thumb_func_start sub_808483C
sub_808483C: @ 0x0808483C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808485C @ =ReadSramFast
	ldr r1, _08084860 @ =0x0203D534
	movs r2, #0x8c
	lsls r2, r2, #3
	ldr r3, [r0]
	adds r0, r4, #0
	bl _call_via_r3
	ldr r0, _08084864 @ =0x0203D530
	str r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808485C: .4byte ReadSramFast
_08084860: .4byte 0x0203D534
_08084864: .4byte 0x0203D530

	thumb_func_start sub_8084868
sub_8084868: @ 0x08084868
	push {lr}
	ldr r2, _0808487C @ =ReadSramFast
	ldr r1, _08084880 @ =0x0203D994
	ldr r3, [r2]
	movs r2, #0x80
	bl _call_via_r3
	pop {r0}
	bx r0
	.align 2, 0
_0808487C: .4byte ReadSramFast
_08084880: .4byte 0x0203D994

	thumb_func_start sub_8084884
sub_8084884: @ 0x08084884
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080848A0 @ =0x0203D534
	movs r2, #0x8c
	lsls r2, r2, #3
	adds r1, r4, #0
	bl WriteAndVerifySramFast
	ldr r0, _080848A4 @ =0x0203D530
	str r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080848A0: .4byte 0x0203D534
_080848A4: .4byte 0x0203D530

	thumb_func_start sub_80848A8
sub_80848A8: @ 0x080848A8
	push {lr}
	adds r1, r0, #0
	ldr r0, _080848B8 @ =0x0203D994
	movs r2, #0x80
	bl WriteAndVerifySramFast
	pop {r0}
	bx r0
	.align 2, 0
_080848B8: .4byte 0x0203D994

	thumb_func_start sub_80848BC
sub_80848BC: @ 0x080848BC
	lsls r0, r0, #2
	ldr r1, _080848C4 @ =0x0203D994
	adds r0, r0, r1
	bx lr
	.align 2, 0
_080848C4: .4byte 0x0203D994

	thumb_func_start sub_80848C8
sub_80848C8: @ 0x080848C8
	ldr r1, _080848D8 @ =0x0000FFC0
	ldrh r0, [r0]
	ands r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	bx lr
	.align 2, 0
_080848D8: .4byte 0x0000FFC0

	thumb_func_start sub_80848DC
sub_80848DC: @ 0x080848DC
	push {r4, lr}
	movs r0, #0
	bl sub_80848BC
	adds r1, r0, #0
	movs r2, #0
	ldr r3, _080848EC @ =0x0000FFC0
	b _080848F4
	.align 2, 0
_080848EC: .4byte 0x0000FFC0
_080848F0:
	adds r2, #1
	adds r1, #4
_080848F4:
	adds r0, r3, #0
	ldrh r4, [r1]
	ands r0, r4
	cmp r0, #0
	bne _080848F0
	adds r0, r2, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8084908
sub_8084908: @ 0x08084908
	push {r4, r5, lr}
	adds r5, r0, #0
	bl sub_80848DC
	bl sub_80848BC
	adds r4, r0, #0
	bl GetGameTime
	ldr r1, [r5, #4]
	subs r0, r0, r1
	movs r1, #0xb4
	bl __udivsi3
	adds r2, r0, #0
	ldr r0, _08084958 @ =0x0000EA60
	cmp r2, r0
	ble _0808492E
	adds r2, r0, #0
_0808492E:
	movs r1, #0x3f
	ldrb r0, [r5, #0xe]
	ands r1, r0
	movs r0, #0x40
	rsbs r0, r0, #0
	ldrb r3, [r4]
	ands r0, r3
	orrs r0, r1
	strb r0, [r4]
	ldrh r5, [r5, #0x10]
	lsls r1, r5, #6
	movs r0, #0x3f
	ldrh r3, [r4]
	ands r0, r3
	orrs r0, r1
	strh r0, [r4]
	strh r2, [r4, #2]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08084958: .4byte 0x0000EA60

	thumb_func_start sub_808495C
sub_808495C: @ 0x0808495C
	push {r4, lr}
	adds r1, r0, #0
	movs r0, #0xc0
	ldrb r2, [r1, #0xb]
	ands r0, r2
	cmp r0, #0
	bne _080849A6
	ldr r0, [r1]
	ldrb r0, [r0, #4]
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _080849A6
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _080849A6
	lsls r1, r4, #4
	ldr r0, _080849AC @ =0x0203D524
	adds r2, r1, r0
	cmp r2, #0
	beq _080849A6
	ldrh r3, [r2, #0xa]
	lsls r0, r3, #0x12
	lsrs r1, r0, #0x14
	ldr r0, _080849B0 @ =0x00000F9F
	cmp r1, r0
	bgt _080849A6
	adds r0, r1, #1
	ldr r4, _080849B4 @ =0x00000FFF
	adds r1, r4, #0
	ands r0, r1
	lsls r0, r0, #2
	ldr r1, _080849B8 @ =0xFFFFC003
	ands r1, r3
	orrs r1, r0
	strh r1, [r2, #0xa]
_080849A6:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080849AC: .4byte 0x0203D524
_080849B0: .4byte 0x00000F9F
_080849B4: .4byte 0x00000FFF
_080849B8: .4byte 0xFFFFC003

	thumb_func_start sub_80849BC
sub_80849BC: @ 0x080849BC
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _080849F8
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _080849F8
	lsls r1, r4, #4
	ldr r0, _08084A00 @ =0x0203D524
	adds r2, r1, r0
	cmp r2, #0
	beq _080849F8
	ldr r3, [r2, #8]
	lsls r0, r3, #0xe
	lsrs r1, r0, #0x16
	ldr r0, _08084A04 @ =0x000003E7
	cmp r1, r0
	bgt _080849F8
	adds r0, r1, #1
	ldr r1, _08084A08 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #8
	ldr r1, _08084A0C @ =0xFFFC00FF
	ands r1, r3
	orrs r1, r0
	str r1, [r2, #8]
_080849F8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084A00: .4byte 0x0203D524
_08084A04: .4byte 0x000003E7
_08084A08: .4byte 0x000003FF
_08084A0C: .4byte 0xFFFC00FF

	thumb_func_start sub_8084A10
sub_8084A10: @ 0x08084A10
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r5, r4, #0
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084AD0
	cmp r4, #0x45
	bhi _08084AD0
	adds r0, r4, #0
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084AD0
	lsls r6, r5, #4
	ldr r0, _08084AD8 @ =0x0203D524
	adds r5, r6, r0
	cmp r5, #0
	beq _08084AD0
	ldr r1, _08084ADC @ =gBmSt
	adds r0, r1, #0
	adds r0, #0x3c
	ldrb r0, [r0]
	cmp r0, #1
	beq _08084AD0
	ldr r7, _08084AE0 @ =gPlaySt
	ldrb r3, [r7, #0x14]
	movs r0, #8
	ands r0, r3
	cmp r0, #0
	bne _08084AD0
	ldrb r1, [r1, #4]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _08084AD0
	movs r2, #0x20
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _08084AD0
	adds r0, r2, #0
	ands r0, r3
	cmp r0, #0
	bne _08084AD0
	ldrb r0, [r5]
	cmp r0, #0xc7
	bhi _08084AD0
	adds r0, #1
	strb r0, [r5]
	bl sub_8085EF4
	adds r4, r0, #0
	adds r4, #3
	adds r0, r4, #0
	bl sub_8084560
	adds r1, r0, #0
	ldr r2, _08084AE4 @ =0x000018B0
	adds r0, r6, r2
	adds r1, r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl WriteAndVerifySramFast
	mov r0, sp
	adds r1, r4, #0
	bl sub_8084438
	mov r0, sp
	adds r1, r4, #0
	bl sub_80844D4
	ldrb r0, [r7, #0xc]
	bl sub_8084560
	adds r1, r0, #0
	ldr r2, _08084AE8 @ =0x000008F8
	adds r0, r6, r2
	adds r1, r1, r0
	adds r0, r5, #0
	movs r2, #1
	bl WriteAndVerifySramFast
	ldrb r1, [r7, #0xc]
	mov r0, sp
	bl sub_8084438
	ldrb r1, [r7, #0xc]
	mov r0, sp
	bl sub_80844D4
_08084AD0:
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084AD8: .4byte 0x0203D524
_08084ADC: .4byte gBmSt
_08084AE0: .4byte gPlaySt
_08084AE4: .4byte 0x000018B0
_08084AE8: .4byte 0x000008F8

	thumb_func_start sub_8084AEC
sub_8084AEC: @ 0x08084AEC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r2, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	lsls r1, r1, #0x18
	mov r8, r1
	lsrs r6, r1, #0x18
	cmp r0, #0x45
	bhi _08084B70
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084B70
	lsls r1, r4, #4
	ldr r0, _08084B7C @ =0x0203D524
	adds r5, r1, r0
	cmp r5, #0
	beq _08084B70
	ldr r2, _08084B80 @ =gPlaySt
	movs r1, #0xe
	ldrsb r1, [r2, r1]
	movs r0, #0x3f
	ands r1, r0
	movs r0, #0x40
	rsbs r0, r0, #0
	ldrb r3, [r5, #3]
	ands r0, r3
	orrs r0, r1
	strb r0, [r5, #3]
	ldrh r3, [r2, #0x10]
	movs r4, #3
	adds r2, r3, #0
	ands r2, r4
	lsls r2, r2, #6
	movs r1, #0x3f
	ands r0, r1
	orrs r0, r2
	strb r0, [r5, #3]
	lsrs r3, r3, #2
	strb r3, [r5, #4]
	ands r6, r4
	lsls r0, r6, #6
	ldrb r2, [r5, #0xb]
	ands r1, r2
	orrs r1, r0
	strb r1, [r5, #0xb]
	mov r3, r8
	lsrs r1, r3, #0x1a
	movs r0, #0x80
	rsbs r0, r0, #0
	ldrb r2, [r5, #0xc]
	ands r0, r2
	orrs r0, r1
	strb r0, [r5, #0xc]
	movs r0, #0xf
	ands r7, r0
	movs r0, #0x10
	rsbs r0, r0, #0
	ldrb r3, [r5, #7]
	ands r0, r3
	orrs r0, r7
	strb r0, [r5, #7]
_08084B70:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084B7C: .4byte 0x0203D524
_08084B80: .4byte gPlaySt

	thumb_func_start sub_8084B84
sub_8084B84: @ 0x08084B84
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _08084BAE
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084BAE
	lsls r1, r4, #4
	ldr r0, _08084BB4 @ =0x0203D524
	adds r1, r1, r0
	cmp r1, #0
	beq _08084BAE
	ldrb r0, [r1, #1]
	cmp r0, #0xc7
	bhi _08084BAE
	adds r0, #1
	strb r0, [r1, #1]
_08084BAE:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084BB4: .4byte 0x0203D524

	thumb_func_start sub_8084BB8
sub_8084BB8: @ 0x08084BB8
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _08084BE2
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084BE2
	lsls r1, r4, #4
	ldr r0, _08084BE8 @ =0x0203D524
	adds r1, r1, r0
	cmp r1, #0
	beq _08084BE2
	ldrb r0, [r1, #2]
	cmp r0, #0xc7
	bhi _08084BE2
	adds r0, #1
	strb r0, [r1, #2]
_08084BE2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084BE8: .4byte 0x0203D524

	thumb_func_start sub_8084BEC
sub_8084BEC: @ 0x08084BEC
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _08084C26
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084C26
	lsls r1, r4, #4
	ldr r0, _08084C2C @ =0x0203D524
	adds r2, r1, r0
	cmp r2, #0
	beq _08084C26
	ldrb r3, [r2, #5]
	lsls r0, r3, #0x1a
	lsrs r0, r0, #0x1a
	cmp r0, #0x31
	bgt _08084C26
	adds r1, r0, #1
	movs r0, #0x3f
	ands r1, r0
	movs r0, #0x40
	rsbs r0, r0, #0
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #5]
_08084C26:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084C2C: .4byte 0x0203D524

	thumb_func_start PidStatsAddSquaresMoved
PidStatsAddSquaresMoved: @ 0x08084C30
	push {r4, r5, lr}
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _08084C72
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084C72
	lsls r1, r4, #4
	ldr r0, _08084C78 @ =0x0203D524
	adds r2, r1, r0
	cmp r2, #0
	beq _08084C72
	ldr r3, [r2, #4]
	lsls r0, r3, #8
	lsrs r0, r0, #0x16
	adds r0, r0, r5
	movs r1, #0xfa
	lsls r1, r1, #2
	cmp r0, r1
	ble _08084C64
	adds r0, r1, #0
_08084C64:
	ldr r1, _08084C7C @ =0x000003FF
	ands r1, r0
	lsls r1, r1, #0xe
	ldr r0, _08084C80 @ =0xFF003FFF
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #4]
_08084C72:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08084C78: .4byte 0x0203D524
_08084C7C: .4byte 0x000003FF
_08084C80: .4byte 0xFF003FFF

	thumb_func_start PidStatsAddExpGained
PidStatsAddExpGained: @ 0x08084C84
	push {r4, r5, lr}
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r0, #0x45
	bhi _08084CCE
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084CCE
	lsls r1, r4, #4
	ldr r0, _08084CD4 @ =0x0203D524
	adds r3, r1, r0
	cmp r3, #0
	beq _08084CCE
	ldrb r4, [r3, #7]
	lsrs r1, r4, #4
	ldrb r2, [r3, #8]
	lsls r0, r2, #4
	orrs r0, r1
	adds r2, r0, r5
	movs r0, #0xfa
	lsls r0, r0, #4
	cmp r2, r0
	ble _08084CBC
	adds r2, r0, #0
_08084CBC:
	movs r0, #0xf
	adds r1, r2, #0
	ands r1, r0
	lsls r1, r1, #4
	ands r0, r4
	orrs r0, r1
	strb r0, [r3, #7]
	lsrs r0, r2, #4
	strb r0, [r3, #8]
_08084CCE:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08084CD4: .4byte 0x0203D524

	thumb_func_start sub_8084CD8
sub_8084CD8: @ 0x08084CD8
	push {r4, lr}
	movs r3, #0
	ldr r2, _08084CF8 @ =0x0203D534
	movs r1, #0x45
_08084CE0:
	ldrh r4, [r2, #0xa]
	lsls r0, r4, #0x12
	lsrs r0, r0, #0x14
	adds r3, r3, r0
	adds r2, #0x10
	subs r1, #1
	cmp r1, #0
	bge _08084CE0
	adds r0, r3, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08084CF8: .4byte 0x0203D534

	thumb_func_start sub_8084CFC
sub_8084CFC: @ 0x08084CFC
	movs r3, #0
	ldr r2, _08084D18 @ =0x0203D534
	movs r1, #0x45
_08084D02:
	ldr r0, [r2, #8]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x16
	adds r3, r3, r0
	adds r2, #0x10
	subs r1, #1
	cmp r1, #0
	bge _08084D02
	adds r0, r3, #0
	bx lr
	.align 2, 0
_08084D18: .4byte 0x0203D534

	thumb_func_start sub_8084D1C
sub_8084D1C: @ 0x08084D1C
	movs r0, #0
	ldr r2, _08084D30 @ =0x0203D534
	movs r1, #0x45
_08084D22:
	ldrb r3, [r2]
	adds r0, r3, r0
	adds r2, #0x10
	subs r1, #1
	cmp r1, #0
	bge _08084D22
	bx lr
	.align 2, 0
_08084D30: .4byte 0x0203D534

	thumb_func_start sub_8084D34
sub_8084D34: @ 0x08084D34
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r0, _08084D60 @ =0x0203D534
	adds r4, r0, #7
	movs r5, #0x45
_08084D3E:
	ldrb r0, [r4]
	lsrs r1, r0, #4
	ldrb r2, [r4, #1]
	lsls r0, r2, #4
	orrs r0, r1
	movs r1, #0x64
	bl __divsi3
	adds r6, r6, r0
	adds r4, #0x10
	subs r5, #1
	cmp r5, #0
	bge _08084D3E
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08084D60: .4byte 0x0203D534

	thumb_func_start sub_8084D64
sub_8084D64: @ 0x08084D64
	push {r4, r5, r6, r7, lr}
	movs r7, #0
	movs r5, #0
	ldr r4, _08084DC0 @ =gBattleUnitA
	adds r0, r4, #0
	bl GetUnitCurrentHp
	cmp r0, #0
	bne _08084D7A
	adds r7, r4, #0
	ldr r5, _08084DC4 @ =gBattleUnitB
_08084D7A:
	ldr r6, _08084DC4 @ =gBattleUnitB
	adds r0, r6, #0
	bl GetUnitCurrentHp
	cmp r0, #0
	bne _08084D8A
	adds r7, r6, #0
	adds r5, r4, #0
_08084D8A:
	cmp r7, #0
	beq _08084DBA
	cmp r5, #0
	beq _08084DA4
	movs r0, #0xc0
	ldrb r1, [r5, #0xb]
	ands r0, r1
	cmp r0, #0
	bne _08084DA4
	ldr r0, [r5]
	ldrb r0, [r0, #4]
	bl sub_80849BC
_08084DA4:
	cmp r7, #0
	beq _08084DBA
	movs r0, #0xc0
	ldrb r1, [r7, #0xb]
	ands r0, r1
	cmp r0, #0
	bne _08084DBA
	ldr r0, [r7]
	ldrb r0, [r0, #4]
	bl sub_8084A10
_08084DBA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084DC0: .4byte gBattleUnitA
_08084DC4: .4byte gBattleUnitB

	thumb_func_start sub_8084DC8
sub_8084DC8: @ 0x08084DC8
	push {r4, r5, r6, lr}
	sub sp, #0x40
	adds r6, r0, #0
	mov r0, sp
	bl LoadGlobalSaveInfo
	movs r4, #0
	add r1, sp, #0x10
_08084DD8:
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r0, r6
	beq _08084E04
	adds r4, #1
	cmp r4, #0xb
	ble _08084DD8
	movs r4, #0
	add r5, sp, #0x20
_08084DEA:
	adds r0, r4, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084E08
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8085270
	ldrb r0, [r5, #0x18]
	cmp r0, r6
	bne _08084E08
_08084E04:
	movs r0, #0
	b _08084E10
_08084E08:
	adds r4, #1
	cmp r4, #2
	ble _08084DEA
	movs r0, #1
_08084E10:
	add sp, #0x40
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_8084E18
sub_8084E18: @ 0x08084E18
	push {r4, lr}
	movs r4, #1
_08084E1C:
	adds r0, r4, #0
	bl sub_8084DC8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084E2C
	adds r0, r4, #0
	b _08084E32
_08084E2C:
	adds r4, #1
	cmp r4, #0xff
	ble _08084E1C
_08084E32:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start GetGlobalCompletedPlaythroughCount
GetGlobalCompletedPlaythroughCount: @ 0x08084E38
	push {r4, lr}
	sub sp, #0x20
	movs r4, #0
	mov r0, sp
	bl LoadGlobalSaveInfo
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084E4E
	movs r0, #0
	b _08084E64
_08084E4E:
	movs r1, #0
	add r2, sp, #0x10
_08084E52:
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _08084E5C
	adds r4, #1
_08084E5C:
	adds r1, #1
	cmp r1, #0xb
	ble _08084E52
	adds r0, r4, #0
_08084E64:
	add sp, #0x20
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start RegisterCompletedPlaythrough
RegisterCompletedPlaythrough: @ 0x08084E6C
	push {r4, lr}
	movs r3, #0
	adds r4, r0, #0
	adds r4, #0x10
	adds r2, r4, #0
_08084E76:
	adds r0, r2, r3
	ldrb r0, [r0]
	cmp r0, r1
	beq _08084E9A
	adds r3, #1
	cmp r3, #0xb
	ble _08084E76
	movs r3, #0
_08084E86:
	adds r2, r4, r3
	ldrb r0, [r2]
	cmp r0, #0
	bne _08084E94
	strb r1, [r2]
	movs r0, #1
	b _08084E9C
_08084E94:
	adds r3, #1
	cmp r3, #0xb
	ble _08084E86
_08084E9A:
	movs r0, #0
_08084E9C:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8084EA4
sub_8084EA4: @ 0x08084EA4
	push {r4, lr}
	sub sp, #0x20
	mov r0, sp
	bl LoadGlobalSaveInfo
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084EBE
	bl sub_808439C
	mov r0, sp
	bl LoadGlobalSaveInfo
_08084EBE:
	ldr r4, _08084EFC @ =gPlaySt
	ldrb r1, [r4, #0x18]
	mov r0, sp
	bl RegisterCompletedPlaythrough
	mov r1, sp
	movs r0, #1
	ldrb r2, [r1, #0xe]
	orrs r2, r0
	strb r2, [r1, #0xe]
	movs r0, #0x40
	ldrb r1, [r4, #0x14]
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	asrs r1, r0, #0x1f
	movs r0, #2
	ands r1, r0
	ldrb r4, [r4, #0xe]
	cmp r4, #0x19
	bne _08084EEC
	adds r1, #1
_08084EEC:
	cmp r1, #2
	beq _08084F0C
	cmp r1, #2
	bgt _08084F00
	cmp r1, #1
	beq _08084F06
	b _08084F2C
	.align 2, 0
_08084EFC: .4byte gPlaySt
_08084F00:
	cmp r1, #3
	beq _08084F16
	b _08084F2C
_08084F06:
	mov r1, sp
	movs r0, #4
	b _08084F10
_08084F0C:
	mov r1, sp
	movs r0, #2
_08084F10:
	orrs r2, r0
	strb r2, [r1, #0xe]
	b _08084F2C
_08084F16:
	mov r1, sp
	movs r0, #8
	orrs r0, r2
	strb r0, [r1, #0xe]
	mov r2, sp
	movs r1, #2
	orrs r0, r1
	strb r0, [r2, #0xe]
	movs r1, #4
	orrs r0, r1
	strb r0, [r2, #0xe]
_08084F2C:
	mov r0, sp
	bl SaveGlobalSaveInfo
	ldr r0, _08084F44 @ =gPlaySt
	movs r1, #0x20
	ldrb r2, [r0, #0x14]
	orrs r1, r2
	strb r1, [r0, #0x14]
	add sp, #0x20
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08084F44: .4byte gPlaySt

	thumb_func_start nullsub_45
nullsub_45: @ 0x08084F48
	bx lr
	.align 2, 0

	thumb_func_start sub_8084F4C
sub_8084F4C: @ 0x08084F4C
	push {r4, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r4, #0x45
	bhi _08084F70
	adds r0, r4, #0
	bl GetPersonInfo
	ldrb r0, [r0, #9]
	cmp r0, #0
	beq _08084F70
	lsls r0, r4, #4
	ldr r1, _08084F6C @ =0x0203D524
	adds r0, r0, r1
	b _08084F72
	.align 2, 0
_08084F6C: .4byte 0x0203D524
_08084F70:
	movs r0, #0
_08084F72:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8084F78
sub_8084F78: @ 0x08084F78
	push {r4, lr}
	sub sp, #0x20
	adds r4, r0, #0
	mov r0, sp
	bl LoadGlobalSaveInfo
	mov r0, sp
	strb r4, [r0, #0x1e]
	bl sub_8084388
	add sp, #0x20
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8084F94
sub_8084F94: @ 0x08084F94
	push {lr}
	sub sp, #0x20
	mov r0, sp
	bl LoadGlobalSaveInfo
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084FB0
	mov r0, sp
	ldrb r0, [r0, #0x1e]
	cmp r0, #2
	bgt _08084FB0
	cmp r0, #0
	bge _08084FB2
_08084FB0:
	movs r0, #0
_08084FB2:
	add sp, #0x20
	pop {r1}
	bx r1

	thumb_func_start sub_8084FB8
sub_8084FB8: @ 0x08084FB8
	push {r4, r5, lr}
	sub sp, #0x30
	adds r5, r0, #0
	movs r0, #3
	bl sub_80859E0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084FE0
	add r4, sp, #0x10
	movs r0, #3
	adds r1, r4, #0
	bl sub_8085A34
	ldrb r0, [r4, #0xc]
	cmp r0, r5
	bne _08084FE0
	movs r0, #3
	bl sub_8085788
_08084FE0:
	mov r1, sp
	movs r0, #0xff
	strb r0, [r1, #6]
	mov r0, sp
	adds r1, r5, #0
	bl sub_80844D4
	add sp, #0x30
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8084FF8
sub_8084FF8: @ 0x08084FF8
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x10
	mov sb, r1
	bl sub_808460C
	adds r6, r0, #0
	mov r0, sb
	bl sub_8084560
	mov r8, r0
	ldr r0, _08085050 @ =ReadSramFast
	ldr r4, _08085054 @ =gBuf
	movs r5, #0xdf
	lsls r5, r5, #4
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl _call_via_r3
	adds r0, r4, #0
	mov r1, r8
	adds r2, r5, #0
	bl WriteAndVerifySramFast
	ldr r0, _08085058 @ =0x00011217
	str r0, [sp]
	mov r1, sp
	movs r0, #0
	strb r0, [r1, #6]
	mov r0, sp
	mov r1, sb
	bl sub_80844D4
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08085050: .4byte ReadSramFast
_08085054: .4byte gBuf
_08085058: .4byte 0x00011217

	thumb_func_start sub_808505C
sub_808505C: @ 0x0808505C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x3c
	adds r7, r0, #0
	adds r4, r1, #0
	bl sub_8084560
	adds r6, r0, #0
	adds r0, r4, #0
	bl InitPlayConfig
	bl InitUnits
	bl ClearSupplyItems
	bl sub_806BA34
	movs r0, #3
	bl sub_8085788
	bl sub_8084E18
	adds r1, r0, #0
	ldr r0, _08085100 @ =gPlaySt
	movs r4, #0
	strb r1, [r0, #0x18]
	strb r7, [r0, #0xc]
	adds r1, r6, #0
	movs r2, #0x20
	bl WriteAndVerifySramFast
	add r0, sp, #0x38
	strh r4, [r0]
	add r4, sp, #0x10
	ldr r2, _08085104 @ =0x01000014
	adds r1, r4, #0
	bl CpuSet
	mov r8, r4
	adds r4, r6, #0
	adds r4, #0x20
	movs r5, #0x33
_080850B2:
	mov r0, r8
	adds r1, r4, #0
	movs r2, #0x28
	bl WriteAndVerifySramFast
	adds r4, #0x28
	subs r5, #1
	cmp r5, #0
	bge _080850B2
	movs r4, #0
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r6, r1
	bl sub_80846B8
	adds r0, r6, #0
	bl sub_8084798
	ldr r1, _08085108 @ =0x00000DE8
	adds r0, r6, r1
	bl sub_8084648
	ldr r0, _0808510C @ =0x00011217
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #6]
	adds r1, r7, #0
	bl sub_80844D4
	adds r0, r7, #0
	bl sub_8084F78
	add sp, #0x3c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085100: .4byte gPlaySt
_08085104: .4byte 0x01000014
_08085108: .4byte 0x00000DE8
_0808510C: .4byte 0x00011217

	thumb_func_start sub_8085110
sub_8085110: @ 0x08085110
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	mov r8, r0
	bl sub_8084560
	adds r7, r0, #0
	movs r0, #3
	bl sub_8085788
	ldr r4, _0808519C @ =gPlaySt
	mov r0, r8
	strb r0, [r4, #0xc]
	bl GetGameTime
	str r0, [r4]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl WriteAndVerifySramFast
	adds r4, r7, #0
	adds r4, #0x20
	movs r6, #0
	movs r5, #0x33
_08085144:
	ldr r0, _080851A0 @ =gUnitArrayBlue
	adds r0, r6, r0
	adds r1, r4, #0
	bl sub_80852C4
	adds r4, #0x28
	adds r6, #0x48
	subs r5, #1
	cmp r5, #0
	bge _08085144
	movs r4, #0
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r7, r1
	bl sub_80846B8
	ldr r1, _080851A4 @ =0x00000908
	adds r0, r7, r1
	bl sub_8084884
	ldr r1, _080851A8 @ =0x00000D68
	adds r0, r7, r1
	bl sub_80848A8
	ldr r1, _080851AC @ =0x00000DE8
	adds r0, r7, r1
	bl sub_8084648
	ldr r0, _080851B0 @ =0x00011217
	str r0, [sp]
	mov r0, sp
	strb r4, [r0, #6]
	mov r1, r8
	bl sub_80844D4
	mov r0, r8
	bl sub_8084F78
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808519C: .4byte gPlaySt
_080851A0: .4byte gUnitArrayBlue
_080851A4: .4byte 0x00000908
_080851A8: .4byte 0x00000D68
_080851AC: .4byte 0x00000DE8
_080851B0: .4byte 0x00011217

	thumb_func_start sub_80851B4
sub_80851B4: @ 0x080851B4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	bl sub_808460C
	adds r7, r0, #0
	ldr r1, _08085240 @ =gBmSt
	movs r0, #0x40
	ldrb r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	bne _080851D4
	movs r0, #3
	bl sub_8085788
_080851D4:
	ldr r0, _08085244 @ =ReadSramFast
	ldr r4, _08085248 @ =gPlaySt
	ldr r3, [r0]
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0x20
	bl _call_via_r3
	ldr r0, [r4]
	bl SetGameTime
	mov r0, r8
	strb r0, [r4, #0xc]
	bl InitUnits
	movs r6, #0
	adds r4, r7, #0
	adds r4, #0x20
	movs r5, #0x33
_080851FA:
	ldr r1, _0808524C @ =gUnitArrayBlue
	adds r1, r6, r1
	adds r0, r4, #0
	bl sub_80855C4
	adds r6, #0x48
	adds r4, #0x28
	subs r5, #1
	cmp r5, #0
	bge _080851FA
	movs r1, #0x84
	lsls r1, r1, #4
	adds r0, r7, r1
	bl sub_80846D0
	ldr r1, _08085250 @ =0x00000DE8
	adds r0, r7, r1
	bl sub_8084690
	ldr r1, _08085254 @ =0x00000908
	adds r0, r7, r1
	bl sub_808483C
	ldr r1, _08085258 @ =0x00000D68
	adds r0, r7, r1
	bl sub_8084868
	mov r0, r8
	bl sub_8084F78
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085240: .4byte gBmSt
_08085244: .4byte ReadSramFast
_08085248: .4byte gPlaySt
_0808524C: .4byte gUnitArrayBlue
_08085250: .4byte 0x00000DE8
_08085254: .4byte 0x00000908
_08085258: .4byte 0x00000D68

	thumb_func_start sub_808525C
sub_808525C: @ 0x0808525C
	push {lr}
	adds r1, r0, #0
	movs r0, #0
	bl sub_8084438
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8085270
sub_8085270: @ 0x08085270
	push {r4, lr}
	adds r4, r1, #0
	bl sub_808460C
	ldr r1, _0808528C @ =ReadSramFast
	ldr r3, [r1]
	adds r1, r4, #0
	movs r2, #0x20
	bl _call_via_r3
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808528C: .4byte ReadSramFast

	thumb_func_start sub_8085290
sub_8085290: @ 0x08085290
	push {r4, lr}
	sub sp, #0x20
	adds r4, r0, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080852B8
	adds r0, r4, #0
	mov r1, sp
	bl sub_8085270
	mov r0, sp
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	ble _080852B8
	movs r0, #1
	b _080852BA
_080852B8:
	movs r0, #0
_080852BA:
	add sp, #0x20
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80852C4
sub_80852C4: @ 0x080852C4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x74
	adds r7, r0, #0
	mov sl, r1
	mov r2, sp
	ldr r0, [r7]
	movs r1, #0x7f
	ldrb r0, [r0, #4]
	ands r1, r0
	movs r5, #0x80
	rsbs r5, r5, #0
	adds r0, r5, #0
	ldrb r3, [r2]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	ldr r0, [r7, #4]
	movs r1, #0x7f
	ldrb r0, [r0, #4]
	ands r1, r0
	lsls r1, r1, #7
	ldr r4, _08085594 @ =0xFFFFC07F
	adds r0, r4, #0
	ldrh r6, [r2]
	ands r0, r6
	orrs r0, r1
	strh r0, [r2]
	ldr r0, [r7]
	cmp r0, #0
	bne _08085322
	add r7, sp, #0x28
	adds r0, r7, #0
	bl ClearUnit
	mov r1, sp
	adds r0, r5, #0
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r0, r4, #0
	ldrh r3, [r1]
	ands r0, r3
	strh r0, [r1]
_08085322:
	movs r1, #0x1f
	ldrb r5, [r7, #8]
	ands r1, r5
	lsls r1, r1, #0xe
	ldr r0, [sp]
	ldr r2, _08085598 @ =0xFFF83FFF
	ands r0, r2
	orrs r0, r1
	str r0, [sp]
	mov r2, sp
	ldrb r6, [r7, #9]
	lsls r3, r6, #1
	ldrb r1, [r2, #3]
	movs r0, #1
	mov sb, r0
	ands r0, r1
	orrs r0, r3
	strb r0, [r2, #3]
	movs r1, #0xe
	ldrsb r1, [r7, r1]
	movs r0, #0x3f
	ands r1, r0
	movs r0, #0x40
	rsbs r0, r0, #0
	ldrb r3, [r2, #4]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #4]
	movs r1, #0xf
	ldrsb r1, [r7, r1]
	movs r5, #0x3f
	mov ip, r5
	mov r6, ip
	ands r1, r6
	lsls r1, r1, #6
	ldr r0, _0808559C @ =0xFFFFF03F
	ldrh r3, [r2, #4]
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #4]
	movs r2, #0x10
	ldrsb r2, [r7, r2]
	movs r5, #0x3f
	ands r2, r5
	lsls r2, r2, #0xc
	ldr r0, [sp, #4]
	ldr r1, _080855A0 @ =0xFFFC0FFF
	ands r0, r1
	orrs r0, r2
	str r0, [sp, #4]
	mov r2, sp
	movs r1, #0x12
	ldrsb r1, [r7, r1]
	movs r6, #0x1f
	ands r1, r6
	lsls r1, r1, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ldrb r3, [r2, #6]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #6]
	movs r1, #0x13
	ldrsb r1, [r7, r1]
	movs r4, #0x1f
	ands r1, r4
	lsls r1, r1, #7
	ldr r0, _080855A4 @ =0xFFFFF07F
	ldrh r3, [r2, #6]
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #6]
	mov r3, sp
	movs r2, #0x14
	ldrsb r2, [r7, r2]
	movs r0, #0xf
	mov r8, r0
	adds r1, r2, #0
	ands r1, r0
	lsls r1, r1, #4
	str r1, [sp, #0x70]
	ldrb r1, [r3, #7]
	ands r0, r1
	ldr r1, [sp, #0x70]
	orrs r0, r1
	strb r0, [r3, #7]
	lsrs r2, r2, #4
	mov r0, sb
	ands r2, r0
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r3, #8]
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #8]
	movs r1, #0x15
	ldrsb r1, [r7, r1]
	ands r1, r6
	lsls r1, r1, #1
	movs r2, #0x3f
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r1
	strb r0, [r3, #8]
	mov r2, sp
	movs r1, #0x16
	ldrsb r1, [r7, r1]
	ands r1, r4
	lsls r1, r1, #6
	ldr r0, _080855A8 @ =0xFFFFF83F
	ldrh r3, [r2, #8]
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #8]
	movs r1, #0x17
	ldrsb r1, [r7, r1]
	lsls r1, r1, #3
	movs r0, #7
	ldrb r3, [r2, #9]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #9]
	movs r1, #0x18
	ldrsb r1, [r7, r1]
	ands r1, r6
	movs r0, #0x20
	rsbs r0, r0, #0
	ldrb r6, [r2, #0xa]
	ands r0, r6
	orrs r0, r1
	strb r0, [r2, #0xa]
	movs r1, #0x1a
	ldrsb r1, [r7, r1]
	ands r1, r4
	lsls r1, r1, #5
	ldr r0, _080855AC @ =0xFFFFFC1F
	ldrh r3, [r2, #0xa]
	ands r0, r3
	orrs r0, r1
	strh r0, [r2, #0xa]
	mov r3, sp
	ldrh r2, [r7, #0x1c]
	adds r1, r2, #0
	ands r1, r5
	lsls r1, r1, #2
	movs r4, #3
	adds r0, r4, #0
	ldrb r6, [r3, #0xb]
	ands r0, r6
	orrs r0, r1
	strb r0, [r3, #0xb]
	lsrs r2, r2, #6
	strb r2, [r3, #0xc]
	ldr r3, _080855B0 @ =0x00003FFF
	adds r1, r3, #0
	ldrh r0, [r7, #0x1e]
	ands r1, r0
	lsls r1, r1, #8
	ldr r0, [sp, #0xc]
	ldr r2, _080855B4 @ =0xFFC000FF
	ands r0, r2
	orrs r0, r1
	str r0, [sp, #0xc]
	mov r2, sp
	ldrh r1, [r7, #0x20]
	ldr r0, _080855B8 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #6
	ldrh r6, [r2, #0xe]
	ands r5, r6
	orrs r5, r0
	strh r5, [r2, #0xe]
	lsrs r1, r1, #0xa
	mov r0, r8
	ands r1, r0
	movs r0, #0x10
	rsbs r0, r0, #0
	ldrb r5, [r2, #0x10]
	ands r0, r5
	orrs r0, r1
	strb r0, [r2, #0x10]
	ldrh r6, [r7, #0x22]
	ands r3, r6
	lsls r3, r3, #4
	ldr r0, [sp, #0x10]
	ldr r1, _080855BC @ =0xFFFC000F
	ands r0, r1
	orrs r0, r3
	str r0, [sp, #0x10]
	mov r1, sp
	ldrh r2, [r7, #0x24]
	lsls r0, r2, #2
	ldrh r3, [r1, #0x12]
	ands r4, r3
	orrs r4, r0
	strh r4, [r1, #0x12]
	ldrh r0, [r1, #2]
	ldr r4, _080855C0 @ =0xFFFFFE07
	adds r3, r4, #0
	ands r3, r0
	strh r3, [r1, #2]
	movs r5, #4
	adds r0, r5, #0
	ldrh r6, [r7, #0xc]
	ands r0, r6
	cmp r0, #0
	beq _080854D2
	mov r2, sp
	mov r1, sb
	mov r0, ip
	ands r1, r0
	lsls r1, r1, #3
	adds r0, r3, #0
	ands r0, r4
	orrs r0, r1
	strh r0, [r2, #2]
_080854D2:
	movs r6, #8
	adds r0, r6, #0
	ldrh r1, [r7, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _080854FA
	mov r3, sp
	mov r0, sp
	ldrh r2, [r0, #2]
	lsls r1, r2, #0x17
	lsrs r1, r1, #0x1a
	movs r0, #2
	orrs r1, r0
	mov r0, ip
	ands r1, r0
	lsls r1, r1, #3
	adds r0, r4, #0
	ands r0, r2
	orrs r0, r1
	strh r0, [r3, #2]
_080854FA:
	movs r0, #0x80
	lsls r0, r0, #7
	ldrh r1, [r7, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _08085520
	mov r3, sp
	mov r0, sp
	ldrh r2, [r0, #2]
	lsls r0, r2, #0x17
	lsrs r0, r0, #0x1a
	orrs r0, r5
	mov r5, ip
	ands r0, r5
	lsls r0, r0, #3
	adds r1, r4, #0
	ands r1, r2
	orrs r1, r0
	strh r1, [r3, #2]
_08085520:
	movs r0, #0x80
	lsls r0, r0, #8
	ldrh r1, [r7, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _08085546
	mov r3, sp
	mov r0, sp
	ldrh r2, [r0, #2]
	lsls r0, r2, #0x17
	lsrs r0, r0, #0x1a
	orrs r0, r6
	mov r5, ip
	ands r0, r5
	lsls r0, r0, #3
	adds r1, r4, #0
	ands r1, r2
	orrs r1, r0
	strh r1, [r3, #2]
_08085546:
	movs r2, #0
	mov r5, sp
	adds r5, #0x1e
	adds r6, r7, #0
	adds r6, #0x30
	mov r4, sp
	adds r4, #0x16
	adds r3, r7, #0
	adds r3, #0x26
_08085558:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #7
	ble _08085558
	movs r2, #0
	adds r4, r5, #0
	adds r3, r6, #0
_0808556C:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #9
	ble _0808556C
	mov r0, sp
	mov r1, sl
	movs r2, #0x28
	bl WriteAndVerifySramFast
	add sp, #0x74
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085594: .4byte 0xFFFFC07F
_08085598: .4byte 0xFFF83FFF
_0808559C: .4byte 0xFFFFF03F
_080855A0: .4byte 0xFFFC0FFF
_080855A4: .4byte 0xFFFFF07F
_080855A8: .4byte 0xFFFFF83F
_080855AC: .4byte 0xFFFFFC1F
_080855B0: .4byte 0x00003FFF
_080855B4: .4byte 0xFFC000FF
_080855B8: .4byte 0x000003FF
_080855BC: .4byte 0xFFFC000F
_080855C0: .4byte 0xFFFFFE07

	thumb_func_start sub_80855C4
sub_80855C4: @ 0x080855C4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	adds r4, r1, #0
	ldr r1, _08085784 @ =ReadSramFast
	ldr r3, [r1]
	mov r1, sp
	movs r2, #0x28
	bl _call_via_r3
	mov r0, sp
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x19
	bl GetPersonInfo
	str r0, [r4]
	mov r0, sp
	ldrh r0, [r0]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x19
	bl GetJobInfo
	str r0, [r4, #4]
	ldr r0, [sp]
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x1b
	strb r0, [r4, #8]
	mov r0, sp
	ldrb r0, [r0, #3]
	lsrs r3, r0, #1
	strb r3, [r4, #9]
	mov r0, sp
	ldrb r0, [r0, #4]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	strb r0, [r4, #0xe]
	mov r0, sp
	ldrh r0, [r0, #4]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1a
	strb r0, [r4, #0xf]
	ldr r0, [sp, #4]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x1a
	strb r0, [r4, #0x10]
	mov r0, sp
	ldrb r0, [r0, #6]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x12]
	mov r0, sp
	ldrh r0, [r0, #6]
	lsls r0, r0, #0x14
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x13]
	mov r1, sp
	ldrb r0, [r1, #7]
	lsrs r2, r0, #4
	movs r5, #1
	adds r0, r5, #0
	ldrb r1, [r1, #8]
	ands r0, r1
	lsls r0, r0, #4
	orrs r0, r2
	strb r0, [r4, #0x14]
	mov r0, sp
	ldrb r0, [r0, #8]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x15]
	mov r0, sp
	ldrh r0, [r0, #8]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x16]
	mov r0, sp
	ldrb r0, [r0, #9]
	lsrs r0, r0, #3
	strb r0, [r4, #0x17]
	mov r0, sp
	ldrb r0, [r0, #0xa]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x18]
	mov r0, sp
	ldrh r0, [r0, #0xa]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x1a]
	mov r0, sp
	ldrb r2, [r0, #0xb]
	lsrs r1, r2, #2
	ldrb r0, [r0, #0xc]
	lsls r0, r0, #6
	orrs r0, r1
	strh r0, [r4, #0x1c]
	ldr r0, [sp, #0xc]
	lsls r0, r0, #0xa
	lsrs r0, r0, #0x12
	strh r0, [r4, #0x1e]
	mov r1, sp
	ldrh r0, [r1, #0xe]
	lsrs r2, r0, #6
	movs r0, #0xf
	ldrb r1, [r1, #0x10]
	ands r0, r1
	lsls r0, r0, #0xa
	orrs r0, r2
	strh r0, [r4, #0x20]
	ldr r0, [sp, #0x10]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x12
	strh r0, [r4, #0x22]
	mov r0, sp
	ldrh r0, [r0, #0x12]
	lsrs r0, r0, #2
	strh r0, [r4, #0x24]
	cmp r3, #0x63
	bls _080856B6
	movs r0, #0xff
	strb r0, [r4, #9]
_080856B6:
	movs r0, #0
	strh r0, [r4, #0xc]
	mov r0, sp
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1a
	ands r0, r5
	cmp r0, #0
	beq _080856CC
	movs r0, #5
	strh r0, [r4, #0xc]
_080856CC:
	mov r0, sp
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1a
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080856E4
	movs r0, #9
	ldrh r1, [r4, #0xc]
	orrs r0, r1
	strh r0, [r4, #0xc]
_080856E4:
	mov r0, sp
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1a
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _08085700
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r2, #0
	ldrh r1, [r4, #0xc]
	orrs r0, r1
	strh r0, [r4, #0xc]
_08085700:
	mov r0, sp
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x17
	lsrs r0, r0, #0x1a
	movs r1, #8
	ands r0, r1
	cmp r0, #0
	beq _0808571C
	movs r2, #0x80
	lsls r2, r2, #8
	adds r0, r2, #0
	ldrh r1, [r4, #0xc]
	orrs r0, r1
	strh r0, [r4, #0xc]
_0808571C:
	movs r2, #0
	adds r7, r4, #0
	adds r7, #0x30
	mov r6, sp
	adds r6, #0x1e
	adds r5, r4, #0
	adds r5, #0x26
	mov r3, sp
	adds r3, #0x16
_0808572E:
	adds r0, r5, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #7
	ble _0808572E
	movs r2, #0
	adds r5, r7, #0
	adds r3, r6, #0
_08085742:
	adds r0, r5, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #9
	ble _08085742
	adds r0, r4, #0
	bl GetUnitMaxHp
	adds r1, r0, #0
	adds r0, r4, #0
	bl SetUnitHp
	ldrb r0, [r4, #9]
	cmp r0, #0x7f
	bne _08085768
	movs r0, #0xff
	strb r0, [r4, #9]
_08085768:
	ldrb r0, [r4, #0xe]
	cmp r0, #0x3f
	bne _08085772
	movs r0, #0xff
	strb r0, [r4, #0xe]
_08085772:
	ldrb r0, [r4, #0xf]
	cmp r0, #0x3f
	bne _0808577C
	movs r0, #0xff
	strb r0, [r4, #0xf]
_0808577C:
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085784: .4byte ReadSramFast

	thumb_func_start sub_8085788
sub_8085788: @ 0x08085788
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	mov r1, sp
	movs r0, #0xff
	strb r0, [r1, #6]
	mov r0, sp
	adds r1, r4, #0
	bl sub_80844D4
	cmp r4, #3
	bne _080857A8
	mov r0, sp
	movs r1, #4
	bl sub_80844D4
_080857A8:
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80857B0
sub_80857B0: @ 0x080857B0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	mov r8, r0
	ldr r4, _080858B8 @ =gPlaySt
	movs r0, #8
	ldrb r1, [r4, #0x14]
	ands r0, r1
	cmp r0, #0
	bne _080858AA
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080858AA
	bl sub_8085F14
	add r8, r0
	mov r0, r8
	bl sub_8084560
	adds r7, r0, #0
	bl GetGameTime
	str r0, [r4]
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0x20
	bl WriteAndVerifySramFast
	bl SaveActionRand
	ldr r0, _080858BC @ =gAction
	adds r1, r7, #0
	adds r1, #0x20
	movs r2, #0x18
	bl WriteAndVerifySramFast
	ldr r5, _080858C0 @ =gBuf
	ldr r6, _080858C4 @ =gUnitArrayBlue
	movs r4, #0x33
_08085806:
	adds r1, r5, #0
	adds r5, #0x34
	adds r0, r6, #0
	bl sub_8085A48
	adds r6, #0x48
	subs r4, #1
	cmp r4, #0
	bge _08085806
	movs r0, #0x38
	adds r0, r0, r7
	mov sb, r0
	ldr r6, _080858C8 @ =gUnitArrayRed
	movs r4, #0x31
_08085822:
	adds r1, r5, #0
	adds r5, #0x34
	adds r0, r6, #0
	bl sub_8085A48
	adds r6, #0x48
	subs r4, #1
	cmp r4, #0
	bge _08085822
	ldr r6, _080858CC @ =gUnitArrayGreen
	movs r4, #9
_08085838:
	adds r1, r5, #0
	adds r5, #0x34
	adds r0, r6, #0
	bl sub_8085A48
	adds r6, #0x48
	subs r4, #1
	cmp r4, #0
	bge _08085838
	movs r4, #0
	ldr r0, _080858C0 @ =gBuf
	movs r2, #0xb6
	lsls r2, r2, #5
	mov r1, sb
	bl WriteSramFast
	movs r1, #0xed
	lsls r1, r1, #5
	adds r0, r7, r1
	bl sub_8084648
	ldr r1, _080858D0 @ =0x00001DA5
	adds r0, r7, r1
	bl sub_8084628
	ldr r1, _080858D4 @ =0x000017F8
	adds r0, r7, r1
	bl sub_80846B8
	movs r1, #0xc6
	lsls r1, r1, #5
	adds r0, r7, r1
	bl sub_8084884
	movs r1, #0xe9
	lsls r1, r1, #5
	adds r0, r7, r1
	bl sub_80848A8
	ldr r1, _080858D8 @ =0x000016F8
	adds r0, r7, r1
	bl sub_8085EB4
	ldr r0, _080858DC @ =0x00011217
	str r0, [sp]
	mov r1, sp
	movs r0, #1
	strb r0, [r1, #6]
	mov r0, sp
	mov r1, r8
	bl sub_80844D4
	ldr r0, _080858E0 @ =gBmSt
	adds r0, #0x3c
	strb r4, [r0]
	bl sub_8085F24
_080858AA:
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080858B8: .4byte gPlaySt
_080858BC: .4byte gAction
_080858C0: .4byte gBuf
_080858C4: .4byte gUnitArrayBlue
_080858C8: .4byte gUnitArrayRed
_080858CC: .4byte gUnitArrayGreen
_080858D0: .4byte 0x00001DA5
_080858D4: .4byte 0x000017F8
_080858D8: .4byte 0x000016F8
_080858DC: .4byte 0x00011217
_080858E0: .4byte gBmSt

	thumb_func_start sub_80858E4
sub_80858E4: @ 0x080858E4
	push {r4, r5, r6, lr}
	ldr r1, _080859B0 @ =0x0203DA14
	ldrb r1, [r1]
	adds r0, r1, r0
	bl sub_808460C
	adds r6, r0, #0
	ldr r5, _080859B4 @ =ReadSramFast
	ldr r4, _080859B8 @ =gPlaySt
	ldr r3, [r5]
	adds r1, r4, #0
	movs r2, #0x20
	bl _call_via_r3
	ldr r0, [r4]
	bl SetGameTime
	adds r0, r6, #0
	adds r0, #0x20
	ldr r1, _080859BC @ =gAction
	ldr r3, [r5]
	movs r2, #0x18
	bl _call_via_r3
	bl RestoreActionRand
	bl InitUnits
	movs r4, #0
	movs r5, #0
_08085920:
	movs r0, #0x34
	muls r0, r4, r0
	adds r0, #0x38
	adds r0, r6, r0
	ldr r1, _080859C0 @ =gUnitArrayBlue
	adds r1, r5, r1
	bl sub_8085CE0
	adds r5, #0x48
	adds r4, #1
	cmp r4, #0x33
	ble _08085920
	movs r4, #0
	movs r5, #0
_0808593C:
	movs r0, #0x34
	muls r0, r4, r0
	ldr r1, _080859C4 @ =0x00000AC8
	adds r0, r0, r1
	adds r0, r6, r0
	ldr r1, _080859C8 @ =gUnitArrayRed
	adds r1, r5, r1
	bl sub_8085CE0
	adds r5, #0x48
	adds r4, #1
	cmp r4, #0x31
	ble _0808593C
	movs r4, #0
	movs r5, #0
_0808595A:
	movs r0, #0x34
	muls r0, r4, r0
	ldr r1, _080859CC @ =0x000014F0
	adds r0, r0, r1
	adds r0, r6, r0
	ldr r1, _080859D0 @ =gUnitArrayGreen
	adds r1, r5, r1
	bl sub_8085CE0
	adds r5, #0x48
	adds r4, #1
	cmp r4, #9
	ble _0808595A
	movs r1, #0xc6
	lsls r1, r1, #5
	adds r0, r6, r1
	bl sub_808483C
	movs r1, #0xe9
	lsls r1, r1, #5
	adds r0, r6, r1
	bl sub_8084868
	ldr r1, _080859D4 @ =0x000017F8
	adds r0, r6, r1
	bl sub_80846D0
	movs r1, #0xed
	lsls r1, r1, #5
	adds r0, r6, r1
	bl sub_8084690
	ldr r1, _080859D8 @ =0x00001DA5
	adds r0, r6, r1
	bl sub_8084668
	ldr r1, _080859DC @ =0x000016F8
	adds r0, r6, r1
	bl sub_8085ED0
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080859B0: .4byte 0x0203DA14
_080859B4: .4byte ReadSramFast
_080859B8: .4byte gPlaySt
_080859BC: .4byte gAction
_080859C0: .4byte gUnitArrayBlue
_080859C4: .4byte 0x00000AC8
_080859C8: .4byte gUnitArrayRed
_080859CC: .4byte 0x000014F0
_080859D0: .4byte gUnitArrayGreen
_080859D4: .4byte 0x000017F8
_080859D8: .4byte 0x00001DA5
_080859DC: .4byte 0x000016F8

	thumb_func_start sub_80859E0
sub_80859E0: @ 0x080859E0
	push {r4, lr}
	adds r4, r0, #0
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08085A24
	cmp r4, #3
	bne _08085A24
	ldr r4, _08085A28 @ =0x0203DA14
	bl sub_8085EF4
	strb r0, [r4]
	adds r1, r0, #0
	adds r1, #3
	movs r0, #0
	bl sub_8084438
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08085A2C
	bl sub_8085F14
	strb r0, [r4]
	adds r1, r0, #0
	adds r1, #3
	movs r0, #0
	bl sub_8084438
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08085A2C
	movs r0, #0x7f
	strb r0, [r4]
_08085A24:
	movs r0, #0
	b _08085A2E
	.align 2, 0
_08085A28: .4byte 0x0203DA14
_08085A2C:
	movs r0, #1
_08085A2E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8085A34
sub_8085A34: @ 0x08085A34
	push {lr}
	ldr r2, _08085A44 @ =0x0203DA14
	ldrb r2, [r2]
	adds r0, r2, r0
	bl sub_8085270
	pop {r0}
	bx r0
	.align 2, 0
_08085A44: .4byte 0x0203DA14

	thumb_func_start sub_8085A48
sub_8085A48: @ 0x08085A48
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r6, r0, #0
	mov ip, r1
	ldr r0, [r6]
	cmp r0, #0
	bne _08085A62
	strb r0, [r1]
	b _08085CAE
_08085A62:
	ldrb r0, [r0, #4]
	mov r1, ip
	strb r0, [r1]
	ldr r0, [r6, #4]
	ldrb r0, [r0, #4]
	strb r0, [r1, #1]
	movs r1, #8
	ldrsb r1, [r6, r1]
	mov r2, ip
	adds r2, #0x28
	movs r4, #0x1f
	ands r1, r4
	movs r3, #0x20
	rsbs r3, r3, #0
	adds r0, r3, #0
	ldrb r5, [r2]
	ands r0, r5
	orrs r0, r1
	strb r0, [r2]
	ldrb r0, [r6, #9]
	mov r7, ip
	strb r0, [r7, #0xe]
	ldrh r0, [r6, #0xc]
	strh r0, [r7, #4]
	movs r1, #0xe
	ldrsb r1, [r6, r1]
	movs r0, #0x3f
	ands r1, r0
	lsls r1, r1, #5
	ldr r0, _08085CC0 @ =0xFFFFF81F
	ldrh r2, [r7, #0x28]
	ands r0, r2
	orrs r0, r1
	strh r0, [r7, #0x28]
	movs r1, #0x3f
	ldrb r5, [r6, #0xf]
	ands r1, r5
	lsls r1, r1, #0xb
	ldr r0, [r7, #0x28]
	ldr r2, _08085CC4 @ =0xFFFE07FF
	ands r0, r2
	orrs r0, r1
	str r0, [r7, #0x28]
	ldrb r0, [r6, #0x10]
	strb r0, [r7, #0xc]
	ldrb r0, [r6, #0x11]
	strb r0, [r7, #0xd]
	movs r1, #0x12
	ldrsb r1, [r6, r1]
	mov r2, ip
	adds r2, #0x2a
	ands r1, r4
	lsls r1, r1, #1
	movs r0, #0x3f
	rsbs r0, r0, #0
	ldrb r7, [r2]
	ands r0, r7
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0x13
	ldrsb r1, [r6, r1]
	movs r2, #0x1f
	ands r1, r2
	lsls r1, r1, #6
	ldr r0, _08085CC8 @ =0xFFFFF83F
	mov r5, ip
	ldrh r5, [r5, #0x2a]
	ands r0, r5
	orrs r0, r1
	mov r7, ip
	strh r0, [r7, #0x2a]
	movs r1, #0x14
	ldrsb r1, [r6, r1]
	movs r0, #0x2b
	add r0, ip
	mov r8, r0
	lsls r1, r1, #3
	movs r5, #7
	mov sb, r5
	movs r0, #7
	mov r7, r8
	ldrb r7, [r7]
	ands r0, r7
	orrs r0, r1
	mov r1, r8
	strb r0, [r1]
	movs r0, #0x15
	ldrsb r0, [r6, r0]
	mov r1, ip
	adds r1, #0x2c
	ands r0, r4
	ldrb r5, [r1]
	ands r3, r5
	orrs r3, r0
	strb r3, [r1]
	movs r1, #0x16
	ldrsb r1, [r6, r1]
	ands r1, r2
	lsls r1, r1, #5
	ldr r0, _08085CCC @ =0xFFFFFC1F
	mov r7, ip
	ldrh r7, [r7, #0x2c]
	ands r0, r7
	orrs r0, r1
	mov r1, ip
	strh r0, [r1, #0x2c]
	movs r1, #0x17
	ldrsb r1, [r6, r1]
	mov r2, ip
	adds r2, #0x2d
	ands r1, r4
	lsls r1, r1, #2
	movs r0, #0x7d
	rsbs r0, r0, #0
	ldrb r3, [r2]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	movs r2, #0x18
	ldrsb r2, [r6, r2]
	movs r3, #0x1f
	ands r2, r3
	lsls r2, r2, #0xf
	mov r4, ip
	ldr r0, [r4, #0x2c]
	ldr r1, _08085CD0 @ =0xFFF07FFF
	ands r0, r1
	orrs r0, r2
	str r0, [r4, #0x2c]
	adds r0, r6, #0
	adds r0, #0x2e
	ldrb r2, [r0]
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
	adds r4, #0x2e
	mov r5, sb
	ands r1, r5
	lsls r1, r1, #4
	movs r0, #0x71
	rsbs r0, r0, #0
	ldrb r7, [r4]
	ands r0, r7
	orrs r0, r1
	strb r0, [r4]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x1c
	movs r0, #7
	ands r2, r0
	lsls r2, r2, #7
	ldr r0, _08085CD4 @ =0xFFFFFC7F
	mov r1, ip
	ldrh r1, [r1, #0x2e]
	ands r0, r1
	orrs r0, r2
	mov r2, ip
	strh r0, [r2, #0x2e]
	adds r0, r6, #0
	adds r0, #0x2f
	ldrb r2, [r0]
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
	adds r4, #1
	ands r1, r5
	lsls r1, r1, #2
	movs r0, #0x1d
	rsbs r0, r0, #0
	ldrb r5, [r4]
	ands r0, r5
	orrs r0, r1
	lsrs r2, r2, #4
	lsls r2, r2, #5
	ands r0, r3
	orrs r0, r2
	strb r0, [r4]
	ldrb r0, [r6, #0x19]
	mov r7, ip
	strb r0, [r7, #3]
	movs r1, #0x1a
	ldrsb r1, [r6, r1]
	mov r2, ip
	adds r2, #0x30
	movs r0, #0xf
	ands r1, r0
	movs r0, #0x10
	rsbs r0, r0, #0
	ldrb r3, [r2]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2]
	ldrh r0, [r6, #0x1c]
	strh r0, [r7, #6]
	ldrh r0, [r6, #0x1e]
	strh r0, [r7, #8]
	ldrh r0, [r6, #0x20]
	strh r0, [r7, #0xa]
	ldr r1, _08085CD8 @ =0x00003FFF
	ldrh r4, [r6, #0x22]
	ands r1, r4
	lsls r1, r1, #4
	ldr r0, [r7, #0x30]
	ldr r2, _08085CDC @ =0xFFFC000F
	ands r0, r2
	orrs r0, r1
	str r0, [r7, #0x30]
	ldrh r5, [r6, #0x24]
	lsls r1, r5, #2
	movs r0, #3
	ldrh r7, [r7, #0x32]
	ands r0, r7
	orrs r0, r1
	mov r1, ip
	strh r0, [r1, #0x32]
	movs r2, #0
	mov r5, ip
	adds r5, #0x18
	adds r7, r6, #0
	adds r7, #0x30
	movs r3, #0x42
	adds r3, r3, r6
	mov r8, r3
	adds r4, r6, #0
	adds r4, #0x43
	str r4, [sp, #0xc]
	movs r0, #0x22
	add r0, ip
	mov sb, r0
	adds r1, r6, #0
	adds r1, #0x44
	str r1, [sp, #0x10]
	movs r3, #0x23
	add r3, ip
	mov sl, r3
	adds r4, #2
	str r4, [sp, #0x14]
	mov r0, ip
	adds r0, #0x26
	str r0, [sp]
	subs r1, #4
	str r1, [sp, #8]
	adds r3, r6, #0
	adds r3, #0x46
	str r3, [sp, #0x18]
	mov r4, ip
	adds r4, #0x27
	str r4, [sp, #4]
	ldrb r1, [r6, #0xa]
	mov r0, sp
	strb r1, [r0, #0x1c]
	subs r4, #0x17
	subs r3, #0x20
_08085C56:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #7
	ble _08085C56
	movs r2, #0
	adds r4, r5, #0
	adds r3, r7, #0
_08085C6A:
	adds r0, r4, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #9
	ble _08085C6A
	mov r2, r8
	ldrb r0, [r2]
	mov r3, ip
	strb r0, [r3, #2]
	ldr r4, [sp, #0xc]
	ldrb r0, [r4]
	mov r5, sb
	strb r0, [r5]
	ldr r7, [sp, #0x10]
	ldrb r0, [r7]
	mov r1, sl
	strb r0, [r1]
	ldr r2, [sp, #0x14]
	ldrb r0, [r2]
	ldr r3, [sp]
	strb r0, [r3]
	ldr r4, [sp, #8]
	ldrh r0, [r4]
	mov r5, ip
	strh r0, [r5, #0x24]
	ldr r7, [sp, #0x18]
	ldrb r0, [r7]
	ldr r1, [sp, #4]
	strb r0, [r1]
	mov r2, sp
	ldrb r2, [r2, #0x1c]
	strb r2, [r5, #0xf]
_08085CAE:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085CC0: .4byte 0xFFFFF81F
_08085CC4: .4byte 0xFFFE07FF
_08085CC8: .4byte 0xFFFFF83F
_08085CCC: .4byte 0xFFFFFC1F
_08085CD0: .4byte 0xFFF07FFF
_08085CD4: .4byte 0xFFFFFC7F
_08085CD8: .4byte 0x00003FFF
_08085CDC: .4byte 0xFFFC000F

	thumb_func_start sub_8085CE0
sub_8085CE0: @ 0x08085CE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	adds r4, r1, #0
	ldr r1, _08085EB0 @ =ReadSramFast
	ldr r3, [r1]
	mov r1, sp
	movs r2, #0x34
	bl _call_via_r3
	mov r0, sp
	ldrb r0, [r0]
	bl GetPersonInfo
	str r0, [r4]
	mov r0, sp
	ldrb r0, [r0, #1]
	bl GetJobInfo
	str r0, [r4, #4]
	add r0, sp, #0x28
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	strb r0, [r4, #8]
	mov r0, sp
	ldrb r0, [r0, #0xe]
	strb r0, [r4, #9]
	mov r0, sp
	ldrh r0, [r0, #4]
	strh r0, [r4, #0xc]
	mov r0, sp
	ldrh r0, [r0, #0x28]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1a
	strb r0, [r4, #0xe]
	ldr r0, [sp, #0x28]
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x1a
	strb r0, [r4, #0xf]
	mov r0, sp
	ldrb r0, [r0, #0xc]
	strb r0, [r4, #0x10]
	mov r0, sp
	ldrb r0, [r0, #0xd]
	strb r0, [r4, #0x11]
	mov r0, sp
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x12]
	mov r0, sp
	ldrh r0, [r0, #0x2a]
	lsls r0, r0, #0x15
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x13]
	mov r0, sp
	adds r0, #0x2b
	ldrb r0, [r0]
	lsrs r0, r0, #3
	strb r0, [r4, #0x14]
	add r0, sp, #0x2c
	ldrb r0, [r0]
	lsls r0, r0, #0x1b
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x15]
	mov r0, sp
	ldrh r0, [r0, #0x2c]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x16]
	mov r0, sp
	adds r0, #0x2d
	ldrb r0, [r0]
	lsls r0, r0, #0x19
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x17]
	ldr r0, [sp, #0x2c]
	lsls r0, r0, #0xc
	lsrs r0, r0, #0x1b
	strb r0, [r4, #0x18]
	mov r0, sp
	adds r0, #0x2e
	ldrb r0, [r0]
	lsls r1, r0, #0x19
	adds r2, r4, #0
	adds r2, #0x2e
	mov r0, sp
	ldrh r0, [r0, #0x2e]
	lsls r0, r0, #0x16
	lsrs r0, r0, #0x1d
	lsls r0, r0, #4
	lsrs r1, r1, #0x1d
	orrs r1, r0
	strb r1, [r2]
	mov r0, sp
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r1, r0, #0x1b
	adds r2, #1
	lsrs r0, r0, #5
	lsls r0, r0, #4
	lsrs r1, r1, #0x1d
	orrs r1, r0
	strb r1, [r2]
	mov r0, sp
	ldrb r0, [r0, #3]
	strb r0, [r4, #0x19]
	add r0, sp, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #0x1c
	lsrs r0, r0, #0x1c
	strb r0, [r4, #0x1a]
	mov r0, sp
	ldrh r0, [r0, #6]
	strh r0, [r4, #0x1c]
	mov r0, sp
	ldrh r0, [r0, #8]
	strh r0, [r4, #0x1e]
	mov r0, sp
	ldrh r0, [r0, #0xa]
	strh r0, [r4, #0x20]
	ldr r0, [sp, #0x30]
	lsls r0, r0, #0xe
	lsrs r0, r0, #0x12
	strh r0, [r4, #0x22]
	mov r0, sp
	ldrh r1, [r0, #0x32]
	lsrs r0, r1, #2
	strh r0, [r4, #0x24]
	movs r2, #0
	add r0, sp, #0x18
	mov sl, r0
	mov r1, sp
	adds r1, #0x22
	str r1, [sp, #0x34]
	mov r0, sp
	adds r0, #0x23
	str r0, [sp, #0x38]
	adds r1, #4
	str r1, [sp, #0x3c]
	adds r0, #4
	str r0, [sp, #0x40]
	adds r5, r4, #0
	adds r5, #0x26
	add r3, sp, #0x10
_08085E0C:
	adds r0, r5, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #7
	ble _08085E0C
	movs r2, #0
	movs r1, #0x42
	adds r1, r1, r4
	mov ip, r1
	adds r6, r4, #0
	adds r6, #0x43
	adds r7, r4, #0
	adds r7, #0x44
	movs r0, #0x45
	adds r0, r0, r4
	mov r8, r0
	movs r1, #0x40
	adds r1, r1, r4
	mov sb, r1
	adds r0, r4, #0
	adds r0, #0x46
	str r0, [sp, #0x44]
	adds r5, r4, #0
	adds r5, #0x30
	mov r3, sl
_08085E42:
	adds r0, r5, r2
	adds r1, r3, r2
	ldrb r1, [r1]
	strb r1, [r0]
	adds r2, #1
	cmp r2, #9
	ble _08085E42
	mov r0, sp
	ldrb r0, [r0, #2]
	mov r1, ip
	strb r0, [r1]
	ldr r1, [sp, #0x34]
	ldrb r0, [r1]
	strb r0, [r6]
	ldr r1, [sp, #0x38]
	ldrb r0, [r1]
	strb r0, [r7]
	ldr r1, [sp, #0x3c]
	ldrb r0, [r1]
	mov r1, r8
	strb r0, [r1]
	mov r0, sp
	ldrh r0, [r0, #0x24]
	mov r1, sb
	strh r0, [r1]
	ldr r1, [sp, #0x40]
	ldrb r0, [r1]
	ldr r1, [sp, #0x44]
	strb r0, [r1]
	mov r0, sp
	ldrb r0, [r0, #0xf]
	strb r0, [r4, #0xa]
	ldrb r0, [r4, #9]
	cmp r0, #0x7f
	bne _08085E8C
	movs r0, #0xff
	strb r0, [r4, #9]
_08085E8C:
	ldrb r0, [r4, #0xe]
	cmp r0, #0x3f
	bne _08085E96
	movs r0, #0xff
	strb r0, [r4, #0xe]
_08085E96:
	ldrb r0, [r4, #0xf]
	cmp r0, #0x3f
	bne _08085EA0
	movs r0, #0xff
	strb r0, [r4, #0xf]
_08085EA0:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08085EB0: .4byte ReadSramFast

	thumb_func_start sub_8085EB4
sub_8085EB4: @ 0x08085EB4
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	bl GetTrap
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r4, #0
	bl WriteAndVerifySramFast
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8085ED0
sub_8085ED0: @ 0x08085ED0
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r4, _08085EF0 @ =ReadSramFast
	movs r0, #0
	bl GetTrap
	adds r1, r0, #0
	movs r2, #0x80
	lsls r2, r2, #1
	ldr r3, [r4]
	adds r0, r5, #0
	bl _call_via_r3
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08085EF0: .4byte ReadSramFast

	thumb_func_start sub_8085EF4
sub_8085EF4: @ 0x08085EF4
	push {lr}
	sub sp, #0x20
	mov r0, sp
	bl LoadGlobalSaveInfo
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	cmp r0, #1
	beq _08085F0A
	movs r0, #0
	b _08085F0C
_08085F0A:
	movs r0, #1
_08085F0C:
	add sp, #0x20
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8085F14
sub_8085F14: @ 0x08085F14
	push {lr}
	bl sub_8085EF4
	adds r1, r0, #0
	movs r0, #1
	subs r0, r0, r1
	pop {r1}
	bx r1

	thumb_func_start sub_8085F24
sub_8085F24: @ 0x08085F24
	push {lr}
	sub sp, #0x20
	mov r0, sp
	bl LoadGlobalSaveInfo
	mov r1, sp
	movs r2, #0
	mov r0, sp
	ldrb r0, [r0, #0x1f]
	cmp r0, #0
	bne _08085F3C
	movs r2, #1
_08085F3C:
	strb r2, [r1, #0x1f]
	mov r0, sp
	bl sub_8084388
	add sp, #0x20
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8085F4C
sub_8085F4C: @ 0x08085F4C
	push {r4, r5, lr}
	adds r5, r1, #0
	ldr r1, _08085F6C @ =ReadSramFast
	ldr r4, _08085F70 @ =gBuf
	ldr r3, [r1]
	adds r1, r4, #0
	adds r2, r5, #0
	bl _call_via_r3
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8000360_t
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08085F6C: .4byte ReadSramFast
_08085F70: .4byte gBuf

	thumb_func_start sub_8085F74
sub_8085F74: @ 0x08085F74
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r5, [r4, #0xa]
	ldrh r0, [r4, #8]
	bl sub_8084414
	adds r1, r5, #0
	bl sub_8085F4C
	ldr r1, [r4, #0xc]
	cmp r1, r0
	bne _08085F90
	movs r0, #1
	b _08085F92
_08085F90:
	movs r0, #0
_08085F92:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_8085F98
sub_8085F98: @ 0x08085F98
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r5, [r4, #0xa]
	ldrh r0, [r4, #8]
	bl sub_8084414
	adds r1, r5, #0
	bl sub_8085F4C
	str r0, [r4, #0xc]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8085FB4
sub_8085FB4: @ 0x08085FB4
	push {r4, r5, r6, lr}
	movs r6, #0
	ldr r4, _0808607C @ =gUnitArrayBlue
	movs r5, #0x33
_08085FBC:
	ldr r0, [r4]
	cmp r0, #0
	beq _08085FD4
	movs r0, #0
	str r0, [r4, #0x3c]
	adds r0, r4, #0
	movs r1, #0x24
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_08085FD4:
	adds r4, #0x48
	subs r5, #1
	cmp r5, #0
	bge _08085FBC
	ldr r4, _08086080 @ =gUnitArrayRed
	movs r5, #0x31
_08085FE0:
	ldr r0, [r4]
	cmp r0, #0
	beq _08085FF8
	movs r0, #0
	str r0, [r4, #0x3c]
	adds r0, r4, #0
	movs r1, #0x24
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_08085FF8:
	adds r4, #0x48
	subs r5, #1
	cmp r5, #0
	bge _08085FE0
	ldr r4, _08086084 @ =gUnitArrayGreen
	movs r5, #9
_08086004:
	ldr r0, [r4]
	cmp r0, #0
	beq _0808601C
	movs r0, #0
	str r0, [r4, #0x3c]
	adds r0, r4, #0
	movs r1, #0x24
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_0808601C:
	adds r4, #0x48
	subs r5, #1
	cmp r5, #0
	bge _08086004
	bl GetGlobalEidData
	adds r4, r0, #0
	bl sub_806BA90
	adds r1, r0, #0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r4, #0
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	bl GetChapterEidData
	adds r4, r0, #0
	bl sub_806BA9C
	adds r1, r0, #0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r4, #0
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #0
	bl GetTrap
	movs r1, #0x80
	bl sub_8085F4C
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808607C: .4byte gUnitArrayBlue
_08086080: .4byte gUnitArrayRed
_08086084: .4byte gUnitArrayGreen

	thumb_func_start sub_8086088
sub_8086088: @ 0x08086088
	sub sp, #8
	add sp, #8
	bx lr
	.align 2, 0

	thumb_func_start sub_8086090
sub_8086090: @ 0x08086090
	push {lr}
	adds r1, r0, #0
	movs r0, #0
	bl sub_8084438
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80860A4
sub_80860A4: @ 0x080860A4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x6c
	movs r0, #5
	bl sub_8084560
	mov r8, r0
	add r0, sp, #0x5c
	movs r4, #0
	strh r4, [r0]
	add r5, sp, #0x10
	ldr r2, _080861D8 @ =0x01000014
	adds r1, r5, #0
	bl CpuSet
	mov r0, sp
	adds r0, #0x5e
	strh r4, [r0]
	add r4, sp, #0x38
	ldr r2, _080861DC @ =0x01000007
	adds r1, r4, #0
	bl CpuSet
	movs r7, #0
	mov sb, r5
	add r0, sp, #0x60
	mov sl, r0
	mov r1, sp
	adds r1, #0x48
	str r1, [sp, #0x64]
	mov r3, sp
	adds r3, #0x4c
	str r3, [sp, #0x68]
	mov r6, r8
_080860EE:
	movs r0, #0xd8
	muls r0, r7, r0
	adds r0, #0x10
	mov r1, r8
	adds r4, r1, r0
	movs r5, #4
_080860FA:
	mov r0, sb
	adds r1, r4, #0
	movs r2, #0x28
	bl WriteAndVerifySramFast
	adds r4, #0x28
	subs r5, #1
	cmp r5, #0
	bge _080860FA
	add r0, sp, #0x38
	adds r1, r6, #0
	movs r2, #0xf
	bl WriteAndVerifySramFast
	adds r6, #0xd8
	adds r7, #1
	cmp r7, #9
	ble _080860EE
	movs r0, #7
	mov r3, sl
	strh r0, [r3]
	movs r1, #0x87
	lsls r1, r1, #4
	add r1, r8
	mov r0, sl
	movs r2, #2
	bl WriteAndVerifySramFast
	ldr r6, [sp, #0x64]
	mov sl, r6
	ldr r0, _080861E0 @ =gUnk_0832731C
	movs r1, #3
	mov sb, r1
	ldr r5, _080861E4 @ =0x00000874
	add r5, r8
	adds r3, r0, #4
	mov r8, r3
	adds r4, r0, #0
	movs r7, #9
_08086148:
	ldrb r3, [r4]
	lsls r0, r3, #0x1e
	lsrs r0, r0, #0x1e
	mov r6, sb
	ands r0, r6
	movs r1, #4
	rsbs r1, r1, #0
	adds r2, r1, #0
	mov r6, sl
	ldrb r6, [r6]
	ands r2, r6
	orrs r2, r0
	lsls r0, r3, #0x1c
	lsrs r0, r0, #0x1e
	mov r1, sb
	ands r0, r1
	lsls r0, r0, #2
	movs r6, #0xd
	rsbs r6, r6, #0
	adds r1, r6, #0
	ands r2, r1
	orrs r2, r0
	movs r1, #0x10
	ands r1, r3
	movs r3, #0x11
	rsbs r3, r3, #0
	adds r0, r3, #0
	ands r2, r0
	orrs r2, r1
	mov r6, sl
	strb r2, [r6]
	ldr r2, [r4]
	lsrs r2, r2, #5
	lsls r2, r2, #5
	ldr r0, [sp, #0x48]
	movs r1, #0x1f
	ands r0, r1
	orrs r0, r2
	str r0, [sp, #0x48]
	mov r0, r8
	ldr r1, [sp, #0x68]
	bl sub_80368DC
	mov r0, sl
	adds r1, r5, #0
	movs r2, #0x14
	bl WriteAndVerifySramFast
	adds r5, #0x14
	movs r0, #0x14
	add r8, r0
	adds r4, #0x14
	subs r7, #1
	cmp r7, #0
	bge _08086148
	ldr r0, _080861E8 @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x6c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080861D8: .4byte 0x01000014
_080861DC: .4byte 0x01000007
_080861E0: .4byte gUnk_0832731C
_080861E4: .4byte 0x00000874
_080861E8: .4byte 0x00020112

	thumb_func_start sub_80861EC
sub_80861EC: @ 0x080861EC
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #5
	bl sub_808460C
	ldr r2, _08086214 @ =ReadSramFast
	movs r1, #0xd8
	muls r1, r4, r1
	adds r0, r0, r1
	ldr r3, [r2]
	adds r1, r5, #0
	movs r2, #0xd8
	bl _call_via_r3
	ldrb r0, [r5]
	cmp r0, #0
	beq _08086218
	movs r0, #1
	b _0808621A
	.align 2, 0
_08086214: .4byte ReadSramFast
_08086218:
	movs r0, #0
_0808621A:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_8086220
sub_8086220: @ 0x08086220
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r0, #5
	bl sub_808460C
	ldr r2, _08086254 @ =ReadSramFast
	movs r1, #0xd8
	muls r1, r4, r1
	adds r0, r0, r1
	ldr r4, _08086258 @ =0x0203DA18
	ldr r3, [r2]
	adds r1, r4, #0
	movs r2, #0xd8
	bl _call_via_r3
	ldrb r0, [r4]
	cmp r0, #0
	beq _0808625C
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80368DC
	movs r0, #1
	b _0808625E
	.align 2, 0
_08086254: .4byte ReadSramFast
_08086258: .4byte 0x0203DA18
_0808625C:
	movs r0, #0
_0808625E:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_8086264
sub_8086264: @ 0x08086264
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r6, r0, #0
	movs r0, #5
	bl sub_8084560
	adds r4, r0, #0
	add r0, sp, #0x10
	movs r1, #0
	strh r1, [r0]
	ldr r5, _080862AC @ =0x0203DA18
	ldr r2, _080862B0 @ =0x0100006C
	adds r1, r5, #0
	bl CpuSet
	movs r0, #0xd8
	muls r0, r6, r0
	adds r4, r4, r0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0xd8
	bl WriteAndVerifySramFast
	ldr r0, _080862B4 @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080862AC: .4byte 0x0203DA18
_080862B0: .4byte 0x0100006C
_080862B4: .4byte 0x00020112

	thumb_func_start sub_80862B8
sub_80862B8: @ 0x080862B8
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x10
	adds r6, r0, #0
	mov sb, r1
	movs r0, #5
	bl sub_808460C
	adds r4, r0, #0
	movs r0, #5
	bl sub_8084560
	adds r5, r0, #0
	ldr r1, _08086324 @ =ReadSramFast
	movs r0, #0xd8
	mov r8, r0
	mov r0, r8
	muls r0, r6, r0
	adds r4, r4, r0
	ldr r6, _08086328 @ =0x0203DA18
	ldr r3, [r1]
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0xd8
	bl _call_via_r3
	mov r1, r8
	mov r0, sb
	muls r0, r1, r0
	adds r5, r5, r0
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0xd8
	bl WriteAndVerifySramFast
	ldr r0, _0808632C @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086324: .4byte ReadSramFast
_08086328: .4byte 0x0203DA18
_0808632C: .4byte 0x00020112

	thumb_func_start sub_8086330
sub_8086330: @ 0x08086330
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	mov sl, r1
	movs r0, #5
	bl sub_808460C
	adds r5, r0, #0
	movs r0, #5
	bl sub_8084560
	adds r6, r0, #0
	ldr r0, _080863BC @ =ReadSramFast
	mov sb, r0
	movs r4, #0xd8
	mov r7, r8
	muls r7, r4, r7
	adds r0, r5, r7
	mov r1, sb
	ldr r3, [r1]
	ldr r1, _080863C0 @ =0x0203DA18
	movs r2, #0xd8
	bl _call_via_r3
	mov r0, sl
	muls r0, r4, r0
	adds r4, r0, #0
	adds r5, r5, r4
	ldr r1, _080863C4 @ =0x0203DAF0
	mov r8, r1
	mov r0, sb
	ldr r3, [r0]
	adds r0, r5, #0
	movs r2, #0xd8
	bl _call_via_r3
	adds r4, r6, r4
	ldr r0, _080863C0 @ =0x0203DA18
	adds r1, r4, #0
	movs r2, #0xd8
	bl WriteAndVerifySramFast
	adds r6, r6, r7
	mov r0, r8
	adds r1, r6, #0
	movs r2, #0xd8
	bl WriteAndVerifySramFast
	ldr r0, _080863C8 @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080863BC: .4byte ReadSramFast
_080863C0: .4byte 0x0203DA18
_080863C4: .4byte 0x0203DAF0
_080863C8: .4byte 0x00020112

	thumb_func_start sub_80863CC
sub_80863CC: @ 0x080863CC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x10
	adds r4, r0, #0
	mov r8, r1
	adds r6, r2, #0
	movs r0, #5
	bl sub_8084560
	adds r5, r0, #0
	movs r0, #0xd8
	muls r4, r0, r4
	adds r1, r5, r4
	adds r0, r6, #0
	movs r2, #0xf
	bl WriteAndVerifySramFast
	adds r4, #0x10
	adds r5, r5, r4
	mov r4, r8
	movs r6, #4
_080863F8:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_80852C4
	adds r5, #0x28
	adds r4, #0x48
	subs r6, #1
	cmp r6, #0
	bge _080863F8
	ldr r0, _08086428 @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086428: .4byte 0x00020112

	thumb_func_start sub_808642C
sub_808642C: @ 0x0808642C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	adds r6, r1, #0
	adds r5, r2, #0
	movs r0, #5
	bl sub_808460C
	adds r7, r0, #0
	ldr r1, _08086480 @ =ReadSramFast
	movs r0, #0xd8
	mov r4, r8
	muls r4, r0, r4
	adds r0, r7, r4
	ldr r3, [r1]
	adds r1, r5, #0
	movs r2, #0xf
	bl _call_via_r3
	adds r4, #0x10
	adds r4, r7, r4
	movs r5, #4
_0808645A:
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_80855C4
	adds r6, #0x48
	adds r4, #0x28
	subs r5, #1
	cmp r5, #0
	bge _0808645A
	movs r0, #0xd8
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	adds r0, r7, r0
	ldrb r0, [r0]
	cmp r0, #0
	beq _08086484
	movs r0, #1
	b _08086486
	.align 2, 0
_08086480: .4byte ReadSramFast
_08086484:
	movs r0, #0
_08086486:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8086490
sub_8086490: @ 0x08086490
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	movs r0, #5
	bl sub_8084560
	adds r1, r0, #0
	ldr r0, _080864C4 @ =0x00000874
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #0xc8
	bl WriteAndVerifySramFast
	ldr r0, _080864C8 @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080864C4: .4byte 0x00000874
_080864C8: .4byte 0x00020112

	thumb_func_start sub_80864CC
sub_80864CC: @ 0x080864CC
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #5
	bl sub_808460C
	ldr r1, _080864EC @ =ReadSramFast
	ldr r2, _080864F0 @ =0x00000874
	adds r0, r0, r2
	ldr r3, [r1]
	adds r1, r4, #0
	movs r2, #0xc8
	bl _call_via_r3
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080864EC: .4byte ReadSramFast
_080864F0: .4byte 0x00000874

	thumb_func_start sub_80864F4
sub_80864F4: @ 0x080864F4
	push {r4, lr}
	sub sp, #0x10
	adds r4, r0, #0
	movs r0, #5
	bl sub_8084560
	adds r1, r0, #0
	movs r0, #0x87
	lsls r0, r0, #4
	adds r1, r1, r0
	adds r0, r4, #0
	movs r2, #2
	bl WriteAndVerifySramFast
	ldr r0, _0808652C @ =0x00020112
	str r0, [sp]
	mov r1, sp
	movs r0, #2
	strb r0, [r1, #6]
	mov r0, sp
	movs r1, #5
	bl sub_80844D4
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808652C: .4byte 0x00020112

	thumb_func_start sub_8086530
sub_8086530: @ 0x08086530
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #5
	bl sub_808460C
	ldr r1, _08086554 @ =ReadSramFast
	movs r2, #0x87
	lsls r2, r2, #4
	adds r0, r0, r2
	ldr r3, [r1]
	adds r1, r4, #0
	movs r2, #2
	bl _call_via_r3
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08086554: .4byte ReadSramFast

	thumb_func_start sub_8086558
sub_8086558: @ 0x08086558
	push {r4, lr}
	sub sp, #0x10
	movs r0, #5
	bl sub_8086090
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808656E
	b _08086586
_0808656A:
	movs r0, #1
	b _08086588
_0808656E:
	movs r4, #0
_08086570:
	adds r0, r4, #0
	mov r1, sp
	bl sub_8086220
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _0808656A
	adds r4, #1
	cmp r4, #9
	ble _08086570
_08086586:
	movs r0, #0
_08086588:
	add sp, #0x10
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_8086590
sub_8086590: @ 0x08086590
	push {r4, r5, lr}
	ldr r1, _080865D0 @ =ReadSramFast
	ldr r5, _080865D4 @ =gUnk_08689DDC
	ldr r0, [r5]
	ldr r4, _080865D8 @ =0x0203DBC8
	ldr r3, [r1]
	adds r1, r4, #0
	movs r2, #0x1c
	bl _call_via_r3
	ldr r1, [r4]
	ldr r0, _080865DC @ =0x50414D58
	cmp r1, r0
	bne _080865E4
	bl GetLang
	lsls r0, r0, #0x18
	ldr r1, _080865E0 @ =0x00020223
	adds r0, r0, r1
	ldr r1, [r4, #8]
	cmp r1, r0
	bne _080865E4
	ldr r0, [r4, #0x10]
	ldr r1, [r5]
	adds r0, r0, r1
	str r0, [r4, #0x10]
	ldr r0, [r4, #0x18]
	adds r0, r0, r1
	str r0, [r4, #0x18]
	movs r0, #1
	b _080865E6
	.align 2, 0
_080865D0: .4byte ReadSramFast
_080865D4: .4byte gUnk_08689DDC
_080865D8: .4byte 0x0203DBC8
_080865DC: .4byte 0x50414D58
_080865E0: .4byte 0x00020223
_080865E4:
	movs r0, #0
_080865E6:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_80865EC
sub_80865EC: @ 0x080865EC
	ldr r2, _080865FC @ =0x0203DBC8
	ldr r1, [r2]
	ldr r0, _08086600 @ =0x50414D58
	cmp r1, r0
	bne _08086604
	ldr r0, [r2, #0x10]
	b _08086606
	.align 2, 0
_080865FC: .4byte 0x0203DBC8
_08086600: .4byte 0x50414D58
_08086604:
	movs r0, #0
_08086606:
	bx lr

	thumb_func_start sub_8086608
sub_8086608: @ 0x08086608
	ldr r2, _08086618 @ =0x0203DBC8
	ldr r1, [r2]
	ldr r0, _0808661C @ =0x50414D58
	cmp r1, r0
	bne _08086620
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	b _08086622
	.align 2, 0
_08086618: .4byte 0x0203DBC8
_0808661C: .4byte 0x50414D58
_08086620:
	movs r0, #0
_08086622:
	bx lr

	thumb_func_start sub_8086624
sub_8086624: @ 0x08086624
	ldr r2, _08086634 @ =0x0203DBC8
	ldr r1, [r2]
	ldr r0, _08086638 @ =0x50414D58
	cmp r1, r0
	bne _0808663C
	ldr r0, [r2, #0x18]
	b _0808663E
	.align 2, 0
_08086634: .4byte 0x0203DBC8
_08086638: .4byte 0x50414D58
_0808663C:
	movs r0, #0
_0808663E:
	bx lr

	thumb_func_start sub_8086640
sub_8086640: @ 0x08086640
	ldr r2, _08086650 @ =0x0203DBC8
	ldr r1, [r2]
	ldr r0, _08086654 @ =0x50414D58
	cmp r1, r0
	bne _08086658
	movs r1, #0x16
	ldrsh r0, [r2, r1]
	b _0808665A
	.align 2, 0
_08086650: .4byte 0x0203DBC8
_08086654: .4byte 0x50414D58
_08086658:
	movs r0, #0
_0808665A:
	bx lr

	thumb_func_start sub_808665C
sub_808665C: @ 0x0808665C
	adds r2, r0, #0
	movs r3, #0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	cmp r3, r1
	bge _08086676
_0808666A:
	ldrh r0, [r2]
	adds r3, r0, r3
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _0808666A
_08086676:
	lsls r0, r3, #0x10
	lsrs r0, r0, #0x10
	bx lr

	thumb_func_start sub_808667C
sub_808667C: @ 0x0808667C
	push {r4, lr}
	ldr r4, _080866D0 @ =gBuf
	bl IsSramWorking
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080866E4
	ldr r1, _080866D4 @ =ReadSramFast
	ldr r0, _080866D8 @ =0x0E007000
	movs r2, #0x80
	lsls r2, r2, #5
	ldr r3, [r1]
	adds r1, r4, #0
	bl _call_via_r3
	ldr r1, [r4]
	ldr r0, _080866DC @ =0x50414D58
	cmp r1, r0
	bne _080866E4
	bl GetLang
	lsls r0, r0, #0x18
	ldr r1, _080866E0 @ =0x00020223
	adds r0, r0, r1
	ldr r1, [r4, #8]
	cmp r1, r0
	bne _080866E4
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _080866E4
	adds r0, r4, #0
	adds r0, #8
	ldrh r1, [r4, #4]
	bl sub_808665C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r4, #6]
	cmp r4, r0
	bne _080866E4
	movs r0, #1
	b _080866E6
	.align 2, 0
_080866D0: .4byte gBuf
_080866D4: .4byte ReadSramFast
_080866D8: .4byte 0x0E007000
_080866DC: .4byte 0x50414D58
_080866E0: .4byte 0x00020223
_080866E4:
	movs r0, #0
_080866E6:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80866EC
sub_80866EC: @ 0x080866EC
	push {r4, r5, r6, lr}
	bl sub_8086590
	ldr r5, _08086754 @ =ReadSramFast
	bl sub_8086624
	adds r4, r0, #0
	ldr r6, _08086758 @ =gBuf
	bl sub_8086640
	adds r2, r0, #0
	ldr r3, [r5]
	adds r0, r4, #0
	adds r1, r6, #0
	bl _call_via_r3
	ldr r4, _0808675C @ =gTrialLoadInfo
	ldr r1, [r4]
	adds r0, r6, #0
	bl Decompress
	ldr r1, [r4]
	ldr r0, _08086760 @ =gPlaySt
	str r0, [r1, #0x18]
	ldr r0, _08086764 @ =gBmSt
	str r0, [r1, #0x1c]
	ldr r0, _08086768 @ =gActiveUnit
	str r0, [r1, #0x20]
	ldr r0, _0808676C @ =gUnitLut
	str r0, [r1, #0x24]
	ldr r0, _08086770 @ =gBattleUnitA
	str r0, [r1, #0x28]
	ldr r0, _08086774 @ =gBattleUnitB
	str r0, [r1, #0x2c]
	ldr r0, _08086778 @ =gBattleHits
	str r0, [r1, #0x30]
	movs r0, #0
	bl GetTrap
	ldr r1, [r4]
	str r0, [r1, #0x34]
	bl GetGlobalEidData
	ldr r1, [r4]
	str r0, [r1, #0x38]
	bl GetChapterEidData
	ldr r1, [r4]
	str r0, [r1, #0x3c]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086754: .4byte ReadSramFast
_08086758: .4byte gBuf
_0808675C: .4byte gTrialLoadInfo
_08086760: .4byte gPlaySt
_08086764: .4byte gBmSt
_08086768: .4byte gActiveUnit
_0808676C: .4byte gUnitLut
_08086770: .4byte gBattleUnitA
_08086774: .4byte gBattleUnitB
_08086778: .4byte gBattleHits

	thumb_func_start sub_808677C
sub_808677C: @ 0x0808677C
	push {r4, lr}
	sub sp, #0x20
	adds r4, r0, #0
	mov r0, sp
	bl LoadGlobalSaveInfo
	movs r0, #0x28
	strb r0, [r4]
	adds r4, #1
	movs r0, #0x29
	strb r0, [r4]
	adds r4, #1
	mov r1, sp
	movs r0, #4
	ldrb r1, [r1, #0xe]
	ands r0, r1
	cmp r0, #0
	beq _080867A6
	movs r0, #0x2a
	strb r0, [r4]
	adds r4, #1
_080867A6:
	mov r1, sp
	movs r0, #2
	ldrb r1, [r1, #0xe]
	ands r0, r1
	cmp r0, #0
	beq _080867B8
	movs r0, #0x2b
	strb r0, [r4]
	adds r4, #1
_080867B8:
	mov r1, sp
	movs r0, #8
	ldrb r1, [r1, #0xe]
	ands r0, r1
	cmp r0, #0
	beq _080867CA
	movs r0, #0x2c
	strb r0, [r4]
	adds r4, #1
_080867CA:
	bl sub_808667C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080867E2
	bl sub_80866EC
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r1, #0
	strb r0, [r4]
	adds r4, #1
_080867E2:
	movs r0, #0
	strb r0, [r4]
	movs r0, #1
	add sp, #0x20
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_80867F0
sub_80867F0: @ 0x080867F0
	push {lr}
	bl GetChapterUnk_0802BBD0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80867FC
sub_80867FC: @ 0x080867FC
	push {lr}
	movs r2, #0
	adds r0, #1
	cmp r0, #0x2d
	bls _08086808
	b _08086904
_08086808:
	lsls r0, r0, #2
	ldr r1, _08086814 @ =_08086818
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086814: .4byte _08086818
_08086818: @ jump table
	.4byte _080868F8 @ case 0
	.4byte _08086904 @ case 1
	.4byte _08086904 @ case 2
	.4byte _08086904 @ case 3
	.4byte _08086904 @ case 4
	.4byte _08086904 @ case 5
	.4byte _08086904 @ case 6
	.4byte _08086904 @ case 7
	.4byte _08086904 @ case 8
	.4byte _08086904 @ case 9
	.4byte _08086904 @ case 10
	.4byte _08086904 @ case 11
	.4byte _08086904 @ case 12
	.4byte _08086904 @ case 13
	.4byte _08086904 @ case 14
	.4byte _08086904 @ case 15
	.4byte _08086904 @ case 16
	.4byte _08086904 @ case 17
	.4byte _08086904 @ case 18
	.4byte _08086904 @ case 19
	.4byte _08086904 @ case 20
	.4byte _08086904 @ case 21
	.4byte _08086904 @ case 22
	.4byte _08086904 @ case 23
	.4byte _08086904 @ case 24
	.4byte _08086904 @ case 25
	.4byte _08086904 @ case 26
	.4byte _08086904 @ case 27
	.4byte _08086904 @ case 28
	.4byte _08086904 @ case 29
	.4byte _08086904 @ case 30
	.4byte _08086904 @ case 31
	.4byte _08086904 @ case 32
	.4byte _08086904 @ case 33
	.4byte _08086904 @ case 34
	.4byte _08086904 @ case 35
	.4byte _08086904 @ case 36
	.4byte _08086904 @ case 37
	.4byte _08086904 @ case 38
	.4byte _08086904 @ case 39
	.4byte _08086904 @ case 40
	.4byte _080868D0 @ case 41
	.4byte _080868D8 @ case 42
	.4byte _080868E0 @ case 43
	.4byte _080868E8 @ case 44
	.4byte _080868F0 @ case 45
_080868D0:
	ldr r2, _080868D4 @ =0x00000C7C
	b _08086904
	.align 2, 0
_080868D4: .4byte 0x00000C7C
_080868D8:
	ldr r2, _080868DC @ =0x00000C7F
	b _08086904
	.align 2, 0
_080868DC: .4byte 0x00000C7F
_080868E0:
	ldr r2, _080868E4 @ =0x00000C82
	b _08086904
	.align 2, 0
_080868E4: .4byte 0x00000C82
_080868E8:
	ldr r2, _080868EC @ =0x00000C85
	b _08086904
	.align 2, 0
_080868EC: .4byte 0x00000C85
_080868F0:
	ldr r2, _080868F4 @ =0x00000C88
	b _08086904
	.align 2, 0
_080868F4: .4byte 0x00000C88
_080868F8:
	ldr r0, _08086900 @ =gTrialLoadInfo
	ldr r0, [r0]
	ldr r0, [r0, #0x10]
	b _0808690A
	.align 2, 0
_08086900: .4byte gTrialLoadInfo
_08086904:
	adds r0, r2, #0
	bl DecodeMsg
_0808690A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8086910
sub_8086910: @ 0x08086910
	push {lr}
	movs r2, #0
	adds r0, #1
	cmp r0, #0x2d
	bls _0808691C
	b _08086A18
_0808691C:
	lsls r0, r0, #2
	ldr r1, _08086928 @ =_0808692C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086928: .4byte _0808692C
_0808692C: @ jump table
	.4byte _08086A0C @ case 0
	.4byte _08086A18 @ case 1
	.4byte _08086A18 @ case 2
	.4byte _08086A18 @ case 3
	.4byte _08086A18 @ case 4
	.4byte _08086A18 @ case 5
	.4byte _08086A18 @ case 6
	.4byte _08086A18 @ case 7
	.4byte _08086A18 @ case 8
	.4byte _08086A18 @ case 9
	.4byte _08086A18 @ case 10
	.4byte _08086A18 @ case 11
	.4byte _08086A18 @ case 12
	.4byte _08086A18 @ case 13
	.4byte _08086A18 @ case 14
	.4byte _08086A18 @ case 15
	.4byte _08086A18 @ case 16
	.4byte _08086A18 @ case 17
	.4byte _08086A18 @ case 18
	.4byte _08086A18 @ case 19
	.4byte _08086A18 @ case 20
	.4byte _08086A18 @ case 21
	.4byte _08086A18 @ case 22
	.4byte _08086A18 @ case 23
	.4byte _08086A18 @ case 24
	.4byte _08086A18 @ case 25
	.4byte _08086A18 @ case 26
	.4byte _08086A18 @ case 27
	.4byte _08086A18 @ case 28
	.4byte _08086A18 @ case 29
	.4byte _08086A18 @ case 30
	.4byte _08086A18 @ case 31
	.4byte _08086A18 @ case 32
	.4byte _08086A18 @ case 33
	.4byte _08086A18 @ case 34
	.4byte _08086A18 @ case 35
	.4byte _08086A18 @ case 36
	.4byte _08086A18 @ case 37
	.4byte _08086A18 @ case 38
	.4byte _08086A18 @ case 39
	.4byte _08086A18 @ case 40
	.4byte _080869E4 @ case 41
	.4byte _080869EC @ case 42
	.4byte _080869F2 @ case 43
	.4byte _080869FC @ case 44
	.4byte _08086A04 @ case 45
_080869E4:
	ldr r2, _080869E8 @ =0x00000C7D
	b _08086A18
	.align 2, 0
_080869E8: .4byte 0x00000C7D
_080869EC:
	movs r2, #0xc8
	lsls r2, r2, #4
	b _08086A18
_080869F2:
	ldr r2, _080869F8 @ =0x00000C83
	b _08086A18
	.align 2, 0
_080869F8: .4byte 0x00000C83
_080869FC:
	ldr r2, _08086A00 @ =0x00000C86
	b _08086A18
	.align 2, 0
_08086A00: .4byte 0x00000C86
_08086A04:
	ldr r2, _08086A08 @ =0x00000C89
	b _08086A18
	.align 2, 0
_08086A08: .4byte 0x00000C89
_08086A0C:
	ldr r0, _08086A14 @ =gTrialLoadInfo
	ldr r0, [r0]
	ldr r0, [r0, #0x14]
	b _08086A1E
	.align 2, 0
_08086A14: .4byte gTrialLoadInfo
_08086A18:
	adds r0, r2, #0
	bl DecodeMsg
_08086A1E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start LoadTrialMapBonusUnits
LoadTrialMapBonusUnits: @ 0x08086A24
	push {r4, lr}
	bl GetGlobalCompletedPlaythroughCount
	adds r4, r0, #1
	ldr r1, _08086A88 @ =gMapHidden
	movs r0, #0
	str r0, [r1]
	cmp r4, #1
	ble _08086A3C
	ldr r0, _08086A8C @ =gUnk_086876AC
	bl BatchCreateUnits
_08086A3C:
	cmp r4, #2
	ble _08086A46
	ldr r0, _08086A90 @ =gUnk_086876CC
	bl BatchCreateUnits
_08086A46:
	cmp r4, #3
	ble _08086A50
	ldr r0, _08086A94 @ =gUnk_086876EC
	bl BatchCreateUnits
_08086A50:
	cmp r4, #4
	ble _08086A5A
	ldr r0, _08086A98 @ =gUnk_0868770C
	bl BatchCreateUnits
_08086A5A:
	cmp r4, #5
	ble _08086A64
	ldr r0, _08086A9C @ =gUnk_0868772C
	bl BatchCreateUnits
_08086A64:
	cmp r4, #6
	ble _08086A6E
	ldr r0, _08086AA0 @ =gUnk_0868774C
	bl BatchCreateUnits
_08086A6E:
	cmp r4, #7
	ble _08086A78
	ldr r0, _08086AA4 @ =gUnk_0868776C
	bl BatchCreateUnits
_08086A78:
	cmp r4, #9
	ble _08086A82
	ldr r0, _08086AA8 @ =gUnk_0868778C
	bl BatchCreateUnits
_08086A82:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08086A88: .4byte gMapHidden
_08086A8C: .4byte gUnk_086876AC
_08086A90: .4byte gUnk_086876CC
_08086A94: .4byte gUnk_086876EC
_08086A98: .4byte gUnk_0868770C
_08086A9C: .4byte gUnk_0868772C
_08086AA0: .4byte gUnk_0868774C
_08086AA4: .4byte gUnk_0868776C
_08086AA8: .4byte gUnk_0868778C

	thumb_func_start sub_8086AAC
sub_8086AAC: @ 0x08086AAC
	push {r4, r5, lr}
	bl GetGameTime
	ldr r4, _08086AF4 @ =gPlaySt
	ldr r1, [r4, #4]
	subs r0, r0, r1
	movs r1, #0xb4
	bl __udivsi3
	adds r3, r0, #0
	ldr r0, _08086AF8 @ =0x0000EA60
	cmp r3, r0
	ble _08086AC8
	adds r3, r0, #0
_08086AC8:
	ldr r0, _08086AFC @ =0x0203DBE4
	movs r2, #0x3f
	ldrb r1, [r4, #0xe]
	ands r2, r1
	movs r1, #0x40
	rsbs r1, r1, #0
	ldrb r5, [r0]
	ands r1, r5
	orrs r1, r2
	strb r1, [r0]
	ldrh r4, [r4, #0x10]
	lsls r2, r4, #6
	movs r1, #0x3f
	ldrh r4, [r0]
	ands r1, r4
	orrs r1, r2
	strh r1, [r0]
	strh r3, [r0, #2]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08086AF4: .4byte gPlaySt
_08086AF8: .4byte 0x0000EA60
_08086AFC: .4byte 0x0203DBE4

	thumb_func_start sub_8086B00
sub_8086B00: @ 0x08086B00
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r2, #0
	ldr r0, _08086B50 @ =gMapTerrain
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	adds r5, r0, r4
	ldrb r3, [r5]
	ldr r0, [r1, #4]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, r3
	bne _08086B20
	movs r2, #1
_08086B20:
	lsls r2, r2, #1
	subs r0, r1, #4
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, r3
	bne _08086B30
	adds r2, #1
_08086B30:
	lsls r2, r2, #1
	ldrb r0, [r5, #1]
	cmp r0, r3
	bne _08086B3A
	adds r2, #1
_08086B3A:
	lsls r2, r2, #1
	subs r0, r5, #1
	ldrb r0, [r0]
	cmp r0, r3
	bne _08086B46
	adds r2, #1
_08086B46:
	adds r0, r2, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08086B50: .4byte gMapTerrain

	thumb_func_start sub_8086B54
sub_8086B54: @ 0x08086B54
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	movs r3, #0
	ldr r2, _08086BE4 @ =gMapTerrain
	ldr r1, [r2]
	lsls r0, r5, #2
	adds r0, r0, r1
	ldr r0, [r0, #4]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _08086B7A
	cmp r0, #0x15
	beq _08086B7A
	cmp r0, #0x16
	beq _08086B7A
	cmp r0, #0x13
	bne _08086B7C
_08086B7A:
	adds r3, #1
_08086B7C:
	lsls r3, r3, #1
	ldr r0, [r2]
	lsls r1, r5, #2
	adds r0, r1, r0
	subs r0, #4
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _08086B9C
	cmp r0, #0x15
	beq _08086B9C
	cmp r0, #0x16
	beq _08086B9C
	cmp r0, #0x13
	bne _08086B9E
_08086B9C:
	adds r3, #1
_08086B9E:
	lsls r3, r3, #1
	ldr r0, [r2]
	adds r0, r1, r0
	ldr r0, [r0]
	adds r0, r4, r0
	ldrb r0, [r0, #1]
	cmp r0, #0x10
	beq _08086BBA
	cmp r0, #0x15
	beq _08086BBA
	cmp r0, #0x16
	beq _08086BBA
	cmp r0, #0x13
	bne _08086BBC
_08086BBA:
	adds r3, #1
_08086BBC:
	lsls r3, r3, #1
	ldr r0, [r2]
	adds r0, r1, r0
	ldr r0, [r0]
	adds r0, r4, r0
	subs r0, #1
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _08086BDA
	cmp r0, #0x15
	beq _08086BDA
	cmp r0, #0x16
	beq _08086BDA
	cmp r0, #0x13
	bne _08086BDC
_08086BDA:
	adds r3, #1
_08086BDC:
	adds r0, r3, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08086BE4: .4byte gMapTerrain

	thumb_func_start sub_8086BE8
sub_8086BE8: @ 0x08086BE8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, _08086C20 @ =gMapTerrain
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	adds r2, r0, r4
	ldrb r3, [r2]
	subs r0, r2, #1
	ldrb r6, [r0]
	cmp r6, r3
	beq _08086C08
	ldrb r5, [r2, #1]
	cmp r5, r3
	bne _08086C40
_08086C08:
	subs r0, r1, #4
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r2, [r0]
	adds r0, r2, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086C24
	movs r0, #4
	b _08086CFC
	.align 2, 0
_08086C20: .4byte gMapTerrain
_08086C24:
	ldr r0, [r1, #4]
	adds r0, r0, r4
	ldrb r0, [r0]
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086C38
	movs r0, #0
	b _08086CFC
_08086C38:
	cmp r2, #0xf
	bne _08086CFA
	movs r0, #0xc
	b _08086CFC
_08086C40:
	subs r0, r1, #4
	ldr r0, [r0]
	adds r2, r0, r4
	ldrb r0, [r2]
	cmp r0, r3
	beq _08086C56
	ldr r0, [r1, #4]
	adds r1, r0, r4
	ldrb r0, [r1]
	cmp r0, r3
	bne _08086C82
_08086C56:
	adds r0, r5, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086C66
	movs r0, #2
	b _08086CFC
_08086C66:
	adds r0, r6, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086C76
	movs r0, #6
	b _08086CFC
_08086C76:
	cmp r5, #0xf
	bne _08086C7E
	movs r0, #0xd
	b _08086CFC
_08086C7E:
	movs r0, #9
	b _08086CFC
_08086C82:
	subs r0, r1, #1
	ldrb r5, [r0]
	cmp r5, r3
	beq _08086C90
	ldrb r4, [r2, #1]
	cmp r4, r3
	bne _08086CC0
_08086C90:
	subs r0, r2, #1
	ldrb r2, [r0]
	adds r0, r2, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086CA4
	movs r0, #5
	b _08086CFC
_08086CA4:
	ldrb r0, [r1, #1]
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086CB4
	movs r0, #1
	b _08086CFC
_08086CB4:
	cmp r2, #0xf
	bne _08086CBC
	movs r0, #0xe
	b _08086CFC
_08086CBC:
	movs r0, #0xa
	b _08086CFC
_08086CC0:
	ldrb r1, [r1, #1]
	cmp r1, r3
	beq _08086CCE
	subs r0, r2, #1
	ldrb r0, [r0]
	cmp r0, r3
	bne _08086CFA
_08086CCE:
	adds r0, r4, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086CDE
	movs r0, #3
	b _08086CFC
_08086CDE:
	adds r0, r5, #0
	subs r0, #0x15
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _08086CEE
	movs r0, #7
	b _08086CFC
_08086CEE:
	cmp r4, #0xf
	bne _08086CF6
	movs r0, #0xf
	b _08086CFC
_08086CF6:
	movs r0, #0xb
	b _08086CFC
_08086CFA:
	movs r0, #8
_08086CFC:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8086D04
sub_8086D04: @ 0x08086D04
	adds r2, r0, #0
	ldr r0, _08086D3C @ =gMapTerrain
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	subs r0, r1, #4
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x2d
	beq _08086D36
	ldr r0, [r1, #4]
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x2d
	beq _08086D36
	ldr r0, [r1]
	adds r1, r2, r0
	subs r0, r1, #1
	ldrb r0, [r0]
	cmp r0, #0x2d
	beq _08086D36
	ldrb r1, [r1, #1]
	cmp r1, #0x2d
	bne _08086D40
_08086D36:
	movs r0, #0x12
	b _08086D42
	.align 2, 0
_08086D3C: .4byte gMapTerrain
_08086D40:
	movs r0, #0x11
_08086D42:
	bx lr

	thumb_func_start sub_8086D44
sub_8086D44: @ 0x08086D44
	ldr r2, _08086D5C @ =gMapTerrain
	ldr r2, [r2]
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r1, [r1]
	adds r0, r0, r1
	ldrb r1, [r0, #1]
	cmp r1, #0x1e
	bne _08086D60
	movs r0, #0x16
	b _08086D6E
	.align 2, 0
_08086D5C: .4byte gMapTerrain
_08086D60:
	subs r0, #1
	ldrb r0, [r0]
	cmp r0, #0x1e
	beq _08086D6C
	movs r0, #7
	b _08086D6E
_08086D6C:
	movs r0, #0x17
_08086D6E:
	bx lr

	thumb_func_start sub_8086D70
sub_8086D70: @ 0x08086D70
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	ldr r7, _08086DB8 @ =gMapTerrain
	ldr r0, [r7]
	lsls r6, r1, #2
	adds r2, r6, r0
	ldr r0, [r2]
	adds r0, r4, r0
	ldrb r1, [r0, #1]
	cmp r1, #0x13
	beq _08086DB4
	subs r0, #1
	ldrb r3, [r0]
	cmp r3, #0x13
	beq _08086DB4
	ldr r0, [r2, #4]
	adds r0, r0, r4
	ldrb r5, [r0]
	cmp r5, #0x13
	beq _08086DC4
	subs r0, r2, #4
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0x13
	beq _08086DC4
	cmp r1, #0x10
	beq _08086DC4
	cmp r3, #0x10
	beq _08086DC4
	cmp r5, #0x10
	beq _08086DB4
	cmp r0, #0x10
	bne _08086DBC
_08086DB4:
	movs r0, #0x10
	b _08086DE4
	.align 2, 0
_08086DB8: .4byte gMapTerrain
_08086DBC:
	cmp r1, #0x16
	beq _08086DC4
	cmp r3, #0x16
	bne _08086DC8
_08086DC4:
	movs r0, #0x18
	b _08086DE4
_08086DC8:
	ldr r0, [r7]
	adds r1, r6, r0
	ldr r0, [r1, #4]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0x16
	beq _08086DE2
	subs r0, r1, #4
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0x16
	bne _08086DE4
_08086DE2:
	movs r0, #0x10
_08086DE4:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8086DEC
sub_8086DEC: @ 0x08086DEC
	push {lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r0, _08086E10 @ =gMapTerrain
	ldr r1, [r0]
	lsls r0, r3, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0x31
	bls _08086E06
	b _08086F86
_08086E06:
	lsls r0, r0, #2
	ldr r1, _08086E14 @ =_08086E18
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086E10: .4byte gMapTerrain
_08086E14: .4byte _08086E18
_08086E18: @ jump table
	.4byte _08086F86 @ case 0
	.4byte _08086EE0 @ case 1
	.4byte _08086EE4 @ case 2
	.4byte _08086EF0 @ case 3
	.4byte _08086EF0 @ case 4
	.4byte _08086EF0 @ case 5
	.4byte _08086EF4 @ case 6
	.4byte _08086EF4 @ case 7
	.4byte _08086EF8 @ case 8
	.4byte _08086F86 @ case 9
	.4byte _08086EFC @ case 10
	.4byte _08086F00 @ case 11
	.4byte _08086F04 @ case 12
	.4byte _08086F08 @ case 13
	.4byte _08086F0C @ case 14
	.4byte _08086F0C @ case 15
	.4byte _08086F10 @ case 16
	.4byte _08086F1C @ case 17
	.4byte _08086F20 @ case 18
	.4byte _08086F24 @ case 19
	.4byte _08086F86 @ case 20
	.4byte _08086F2E @ case 21
	.4byte _08086F2E @ case 22
	.4byte _08086F3A @ case 23
	.4byte _08086F3A @ case 24
	.4byte _08086F76 @ case 25
	.4byte _08086F76 @ case 26
	.4byte _08086F76 @ case 27
	.4byte _08086F76 @ case 28
	.4byte _08086F3E @ case 29
	.4byte _08086F42 @ case 30
	.4byte _08086F4C @ case 31
	.4byte _08086F50 @ case 32
	.4byte _08086F50 @ case 33
	.4byte _08086F76 @ case 34
	.4byte _08086F86 @ case 35
	.4byte _08086F86 @ case 36
	.4byte _08086F54 @ case 37
	.4byte _08086F58 @ case 38
	.4byte _08086F64 @ case 39
	.4byte _08086F64 @ case 40
	.4byte _08086F64 @ case 41
	.4byte _08086F68 @ case 42
	.4byte _08086F76 @ case 43
	.4byte _08086F76 @ case 44
	.4byte _08086F6C @ case 45
	.4byte _08086F76 @ case 46
	.4byte _08086F2E @ case 47
	.4byte _08086F86 @ case 48
	.4byte _08086F82 @ case 49
_08086EE0:
	movs r0, #1
	b _08086F88
_08086EE4:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086B00
	adds r0, #0x40
	b _08086F88
_08086EF0:
	movs r0, #2
	b _08086F88
_08086EF4:
	movs r0, #3
	b _08086F88
_08086EF8:
	movs r0, #4
	b _08086F88
_08086EFC:
	movs r0, #5
	b _08086F88
_08086F00:
	movs r0, #6
	b _08086F88
_08086F04:
	movs r0, #8
	b _08086F88
_08086F08:
	movs r0, #9
	b _08086F88
_08086F0C:
	movs r0, #0xa
	b _08086F88
_08086F10:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086B54
	adds r0, #0x60
	b _08086F88
_08086F1C:
	movs r0, #0xb
	b _08086F88
_08086F20:
	movs r0, #0x14
	b _08086F88
_08086F24:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086D70
	b _08086F88
_08086F2E:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086B00
	adds r0, #0x30
	b _08086F88
_08086F3A:
	movs r0, #0xc
	b _08086F88
_08086F3E:
	movs r0, #0xd
	b _08086F88
_08086F42:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086D44
	b _08086F88
_08086F4C:
	movs r0, #0xe
	b _08086F88
_08086F50:
	movs r0, #0xf
	b _08086F88
_08086F54:
	movs r0, #0x1a
	b _08086F88
_08086F58:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086BE8
	adds r0, #0x50
	b _08086F88
_08086F64:
	movs r0, #0x13
	b _08086F88
_08086F68:
	movs r0, #0x3a
	b _08086F88
_08086F6C:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086D04
	b _08086F88
_08086F76:
	adds r0, r2, #0
	adds r1, r3, #0
	bl sub_8086B00
	adds r0, #0x20
	b _08086F88
_08086F82:
	movs r0, #0x19
	b _08086F88
_08086F86:
	movs r0, #0
_08086F88:
	pop {r1}
	bx r1

	thumb_func_start sub_8086F8C
sub_8086F8C: @ 0x08086F8C
	push {lr}
	bl sub_8086DEC
	lsls r0, r0, #5
	ldr r1, _08086F9C @ =gBuf
	adds r0, r0, r1
	pop {r1}
	bx r1
	.align 2, 0
_08086F9C: .4byte gBuf

	thumb_func_start sub_8086FA0
sub_8086FA0: @ 0x08086FA0
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r1, _08086FD4 @ =gUnk_0832785C
	mov r0, sp
	movs r2, #3
	bl memcpy
	ldr r0, _08086FD8 @ =gMapUnit
	ldr r0, [r0]
	lsls r4, r4, #2
	adds r4, r4, r0
	ldr r0, [r4]
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0
	beq _08086FE0
	asrs r0, r0, #6
	add r0, sp
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _08086FDC @ =gBuf
	adds r0, r0, r1
	b _08086FE2
	.align 2, 0
_08086FD4: .4byte gUnk_0832785C
_08086FD8: .4byte gMapUnit
_08086FDC: .4byte gBuf
_08086FE0:
	ldr r0, _08086FEC @ =gBuf
_08086FE2:
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08086FEC: .4byte gBuf

	thumb_func_start sub_8086FF0
sub_8086FF0: @ 0x08086FF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	str r1, [sp]
	cmp r4, #0
	bne _08087006
	ldr r4, _08087018 @ =0x06000020
_08087006:
	lsls r0, r4, #0xf
	lsrs r7, r0, #0x14
	ldr r0, [sp]
	cmp r0, #0
	bge _08087014
	movs r1, #3
	str r1, [sp]
_08087014:
	movs r2, #0
	b _080871EA
	.align 2, 0
_08087018: .4byte 0x06000020
_0808701C:
	movs r6, #0
	movs r2, #0
	ldrsh r0, [r1, r2]
	mov r3, r8
	adds r3, #2
	str r3, [sp, #0xc]
	cmp r6, r0
	blt _0808702E
	b _080871E8
_0808702E:
	movs r0, #1
	add r0, r8
	mov sb, r0
	mov r1, r8
	lsrs r0, r1, #0x1f
	add r0, r8
	asrs r0, r0, #1
	lsls r0, r0, #5
	str r0, [sp, #4]
	movs r2, #1
	mov sl, r2
_08087044:
	adds r0, r6, #0
	mov r1, r8
	bl sub_8086F8C
	adds r5, r0, #0
	mov r0, sl
	mov r1, r8
	bl sub_8086F8C
	adds r1, r0, #0
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r5, #4]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1, #4]
	strh r0, [r4]
	adds r4, #2
	adds r0, r6, #0
	mov r1, sb
	bl sub_8086F8C
	adds r5, r0, #0
	mov r0, sl
	mov r1, sb
	bl sub_8086F8C
	adds r1, r0, #0
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r5, #4]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1, #4]
	strh r0, [r4]
	adds r4, #2
	ldr r0, _08087208 @ =gBg1Tm
	asrs r2, r6, #0x1f
	subs r1, r6, r2
	asrs r1, r1, #1
	ldr r3, [sp, #4]
	adds r1, r3, r1
	lsls r1, r1, #1
	adds r1, r1, r0
	ldr r3, [sp]
	lsls r0, r3, #0xc
	adds r0, r7, r0
	strh r0, [r1]
	adds r7, #1
	ldr r0, _0808720C @ =gMapUnit
	ldr r1, [r0]
	mov r3, r8
	lsls r0, r3, #2
	adds r3, r0, r1
	ldr r0, [r3]
	adds r1, r0, r6
	ldrb r0, [r1]
	str r2, [sp, #8]
	cmp r0, #0
	bne _08087122
	ldrb r0, [r1, #1]
	cmp r0, #0
	bne _08087122
	ldr r0, [r3, #4]
	adds r1, r0, r6
	ldrb r0, [r1]
	cmp r0, #0
	bne _08087122
	ldrb r0, [r1, #1]
	cmp r0, #0
	beq _080871D6
_08087122:
	adds r0, r6, #0
	mov r1, r8
	bl sub_8086FA0
	adds r5, r0, #0
	mov r0, sl
	mov r1, r8
	bl sub_8086FA0
	adds r1, r0, #0
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r5, #4]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1, #4]
	strh r0, [r4]
	adds r4, #2
	adds r0, r6, #0
	mov r1, sb
	bl sub_8086FA0
	adds r5, r0, #0
	mov r0, sl
	mov r1, sb
	bl sub_8086FA0
	adds r1, r0, #0
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	adds r5, #4
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	adds r1, #4
	ldrh r0, [r5]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r5, #4]
	strh r0, [r4]
	adds r4, #2
	ldrh r0, [r1, #4]
	strh r0, [r4]
	adds r4, #2
	ldr r0, _08087210 @ =gBg0Tm
	ldr r2, [sp, #8]
	subs r1, r6, r2
	asrs r1, r1, #1
	ldr r3, [sp, #4]
	adds r1, r3, r1
	lsls r1, r1, #1
	adds r1, r1, r0
	ldr r0, [sp]
	adds r0, #1
	lsls r0, r0, #0xc
	adds r0, r7, r0
	strh r0, [r1]
	adds r7, #1
_080871D6:
	movs r0, #2
	add sl, r0
	adds r6, #2
	ldr r0, _08087214 @ =gMapSize
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r6, r0
	bge _080871E8
	b _08087044
_080871E8:
	ldr r2, [sp, #0xc]
_080871EA:
	mov r8, r2
	ldr r1, _08087214 @ =gMapSize
	movs r3, #2
	ldrsh r0, [r1, r3]
	cmp r8, r0
	bge _080871F8
	b _0808701C
_080871F8:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08087208: .4byte gBg1Tm
_0808720C: .4byte gMapUnit
_08087210: .4byte gBg0Tm
_08087214: .4byte gMapSize

	thumb_func_start sub_8087218
sub_8087218: @ 0x08087218
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08087250 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808722C
	movs r0, #0x78
	bl m4aSongNumStart
_0808722C:
	adds r0, r4, #0
	bl sub_8087A88
	movs r4, #1
	rsbs r4, r4, #0
	adds r0, r4, #0
	bl sub_80877AC
	movs r0, #0
	adds r1, r4, #0
	bl sub_8086FF0
	movs r0, #3
	bl EnableBgSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08087250: .4byte gPlaySt

	thumb_func_start sub_8087254
sub_8087254: @ 0x08087254
	ldr r0, _08087280 @ =0x04000006
	ldrh r0, [r0]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r3, _08087284 @ =0x02000508
	cmp r1, #0xa0
	bls _0808726C
	ldr r0, _08087288 @ =0x02000500
	ldr r0, [r0]
	str r0, [r3]
	movs r1, #0
_0808726C:
	ldr r2, _0808728C @ =0x04000040
	ldr r0, [r3]
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrh r3, [r1]
	lsls r0, r3, #8
	ldrh r1, [r1, #2]
	adds r0, r1, r0
	strh r0, [r2]
	bx lr
	.align 2, 0
_08087280: .4byte 0x04000006
_08087284: .4byte 0x02000508
_08087288: .4byte 0x02000500
_0808728C: .4byte 0x04000040

	thumb_func_start sub_8087290
sub_8087290: @ 0x08087290
	ldr r2, _080872A0 @ =0x02000500
	ldr r3, [r2]
	ldr r1, _080872A4 @ =0x02000504
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	bx lr
	.align 2, 0
_080872A0: .4byte 0x02000500
_080872A4: .4byte 0x02000504

	thumb_func_start sub_80872A8
sub_80872A8: @ 0x080872A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r1, _080873A8 @ =0x02000500
	ldr r2, _080873AC @ =0x02000280
	str r2, [r1]
	ldr r3, _080873B0 @ =0x02000504
	ldr r4, _080873B4 @ =0xFFFFFD80
	adds r1, r2, r4
	str r1, [r3]
	ldr r1, _080873B8 @ =0x02000508
	str r2, [r1]
	ldr r7, _080873BC @ =gDispIo
	mov ip, r7
	movs r1, #0x20
	mov r8, r1
	mov r1, r8
	mov r2, ip
	ldrb r2, [r2, #1]
	orrs r1, r2
	movs r2, #0x41
	rsbs r2, r2, #0
	ands r1, r2
	movs r2, #0x7f
	ands r1, r2
	mov r3, ip
	strb r1, [r3, #1]
	movs r4, #0x34
	add r4, ip
	mov sb, r4
	movs r4, #1
	mov r7, sb
	ldrb r7, [r7]
	orrs r4, r7
	movs r1, #2
	orrs r4, r1
	movs r6, #4
	orrs r4, r6
	movs r5, #8
	orrs r4, r5
	movs r2, #0x10
	orrs r4, r2
	movs r1, #0x36
	add r1, ip
	mov sl, r1
	movs r3, #2
	rsbs r3, r3, #0
	ldrb r7, [r1]
	ands r3, r7
	movs r1, #3
	rsbs r1, r1, #0
	ands r3, r1
	orrs r3, r6
	orrs r3, r5
	orrs r3, r2
	mov r2, ip
	adds r2, #0x2d
	movs r5, #0
	movs r1, #0xf0
	strb r1, [r2]
	mov r1, ip
	adds r1, #0x31
	strb r5, [r1]
	subs r1, #5
	strb r5, [r1]
	adds r2, #3
	movs r1, #0xa0
	strb r1, [r2]
	mov r6, ip
	adds r6, #0x3c
	ldr r1, _080873C0 @ =0x0000FFE0
	mov r2, ip
	ldrh r2, [r2, #0x3c]
	ands r1, r2
	movs r2, #0xc
	orrs r1, r2
	ldr r2, _080873C4 @ =0x0000E0FF
	ands r1, r2
	movs r7, #0xf8
	lsls r7, r7, #5
	adds r2, r7, #0
	orrs r1, r2
	mov r2, ip
	strh r1, [r2, #0x3c]
	adds r2, #0x3d
	mov r1, r8
	ldrb r7, [r2]
	orrs r1, r7
	strb r1, [r2]
	movs r1, #0xc0
	ldrb r2, [r6]
	orrs r1, r2
	strb r1, [r6]
	mov r2, ip
	adds r2, #0x44
	movs r1, #0x10
	strb r1, [r2]
	mov r1, ip
	adds r1, #0x45
	strb r5, [r1]
	adds r1, #1
	strb r5, [r1]
	mov r7, r8
	orrs r4, r7
	mov r1, sb
	strb r4, [r1]
	subs r2, #0xf
	mov r1, r8
	ldrb r4, [r2]
	orrs r1, r4
	strb r1, [r2]
	orrs r3, r7
	mov r1, sl
	strb r3, [r1]
	adds r0, #0x4c
	strh r5, [r0]
	ldr r0, _080873C8 @ =sub_8087254
	bl SetOnHBlankA
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080873A8: .4byte 0x02000500
_080873AC: .4byte 0x02000280
_080873B0: .4byte 0x02000504
_080873B4: .4byte 0xFFFFFD80
_080873B8: .4byte 0x02000508
_080873BC: .4byte gDispIo
_080873C0: .4byte 0x0000FFE0
_080873C4: .4byte 0x0000E0FF
_080873C8: .4byte sub_8087254

	thumb_func_start sub_80873CC
sub_80873CC: @ 0x080873CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	str r0, [sp, #0x14]
	ldr r2, _0808756C @ =gDispIo
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0xc0
	ldrb r3, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	movs r1, #0
	movs r4, #0x10
	strb r4, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r6, [sp, #0x14]
	adds r6, #0x4c
	movs r5, #0
	ldrsh r1, [r6, r5]
	cmp r1, #0
	bge _08087404
	adds r1, #3
_08087404:
	asrs r1, r1, #2
	adds r0, r2, #0
	adds r0, #0x46
	strb r1, [r0]
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0
	ldrsh r3, [r6, r0]
	str r4, [sp]
	movs r0, #5
	movs r1, #0
	bl Interpolate
	adds r7, r0, #0
	adds r1, r7, #0
	cmp r7, #0
	bge _08087428
	adds r1, r7, #3
_08087428:
	asrs r1, r1, #2
	subs r1, #0x40
	add r0, sp, #4
	ldr r3, [sp, #0x14]
	ldr r2, [r3, #0x34]
	rsbs r5, r2, #0
	strh r5, [r0]
	ldr r4, [r3, #0x38]
	rsbs r3, r4, #0
	strh r3, [r0, #2]
	strh r2, [r0, #4]
	strh r3, [r0, #6]
	strh r2, [r0, #8]
	strh r4, [r0, #0xa]
	strh r5, [r0, #0xc]
	strh r4, [r0, #0xe]
	str r6, [sp, #0x18]
	ldr r4, _08087570 @ =0x02000504
	mov sl, r4
	ldr r2, _08087574 @ =gSinLut
	movs r0, #0xff
	ands r1, r0
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	mov sb, r0
	lsls r1, r1, #1
	adds r1, r1, r2
	mov r8, r1
	add r6, sp, #4
	movs r5, #3
	mov ip, r5
_0808746A:
	mov r0, sb
	movs r1, #0
	ldrsh r5, [r0, r1]
	movs r2, #0
	ldrsh r4, [r6, r2]
	adds r2, r5, #0
	muls r2, r4, r2
	mov r3, r8
	movs r0, #0
	ldrsh r1, [r3, r0]
	movs r0, #2
	ldrsh r3, [r6, r0]
	adds r0, r1, #0
	muls r0, r3, r0
	subs r2, r2, r0
	muls r1, r4, r1
	adds r0, r5, #0
	muls r0, r3, r0
	adds r1, r1, r0
	adds r0, r2, #0
	muls r0, r7, r0
	asrs r0, r0, #0x14
	adds r0, #0x78
	strh r0, [r6]
	adds r0, r1, #0
	muls r0, r7, r0
	asrs r0, r0, #0x14
	adds r0, #0x50
	strh r0, [r6, #2]
	adds r6, #4
	movs r1, #1
	rsbs r1, r1, #0
	add ip, r1
	mov r2, ip
	cmp r2, #0
	bge _0808746A
	mov r3, sl
	ldr r0, [r3]
	bl sub_8013EE4
	mov r4, sl
	ldr r0, [r4]
	add r1, sp, #4
	movs r5, #0
	ldrsh r1, [r1, r5]
	add r2, sp, #4
	movs r3, #2
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #4
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #6
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #4
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #6
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #8
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #0xa
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #8
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #0xa
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #0xc
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #0xe
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #0xc
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #0xe
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #0
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #2
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	bl sub_8087290
	ldr r1, [sp, #0x18]
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	ble _0808755C
	ldr r0, [sp, #0x14]
	bl Proc_Break
_0808755C:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808756C: .4byte gDispIo
_08087570: .4byte 0x02000504
_08087574: .4byte gSinLut

	thumb_func_start sub_8087578
sub_8087578: @ 0x08087578
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _080875D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808758C
	movs r0, #0x79
	bl m4aSongNumStart
_0808758C:
	ldr r2, _080875DC @ =gDispIo+0x3C
	ldr r0, _080875E0 @ =0x0000FFE0
	ldrh r1, [r2]
	ands r0, r1
	movs r1, #0xc
	orrs r0, r1
	ldr r1, _080875E4 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0xf8
	lsls r3, r3, #5
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0xc0
	ldrb r5, [r2]
	orrs r0, r5
	strb r0, [r2]
	movs r3, #0
	movs r0, #0x10
	strb r0, [r2, #8]
	strb r3, [r2, #9]
	movs r0, #4
	strb r0, [r2, #0xa]
	ldr r0, _080875E8 @ =0x02000500
	ldr r1, _080875EC @ =0x02000280
	str r1, [r0]
	ldr r2, _080875F0 @ =0x02000504
	ldr r5, _080875F4 @ =0xFFFFFD80
	adds r0, r1, r5
	str r0, [r2]
	ldr r0, _080875F8 @ =0x02000508
	str r1, [r0]
	adds r0, r4, #0
	adds r0, #0x4c
	strh r3, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080875D8: .4byte gPlaySt
_080875DC: .4byte gDispIo+0x3C
_080875E0: .4byte 0x0000FFE0
_080875E4: .4byte 0x0000E0FF
_080875E8: .4byte 0x02000500
_080875EC: .4byte 0x02000280
_080875F0: .4byte 0x02000504
_080875F4: .4byte 0xFFFFFD80
_080875F8: .4byte 0x02000508

	thumb_func_start sub_80875FC
sub_80875FC: @ 0x080875FC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	str r0, [sp, #0x14]
	ldr r2, _080877A0 @ =gDispIo
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0xc0
	ldrb r3, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	movs r1, #0
	movs r4, #0x10
	strb r4, [r0]
	adds r0, #1
	strb r1, [r0]
	ldr r6, [sp, #0x14]
	adds r6, #0x4c
	movs r5, #0
	ldrsh r1, [r6, r5]
	cmp r1, #0
	bge _08087634
	adds r1, #3
_08087634:
	asrs r1, r1, #2
	movs r0, #4
	subs r0, r0, r1
	adds r1, r2, #0
	adds r1, #0x46
	strb r0, [r1]
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0
	ldrsh r3, [r6, r0]
	str r4, [sp]
	movs r0, #2
	movs r2, #0
	bl Interpolate
	adds r7, r0, #0
	cmp r7, #0
	bge _0808765A
	adds r0, r7, #3
_0808765A:
	asrs r0, r0, #2
	movs r1, #0x40
	subs r1, r1, r0
	add r0, sp, #4
	ldr r3, [sp, #0x14]
	ldr r2, [r3, #0x34]
	rsbs r5, r2, #0
	strh r5, [r0]
	ldr r4, [r3, #0x38]
	rsbs r3, r4, #0
	strh r3, [r0, #2]
	strh r2, [r0, #4]
	strh r3, [r0, #6]
	strh r2, [r0, #8]
	strh r4, [r0, #0xa]
	strh r5, [r0, #0xc]
	strh r4, [r0, #0xe]
	str r6, [sp, #0x18]
	ldr r4, _080877A4 @ =0x02000504
	mov sl, r4
	ldr r2, _080877A8 @ =gSinLut
	movs r0, #0xff
	ands r1, r0
	adds r0, r1, #0
	adds r0, #0x40
	lsls r0, r0, #1
	adds r0, r0, r2
	mov sb, r0
	lsls r1, r1, #1
	adds r1, r1, r2
	mov r8, r1
	add r6, sp, #4
	movs r5, #3
	mov ip, r5
_0808769E:
	mov r0, sb
	movs r1, #0
	ldrsh r5, [r0, r1]
	movs r2, #0
	ldrsh r4, [r6, r2]
	adds r2, r5, #0
	muls r2, r4, r2
	mov r3, r8
	movs r0, #0
	ldrsh r1, [r3, r0]
	movs r0, #2
	ldrsh r3, [r6, r0]
	adds r0, r1, #0
	muls r0, r3, r0
	subs r2, r2, r0
	muls r1, r4, r1
	adds r0, r5, #0
	muls r0, r3, r0
	adds r1, r1, r0
	adds r0, r2, #0
	muls r0, r7, r0
	asrs r0, r0, #0x14
	adds r0, #0x78
	strh r0, [r6]
	adds r0, r1, #0
	muls r0, r7, r0
	asrs r0, r0, #0x14
	adds r0, #0x50
	strh r0, [r6, #2]
	adds r6, #4
	movs r1, #1
	rsbs r1, r1, #0
	add ip, r1
	mov r2, ip
	cmp r2, #0
	bge _0808769E
	mov r3, sl
	ldr r0, [r3]
	bl sub_8013EE4
	mov r4, sl
	ldr r0, [r4]
	add r1, sp, #4
	movs r5, #0
	ldrsh r1, [r1, r5]
	add r2, sp, #4
	movs r3, #2
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #4
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #6
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #4
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #6
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #8
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #0xa
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #8
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #0xa
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #0xc
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #0xe
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	mov r1, sl
	ldr r0, [r1]
	add r1, sp, #4
	movs r2, #0xc
	ldrsh r1, [r1, r2]
	add r2, sp, #4
	movs r3, #0xe
	ldrsh r2, [r2, r3]
	add r3, sp, #4
	movs r4, #0
	ldrsh r3, [r3, r4]
	add r4, sp, #4
	movs r5, #2
	ldrsh r4, [r4, r5]
	str r4, [sp]
	bl sub_8013F04
	bl sub_8087290
	ldr r1, [sp, #0x18]
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	ble _08087790
	ldr r0, [sp, #0x14]
	bl Proc_Break
_08087790:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080877A0: .4byte gDispIo
_080877A4: .4byte 0x02000504
_080877A8: .4byte gSinLut

	thumb_func_start sub_80877AC
sub_80877AC: @ 0x080877AC
	push {r4, lr}
	adds r4, r0, #0
	cmp r4, #0
	bge _080877B6
	movs r4, #3
_080877B6:
	ldr r0, _080877DC @ =gUnk_083273E4
	ldr r1, _080877E0 @ =gBuf
	bl Decompress
	ldr r0, _080877E4 @ =gUnk_083277BC
	lsls r1, r4, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080877E8 @ =gUnk_083277DC
	adds r1, r4, #1
	lsls r1, r1, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080877DC: .4byte gUnk_083273E4
_080877E0: .4byte gBuf
_080877E4: .4byte gUnk_083277BC
_080877E8: .4byte gUnk_083277DC

	thumb_func_start sub_80877EC
sub_80877EC: @ 0x080877EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r1, _0808786C @ =0x0200050C
	ldr r0, _08087870 @ =gBuf
	str r0, [r1]
	movs r2, #1
	ldr r0, _08087874 @ =gPal
	mov sl, r0
	movs r0, #0x1f
	mov r8, r0
	mov sb, r1
_08087808:
	adds r0, r2, #0
	adds r0, #0x40
	lsls r0, r0, #1
	add r0, sl
	ldrh r0, [r0]
	adds r5, r0, #0
	mov r1, r8
	ands r5, r1
	asrs r4, r0, #5
	ands r4, r1
	asrs r3, r0, #0xa
	ands r3, r1
	adds r0, r2, #1
	mov ip, r0
	lsls r6, r2, #1
	movs r7, #7
_08087828:
	mov r1, sb
	ldr r0, [r1]
	adds r0, r6, r0
	lsls r1, r3, #0xa
	lsls r2, r4, #5
	adds r1, r1, r2
	adds r1, r1, r5
	strh r1, [r0]
	adds r5, #3
	cmp r5, #0x1f
	ble _08087840
	movs r5, #0x1f
_08087840:
	adds r4, #3
	cmp r4, #0x1f
	ble _08087848
	movs r4, #0x1f
_08087848:
	adds r3, #3
	cmp r3, #0x1f
	ble _08087850
	movs r3, #0x1f
_08087850:
	adds r6, #0x20
	subs r7, #1
	cmp r7, #0
	bge _08087828
	mov r2, ip
	cmp r2, #0xf
	ble _08087808
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808786C: .4byte 0x0200050C
_08087870: .4byte gBuf
_08087874: .4byte gPal

	thumb_func_start sub_8087878
sub_8087878: @ 0x08087878
	push {lr}
	sub sp, #0x10
	ldr r1, _080878AC @ =gUnk_0832785F
	mov r0, sp
	movs r2, #0x10
	bl memcpy
	bl GetGameTime
	lsrs r0, r0, #2
	movs r1, #0xf
	ands r0, r1
	add r0, sp
	ldr r1, _080878B0 @ =0x0200050C
	ldrb r0, [r0]
	lsls r2, r0, #5
	ldr r0, [r1]
	adds r0, r0, r2
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	add sp, #0x10
	pop {r0}
	bx r0
	.align 2, 0
_080878AC: .4byte gUnk_0832785F
_080878B0: .4byte 0x0200050C

	thumb_func_start sub_80878B4
sub_80878B4: @ 0x080878B4
	push {lr}
	sub sp, #0x20
	ldr r1, _080878F0 @ =gUnk_0832786F
	mov r0, sp
	movs r2, #0x20
	bl memcpy
	bl GetGameTime
	movs r1, #0x1f
	ands r1, r0
	mov r2, sp
	adds r0, r2, r1
	ldrb r3, [r0]
	adds r3, #0x10
	ldr r2, _080878F4 @ =gPal
	lsls r0, r3, #0xa
	lsls r1, r3, #5
	adds r0, r0, r1
	adds r0, r0, r3
	movs r1, #0x87
	lsls r1, r1, #2
	adds r2, r2, r1
	strh r0, [r2]
	bl EnablePalSync
	add sp, #0x20
	pop {r0}
	bx r0
	.align 2, 0
_080878F0: .4byte gUnk_0832786F
_080878F4: .4byte gPal

	thumb_func_start sub_80878F8
sub_80878F8: @ 0x080878F8
	push {r4, lr}
	sub sp, #0x1c
	adds r4, r0, #0
	ldr r1, _0808793C @ =gUnk_08327890
	mov r0, sp
	movs r2, #0x1a
	bl memcpy
	ldr r3, _08087940 @ =gBmSt
	movs r0, #0xc
	ldrsh r1, [r3, r0]
	cmp r1, #0
	bge _08087914
	adds r1, #3
_08087914:
	asrs r1, r1, #2
	ldr r0, [r4, #0x3c]
	adds r2, r0, r1
	movs r1, #0xe
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bge _08087924
	adds r0, #3
_08087924:
	asrs r0, r0, #2
	ldr r1, [r4, #0x40]
	adds r1, r1, r0
	adds r0, r2, #0
	mov r2, sp
	movs r3, #0
	bl PutOamHiRam
	add sp, #0x1c
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808793C: .4byte gUnk_08327890
_08087940: .4byte gBmSt

	thumb_func_start sub_8087944
sub_8087944: @ 0x08087944
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r2, _080879B4 @ =gMapSize
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r1, r1, #2
	movs r0, #0xf0
	subs r0, r0, r1
	asrs r5, r0, #1
	movs r1, #2
	ldrsh r0, [r2, r1]
	lsls r1, r0, #2
	movs r0, #0xa0
	subs r0, r0, r1
	asrs r4, r0, #1
	cmp r1, #0x90
	ble _08087988
	adds r4, r1, #0
	subs r4, #0x90
	ldr r1, _080879B8 @ =gBmSt
	ldrh r2, [r1, #0xe]
	lsls r0, r2, #0x10
	movs r2, #0x2a
	ldrsh r1, [r1, r2]
	bl __divsi3
	muls r0, r4, r0
	cmp r0, #0
	bge _08087982
	ldr r1, _080879BC @ =0x0000FFFF
	adds r0, r0, r1
_08087982:
	asrs r4, r0, #0x10
	movs r0, #8
	subs r4, r0, r4
_08087988:
	str r5, [r6, #0x3c]
	str r4, [r6, #0x40]
	rsbs r5, r5, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	rsbs r4, r4, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl SetBgOffset
	movs r0, #1
	adds r1, r5, #0
	adds r2, r4, #0
	bl SetBgOffset
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080879B4: .4byte gMapSize
_080879B8: .4byte gBmSt
_080879BC: .4byte 0x0000FFFF

	thumb_func_start sub_80879C0
sub_80879C0: @ 0x080879C0
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r1, _08087A80 @ =gBmSt
	movs r0, #0xc
	ldrsh r4, [r1, r0]
	movs r2, #0xe
	ldrsh r5, [r1, r2]
	movs r2, #0xf
	adds r0, r4, #0
	ands r0, r2
	adds r7, r1, #0
	cmp r0, #0
	bne _08087A4A
	adds r0, r5, #0
	ands r0, r2
	cmp r0, #0
	bne _08087A4A
	str r0, [r3, #0x2c]
	str r0, [r3, #0x30]
	ldr r2, _08087A84 @ =gKeySt
	ldr r1, [r2]
	movs r0, #0x20
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _08087A02
	movs r0, #8
	rsbs r0, r0, #0
	str r0, [r3, #0x2c]
	adds r1, r3, #0
	adds r1, #0x4a
	movs r0, #1
	strh r0, [r1]
_08087A02:
	ldr r1, [r2]
	movs r0, #0x10
	ldrh r2, [r1, #4]
	ands r0, r2
	adds r6, r1, #0
	cmp r0, #0
	beq _08087A1C
	movs r0, #8
	str r0, [r3, #0x2c]
	adds r2, r3, #0
	adds r2, #0x4a
	movs r0, #1
	strh r0, [r2]
_08087A1C:
	movs r0, #0x40
	ldrh r6, [r6, #4]
	ands r0, r6
	cmp r0, #0
	beq _08087A34
	movs r0, #8
	rsbs r0, r0, #0
	str r0, [r3, #0x30]
	adds r2, r3, #0
	adds r2, #0x4a
	movs r0, #1
	strh r0, [r2]
_08087A34:
	movs r0, #0x80
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _08087A4A
	movs r0, #8
	str r0, [r3, #0x30]
	adds r1, r3, #0
	adds r1, #0x4a
	movs r0, #1
	strh r0, [r1]
_08087A4A:
	ldr r0, [r3, #0x2c]
	adds r4, r4, r0
	ldr r0, [r3, #0x30]
	adds r5, r5, r0
	cmp r4, #0
	bge _08087A58
	movs r4, #0
_08087A58:
	adds r1, r7, #0
	movs r2, #0x28
	ldrsh r0, [r1, r2]
	cmp r4, r0
	ble _08087A64
	adds r4, r0, #0
_08087A64:
	cmp r5, #0
	bge _08087A6A
	movs r5, #0
_08087A6A:
	movs r2, #0x2a
	ldrsh r0, [r1, r2]
	cmp r5, r0
	ble _08087A74
	adds r5, r0, #0
_08087A74:
	strh r4, [r7, #0xc]
	strh r5, [r7, #0xe]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08087A80: .4byte gBmSt
_08087A84: .4byte gKeySt

	thumb_func_start sub_8087A88
sub_8087A88: @ 0x08087A88
	adds r2, r0, #0
	adds r2, #0x4a
	movs r1, #0
	strh r1, [r2]
	ldr r2, _08087AA4 @ =gMapSize
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r1, r1, #1
	str r1, [r0, #0x34]
	movs r3, #2
	ldrsh r1, [r2, r3]
	lsls r1, r1, #1
	str r1, [r0, #0x38]
	bx lr
	.align 2, 0
_08087AA4: .4byte gMapSize

	thumb_func_start sub_8087AA8
sub_8087AA8: @ 0x08087AA8
	push {lr}
	adds r0, #0x4a
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _08087AD6
	ldr r1, _08087AE0 @ =gBmSt
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bge _08087AC0
	adds r0, #0xf
_08087AC0:
	asrs r0, r0, #4
	adds r0, #7
	movs r2, #0xe
	ldrsh r1, [r1, r2]
	cmp r1, #0
	bge _08087ACE
	adds r1, #0xf
_08087ACE:
	asrs r1, r1, #4
	adds r1, #5
	bl SetMapCursorPosition
_08087AD6:
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0
	.align 2, 0
_08087AE0: .4byte gBmSt

	thumb_func_start sub_8087AE4
sub_8087AE4: @ 0x08087AE4
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_8087878
	adds r0, r4, #0
	bl sub_80878B4
	adds r0, r4, #0
	bl sub_8087944
	adds r0, r4, #0
	bl sub_80878F8
	adds r0, r4, #0
	bl sub_80879C0
	ldr r0, _08087B48 @ =gKeySt
	ldr r0, [r0]
	movs r3, #0xc0
	lsls r3, r3, #2
	ldrh r0, [r0, #4]
	ands r3, r0
	cmp r3, #0
	beq _08087B58
	ldr r2, _08087B4C @ =gDispIo+0x3C
	ldr r0, _08087B50 @ =0x0000FFE0
	ldrh r1, [r2]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	ldr r1, _08087B54 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0xe0
	lsls r3, r3, #5
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0x3f
	ldrb r5, [r2]
	ands r0, r5
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	movs r1, #0
	movs r0, #8
	strb r0, [r2, #8]
	strb r0, [r2, #9]
	strb r1, [r2, #0xa]
	b _08087B84
	.align 2, 0
_08087B48: .4byte gKeySt
_08087B4C: .4byte gDispIo+0x3C
_08087B50: .4byte 0x0000FFE0
_08087B54: .4byte 0x0000E0FF
_08087B58:
	ldr r2, _08087BAC @ =gDispIo+0x3C
	ldr r0, _08087BB0 @ =0x0000FFE0
	ldrh r1, [r2]
	ands r0, r1
	movs r1, #0xc
	orrs r0, r1
	ldr r1, _08087BB4 @ =0x0000E0FF
	ands r0, r1
	movs r5, #0xf8
	lsls r5, r5, #5
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0xc0
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0x10
	strb r0, [r2, #8]
	strb r3, [r2, #9]
	movs r0, #4
	strb r0, [r2, #0xa]
_08087B84:
	ldr r0, _08087BB8 @ =gBmSt
	ldr r0, [r0, #0xc]
	ldr r1, _08087BBC @ =0x000F000F
	ands r0, r1
	cmp r0, #0
	bne _08087BA4
	ldr r0, _08087BC0 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xa
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08087BA4
	adds r0, r4, #0
	bl Proc_Break
_08087BA4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08087BAC: .4byte gDispIo+0x3C
_08087BB0: .4byte 0x0000FFE0
_08087BB4: .4byte 0x0000E0FF
_08087BB8: .4byte gBmSt
_08087BBC: .4byte 0x000F000F
_08087BC0: .4byte gKeySt

	thumb_func_start sub_8087BC4
sub_8087BC4: @ 0x08087BC4
	push {lr}
	ldr r0, _08087BD4 @ =gUnk_08689DE4
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08087BD4: .4byte gUnk_08689DE4

	thumb_func_start sub_8087BD8
sub_8087BD8: @ 0x08087BD8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r4, r2, #0
	ldr r0, _08087C0C @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08087C10 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	adds r0, r5, #0
	bl sub_8018784
	adds r0, r4, #0
	bl sub_80877AC
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_8086FF0
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08087C0C: .4byte gBg0Tm
_08087C10: .4byte gBg1Tm

	thumb_func_start sub_8087C14
sub_8087C14: @ 0x08087C14
	ldr r0, _08087C50 @ =0x04000006
	ldrh r0, [r0]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0xa0
	bls _08087C24
	movs r3, #0
_08087C24:
	cmp r3, #0x3b
	bhi _08087C38
	ldr r1, _08087C54 @ =0x04000050
	movs r0, #0xc1
	strh r0, [r1]
	ldr r2, _08087C58 @ =0x04000054
	lsrs r1, r3, #2
	movs r0, #0xf
	subs r0, r0, r1
	strh r0, [r2]
_08087C38:
	cmp r3, #0x64
	bls _08087C4E
	ldr r1, _08087C54 @ =0x04000050
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _08087C5C @ =0x0000100A
	adds r0, r2, #0
	strh r0, [r1]
_08087C4E:
	bx lr
	.align 2, 0
_08087C50: .4byte 0x04000006
_08087C54: .4byte 0x04000050
_08087C58: .4byte 0x04000054
_08087C5C: .4byte 0x0000100A

	thumb_func_start sub_8087C60
sub_8087C60: @ 0x08087C60
	push {lr}
	movs r1, #0x10
	bl Proc_Goto
	movs r0, #0x80
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl StartBgmVolumeChange
	pop {r0}
	bx r0

	thumb_func_start sub_8087C78
sub_8087C78: @ 0x08087C78
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r3, #0
	movs r2, #0
	movs r4, #1
	adds r1, #1
_08087C86:
	adds r0, r5, #0
	asrs r0, r2
	ands r0, r4
	cmp r0, #0
	beq _08087CA0
	adds r3, #1
	cmp r1, r3
	bne _08087CA0
	adds r0, r4, #0
	lsls r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _08087CA8
_08087CA0:
	adds r2, #1
	cmp r2, #7
	ble _08087C86
	movs r0, #0xff
_08087CA8:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8087CB0
sub_8087CB0: @ 0x08087CB0
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r1, #0
	movs r3, #1
_08087CB8:
	adds r0, r2, #0
	asrs r0, r1
	ands r0, r3
	cmp r0, #0
	beq _08087CC8
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	b _08087CD0
_08087CC8:
	adds r1, #1
	cmp r1, #7
	ble _08087CB8
	movs r0, #0xff
_08087CD0:
	bx lr
	.align 2, 0

	thumb_func_start sub_8087CD4
sub_8087CD4: @ 0x08087CD4
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _08087CEC
	adds r0, r4, #0
	adds r0, #0x36
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #0
	bne _08087CFA
_08087CEC:
	bl sub_807089C
	adds r1, r4, #0
	adds r1, #0x3e
	movs r0, #0
	strb r0, [r1]
	b _08087D38
_08087CFA:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _08087D12
	cmp r0, #0x10
	bgt _08087D0E
	cmp r0, #2
	beq _08087D12
	b _08087D38
_08087D0E:
	cmp r0, #0x20
	bne _08087D38
_08087D12:
	adds r0, r4, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	cmp r0, #0
	beq _08087D38
	ldrb r0, [r2]
	cmp r0, #0
	beq _08087D38
	adds r4, #0x3e
	ldrb r0, [r4]
	cmp r0, #0
	bne _08087D38
	ldr r2, _08087D40 @ =0x000006C3
	movs r0, #0x30
	movs r1, #0x30
	bl sub_8070804
	movs r0, #1
	strb r0, [r4]
_08087D38:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08087D40: .4byte 0x000006C3

	thumb_func_start sub_8087D44
sub_8087D44: @ 0x08087D44
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x2e
	ldrb r0, [r4]
	cmp r0, #0x80
	bne _08087D6A
	bl GetCurrentBgmSong
	cmp r0, #1
	beq _08087D70
	bl GetCurrentBgmSong
	cmp r0, #0x44
	beq _08087D70
	bl GetCurrentBgmSong
	cmp r0, #1
	beq _08087D70
_08087D6A:
	ldrb r4, [r4]
	cmp r4, #0x40
	bne _08087D80
_08087D70:
	movs r0, #0x80
	lsls r0, r0, #1
	movs r1, #0x80
	movs r2, #0x20
	movs r3, #0
	bl StartBgmVolumeChange
	b _08087D9E
_08087D80:
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	beq _08087D9E
	movs r0, #1
	movs r1, #0
	bl StartBgmCore
	movs r0, #0
	movs r1, #0x80
	movs r2, #0x3c
	movs r3, #0
	bl StartBgmVolumeChange
_08087D9E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8087DA4
sub_8087DA4: @ 0x08087DA4
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _08087E64 @ =gUnk_08689E84
	bl InitBgs
	ldr r2, _08087E68 @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r2]
	ands r0, r1
	movs r3, #1
	orrs r0, r3
	strb r0, [r2]
	movs r0, #0x3f
	ldrb r5, [r2, #0x15]
	ands r0, r5
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r2, #0x15]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #3
	ldrb r5, [r2, #0xc]
	orrs r0, r5
	strb r0, [r2, #0xc]
	adds r1, #0xd
	adds r0, r1, #0
	ldrb r5, [r2, #0x10]
	ands r0, r5
	strb r0, [r2, #0x10]
	adds r0, r1, #0
	ldrb r5, [r2, #0x14]
	ands r0, r5
	orrs r0, r3
	strb r0, [r2, #0x14]
	ldrb r0, [r2, #0x18]
	ands r1, r0
	orrs r1, r3
	strb r1, [r2, #0x18]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _08087E6C @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08087E70 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08087E74 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08087E78 @ =gBg3Tm
	movs r1, #0
	bl TmFill
	adds r0, r4, #0
	bl sub_8087D44
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08087E64: .4byte gUnk_08689E84
_08087E68: .4byte gDispIo
_08087E6C: .4byte gBg0Tm
_08087E70: .4byte gBg1Tm
_08087E74: .4byte gBg2Tm
_08087E78: .4byte gBg3Tm

	thumb_func_start sub_8087E7C
sub_8087E7C: @ 0x08087E7C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r5, r0, #0
	bl ResetTextFont
	bl ApplySystemObjectsGraphics
	ldr r0, _08087F20 @ =gUnk_083278AC
	movs r1, #0x40
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r4, _08087F24 @ =gUnk_08336D5C
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08087F28 @ =gBg0Tm
	ldr r1, _08087F2C @ =gUnk_083278EC
	movs r2, #0
	bl TmApplyTsa_t
	ldr r0, _08087F30 @ =gUnk_0832BDE8
	movs r1, #0x88
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #1
	bl ApplyPaletteExt
	ldr r4, _08087F34 @ =0x06013800
	adds r0, r4, #0
	movs r1, #9
	bl sub_8070E70
	ldr r0, _08087F38 @ =gUnk_0832C35C
	ldr r1, _08087F3C @ =0x02000404
	movs r2, #2
	bl sub_80895A0
	movs r0, #0xf
	bl EnableBgSync
	adds r1, r5, #0
	adds r1, #0x29
	movs r0, #0
	strb r0, [r1]
	ldr r2, _08087F40 @ =gDispIo
	adds r3, r2, #0
	adds r3, #0x34
	movs r0, #0x20
	ldrb r1, [r3]
	orrs r1, r0
	strb r1, [r3]
	adds r2, #0x35
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	ldr r0, _08087F44 @ =gUnk_0832A29C
	ldr r1, _08087F48 @ =0x06011000
	bl Decompress
	adds r0, r5, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x40
	bne _08087F4C
	adds r0, r4, #0
	movs r1, #9
	bl sub_8070E70
	b _08087F54
	.align 2, 0
_08087F20: .4byte gUnk_083278AC
_08087F24: .4byte gUnk_08336D5C
_08087F28: .4byte gBg0Tm
_08087F2C: .4byte gUnk_083278EC
_08087F30: .4byte gUnk_0832BDE8
_08087F34: .4byte 0x06013800
_08087F38: .4byte gUnk_0832C35C
_08087F3C: .4byte 0x02000404
_08087F40: .4byte gDispIo
_08087F44: .4byte gUnk_0832A29C
_08087F48: .4byte 0x06011000
_08087F4C:
	ldr r0, _08087F74 @ =gUnk_0832B554
	adds r1, r4, #0
	bl Decompress
_08087F54:
	adds r0, r5, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x20
	bne _08087F7C
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	bne _08087FB4
	ldr r0, _08087F78 @ =0x06014000
	movs r1, #9
	bl sub_8070E70
	b _08087FB4
	.align 2, 0
_08087F74: .4byte gUnk_0832B554
_08087F78: .4byte 0x06014000
_08087F7C:
	cmp r0, #0x40
	bne _08087F94
	adds r1, r5, #0
	adds r1, #0x2d
	movs r0, #4
	strb r0, [r1]
	bl sub_8084F94
	adds r1, r5, #0
	adds r1, #0x2b
	strb r0, [r1]
	b _08087FA4
_08087F94:
	adds r2, r5, #0
	adds r2, #0x2d
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x2b
	strb r1, [r0]
_08087FA4:
	adds r0, r5, #0
	adds r0, #0x2a
	movs r1, #0
	strb r1, [r0]
	adds r0, #0xa
	strb r1, [r0]
	adds r0, #0xe
	strh r1, [r0]
_08087FB4:
	adds r1, r5, #0
	adds r1, #0x36
	movs r0, #0
	strb r0, [r1]
	subs r1, #0xa
	movs r0, #0xff
	strb r0, [r1]
	adds r1, #0x11
	movs r0, #1
	strb r0, [r1]
	bl sub_808A4F0
	movs r2, #0
	mov r8, r2
	adds r3, r5, #0
	adds r3, #0x40
	str r3, [sp, #0xc]
	adds r0, r5, #0
	adds r0, #0x3f
	str r0, [sp, #8]
	adds r5, #0x3e
	str r5, [sp, #4]
	ldr r1, _08088088 @ =gSinLut
	mov sb, r1
	movs r2, #0x80
	add r2, sb
	mov sl, r2
	movs r7, #0x80
	lsls r7, r7, #1
_08087FEE:
	mov r3, sl
	movs r1, #0
	ldrsh r0, [r3, r1]
	lsls r0, r0, #4
	adds r1, r7, #0
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	adds r1, r7, #0
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	adds r1, r7, #0
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r3, sl
	movs r1, #0
	ldrsh r0, [r3, r1]
	lsls r0, r0, #4
	adds r1, r7, #0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	movs r2, #1
	add r8, r2
	mov r3, r8
	cmp r3, #3
	ble _08087FEE
	movs r1, #0
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #1
	ldr r3, [sp, #0xc]
	strh r0, [r3]
	movs r0, #0xff
	ldr r3, [sp, #8]
	strb r0, [r3]
	ldr r0, [sp, #4]
	strb r1, [r0]
	ldr r0, _0808808C @ =0x02000000
	strh r2, [r0]
	ldr r0, _08088090 @ =sub_8087C14
	bl SetOnHBlankA
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088088: .4byte gSinLut
_0808808C: .4byte 0x02000000
_08088090: .4byte sub_8087C14

	thumb_func_start sub_8088094
sub_8088094: @ 0x08088094
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r2, _0808810C @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	ldr r4, _08088110 @ =gUnk_083280B0
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08088114 @ =gBg3Tm
	ldr r1, _08088118 @ =gUnk_0832A130
	movs r2, #0
	movs r3, #5
	bl sub_8001B8C
	movs r0, #8
	bl EnableBgSync
	movs r4, #0
_080880DC:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	adds r1, r5, #0
	bl sub_808A918
	adds r4, #1
	cmp r4, #3
	ble _080880DC
	bl sub_808A42C
	adds r4, r5, #0
	adds r4, #0x2e
	ldrb r2, [r4]
	cmp r2, #0x40
	bne _0808811C
	adds r0, r5, #0
	adds r0, #0x30
	movs r1, #0
	strb r2, [r0]
	strb r2, [r4]
	adds r0, #1
	strb r1, [r0]
	b _0808814A
	.align 2, 0
_0808810C: .4byte gDispIo
_08088110: .4byte gUnk_083280B0
_08088114: .4byte gBg3Tm
_08088118: .4byte gUnk_0832A130
_0808811C:
	adds r0, r5, #0
	bl sub_808A524
	ldrb r1, [r4]
	cmp r1, #0x20
	bne _08088138
	movs r0, #0x20
	adds r1, r5, #0
	bl sub_808AA54
	adds r1, r5, #0
	adds r1, #0x2a
	strb r0, [r1]
	b _0808814A
_08088138:
	adds r0, r5, #0
	adds r0, #0x30
	ldrb r0, [r0]
	adds r1, r5, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	bl sub_8087C78
	strb r0, [r4]
_0808814A:
	movs r0, #2
	bl EnableBgSync
	ldr r2, _080881B0 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	ldr r1, _080881B4 @ =gPal
	movs r0, #0
	strh r0, [r1]
	bl EnablePalSync
	adds r0, r5, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_808A9F4
	adds r0, r5, #0
	bl sub_808A14C
	str r0, [r5, #0x54]
	adds r0, r5, #0
	bl sub_808A210
	str r0, [r5, #0x58]
	adds r2, r5, #0
	adds r2, #0x2d
	ldrb r0, [r2]
	cmp r0, #1
	bne _0808819C
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
_0808819C:
	ldrb r2, [r2]
	cmp r2, #4
	bne _080881AA
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0xdc
	strb r0, [r1]
_080881AA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080881B0: .4byte gDispIo
_080881B4: .4byte gPal

	thumb_func_start sub_80881B8
sub_80881B8: @ 0x080881B8
	push {lr}
	adds r1, r0, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	bl Proc_Goto
	pop {r0}
	bx r0

	thumb_func_start sub_80881C8
sub_80881C8: @ 0x080881C8
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x2d
	movs r0, #1
	strb r0, [r1]
	ldr r0, _080881F8 @ =gKeySt
	ldr r3, [r0]
	ldrh r1, [r3, #6]
	movs r2, #0x40
	adds r0, r2, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _08088210
	adds r1, r4, #0
	adds r1, #0x2a
	ldrb r0, [r1]
	cmp r0, #0
	beq _080881FC
	subs r0, #1
	b _0808822E
	.align 2, 0
_080881F8: .4byte gKeySt
_080881FC:
	adds r0, r2, #0
	ldrh r3, [r3, #8]
	ands r0, r3
	cmp r0, #0
	beq _08088264
	adds r0, r4, #0
	adds r0, #0x31
	ldrb r0, [r0]
	subs r0, #1
	b _0808822E
_08088210:
	movs r6, #0x80
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _08088264
	adds r1, r4, #0
	adds r1, #0x2a
	ldrb r2, [r1]
	adds r0, r4, #0
	adds r0, #0x31
	ldrb r0, [r0]
	subs r0, #1
	cmp r2, r0
	bge _08088248
	adds r0, r2, #1
_0808822E:
	strb r0, [r1]
	ldr r0, _08088244 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088264
	movs r0, #0x66
	bl m4aSongNumStart
	b _08088264
	.align 2, 0
_08088244: .4byte gPlaySt
_08088248:
	adds r0, r6, #0
	ldrh r3, [r3, #8]
	ands r0, r3
	cmp r0, #0
	beq _08088264
	strb r5, [r1]
	ldr r0, _080882B8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088264
	movs r0, #0x66
	bl m4aSongNumStart
_08088264:
	ldr r0, _080882BC @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08088274
	b _080883D2
_08088274:
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x2a
	ldrb r1, [r1]
	bl sub_8087C78
	adds r5, r4, #0
	adds r5, #0x2e
	strb r0, [r5]
	ldr r0, _080882B8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808829A
	movs r0, #0x6a
	bl m4aSongNumStart
_0808829A:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #0
	strb r0, [r1]
	ldrb r0, [r5]
	subs r0, #1
	cmp r0, #0x1f
	bls _080882AC
	b _080883FA
_080882AC:
	lsls r0, r0, #2
	ldr r1, _080882C0 @ =_080882C4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080882B8: .4byte gPlaySt
_080882BC: .4byte gKeySt
_080882C0: .4byte _080882C4
_080882C4: @ jump table
	.4byte _08088344 @ case 0
	.4byte _08088352 @ case 1
	.4byte _080883FA @ case 2
	.4byte _0808836A @ case 3
	.4byte _080883FA @ case 4
	.4byte _080883FA @ case 5
	.4byte _080883FA @ case 6
	.4byte _08088382 @ case 7
	.4byte _080883FA @ case 8
	.4byte _080883FA @ case 9
	.4byte _080883FA @ case 10
	.4byte _080883FA @ case 11
	.4byte _080883FA @ case 12
	.4byte _080883FA @ case 13
	.4byte _080883FA @ case 14
	.4byte _0808839A @ case 15
	.4byte _080883FA @ case 16
	.4byte _080883FA @ case 17
	.4byte _080883FA @ case 18
	.4byte _080883FA @ case 19
	.4byte _080883FA @ case 20
	.4byte _080883FA @ case 21
	.4byte _080883FA @ case 22
	.4byte _080883FA @ case 23
	.4byte _080883FA @ case 24
	.4byte _080883FA @ case 25
	.4byte _080883FA @ case 26
	.4byte _080883FA @ case 27
	.4byte _080883FA @ case 28
	.4byte _080883FA @ case 29
	.4byte _080883FA @ case 30
	.4byte _080883B4 @ case 31
_08088344:
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	b _080883AA
_08088352:
	bl sub_8084F94
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	movs r2, #1
	bl sub_808A658
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	b _080883AA
_0808836A:
	bl sub_8084F94
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	movs r2, #1
	bl sub_808A658
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	b _080883AA
_08088382:
	bl sub_8084F94
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	movs r2, #1
	bl sub_808A658
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	b _080883AA
_0808839A:
	adds r5, r4, #0
	adds r5, #0x2b
	ldrb r0, [r5]
	movs r1, #0
	movs r2, #1
	bl sub_808A658
	strb r0, [r5]
_080883AA:
	adds r0, r4, #0
	movs r1, #2
	bl Proc_Goto
	b _080883FA
_080883B4:
	adds r1, r4, #0
	adds r1, #0x34
	adds r0, r4, #0
	adds r0, #0x33
	ldrb r2, [r1]
	ldrb r0, [r0]
	cmp r2, r0
	blo _080883C8
	movs r0, #0
	strb r0, [r1]
_080883C8:
	adds r0, r4, #0
	movs r1, #7
	bl Proc_Goto
	b _080883FA
_080883D2:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080883FA
	ldr r0, _08088400 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080883EA
	movs r0, #0x6b
	bl m4aSongNumStart
_080883EA:
	adds r0, r4, #0
	movs r1, #0x10
	bl Proc_Goto
	adds r1, r4, #0
	adds r1, #0x2e
	movs r0, #0x80
	strb r0, [r1]
_080883FA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08088400: .4byte gPlaySt

	thumb_func_start sub_8088404
sub_8088404: @ 0x08088404
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x36
	ldrb r1, [r5]
	cmp r1, #0
	bne _080884AC
	ldr r0, _0808843C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088422
	movs r0, #0x6a
	bl m4aSongNumStart
_08088422:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #8
	beq _08088486
	cmp r0, #8
	bgt _08088440
	cmp r0, #2
	beq _08088494
	cmp r0, #4
	beq _08088454
	b _080884A4
	.align 2, 0
_0808843C: .4byte gPlaySt
_08088440:
	cmp r0, #0x20
	beq _08088494
	cmp r0, #0x20
	bgt _0808844E
	cmp r0, #0x10
	beq _08088494
	b _080884A4
_0808844E:
	cmp r0, #0x40
	beq _08088494
	b _080884A4
_08088454:
	adds r1, r4, #0
	adds r1, #0x2c
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08088470
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #1
	bl sub_808A6C8
	b _080885D2
_08088470:
	ldrb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x2b
	ldrb r1, [r1]
	bl sub_8084FF8
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	b _080885D2
_08088486:
	movs r0, #2
	strb r0, [r5]
	adds r0, r4, #0
	movs r1, #1
	bl sub_808A4B8
	b _080884A4
_08088494:
	adds r1, r4, #0
	adds r1, #0x36
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #1
	bl sub_808A4B8
_080884A4:
	adds r0, r4, #0
	bl sub_8087CD4
	b _080885D2
_080884AC:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x10
	beq _08088514
	cmp r0, #0x10
	bgt _080884C4
	cmp r0, #2
	beq _080884EA
	cmp r0, #8
	beq _08088542
	b _080885C4
_080884C4:
	cmp r0, #0x20
	beq _080884CE
	cmp r0, #0x40
	beq _08088588
	b _080885C4
_080884CE:
	cmp r1, #1
	bne _08088570
	adds r1, r4, #0
	adds r1, #0x40
	movs r0, #0xf0
	strh r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_80851B4
	adds r0, r4, #0
	movs r1, #0xd
	b _08088554
_080884EA:
	cmp r1, #1
	bne _08088570
	adds r1, r4, #0
	adds r1, #0x40
	movs r0, #0xf0
	strh r0, [r1]
	ldr r0, _08088510 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088506
	movs r0, #0x6a
	bl m4aSongNumStart
_08088506:
	adds r0, r4, #0
	bl sub_8087C60
	b _080885C4
	.align 2, 0
_08088510: .4byte gPlaySt
_08088514:
	cmp r1, #1
	bne _08088570
	adds r0, r4, #0
	adds r0, #0x3d
	ldrb r0, [r0]
	cmp r0, #1
	bne _08088530
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	movs r1, #0
	bl sub_808505C
	b _08088596
_08088530:
	cmp r0, #2
	bne _08088596
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	movs r1, #1
	bl sub_808505C
	b _08088596
_08088542:
	cmp r1, #1
	bne _08088570
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_8084FB8
	adds r0, r4, #0
	movs r1, #5
_08088554:
	bl Proc_Goto
	ldr r0, _0808856C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080885C4
	movs r0, #0x6a
	bl m4aSongNumStart
	b _080885C4
	.align 2, 0
_0808856C: .4byte gPlaySt
_08088570:
	ldr r0, _08088584 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080885C4
	movs r0, #0x6b
	bl m4aSongNumStart
	b _080885C4
	.align 2, 0
_08088584: .4byte gPlaySt
_08088588:
	cmp r1, #1
	bne _080885B4
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_8085110
_08088596:
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	ldr r0, _080885B0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080885C4
	movs r0, #0x60
	bl m4aSongNumStart
	b _080885C4
	.align 2, 0
_080885B0: .4byte gPlaySt
_080885B4:
	ldr r0, _080885D8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080885C4
	movs r0, #0x6b
	bl m4aSongNumStart
_080885C4:
	adds r0, r4, #0
	movs r1, #0
	bl sub_808A4B8
	adds r0, r4, #0
	bl sub_8087CD4
_080885D2:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080885D8: .4byte gPlaySt

	thumb_func_start sub_80885DC
sub_80885DC: @ 0x080885DC
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x2d
	movs r0, #4
	strb r0, [r1]
	adds r3, r4, #0
	adds r3, #0x36
	ldrb r1, [r3]
	cmp r1, #0
	bne _08088638
	ldr r0, _08088608 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808860C
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r4, #0
	b _08088618
	.align 2, 0
_08088608: .4byte gKeySt
_0808860C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08088696
	adds r0, r4, #0
	movs r1, #1
_08088618:
	bl sub_808A6C8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088696
	ldr r0, _08088634 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088696
	movs r0, #0x66
	bl m4aSongNumStart
	b _08088696
	.align 2, 0
_08088634: .4byte gPlaySt
_08088638:
	ldr r0, _08088668 @ =gKeySt
	ldr r0, [r0]
	ldrh r2, [r0, #8]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _08088670
	cmp r1, #1
	beq _08088696
	movs r0, #1
	strb r0, [r3]
	ldr r0, _0808866C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808865E
	movs r0, #0x67
	bl m4aSongNumStart
_0808865E:
	adds r0, r4, #0
	bl sub_8087CD4
	b _08088696
	.align 2, 0
_08088668: .4byte gKeySt
_0808866C: .4byte gPlaySt
_08088670:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08088696
	cmp r1, #2
	beq _08088696
	movs r0, #2
	strb r0, [r3]
	ldr r0, _080886C8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088690
	movs r0, #0x67
	bl m4aSongNumStart
_08088690:
	adds r0, r4, #0
	bl sub_8087CD4
_08088696:
	ldr r0, _080886CC @ =gKeySt
	ldr r0, [r0]
	ldrh r2, [r0, #8]
	movs r6, #1
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	bne _080886A8
	b _080887D4
_080886A8:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #0
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #4
	beq _08088784
	cmp r0, #4
	bgt _080886D0
	cmp r0, #1
	beq _080886EE
	cmp r0, #2
	beq _080886E4
	b _0808884C
	.align 2, 0
_080886C8: .4byte gPlaySt
_080886CC: .4byte gKeySt
_080886D0:
	cmp r0, #0x10
	beq _0808870C
	cmp r0, #0x10
	bgt _080886DE
	cmp r0, #8
	beq _08088784
	b _0808884C
_080886DE:
	cmp r0, #0x40
	beq _08088784
	b _0808884C
_080886E4:
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0xff
	bne _08088784
_080886EE:
	ldr r0, _08088708 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080886FE
	movs r0, #0x6a
	bl m4aSongNumStart
_080886FE:
	adds r0, r4, #0
	bl sub_8087C60
	b _0808884C
	.align 2, 0
_08088708: .4byte gPlaySt
_0808870C:
	adds r0, r4, #0
	adds r0, #0x3d
	ldrb r1, [r0]
	adds r5, r0, #0
	cmp r1, #0
	bne _08088744
	subs r0, #7
	ldrb r0, [r0]
	cmp r0, #1
	bne _08088724
	strb r6, [r5]
	b _08088728
_08088724:
	movs r0, #2
	strb r0, [r5]
_08088728:
	adds r0, r4, #0
	movs r1, #0
	bl sub_808A4B8
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _08088774
	adds r0, r4, #0
	movs r1, #6
	bl Proc_Goto
	b _0808884C
_08088744:
	bl sub_80846F0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08088774
	adds r1, r4, #0
	adds r1, #0x36
	ldrb r0, [r1]
	cmp r0, #0
	bne _08088774
	strb r0, [r5]
	strb r6, [r1]
	ldr r0, _0808878C @ =gUnk_08336C60
	movs r1, #1
	bl sub_808A454
	ldr r0, _08088790 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088774
	movs r0, #0x6a
	bl m4aSongNumStart
_08088774:
	ldrb r1, [r5]
	cmp r1, #0
	beq _0808884C
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _08088794
_08088784:
	adds r0, r4, #0
	bl sub_8088404
	b _0808884C
	.align 2, 0
_0808878C: .4byte gUnk_08336C60
_08088790: .4byte gPlaySt
_08088794:
	cmp r1, #1
	bne _080887A6
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	movs r1, #0
	bl sub_808505C
	b _080887B6
_080887A6:
	cmp r1, #2
	bne _080887B6
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	movs r1, #1
	bl sub_808505C
_080887B6:
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	ldr r0, _080887D0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808884C
	movs r0, #0x60
	bl m4aSongNumStart
	b _0808884C
	.align 2, 0
_080887D0: .4byte gPlaySt
_080887D4:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0808884C
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	ldr r0, _08088814 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080887F2
	movs r0, #0x6b
	bl m4aSongNumStart
_080887F2:
	adds r0, r4, #0
	adds r0, #0x36
	ldrb r0, [r0]
	cmp r0, #0
	beq _08088818
	adds r0, r4, #0
	adds r0, #0x3d
	strb r6, [r0]
	adds r0, r4, #0
	movs r1, #0
	bl sub_808A4B8
	adds r0, r4, #0
	bl sub_8087CD4
	b _0808884C
	.align 2, 0
_08088814: .4byte gPlaySt
_08088818:
	adds r2, r4, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08088830
	adds r0, r4, #0
	adds r0, #0x2b
	strb r1, [r0]
	movs r0, #0xff
	strb r0, [r2]
	b _0808884C
_08088830:
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x40
	bne _08088844
	adds r0, r4, #0
	movs r1, #0xf
	bl Proc_Goto
	b _0808884C
_08088844:
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
_0808884C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8088854
sub_8088854: @ 0x08088854
	push {lr}
	bl sub_8088404
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8088860
sub_8088860: @ 0x08088860
	adds r3, r0, #0
	adds r3, #0x2d
	movs r2, #0
	movs r1, #5
	strb r1, [r3]
	adds r0, #0x29
	strb r2, [r0]
	bx lr

	thumb_func_start sub_8088870
sub_8088870: @ 0x08088870
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r3, r7, #0
	adds r3, #0x29
	ldrb r0, [r3]
	cmp r0, #8
	bne _080888E8
	adds r4, r7, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	adds r1, r7, #0
	bl sub_808A918
	movs r0, #4
	adds r1, r7, #0
	bl sub_808A918
	ldrb r1, [r4]
	adds r0, r7, #0
	adds r0, #0x37
	adds r2, r0, r1
	ldrb r0, [r2]
	cmp r0, #0xff
	beq _080888C4
	lsls r0, r1, #0xb
	movs r1, #0xb4
	lsls r1, r1, #9
	adds r0, r0, r1
	ldr r1, _080888C0 @ =0x0001FFFF
	ands r0, r1
	lsrs r0, r0, #5
	ldrb r1, [r2]
	bl sub_8070D08
	b _080888DA
	.align 2, 0
_080888C0: .4byte 0x0001FFFF
_080888C4:
	lsls r0, r1, #0xb
	movs r2, #0xb4
	lsls r2, r2, #9
	adds r0, r0, r2
	ldr r1, _080888E4 @ =0x0001FFFF
	ands r0, r1
	lsrs r0, r0, #5
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_8070D08
_080888DA:
	ldrb r0, [r4]
	bl sub_808A9F4
	b _080889A8
	.align 2, 0
_080888E4: .4byte 0x0001FFFF
_080888E8:
	cmp r0, #0x20
	bne _0808895E
	adds r0, r7, #0
	bl sub_808A524
	adds r0, r7, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x10
	bne _08088912
	adds r0, r7, #0
	movs r1, #0x10
	bl Proc_Goto
	movs r0, #0x80
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl StartBgmVolumeChange
	b _080889A8
_08088912:
	cmp r0, #0x40
	bne _08088920
	adds r0, r7, #0
	movs r1, #0xf
	bl Proc_Goto
	b _080889A8
_08088920:
	adds r0, r7, #0
	bl sub_808A79C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080889A8
	adds r2, r7, #0
	adds r2, #0x2c
	ldrb r1, [r2]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08088944
	adds r0, r7, #0
	adds r0, #0x2b
	strb r1, [r0]
	movs r0, #0xff
	strb r0, [r2]
	b _08088954
_08088944:
	adds r4, r7, #0
	adds r4, #0x2b
	ldrb r0, [r4]
	movs r1, #1
	movs r2, #1
	bl sub_808A658
	strb r0, [r4]
_08088954:
	adds r0, r7, #0
	movs r1, #4
	bl Proc_Goto
	b _080889A8
_0808895E:
	cmp r0, #0x30
	bne _080889A8
	adds r0, r7, #0
	adds r0, #0x2b
	movs r1, #0
	strb r1, [r0]
	adds r2, r7, #0
	adds r2, #0x2c
	movs r0, #0xff
	strb r0, [r2]
	strb r1, [r3]
	adds r0, r7, #0
	adds r0, #0x2a
	strb r1, [r0]
	adds r0, #6
	ldrb r0, [r0]
	bl sub_8087C78
	adds r1, r7, #0
	adds r1, #0x2e
	strb r0, [r1]
	ldr r0, _080889A4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088998
	movs r0, #0x6b
	bl m4aSongNumStart
_08088998:
	adds r0, r7, #0
	movs r1, #3
	bl Proc_Goto
	b _08088B2C
	.align 2, 0
_080889A4: .4byte gPlaySt
_080889A8:
	adds r0, r7, #0
	adds r0, #0x29
	ldrb r1, [r0]
	mov sl, r0
	cmp r1, #0x10
	bne _08088A20
	ldr r4, _08088A1C @ =gSinLut
	movs r3, #0x80
	adds r3, r3, r4
	mov sb, r3
	movs r1, #0
	ldrsh r0, [r3, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov r8, r2
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r7, #0
	adds r1, #0x2b
	ldrb r1, [r1]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r6, #0
	b _08088A98
	.align 2, 0
_08088A1C: .4byte gSinLut
_08088A20:
	cmp r1, #7
	bhi _08088AA8
	ldr r4, _08088AA4 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r6, #0x80
	lsls r6, r6, #1
	adds r1, r6, #0
	bl Div
	mov r8, r0
	mov r2, r8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	mov r8, r2
	movs r3, #0
	ldrsh r0, [r4, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r2, sl
	ldrb r2, [r2]
	lsls r1, r2, #5
	subs r1, r6, r1
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #4
	adds r1, r6, #0
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r3, sl
	ldrb r3, [r3]
	lsls r1, r3, #5
	subs r6, r6, r1
	adds r1, r6, #0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r7, #0
	adds r1, #0x2b
	ldrb r1, [r1]
	str r0, [sp]
	adds r0, r1, #0
	mov r1, r8
_08088A98:
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	b _08088B24
	.align 2, 0
_08088AA4: .4byte gSinLut
_08088AA8:
	cmp r1, #0xf
	bhi _08088B24
	ldr r4, _08088B3C @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r2, #0x80
	lsls r2, r2, #1
	mov r8, r2
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r2, sl
	ldrb r2, [r2]
	lsls r1, r2, #5
	subs r1, #0xe0
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r3, sl
	ldrb r3, [r3]
	lsls r1, r3, #5
	subs r1, #0xe0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r7, #0
	adds r1, #0x2b
	ldrb r1, [r1]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
_08088B24:
	mov r1, sl
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08088B2C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088B3C: .4byte gSinLut

	thumb_func_start sub_8088B40
sub_8088B40: @ 0x08088B40
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #2
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	adds r1, r6, #0
	adds r1, #0x2f
	strb r0, [r1]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088B92
	ldr r0, _08088B98 @ =0x06013800
	movs r1, #9
	bl sub_8070E70
	adds r0, r6, #0
	bl Proc_Break
_08088B92:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08088B98: .4byte 0x06013800

	thumb_func_start sub_8088B9C
sub_8088B9C: @ 0x08088B9C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #3
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	movs r2, #0x24
	rsbs r2, r2, #0
	adds r1, r2, #0
	subs r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x2f
	strb r1, [r0]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088BF6
	ldr r0, _08088BFC @ =gUnk_0832B554
	ldr r1, _08088C00 @ =0x06013800
	bl Decompress
	adds r0, r6, #0
	bl Proc_Break
_08088BF6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08088BFC: .4byte gUnk_0832B554
_08088C00: .4byte 0x06013800

	thumb_func_start sub_8088C04
sub_8088C04: @ 0x08088C04
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #7
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	adds r1, r6, #0
	adds r1, #0x42
	strh r0, [r1]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088C50
	adds r0, r6, #0
	movs r1, #9
	bl Proc_Goto
_08088C50:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8088C58
sub_8088C58: @ 0x08088C58
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #7
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	movs r1, #0xdc
	subs r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x42
	strh r1, [r0]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088CA8
	adds r0, r6, #0
	movs r1, #1
	bl Proc_Goto
_08088CA8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8088CB0
sub_8088CB0: @ 0x08088CB0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #0xb
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	adds r0, #0xdc
	adds r1, r6, #0
	adds r1, #0x42
	strh r0, [r1]
	adds r0, #0x24
	subs r1, #0x13
	strb r0, [r1]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088D04
	adds r0, r6, #0
	movs r1, #0xa
	bl Proc_Goto
_08088D04:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8088D0C
sub_8088D0C: @ 0x08088D0C
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r1, r6, #0
	adds r1, #0x2d
	movs r0, #0xc
	strb r0, [r1]
	adds r5, r6, #0
	adds r5, #0x29
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	ldrb r1, [r5]
	lsls r4, r1, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	subs r4, r4, r1
	lsls r4, r4, #3
	movs r0, #0xdc
	muls r0, r1, r0
	muls r0, r1, r0
	movs r1, #0xe
	bl __divsi3
	subs r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xe
	bl __divsi3
	movs r2, #0xdc
	lsls r2, r2, #1
	adds r1, r2, #0
	subs r1, r1, r0
	adds r0, r6, #0
	adds r0, #0x42
	strh r1, [r0]
	adds r1, #0x24
	subs r0, #0x13
	strb r1, [r0]
	ldrb r5, [r5]
	cmp r5, #0xe
	bne _08088D66
	adds r0, r6, #0
	movs r1, #9
	bl Proc_Goto
_08088D66:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8088D6C
sub_8088D6C: @ 0x08088D6C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x34
	ldrb r7, [r2]
	adds r1, r4, #0
	adds r1, #0x2d
	movs r0, #9
	strb r0, [r1]
	ldr r0, _08088DB0 @ =gKeySt
	ldr r3, [r0]
	ldrh r1, [r3, #6]
	movs r6, #0x40
	adds r0, r6, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _08088DB4
	ldrb r0, [r2]
	cmp r0, #0
	bne _08088DA8
	adds r0, r6, #0
	ldrh r3, [r3, #8]
	ands r0, r3
	cmp r0, #0
	beq _08088DDE
	adds r0, r4, #0
	adds r0, #0x33
	ldrb r0, [r0]
_08088DA8:
	subs r0, #1
	strb r0, [r2]
	b _08088DDE
	.align 2, 0
_08088DB0: .4byte gKeySt
_08088DB4:
	movs r6, #0x80
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _08088DDE
	ldrb r1, [r2]
	adds r0, r4, #0
	adds r0, #0x33
	ldrb r0, [r0]
	subs r0, #1
	cmp r1, r0
	bge _08088DD2
	adds r0, r1, #1
	strb r0, [r2]
	b _08088DDE
_08088DD2:
	adds r0, r6, #0
	ldrh r3, [r3, #8]
	ands r0, r3
	cmp r0, #0
	beq _08088DDE
	strb r5, [r2]
_08088DDE:
	adds r0, r4, #0
	adds r0, #0x34
	adds r5, r0, #0
	ldrb r0, [r5]
	cmp r7, r0
	beq _08088DFA
	ldr r0, _08088E4C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088DFA
	movs r0, #0x66
	bl m4aSongNumStart
_08088DFA:
	ldr r0, _08088E50 @ =gKeySt
	ldr r0, [r0]
	ldrh r2, [r0, #8]
	movs r1, #1
	ands r1, r2
	cmp r1, #0
	beq _08088E86
	adds r0, r4, #0
	adds r0, #0x32
	ldrb r0, [r0]
	ldrb r1, [r5]
	bl sub_8087C78
	adds r5, r4, #0
	adds r5, #0x35
	strb r0, [r5]
	ldr r0, _08088E4C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088E2A
	movs r0, #0x6a
	bl m4aSongNumStart
_08088E2A:
	adds r1, r4, #0
	adds r1, #0x29
	movs r0, #0
	strb r0, [r1]
	ldrb r0, [r5]
	cmp r0, #1
	beq _08088E54
	cmp r0, #8
	beq _08088E7C
	adds r0, r4, #0
	bl sub_8087C60
	adds r0, r4, #0
	movs r1, #0x10
	bl Proc_Goto
	b _08088EAC
	.align 2, 0
_08088E4C: .4byte gPlaySt
_08088E50: .4byte gKeySt
_08088E54:
	bl sub_8084F94
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	movs r2, #1
	bl sub_808A658
	adds r1, r4, #0
	adds r1, #0x2b
	strb r0, [r1]
	adds r0, r4, #0
	movs r1, #0
	bl sub_8088EB8
	adds r0, r4, #0
	movs r1, #0xb
	bl Proc_Goto
	b _08088EAC
_08088E7C:
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
	b _08088EAC
_08088E86:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08088EAC
	adds r0, r4, #0
	adds r0, #0x29
	strb r1, [r0]
	adds r0, r4, #0
	movs r1, #8
	bl Proc_Goto
	ldr r0, _08088EB4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088EAC
	movs r0, #0x6b
	bl m4aSongNumStart
_08088EAC:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088EB4: .4byte gPlaySt

	thumb_func_start sub_8088EB8
sub_8088EB8: @ 0x08088EB8
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	adds r0, #0x2b
	ldrb r7, [r0]
	cmp r1, #0
	bne _08088EDA
	adds r1, r3, #0
	adds r1, #0x3a
	adds r1, r1, r7
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	beq _08088ED8
_08088ED4:
	movs r0, #1
	b _08088F5A
_08088ED8:
	movs r1, #1
_08088EDA:
	cmp r1, #0
	ble _08088F0E
	movs r5, #0
	adds r2, r3, #0
	adds r2, #0x2b
	adds r4, r2, #0
	movs r6, #0
	adds r3, #0x3a
_08088EEA:
	ldrb r0, [r4]
	cmp r0, #1
	bhi _08088EF6
	adds r0, #1
	strb r0, [r2]
	b _08088EF8
_08088EF6:
	strb r6, [r2]
_08088EF8:
	ldrb r0, [r4]
	adds r1, r0, r3
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _08088F3C
	adds r5, #1
	cmp r5, #2
	ble _08088EEA
	b _08088F3C
_08088F0E:
	movs r5, #0
	adds r2, r3, #0
	adds r2, #0x2b
	adds r4, r2, #0
	movs r6, #2
	adds r3, #0x3a
_08088F1A:
	ldrb r0, [r4]
	cmp r0, #0
	bne _08088F24
	strb r6, [r2]
	b _08088F28
_08088F24:
	subs r0, #1
	strb r0, [r2]
_08088F28:
	ldrb r0, [r4]
	adds r1, r0, r3
	movs r0, #1
	ldrb r1, [r1]
	ands r0, r1
	cmp r0, #0
	bne _08088F3C
	adds r5, #1
	cmp r5, #2
	ble _08088F1A
_08088F3C:
	ldrb r2, [r2]
	cmp r7, r2
	beq _08088F58
	ldr r0, _08088F54 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088ED4
	movs r0, #0x66
	bl m4aSongNumStart
	b _08088ED4
	.align 2, 0
_08088F54: .4byte gPlaySt
_08088F58:
	movs r0, #0
_08088F5A:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8088F60
sub_8088F60: @ 0x08088F60
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x2d
	movs r0, #4
	strb r0, [r1]
	adds r3, r4, #0
	adds r3, #0x36
	ldrb r1, [r3]
	cmp r1, #0
	bne _08088FA6
	ldr r0, _08088F90 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08088F94
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r4, #0
	bl sub_8088EB8
	b _08088FF8
	.align 2, 0
_08088F90: .4byte gKeySt
_08088F94:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08088FF8
	adds r0, r4, #0
	movs r1, #1
	bl sub_8088EB8
	b _08088FF8
_08088FA6:
	ldr r0, _08088FD0 @ =gKeySt
	ldr r0, [r0]
	ldrh r2, [r0, #8]
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _08088FD8
	cmp r1, #1
	beq _08088FF8
	movs r0, #1
	strb r0, [r3]
	ldr r0, _08088FD4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088FF8
	movs r0, #0x67
	bl m4aSongNumStart
	b _08088FF8
	.align 2, 0
_08088FD0: .4byte gKeySt
_08088FD4: .4byte gPlaySt
_08088FD8:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _08088FF8
	cmp r1, #2
	beq _08088FF8
	movs r0, #2
	strb r0, [r3]
	ldr r0, _08089034 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08088FF8
	movs r0, #0x67
	bl m4aSongNumStart
_08088FF8:
	ldr r0, _08089038 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808905C
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0xff
	bne _0808903C
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	bl sub_80851B4
	adds r0, r4, #0
	movs r1, #0xd
	bl Proc_Goto
	ldr r0, _08089034 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _080890AA
	movs r0, #0x6a
	bl m4aSongNumStart
	b _080890AA
	.align 2, 0
_08089034: .4byte gPlaySt
_08089038: .4byte gKeySt
_0808903C:
	adds r0, r4, #0
	adds r0, #0x3e
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808904E
	ldr r0, _08089058 @ =0x06014000
	movs r1, #9
	bl sub_8070E70
_0808904E:
	adds r0, r4, #0
	bl sub_8088404
	b _080890AA
	.align 2, 0
_08089058: .4byte 0x06014000
_0808905C:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080890AA
	ldr r0, _08089090 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _08089074
	movs r0, #0x6b
	bl m4aSongNumStart
_08089074:
	adds r0, r4, #0
	adds r0, #0x36
	ldrb r5, [r0]
	cmp r5, #0
	beq _08089094
	adds r0, r4, #0
	movs r1, #0
	bl sub_808A4B8
	adds r0, r4, #0
	bl sub_8087CD4
	b _080890AA
	.align 2, 0
_08089090: .4byte gPlaySt
_08089094:
	ldr r0, _080890B0 @ =gUnk_0832B554
	ldr r1, _080890B4 @ =0x06013800
	bl Decompress
	adds r0, r4, #0
	adds r0, #0x29
	strb r5, [r0]
	adds r0, r4, #0
	movs r1, #0xc
	bl Proc_Goto
_080890AA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080890B0: .4byte gUnk_0832B554
_080890B4: .4byte 0x06013800

	thumb_func_start sub_80890B8
sub_80890B8: @ 0x080890B8
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #1
	movs r2, #2
	bl sub_808A8B4
	adds r0, r4, #0
	bl Proc_Break
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80890D0
sub_80890D0: @ 0x080890D0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x5c]
	cmp r0, #0
	beq _080890DE
	bl EndSpriteAnimProc
_080890DE:
	ldr r0, [r4, #0x54]
	bl Proc_End
	ldr r0, [r4, #0x58]
	bl Proc_End
	movs r0, #0
	bl SetOnHBlankA
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x20
	bne _0808912C
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #4
	beq _0808911C
	cmp r0, #4
	bgt _0808910E
	cmp r0, #2
	beq _08089114
	b _0808917A
_0808910E:
	cmp r0, #8
	beq _08089124
	b _0808917A
_08089114:
	movs r0, #5
	bl SetNextGameAction
	b _0808917A
_0808911C:
	movs r0, #8
	bl SetNextGameAction
	b _0808917A
_08089124:
	movs r0, #7
	bl SetNextGameAction
	b _0808917A
_0808912C:
	cmp r0, #0x40
	beq _0808917A
	cmp r0, #1
	bne _08089142
	movs r0, #3
	bl sub_80858E4
	movs r0, #3
	bl SetNextGameAction
	b _0808917A
_08089142:
	cmp r0, #2
	bne _08089156
	adds r4, #0x2b
	ldrb r0, [r4]
	bl sub_80851B4
	ldrb r0, [r4]
	bl SetNextGameAction
	b _0808917A
_08089156:
	cmp r0, #0x10
	bne _08089162
	movs r0, #0
	bl SetNextGameAction
	b _0808917A
_08089162:
	cmp r0, #0x80
	bne _0808917A
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x80
	movs r2, #0x10
	movs r3, #0
	bl StartBgmVolumeChange
	movs r0, #4
	bl SetNextGameAction
_0808917A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8089180
sub_8089180: @ 0x08089180
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x2e
	movs r0, #0x20
	strb r0, [r1]
	ldr r0, [r4, #0x54]
	bl Proc_End
	ldr r0, [r4, #0x58]
	bl Proc_End
	movs r0, #0
	bl SetOnHBlankA
	ldr r0, [r4, #0x5c]
	cmp r0, #0
	beq _080891A8
	bl EndSpriteAnimProc
_080891A8:
	adds r0, r4, #0
	adds r0, #0x35
	ldrb r0, [r0]
	cmp r0, #1
	beq _080891B8
	cmp r0, #8
	beq _080891C2
	b _080891D4
_080891B8:
	movs r0, #0
	adds r1, r4, #0
	bl sub_808B578
	b _080891D4
_080891C2:
	movs r0, #0x80
	movs r1, #0
	movs r2, #0x20
	movs r3, #0
	bl StartBgmVolumeChange
	adds r0, r4, #0
	bl sub_808BD58
_080891D4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80891DC
sub_80891DC: @ 0x080891DC
	push {lr}
	adds r1, r0, #0
	adds r1, #0x35
	ldrb r1, [r1]
	cmp r1, #1
	beq _080891EE
	cmp r1, #8
	beq _080891F6
	b _080891FC
_080891EE:
	movs r1, #0xa
	bl Proc_Goto
	b _080891FC
_080891F6:
	movs r1, #9
	bl Proc_Goto
_080891FC:
	pop {r0}
	bx r0

	thumb_func_start sub_8089200
sub_8089200: @ 0x08089200
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808922C @ =gUnk_08689E9C
	bl SpawnProcLocking
	adds r3, r0, #0
	adds r3, #0x2e
	movs r2, #0
	movs r1, #0x80
	strb r1, [r3]
	adds r0, #0x35
	strb r2, [r0]
	ldr r2, _08089230 @ =gPlaySt
	movs r0, #0x61
	rsbs r0, r0, #0
	ldrb r1, [r2, #0x1c]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2, #0x1c]
	pop {r0}
	bx r0
	.align 2, 0
_0808922C: .4byte gUnk_08689E9C
_08089230: .4byte gPlaySt

	thumb_func_start sub_8089234
sub_8089234: @ 0x08089234
	push {lr}
	adds r1, r0, #0
	ldr r0, _08089250 @ =gUnk_08689E9C
	bl SpawnProcLocking
	adds r3, r0, #0
	adds r3, #0x2e
	movs r2, #0
	movs r1, #0x40
	strb r1, [r3]
	adds r0, #0x35
	strb r2, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_08089250: .4byte gUnk_08689E9C

	thumb_func_start sub_8089254
sub_8089254: @ 0x08089254
	adds r0, #0x29
	movs r1, #0
	strb r1, [r0]
	ldr r3, _08089274 @ =gPal
	ldr r2, _08089278 @ =0x02000002
	movs r1, #0x80
	lsls r1, r1, #2
_08089262:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _08089262
	bx lr
	.align 2, 0
_08089274: .4byte gPal
_08089278: .4byte 0x02000002

	thumb_func_start sub_808927C
sub_808927C: @ 0x0808927C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	adds r0, #0x29
	ldrb r5, [r0]
	movs r6, #0
	ldr r0, _08089304 @ =gPal
	mov sl, r0
	movs r4, #0xf8
	lsls r4, r4, #7
	mov sb, r4
	ldr r0, _08089308 @ =0x02000002
	mov ip, r0
_0808929C:
	lsls r7, r6, #1
	mov r4, ip
	ldrh r1, [r4]
	mov r0, sb
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #4
	mov r0, sb
	ands r2, r0
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #4
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #4
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _0808930C @ =0x000001FF
	cmp r6, r0
	ble _0808929C
	bl EnablePalSync
	mov r1, r8
	adds r1, #0x29
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	cmp r5, #0x10
	bne _080892F6
	mov r0, r8
	bl Proc_Break
_080892F6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089304: .4byte gPal
_08089308: .4byte 0x02000002
_0808930C: .4byte 0x000001FF

	thumb_func_start sub_8089310
sub_8089310: @ 0x08089310
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov r1, sb
	adds r1, #0x29
	movs r0, #0x10
	ldrb r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r6, #0
	ldr r0, _080893C0 @ =gPal
	mov sl, r0
	movs r1, #0xf8
	lsls r1, r1, #7
	mov r8, r1
	ldr r4, _080893C4 @ =0x02000002
	mov ip, r4
_0808933A:
	lsls r7, r6, #1
	mov r0, ip
	ldrh r1, [r0]
	mov r0, r8
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #4
	mov r4, r8
	ands r2, r4
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #4
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #4
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _080893C8 @ =0x000001FF
	cmp r6, r0
	ble _0808933A
	bl EnablePalSync
	mov r1, sb
	adds r1, #0x29
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	cmp r5, #0
	bne _080893B2
	ldr r2, _080893CC @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	mov r0, sb
	bl Proc_Break
_080893B2:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080893C0: .4byte gPal
_080893C4: .4byte 0x02000002
_080893C8: .4byte 0x000001FF
_080893CC: .4byte gDispIo

	thumb_func_start sub_80893D0
sub_80893D0: @ 0x080893D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov r1, sb
	adds r1, #0x29
	movs r0, #0x20
	ldrb r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r6, #0
	ldr r0, _08089480 @ =gPal
	mov sl, r0
	movs r1, #0xf8
	lsls r1, r1, #7
	mov r8, r1
	ldr r4, _08089484 @ =0x02000002
	mov ip, r4
_080893FA:
	lsls r7, r6, #1
	mov r0, ip
	ldrh r1, [r0]
	mov r0, r8
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #5
	mov r4, r8
	ands r2, r4
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #5
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #5
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _08089488 @ =0x000001FF
	cmp r6, r0
	ble _080893FA
	bl EnablePalSync
	mov r1, sb
	adds r1, #0x29
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	cmp r5, #0
	bne _08089472
	ldr r2, _0808948C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	mov r0, sb
	bl Proc_Break
_08089472:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089480: .4byte gPal
_08089484: .4byte 0x02000002
_08089488: .4byte 0x000001FF
_0808948C: .4byte gDispIo

	thumb_func_start sub_8089490
sub_8089490: @ 0x08089490
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	mov r1, sb
	adds r1, #0x29
	movs r0, #0x40
	ldrb r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r6, #0
	ldr r0, _08089540 @ =gPal
	mov sl, r0
	movs r1, #0xf8
	lsls r1, r1, #7
	mov r8, r1
	ldr r4, _08089544 @ =0x02000002
	mov ip, r4
_080894BA:
	lsls r7, r6, #1
	mov r0, ip
	ldrh r1, [r0]
	mov r0, r8
	ands r0, r1
	muls r0, r5, r0
	asrs r2, r0, #6
	mov r4, r8
	ands r2, r4
	movs r4, #0xf8
	lsls r4, r4, #2
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r3, r0, #6
	ands r3, r4
	movs r4, #0x1f
	adds r0, r4, #0
	ands r0, r1
	muls r0, r5, r0
	asrs r0, r0, #6
	ands r0, r4
	mov r4, sl
	adds r1, r7, r4
	orrs r2, r3
	orrs r2, r0
	strh r2, [r1]
	movs r0, #2
	add ip, r0
	adds r6, #1
	ldr r0, _08089548 @ =0x000001FF
	cmp r6, r0
	ble _080894BA
	bl EnablePalSync
	mov r1, sb
	adds r1, #0x29
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	cmp r5, #0
	bne _08089532
	ldr r2, _0808954C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	mov r0, sb
	bl Proc_Break
_08089532:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089540: .4byte gPal
_08089544: .4byte 0x02000002
_08089548: .4byte 0x000001FF
_0808954C: .4byte gDispIo

	thumb_func_start sub_8089550
sub_8089550: @ 0x08089550
	push {lr}
	adds r1, r0, #0
	ldr r0, _08089560 @ =gUnk_0868A09C
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08089560: .4byte gUnk_0868A09C

	thumb_func_start sub_8089564
sub_8089564: @ 0x08089564
	push {lr}
	adds r1, r0, #0
	ldr r0, _08089574 @ =gUnk_0868A0B4
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08089574: .4byte gUnk_0868A0B4

	thumb_func_start sub_8089578
sub_8089578: @ 0x08089578
	push {lr}
	adds r1, r0, #0
	ldr r0, _08089588 @ =gUnk_0868A0CC
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08089588: .4byte gUnk_0868A0CC

	thumb_func_start sub_808958C
sub_808958C: @ 0x0808958C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808959C @ =gUnk_0868A0E4
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_0808959C: .4byte gUnk_0868A0E4

	thumb_func_start sub_80895A0
sub_80895A0: @ 0x080895A0
	lsls r2, r2, #4
	cmp r2, #0
	ble _080895B6
	adds r3, r0, #0
_080895A8:
	ldrh r0, [r3]
	strh r0, [r1]
	adds r3, #2
	adds r1, #2
	subs r2, #1
	cmp r2, #0
	bne _080895A8
_080895B6:
	bx lr

	thumb_func_start sub_80895B8
sub_80895B8: @ 0x080895B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	movs r0, #0x3f
	ands r5, r0
	movs r1, #0x20
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080895D8
	movs r0, #0x1f
	ands r0, r5
	subs r5, r1, r0
_080895D8:
	movs r0, #1
	mov ip, r0
	ldr r0, _0808967C @ =0x02000404
	movs r2, #0xf8
	lsls r2, r2, #7
	mov sb, r2
	subs r6, r1, r5
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r0, #0x22
	mov r8, r0
	movs r4, #0x1f
	mov sl, r4
_080895F2:
	mov r0, ip
	subs r0, #8
	cmp r0, #2
	bls _0808965C
	movs r0, #0x90
	lsls r0, r0, #1
	add r0, ip
	lsls r0, r0, #1
	ldr r1, _08089680 @ =gPal
	adds r0, r0, r1
	ldrh r1, [r0]
	mov r2, r8
	ldrh r4, [r2]
	adds r0, r1, #0
	mov r2, sb
	ands r0, r2
	adds r3, r0, #0
	muls r3, r6, r3
	adds r0, r4, #0
	ands r0, r2
	muls r0, r5, r0
	adds r3, r3, r0
	asrs r3, r3, #5
	ands r3, r2
	adds r0, r1, #0
	ands r0, r7
	adds r2, r0, #0
	muls r2, r6, r2
	adds r0, r4, #0
	ands r0, r7
	muls r0, r5, r0
	adds r2, r2, r0
	asrs r2, r2, #5
	ands r2, r7
	mov r0, sl
	ands r1, r0
	muls r1, r6, r1
	ands r4, r0
	adds r0, r4, #0
	muls r0, r5, r0
	adds r1, r1, r0
	asrs r1, r1, #5
	movs r4, #0x1f
	ands r1, r4
	movs r0, #0x88
	lsls r0, r0, #1
	add r0, ip
	lsls r0, r0, #1
	ldr r4, _08089680 @ =gPal
	adds r0, r0, r4
	orrs r3, r2
	orrs r1, r3
	strh r1, [r0]
_0808965C:
	movs r0, #2
	add r8, r0
	movs r1, #1
	add ip, r1
	mov r2, ip
	cmp r2, #0xf
	ble _080895F2
	bl EnablePalSync
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808967C: .4byte 0x02000404
_08089680: .4byte gPal

	thumb_func_start sub_8089684
sub_8089684: @ 0x08089684
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	ldr r4, [r0, #0x14]
	adds r0, r4, #0
	adds r0, #0x2f
	ldrb r0, [r0]
	lsls r0, r0, #5
	movs r1, #0xdc
	bl __divsi3
	movs r1, #0x20
	subs r1, r1, r0
	lsls r1, r1, #0x18
	movs r0, #0x90
	lsls r0, r0, #0x18
	adds r1, r1, r0
	lsrs r1, r1, #0x18
	mov sl, r1
	movs r1, #0x90
	mov sb, r1
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #1
	bne _080896D2
	ldr r0, [r4, #0x50]
	mov r4, sp
	adds r4, #6
	add r5, sp, #8
	add r1, sp, #4
	adds r2, r4, #0
	adds r3, r5, #0
	bl FormatTime
	b _080896F2
_080896D2:
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	lsls r1, r0, #2
	adds r0, r4, #0
	adds r0, #0x44
	adds r0, r0, r1
	ldr r0, [r0]
	mov r4, sp
	adds r4, #6
	add r5, sp, #8
	add r1, sp, #4
	adds r2, r4, #0
	adds r3, r5, #0
	bl FormatTime
_080896F2:
	mov r1, sb
	adds r1, #0x10
	mov r4, sl
	subs r4, #0xe
	ldr r3, _08089884 @ =gUnk_0868A160
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #0xd
	adds r2, r4, #0
	bl PutSpriteExt
	mov r1, sb
	adds r1, #0x14
	ldr r3, _08089888 @ =gUnk_0868A224
	movs r0, #0xa0
	lsls r0, r0, #7
	mov r8, r0
	str r0, [sp]
	movs r0, #0xd
	adds r2, r4, #0
	bl PutSpriteExt
	add r0, sp, #4
	mov r7, sl
	subs r7, #8
	ldrh r0, [r0]
	cmp r0, #0x63
	bls _0808976C
	mov r5, sb
	adds r5, #0x12
	ldr r4, _0808988C @ =gUnk_0868A260
	add r0, sp, #4
	ldrh r0, [r0]
	movs r6, #0x64
	movs r1, #0x64
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r1, r8
	str r1, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
	add r5, sp, #4
	adds r0, r5, #0
	ldrh r4, [r0]
	adds r0, r4, #0
	movs r1, #0x64
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	muls r0, r6, r0
	subs r4, r4, r0
	strh r4, [r5]
_0808976C:
	add r0, sp, #4
	ldrh r0, [r0]
	cmp r0, #9
	bls _0808979A
	mov r5, sb
	adds r5, #0x1a
	ldr r4, _0808988C @ =gUnk_0868A260
	add r0, sp, #4
	ldrh r0, [r0]
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
_0808979A:
	mov r5, sb
	adds r5, #0x22
	ldr r4, _0808988C @ =gUnk_0868A260
	add r0, sp, #4
	ldrh r0, [r0]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r1, r8
	str r1, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
	mov r1, sb
	adds r1, #0x2a
	mov r2, sl
	subs r2, #7
	ldr r3, [r4, #0x28]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	bl PutSpriteExt
	adds r5, #0x10
	mov r1, sp
	ldrh r0, [r1, #6]
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
	adds r5, #8
	mov r1, sp
	ldrh r0, [r1, #6]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	adds r2, r7, #0
	bl PutSpriteExt
	mov r1, sb
	adds r1, #0x42
	mov r2, sl
	adds r2, #1
	ldr r4, _08089890 @ =gUnk_0868A234
	ldr r3, [r4, #0x28]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	bl PutSpriteExt
	adds r5, #0x10
	mov r1, sp
	ldrh r0, [r1, #8]
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	mov r2, sl
	bl PutSpriteExt
	adds r5, #8
	mov r1, sp
	ldrh r0, [r1, #8]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0xe
	adds r0, r0, r4
	ldr r3, [r0]
	mov r0, r8
	str r0, [sp]
	movs r0, #0xd
	adds r1, r5, #0
	mov r2, sl
	bl PutSpriteExt
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089884: .4byte gUnk_0868A160
_08089888: .4byte gUnk_0868A224
_0808988C: .4byte gUnk_0868A260
_08089890: .4byte gUnk_0868A234

	thumb_func_start sub_8089894
sub_8089894: @ 0x08089894
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r6, r0, #0
	adds r5, r1, #0
	ldr r0, [sp, #0x24]
	ldr r4, [sp, #0x28]
	ldr r1, [sp, #0x2c]
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r3, [sp]
	str r0, [sp, #4]
	mov r0, sp
	asrs r5, r5, #8
	strh r5, [r0, #8]
	asrs r2, r2, #8
	strh r2, [r0, #0xa]
	mov r5, sp
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x80
	lsls r0, r0, #9
	bl __divsi3
	strh r0, [r5, #0xc]
	mov r1, sp
	strh r0, [r1, #0xe]
	mov r0, sp
	lsls r4, r4, #6
	strh r4, [r0, #0x10]
	ldr r1, _080898EC @ =0x03002708
	cmp r6, #2
	bne _080898DA
	subs r1, #0x10
_080898DA:
	mov r0, sp
	movs r2, #1
	bl BgAffineSet
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080898EC: .4byte 0x03002708

	thumb_func_start sub_80898F0
sub_80898F0: @ 0x080898F0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r6, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r6, #0x2c]
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #0x2e]
	adds r0, r6, #0
	adds r0, #0x3a
	strb r1, [r0]
	adds r1, r6, #0
	adds r1, #0x3b
	movs r0, #0x28
	strb r0, [r1]
	movs r0, #0xac
	lsls r0, r0, #4
	bl sub_8070D48
	movs r4, #0
	ldr r5, _0808993C @ =0x0001FFFF
_0808991C:
	ldr r0, [r6, #0x14]
	adds r0, #0x37
	adds r1, r0, r4
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _08089940
	lsls r0, r4, #0xb
	movs r2, #0xb4
	lsls r2, r2, #9
	adds r0, r0, r2
	ands r0, r5
	lsrs r0, r0, #5
	ldrb r1, [r1]
	bl sub_8070D08
	b _08089954
	.align 2, 0
_0808993C: .4byte 0x0001FFFF
_08089940:
	lsls r0, r4, #0xb
	movs r1, #0xb4
	lsls r1, r1, #9
	adds r0, r0, r1
	ands r0, r5
	lsrs r0, r0, #5
	movs r1, #1
	rsbs r1, r1, #0
	bl sub_8070D08
_08089954:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #2
	bls _0808991C
	movs r5, #0
	movs r7, #0
	strh r7, [r6, #0x30]
	adds r0, r6, #0
	adds r0, #0x32
	strb r5, [r0]
	movs r4, #0x80
	lsls r4, r4, #1
	str r4, [sp]
	movs r0, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	str r4, [sp]
	movs r0, #1
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	str r4, [sp]
	movs r0, #2
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	strh r7, [r6, #0x2a]
	adds r0, r6, #0
	bl sub_808A418
	str r0, [r6, #0x34]
	adds r0, r6, #0
	adds r0, #0x39
	strb r5, [r0]
	ldr r1, [r6, #0x14]
	adds r2, r1, #0
	adds r2, #0x3f
	ldrb r0, [r2]
	cmp r0, #0xff
	bne _080899B8
	str r7, [r1, #0x5c]
	b _080899D6
_080899B8:
	ldr r0, _080899EC @ =gUnk_0832C39C
	movs r1, #0xa0
	lsls r1, r1, #1
	ldrb r2, [r2]
	lsls r2, r2, #5
	adds r2, #0x30
	movs r3, #0xd0
	lsls r3, r3, #1
	str r7, [sp]
	movs r4, #4
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	ldr r1, [r6, #0x14]
	str r0, [r1, #0x5c]
_080899D6:
	ldr r0, [r6, #0x14]
	adds r0, #0x2b
	ldrb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x3c
	strb r1, [r0]
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080899EC: .4byte gUnk_0832C39C

	thumb_func_start sub_80899F0
sub_80899F0: @ 0x080899F0
	push {lr}
	lsls r1, r1, #0x10
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08089A1C
	ldr r2, _08089A18 @ =gPal
	lsrs r0, r1, #0x12
	movs r1, #0xf
	ands r0, r1
	movs r1, #0xc8
	lsls r1, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	movs r1, #0xb4
	lsls r1, r1, #2
	adds r2, r2, r1
	strh r0, [r2]
	b _08089A2A
	.align 2, 0
_08089A18: .4byte gPal
_08089A1C:
	ldr r0, _08089A34 @ =gPal
	ldr r2, _08089A38 @ =0x0000033A
	adds r1, r0, r2
	ldrh r1, [r1]
	subs r2, #0x6a
	adds r0, r0, r2
	strh r1, [r0]
_08089A2A:
	bl EnablePalSync
	pop {r0}
	bx r0
	.align 2, 0
_08089A34: .4byte gPal
_08089A38: .4byte 0x0000033A

	thumb_func_start sub_8089A3C
sub_8089A3C: @ 0x08089A3C
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	ldr r5, [sp, #0x24]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r1, _08089AB0 @ =0x000001FF
	mov sl, r1
	adds r1, r6, #0
	mov r2, sl
	ands r1, r2
	ldr r3, _08089AB4 @ =gUnk_0868A0FC
	movs r2, #0xf
	mov sb, r2
	ands r0, r2
	lsls r0, r0, #0xc
	str r0, [sp]
	movs r0, #4
	mov r2, r8
	bl PutSpriteExt
	ldr r0, _08089AB8 @ =gUnk_0868A518
	lsls r4, r4, #3
	adds r4, r4, r0
	ldrb r0, [r4, #4]
	adds r0, #8
	adds r6, r6, r0
	mov r0, sl
	ands r6, r0
	movs r1, #8
	add r8, r1
	ldr r3, [r4]
	mov r2, sb
	ands r5, r2
	lsls r5, r5, #0xc
	str r5, [sp]
	movs r0, #4
	adds r1, r6, #0
	mov r2, r8
	bl PutSpriteExt
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08089AB0: .4byte 0x000001FF
_08089AB4: .4byte gUnk_0868A0FC
_08089AB8: .4byte gUnk_0868A518

	thumb_func_start sub_8089ABC
sub_8089ABC: @ 0x08089ABC
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	adds r6, r1, #0
	mov r8, r2
	adds r4, r3, #0
	ldr r0, [sp, #0x20]
	ldr r5, [sp, #0x24]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r1, _08089B30 @ =0x000001FF
	mov sl, r1
	adds r1, r6, #0
	mov r2, sl
	ands r1, r2
	ldr r3, _08089B34 @ =gUnk_0868A0FC
	movs r2, #0xf
	mov sb, r2
	ands r0, r2
	lsls r0, r0, #0xc
	str r0, [sp]
	movs r0, #4
	mov r2, r8
	bl PutSpriteExt
	ldr r0, _08089B38 @ =gUnk_0868A4F8
	lsls r4, r4, #3
	adds r4, r4, r0
	ldrb r0, [r4, #4]
	adds r0, #8
	adds r6, r6, r0
	mov r0, sl
	ands r6, r0
	movs r1, #8
	add r8, r1
	ldr r3, [r4]
	mov r2, sb
	ands r5, r2
	lsls r5, r5, #0xc
	str r5, [sp]
	movs r0, #4
	adds r1, r6, #0
	mov r2, r8
	bl PutSpriteExt
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08089B30: .4byte 0x000001FF
_08089B34: .4byte gUnk_0868A0FC
_08089B38: .4byte gUnk_0868A4F8

	thumb_func_start sub_8089B3C
sub_8089B3C: @ 0x08089B3C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r4, r7, #0
	adds r4, #0x3c
	ldr r0, [r7, #0x14]
	adds r0, #0x2b
	ldrb r1, [r4]
	ldrb r2, [r0]
	cmp r1, r2
	beq _08089B66
	ldrb r0, [r0]
	bl sub_808A9F4
	ldr r0, [r7, #0x14]
	adds r0, #0x2b
	ldrb r0, [r0]
	strb r0, [r4]
_08089B66:
	ldr r2, _08089BAC @ =gPal
	ldr r3, _08089BB0 @ =0x02000404
	ldrh r1, [r7, #0x2a]
	lsrs r0, r1, #2
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	movs r1, #0x8d
	lsls r1, r1, #2
	adds r2, r2, r1
	strh r0, [r2]
	bl EnablePalSync
	ldr r1, [r7, #0x14]
	adds r4, r1, #0
	adds r4, #0x3f
	ldrb r3, [r4]
	adds r0, r3, #0
	cmp r0, #0xff
	beq _08089C52
	adds r5, r1, #0
	adds r5, #0x40
	ldrh r2, [r5]
	adds r1, r2, #0
	movs r0, #0x80
	lsls r0, r0, #1
	cmp r1, r0
	beq _08089C52
	cmp r1, #0xf
	bhi _08089BB4
	movs r0, #0xff
	strb r0, [r4]
	b _08089C48
	.align 2, 0
_08089BAC: .4byte gPal
_08089BB0: .4byte 0x02000404
_08089BB4:
	ldr r0, _08089C6C @ =gSinLut
	mov sb, r0
	movs r4, #0xff
	adds r0, r4, #0
	ands r0, r2
	adds r0, #0x40
	lsls r0, r0, #1
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	ldrh r1, [r5]
	bl Div
	mov r8, r0
	mov r2, r8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	mov r8, r2
	ldr r1, [r7, #0x14]
	adds r1, #0x40
	adds r0, r4, #0
	ldrh r2, [r1]
	ands r0, r2
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r0, [r0, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	ldrh r1, [r1]
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	ldr r1, [r7, #0x14]
	adds r1, #0x40
	adds r0, r4, #0
	ldrh r2, [r1]
	ands r0, r2
	lsls r0, r0, #1
	add r0, sb
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #4
	ldrh r1, [r1]
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	ldr r1, [r7, #0x14]
	adds r1, #0x40
	ldrh r0, [r1]
	ands r4, r0
	adds r4, #0x40
	lsls r4, r4, #1
	add r4, sb
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	ldrh r1, [r1]
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #3
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl SetObjAffine
_08089C48:
	ldr r0, [r7, #0x14]
	adds r0, #0x40
	ldrh r1, [r0]
	subs r1, #0x10
	strh r1, [r0]
_08089C52:
	ldrh r0, [r7, #0x2a]
	bl sub_80895B8
	ldrh r0, [r7, #0x2a]
	adds r0, #1
	strh r0, [r7, #0x2a]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089C6C: .4byte gSinLut

	thumb_func_start sub_8089C70
sub_8089C70: @ 0x08089C70
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r1, [r4, #0x14]
	adds r1, #0x2f
	ldrb r2, [r1]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #4
	movs r1, #0xdc
	bl __divsi3
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r5, r0, r1
	ldr r2, _08089CE4 @ =0x000001FF
	adds r0, r2, #0
	ands r5, r0
	ldr r3, _08089CE8 @ =gUnk_0868A0FC
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	movs r1, #0x38
	adds r2, r5, #0
	bl PutSpriteExt
	ldr r1, [r4, #0x14]
	adds r0, r1, #0
	adds r0, #0x42
	ldrh r0, [r0]
	cmp r0, #0
	beq _08089CF4
	adds r0, r1, #0
	adds r0, #0x35
	ldrb r0, [r0]
	bl sub_8087CB0
	lsls r0, r0, #0x18
	ldr r1, _08089CEC @ =gUnk_0868A518
	lsrs r0, r0, #0x15
	adds r1, r0, r1
	ldrb r1, [r1, #4]
	adds r1, #0x40
	adds r2, r5, #0
	adds r2, #8
	ldr r3, _08089CE4 @ =0x000001FF
	ands r2, r3
	ldr r3, _08089CF0 @ =gUnk_0868A4F8
	adds r0, r0, r3
	ldr r3, [r0]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	b _08089D20
	.align 2, 0
_08089CE4: .4byte 0x000001FF
_08089CE8: .4byte gUnk_0868A0FC
_08089CEC: .4byte gUnk_0868A518
_08089CF0: .4byte gUnk_0868A4F8
_08089CF4:
	adds r0, r1, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	bl sub_8087CB0
	lsls r0, r0, #0x18
	ldr r1, _08089D28 @ =gUnk_0868A518
	lsrs r0, r0, #0x15
	adds r0, r0, r1
	ldrb r1, [r0, #4]
	adds r1, #0x40
	adds r2, r5, #0
	adds r2, #8
	ldr r3, _08089D2C @ =0x000001FF
	ands r2, r3
	ldr r3, [r0]
	movs r0, #0xc0
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_08089D20:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08089D28: .4byte gUnk_0868A518
_08089D2C: .4byte 0x000001FF

	thumb_func_start sub_8089D30
sub_8089D30: @ 0x08089D30
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov r8, r0
	ldr r2, [r0, #0x14]
	adds r0, r2, #0
	adds r0, #0x2e
	ldrb r1, [r0]
	lsls r0, r1, #0x18
	cmp r0, #0
	blt _08089D66
	lsrs r0, r0, #0x18
	cmp r0, #0x20
	bne _08089D60
	adds r0, r2, #0
	adds r0, #0x35
	ldrb r0, [r0]
	mov r1, r8
	adds r1, #0x33
	strb r0, [r1]
	b _08089D66
_08089D60:
	mov r0, r8
	adds r0, #0x33
	strb r1, [r0]
_08089D66:
	mov r0, r8
	ldr r3, [r0, #0x14]
	adds r0, r3, #0
	adds r0, #0x2f
	adds r1, r3, #0
	adds r1, #0x42
	ldrh r1, [r1]
	ldrb r0, [r0]
	adds r5, r1, r0
	cmp r5, #0xdb
	bgt _08089E24
	adds r0, r3, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r0, #6
	subs r0, r0, r1
	lsls r0, r0, #0x1b
	lsrs r4, r0, #0x18
	movs r7, #0
	cmp r7, r1
	bhs _08089DFE
	movs r6, #0x38
_08089D92:
	adds r0, r3, #0
	adds r0, #0x30
	ldrb r0, [r0]
	adds r1, r7, #0
	bl sub_8087C78
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r3, #0
	bl sub_8087CB0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	mov r1, r8
	ldr r0, [r1, #0x14]
	adds r0, #0x2a
	ldrb r0, [r0]
	cmp r7, r0
	bne _08089DD2
	lsls r2, r7, #1
	adds r2, r2, r7
	lsls r2, r2, #3
	adds r2, r4, r2
	movs r0, #1
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	mov r0, r8
	subs r1, r6, r5
	bl sub_8089A3C
	b _08089DEA
_08089DD2:
	lsls r2, r7, #1
	adds r2, r2, r7
	lsls r2, r2, #3
	adds r2, r4, r2
	movs r0, #4
	str r0, [sp]
	movs r0, #8
	str r0, [sp, #4]
	mov r0, r8
	subs r1, r6, r5
	bl sub_8089A3C
_08089DEA:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r2, r8
	ldr r3, [r2, #0x14]
	adds r0, r3, #0
	adds r0, #0x31
	ldrb r0, [r0]
	cmp r7, r0
	blo _08089D92
_08089DFE:
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r1, r0, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	cmp r1, #1
	bne _08089E24
	adds r0, #0x2a
	ldrb r1, [r0]
	lsls r2, r1, #1
	adds r2, r2, r1
	lsls r2, r2, #3
	adds r2, r4, r2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0
	movs r1, #0x24
	bl sub_808A3C8
_08089E24:
	mov r3, r8
	ldr r2, [r3, #0x14]
	adds r0, r2, #0
	adds r0, #0x42
	ldrh r0, [r0]
	subs r0, #1
	lsls r0, r0, #0x10
	movs r1, #0xdb
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _08089EF8
	adds r0, r2, #0
	adds r0, #0x33
	ldrb r1, [r0]
	movs r0, #6
	subs r0, r0, r1
	lsls r0, r0, #0x1b
	lsrs r4, r0, #0x18
	movs r7, #0
	cmp r7, r1
	bhs _08089ED0
_08089E4E:
	adds r0, r2, #0
	adds r0, #0x32
	ldrb r0, [r0]
	adds r1, r7, #0
	bl sub_8087C78
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r3, #0
	bl sub_8087CB0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	mov r0, r8
	ldr r1, [r0, #0x14]
	adds r0, r1, #0
	adds r0, #0x34
	ldrb r0, [r0]
	cmp r7, r0
	bne _08089E9A
	adds r0, r1, #0
	adds r0, #0x42
	movs r1, #0x8a
	lsls r1, r1, #1
	ldrh r0, [r0]
	subs r1, r1, r0
	movs r0, #0x1a
	adds r2, r7, #0
	muls r2, r0, r2
	adds r2, r4, r2
	movs r0, #1
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	mov r0, r8
	bl sub_8089ABC
	b _08089EBC
_08089E9A:
	adds r0, r1, #0
	adds r0, #0x42
	movs r1, #0x8a
	lsls r1, r1, #1
	ldrh r0, [r0]
	subs r1, r1, r0
	movs r0, #0x1a
	adds r2, r7, #0
	muls r2, r0, r2
	adds r2, r4, r2
	movs r0, #4
	str r0, [sp]
	movs r0, #8
	str r0, [sp, #4]
	mov r0, r8
	bl sub_8089ABC
_08089EBC:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r1, r8
	ldr r2, [r1, #0x14]
	adds r0, r2, #0
	adds r0, #0x33
	ldrb r0, [r0]
	cmp r7, r0
	blo _08089E4E
_08089ED0:
	mov r2, r8
	ldr r1, [r2, #0x14]
	adds r0, r1, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	cmp r0, #9
	bne _08089EF8
	adds r1, #0x34
	movs r0, #0x1a
	ldrb r1, [r1]
	adds r2, r1, #0
	muls r2, r0, r2
	adds r2, r4, r2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0
	movs r1, #0x24
	mov r3, r8
	bl sub_808A3C8
_08089EF8:
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r0, #0x2f
	ldrb r0, [r0]
	cmp r0, #0
	bne _08089F06
	b _0808A07C
_08089F06:
	mov r0, r8
	bl sub_8089684
	mov r0, r8
	bl sub_8089C70
	movs r7, #0
	ldr r0, _08089FEC @ =0x000001FF
	mov sl, r0
	movs r1, #0xf
	mov sb, r1
_08089F1C:
	mov r2, r8
	ldr r0, [r2, #0x14]
	adds r1, r0, #0
	adds r1, #0x2d
	movs r2, #0
	ldrb r1, [r1]
	cmp r1, #5
	bne _08089F38
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r0, r7
	bne _08089F38
	movs r2, #0x80
	lsls r2, r2, #1
_08089F38:
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r0, #0x2f
	movs r3, #0xf4
	ldrb r0, [r0]
	subs r1, r3, r0
	mov r0, sl
	ands r1, r0
	lsls r5, r7, #5
	adds r5, #0x20
	adds r5, r2, r5
	ldr r0, _08089FF0 @ =gUnk_0868A55C
	lsls r6, r7, #2
	adds r0, r6, r0
	ldr r3, [r0]
	lsls r4, r7, #1
	adds r0, r4, #0
	adds r0, #0xa
	mov r2, sb
	ands r0, r2
	lsls r0, r0, #0xc
	str r0, [sp]
	movs r0, #4
	adds r2, r5, #0
	bl PutSpriteExt
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r0, #0x2f
	movs r2, #0xf4
	ldrb r0, [r0]
	subs r1, r2, r0
	mov r3, sl
	ands r1, r3
	adds r5, #8
	ldr r0, _08089FF4 @ =gUnk_0868A550
	adds r6, r6, r0
	ldr r3, [r6]
	adds r4, #0xb
	mov r0, sb
	ands r4, r0
	lsls r4, r4, #0xc
	str r4, [sp]
	movs r0, #4
	adds r2, r5, #0
	bl PutSpriteExt
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #2
	bls _08089F1C
	mov r1, r8
	ldr r2, [r1, #0x14]
	adds r3, r2, #0
	adds r3, #0x3f
	ldrb r0, [r3]
	cmp r0, #0xff
	beq _0808A07C
	adds r1, r2, #0
	adds r1, #0x40
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1]
	cmp r1, r0
	beq _0808A01C
	ldr r0, [r2, #0x5c]
	cmp r0, #0
	beq _08089FCE
	bl EndSpriteAnimProc
	mov r2, r8
	ldr r1, [r2, #0x14]
	movs r0, #0
	str r0, [r1, #0x5c]
_08089FCE:
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r1, r0, #0
	adds r1, #0x2e
	ldrb r1, [r1]
	cmp r1, #1
	bne _08089FFC
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r2, r0, #5
	adds r2, #0x1e
	ldr r3, _08089FF8 @ =gUnk_0868A158
	movs r0, #0
	b _0808A00A
	.align 2, 0
_08089FEC: .4byte 0x000001FF
_08089FF0: .4byte gUnk_0868A55C
_08089FF4: .4byte gUnk_0868A550
_08089FF8: .4byte gUnk_0868A158
_08089FFC:
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r2, r0, #5
	adds r2, #0x1e
	ldr r3, _0808A018 @ =gUnk_0868A158
	movs r0, #0xc0
	lsls r0, r0, #7
_0808A00A:
	str r0, [sp]
	movs r0, #4
	movs r1, #0xc2
	bl PutSpriteExt
	b _0808A07C
	.align 2, 0
_0808A018: .4byte gUnk_0868A158
_0808A01C:
	adds r0, r2, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #1
	bne _0808A042
	ldr r0, [r2, #0x5c]
	adds r2, #0x2f
	movs r1, #0xd6
	lsls r1, r1, #1
	ldrb r2, [r2]
	subs r1, r1, r2
	ldrb r3, [r3]
	lsls r2, r3, #5
	adds r2, #0x34
	movs r3, #0xd0
	lsls r3, r3, #1
	bl SetSpriteAnimProcParameters
	b _0808A07C
_0808A042:
	ldr r0, [r2, #0x5c]
	movs r1, #0xa0
	lsls r1, r1, #1
	ldrb r3, [r3]
	lsls r2, r3, #5
	adds r2, #0x34
	movs r3, #0xd0
	lsls r3, r3, #1
	bl SetSpriteAnimProcParameters
	mov r1, r8
	ldr r0, [r1, #0x14]
	adds r2, r0, #0
	adds r2, #0x2f
	movs r1, #0xcf
	lsls r1, r1, #1
	ldrb r2, [r2]
	subs r1, r1, r2
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r2, r0, #5
	adds r2, #0x1e
	ldr r3, _0808A0EC @ =gUnk_0868A158
	movs r0, #0xc0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_0808A07C:
	mov r2, r8
	ldr r1, [r2, #0x14]
	adds r0, r1, #0
	adds r0, #0x2d
	ldrb r0, [r0]
	subs r0, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _0808A134
	adds r0, r1, #0
	adds r0, #0x36
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808A0F4
	ldr r3, _0808A0F0 @ =gUnk_0868A116
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	movs r1, #0x28
	movs r2, #0x80
	bl PutSpriteExt
	mov r3, r8
	ldr r0, [r3, #0x14]
	adds r0, #0x36
	ldrb r1, [r0]
	subs r1, #1
	lsrs r0, r1, #0x1f
	adds r0, r1, r0
	asrs r0, r0, #1
	lsls r0, r0, #1
	subs r1, r1, r0
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #0x34
	movs r1, #0x88
	bl sub_80415CC
	mov r1, r8
	ldr r0, [r1, #0x14]
	adds r0, #0x2b
	ldrb r0, [r0]
	lsls r2, r0, #0x1d
	movs r3, #0x80
	lsls r3, r3, #0x16
	adds r2, r2, r3
	lsrs r2, r2, #0x18
	movs r0, #1
	movs r1, #0xc
	mov r3, r8
	bl sub_808A3C8
	b _0808A112
	.align 2, 0
_0808A0EC: .4byte gUnk_0868A158
_0808A0F0: .4byte gUnk_0868A116
_0808A0F4:
	adds r1, #0x2b
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0808A112
	ldrb r1, [r1]
	lsls r2, r1, #0x1d
	movs r0, #0x80
	lsls r0, r0, #0x16
	adds r2, r2, r0
	lsrs r2, r2, #0x18
	movs r0, #1
	movs r1, #0xc
	mov r3, r8
	bl sub_808A3C8
_0808A112:
	mov r1, r8
	ldr r0, [r1, #0x14]
	adds r1, r0, #0
	adds r1, #0x2c
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _0808A134
	ldrb r1, [r1]
	lsls r1, r1, #0x1d
	movs r2, #0x80
	lsls r2, r2, #0x16
	adds r1, r1, r2
	lsrs r1, r1, #0x18
	movs r0, #1
	mov r2, r8
	bl sub_808A3E8
_0808A134:
	mov r0, r8
	bl sub_8089B3C
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808A14C
sub_808A14C: @ 0x0808A14C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808A15C @ =gUnk_0868A28C
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808A15C: .4byte gUnk_0868A28C

	thumb_func_start sub_808A160
sub_808A160: @ 0x0808A160
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x39
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	strh r0, [r2, #0x2a]
	adds r0, r2, #0
	adds r0, #0x35
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	subs r0, #9
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_808A194
sub_808A194: @ 0x0808A194
	push {r4, r5, lr}
	sub sp, #0x14
	adds r4, r0, #0
	ldr r1, _0808A204 @ =gUnk_08336C74
	add r0, sp, #0xc
	movs r2, #8
	bl memcpy
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	ldrh r0, [r4, #0x2c]
	adds r0, #1
	strh r0, [r4, #0x2c]
	movs r1, #0xf0
	lsls r1, r1, #7
	movs r2, #0xa0
	lsls r2, r2, #9
	movs r3, #0x98
	lsls r3, r3, #7
	str r3, [sp]
	movs r5, #0x2c
	ldrsh r0, [r4, r5]
	str r0, [sp, #4]
	movs r0, #0xc0
	lsls r0, r0, #1
	str r0, [sp, #8]
	movs r0, #2
	bl sub_8089894
	ldr r2, _0808A208 @ =gDispIo
	adds r1, r2, #0
	adds r1, #0x4a
	ldrh r3, [r1]
	lsls r0, r3, #1
	strh r0, [r1]
	adds r1, #4
	ldrh r5, [r1]
	lsls r0, r5, #1
	strh r0, [r1]
	ldr r1, _0808A20C @ =0x04000020
	ldr r0, [r2, #0x48]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #0x4c]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #0x50]
	str r0, [r1]
	adds r1, #4
	ldr r0, [r2, #0x54]
	str r0, [r1]
	add sp, #0x14
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808A204: .4byte gUnk_08336C74
_0808A208: .4byte gDispIo
_0808A20C: .4byte 0x04000020

	thumb_func_start sub_808A210
sub_808A210: @ 0x0808A210
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808A224 @ =gUnk_0868A2AC
	movs r1, #0
	bl SpawnProc
	str r4, [r0, #0x30]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808A224: .4byte gUnk_0868A2AC

	thumb_func_start sub_808A228
sub_808A228: @ 0x0808A228
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x31
	movs r0, #0
	strb r0, [r1]
	movs r1, #0
	strh r0, [r2, #0x2a]
	adds r0, r2, #0
	adds r0, #0x2d
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #2
	strb r1, [r0]
	subs r0, #9
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_808A25C
sub_808A25C: @ 0x0808A25C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	ldr r1, _0808A2D4 @ =gUnk_08336C74
	add r0, sp, #4
	movs r2, #8
	bl memcpy
	ldrh r0, [r7, #0x2a]
	adds r0, #1
	strh r0, [r7, #0x2a]
	adds r2, r7, #0
	adds r2, #0x2c
	ldrb r0, [r2]
	cmp r0, #3
	bhi _0808A288
	adds r0, #1
	strb r0, [r2]
_0808A288:
	adds r0, r7, #0
	adds r0, #0x31
	ldrb r1, [r0]
	str r0, [sp, #0xc]
	cmp r1, #0
	beq _0808A370
	adds r1, r7, #0
	adds r1, #0x2f
	ldrb r0, [r1]
	mov r8, r0
	adds r0, r7, #0
	adds r0, #0x2d
	ldrb r5, [r0]
	mov sb, r1
	mov sl, r0
	adds r3, r7, #0
	adds r3, #0x30
	adds r4, r7, #0
	adds r4, #0x2e
	ldrb r2, [r2]
	cmp r2, #3
	bhi _0808A2C2
	ldrb r0, [r3]
	add r0, r8
	lsrs r0, r0, #1
	mov r8, r0
	ldrb r1, [r4]
	adds r0, r1, r5
	lsrs r5, r0, #1
_0808A2C2:
	adds r0, r7, #0
	adds r0, #0x35
	ldrb r1, [r0]
	adds r2, r0, #0
	cmp r1, #0
	bne _0808A2D8
	adds r0, r5, #0
	adds r0, #0x86
	b _0808A2DC
	.align 2, 0
_0808A2D4: .4byte gUnk_08336C74
_0808A2D8:
	adds r0, r5, #0
	adds r0, #0xb8
_0808A2DC:
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r1, sb
	ldrb r0, [r1]
	strb r0, [r3]
	mov r1, sl
	ldrb r0, [r1]
	strb r0, [r4]
	ldrb r0, [r2]
	cmp r0, #0
	bne _0808A340
	ldrh r2, [r7, #0x2a]
	lsrs r0, r2, #3
	movs r1, #7
	mov sb, r1
	mov r2, sb
	ands r0, r2
	add r0, sp
	adds r0, #4
	ldrb r2, [r0]
	add r2, r8
	ldr r0, _0808A33C @ =gUnk_0868A150
	mov sl, r0
	movs r4, #0x80
	lsls r4, r4, #5
	str r4, [sp]
	movs r0, #4
	adds r1, r5, #0
	mov r3, sl
	bl PutSpriteExt
	orrs r6, r4
	ldrh r1, [r7, #0x2a]
	lsrs r0, r1, #3
	mov r2, sb
	ands r0, r2
	add r0, sp
	adds r0, #4
	ldrb r2, [r0]
	add r2, r8
	str r4, [sp]
	movs r0, #4
	adds r1, r6, #0
	mov r3, sl
	bl PutSpriteExt
	b _0808A360
	.align 2, 0
_0808A33C: .4byte gUnk_0868A150
_0808A340:
	ldrh r1, [r7, #0x2a]
	lsrs r0, r1, #3
	movs r1, #7
	ands r0, r1
	add r0, sp
	adds r0, #4
	ldrb r2, [r0]
	add r2, r8
	ldr r3, _0808A36C @ =gUnk_0868A150
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	bl PutSpriteExt
_0808A360:
	adds r1, r7, #0
	adds r1, #0x2c
	movs r0, #0
	strb r0, [r1]
	b _0808A37C
	.align 2, 0
_0808A36C: .4byte gUnk_0868A150
_0808A370:
	ldrb r2, [r2]
	cmp r2, #4
	bne _0808A37C
	movs r0, #0
	ldr r2, [sp, #0xc]
	strb r0, [r2]
_0808A37C:
	adds r4, r7, #0
	adds r4, #0x33
	ldrb r0, [r4]
	cmp r0, #0
	beq _0808A39C
	adds r0, r7, #0
	adds r0, #0x32
	ldrb r2, [r0]
	ldr r3, _0808A3C4 @ =gUnk_0868A150
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [sp]
	movs r0, #4
	movs r1, #0xc
	bl PutSpriteExt
_0808A39C:
	adds r1, r7, #0
	adds r1, #0x34
	ldrb r0, [r1]
	cmp r0, #0
	beq _0808A3AA
	movs r0, #0
	strb r0, [r4]
_0808A3AA:
	movs r0, #0
	ldr r2, [sp, #0xc]
	strb r0, [r2]
	movs r0, #1
	strb r0, [r1]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808A3C4: .4byte gUnk_0868A150

	thumb_func_start sub_808A3C8
sub_808A3C8: @ 0x0808A3C8
	push {r4, lr}
	ldr r3, [r3, #0x34]
	movs r4, #0x2f
	strb r2, [r4, r3]
	adds r2, r3, #0
	adds r2, #0x2d
	strb r1, [r2]
	adds r2, #4
	movs r1, #1
	strb r1, [r2]
	adds r1, r3, #0
	adds r1, #0x35
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_808A3E8
sub_808A3E8: @ 0x0808A3E8
	push {r4, lr}
	ldr r3, [r2, #0x34]
	movs r2, #0x32
	adds r2, r2, r3
	mov ip, r2
	movs r2, #0
	mov r4, ip
	strb r1, [r4]
	movs r1, #0x33
	adds r1, r1, r3
	mov ip, r1
	movs r1, #1
	mov r4, ip
	strb r1, [r4]
	adds r1, r3, #0
	adds r1, #0x35
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x34
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808A418
sub_808A418: @ 0x0808A418
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808A428 @ =gUnk_0868A2CC
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808A428: .4byte gUnk_0868A2CC

	thumb_func_start sub_808A42C
sub_808A42C: @ 0x0808A42C
	push {lr}
	ldr r0, _0808A448 @ =0x02000444
	ldr r1, _0808A44C @ =0x0600C020
	movs r2, #1
	movs r3, #0
	bl InitTextFont
	ldr r0, _0808A450 @ =0x0200045C
	movs r1, #0xa
	bl InitText
	pop {r0}
	bx r0
	.align 2, 0
_0808A448: .4byte 0x02000444
_0808A44C: .4byte 0x0600C020
_0808A450: .4byte 0x0200045C

	thumb_func_start sub_808A454
sub_808A454: @ 0x0808A454
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x18
	cmp r1, #0
	beq _0808A49C
	ldr r0, _0808A490 @ =0x02000444
	bl SetTextFont
	ldr r4, _0808A494 @ =0x0200045C
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	adds r0, r4, #0
	adds r1, r5, #0
	bl Text_DrawString
	ldr r1, _0808A498 @ =gBg1Tm+0x44E
	adds r0, r4, #0
	bl PutText
	b _0808A4A8
	.align 2, 0
_0808A490: .4byte 0x02000444
_0808A494: .4byte 0x0200045C
_0808A498: .4byte gBg1Tm+0x44E
_0808A49C:
	ldr r0, _0808A4B4 @ =gBg1Tm+0x44E
	movs r1, #0xa
	movs r2, #1
	movs r3, #0
	bl TmFillRect_t
_0808A4A8:
	movs r0, #2
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808A4B4: .4byte gBg1Tm+0x44E

	thumb_func_start sub_808A4B8
sub_808A4B8: @ 0x0808A4B8
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r5, _0808A4EC @ =gUnk_0868A2EC
	adds r0, #0x2e
	ldrb r0, [r0]
	bl sub_8087CB0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r5
	ldr r0, [r0]
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	adds r1, r4, #0
	bl sub_808A454
	cmp r4, #0
	bne _0808A4E6
	adds r0, r6, #0
	adds r0, #0x36
	strb r4, [r0]
_0808A4E6:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808A4EC: .4byte gUnk_0868A2EC

	thumb_func_start sub_808A4F0
sub_808A4F0: @ 0x0808A4F0
	push {r4, r5, lr}
	sub sp, #8
	movs r4, #0
	str r4, [sp]
	ldr r1, _0808A518 @ =0x06008000
	ldr r5, _0808A51C @ =0x01000200
	mov r0, sp
	adds r2, r5, #0
	bl CpuFastSet
	str r4, [sp, #4]
	add r0, sp, #4
	ldr r1, _0808A520 @ =0x0600C000
	adds r2, r5, #0
	bl CpuFastSet
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808A518: .4byte 0x06008000
_0808A51C: .4byte 0x01000200
_0808A520: .4byte 0x0600C000

	thumb_func_start sub_808A524
sub_808A524: @ 0x0808A524
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0
	adds r3, r4, #0
	adds r3, #0x31
	strb r6, [r3]
	adds r2, r4, #0
	adds r2, #0x30
	strb r6, [r2]
	adds r5, r4, #0
	adds r5, #0x32
	strb r6, [r5]
	adds r0, #0x33
	strb r6, [r0]
	adds r1, r4, #0
	adds r1, #0x40
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1]
	cmp r1, r0
	bne _0808A55C
	movs r0, #1
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
_0808A55C:
	movs r1, #0
	adds r2, r4, #0
	adds r2, #0x37
_0808A562:
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0xff
	beq _0808A56C
	adds r6, #1
_0808A56C:
	adds r1, #1
	cmp r1, #2
	ble _0808A562
	cmp r6, #0
	ble _0808A5AE
	adds r2, r4, #0
	adds r2, #0x30
	movs r0, #2
	movs r3, #0
	ldrb r7, [r2]
	orrs r0, r7
	strb r0, [r2]
	adds r1, r4, #0
	adds r1, #0x31
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	cmp r6, #2
	bgt _0808A5A0
	movs r0, #4
	ldrb r7, [r2]
	orrs r0, r7
	strb r0, [r2]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A5A0:
	movs r0, #8
	ldrb r3, [r2]
	orrs r0, r3
	strb r0, [r2]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A5AE:
	cmp r6, #2
	bgt _0808A5C6
	adds r1, r4, #0
	adds r1, #0x30
	movs r0, #0x10
	ldrb r7, [r1]
	orrs r0, r7
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A5C6:
	bl sub_8084714
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A5E2
	movs r0, #4
	ldrb r1, [r5]
	orrs r0, r1
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x33
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A5E2:
	bl sub_8084718
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A5FE
	movs r0, #2
	ldrb r2, [r5]
	orrs r0, r2
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x33
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A5FE:
	bl sub_808474C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A61A
	movs r0, #8
	ldrb r3, [r5]
	orrs r0, r3
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x33
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A61A:
	bl sub_808475C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A636
	movs r0, #1
	ldrb r7, [r5]
	orrs r0, r7
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x33
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A636:
	ldrb r0, [r5]
	cmp r0, #0
	beq _0808A650
	adds r1, r4, #0
	adds r1, #0x30
	movs r0, #0x20
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	adds r1, #1
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808A650:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808A658
sub_808A658: @ 0x0808A658
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r2, #0x18
	cmp r2, #0
	ble _0808A696
	movs r5, #0
	lsls r6, r1, #0x18
_0808A66C:
	adds r0, r4, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	cmp r0, r6
	beq _0808A692
	cmp r4, #2
	bne _0808A680
	movs r4, #0
	b _0808A686
_0808A680:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0808A686:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0808A66C
	b _0808A6BE
_0808A692:
	adds r0, r4, #0
	b _0808A6C0
_0808A696:
	movs r5, #0
	lsls r6, r1, #0x18
_0808A69A:
	adds r0, r4, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	cmp r0, r6
	beq _0808A692
	cmp r4, #0
	bne _0808A6AE
	movs r4, #2
	b _0808A6B4
_0808A6AE:
	subs r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0808A6B4:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #2
	bls _0808A69A
_0808A6BE:
	movs r0, #0xff
_0808A6C0:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808A6C8
sub_808A6C8: @ 0x0808A6C8
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	movs r2, #0
	adds r0, #0x2b
	ldrb r6, [r0]
	adds r0, #3
	ldrb r0, [r0]
	subs r0, #1
	cmp r0, #0xf
	bhi _0808A742
	lsls r0, r0, #2
	ldr r1, _0808A6EC @ =_0808A6F0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808A6EC: .4byte _0808A6F0
_0808A6F0: @ jump table
	.4byte _0808A794 @ case 0
	.4byte _0808A73C @ case 1
	.4byte _0808A742 @ case 2
	.4byte _0808A730 @ case 3
	.4byte _0808A742 @ case 4
	.4byte _0808A742 @ case 5
	.4byte _0808A742 @ case 6
	.4byte _0808A73C @ case 7
	.4byte _0808A742 @ case 8
	.4byte _0808A742 @ case 9
	.4byte _0808A742 @ case 10
	.4byte _0808A742 @ case 11
	.4byte _0808A742 @ case 12
	.4byte _0808A742 @ case 13
	.4byte _0808A742 @ case 14
	.4byte _0808A740 @ case 15
_0808A730:
	adds r0, r3, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	movs r2, #0
	cmp r0, #0xff
	bne _0808A742
_0808A73C:
	movs r2, #1
	b _0808A742
_0808A740:
	movs r2, #0
_0808A742:
	lsls r0, r4, #0x18
	adds r5, r0, #0
	cmp r5, #0
	ble _0808A75E
	adds r0, r3, #0
	adds r0, #0x2b
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #2
	bne _0808A75A
	movs r0, #0
	b _0808A770
_0808A75A:
	adds r0, r1, #1
	b _0808A770
_0808A75E:
	adds r0, r3, #0
	adds r0, #0x2b
	ldrb r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	bne _0808A76E
	movs r0, #2
	b _0808A770
_0808A76E:
	subs r0, r1, #1
_0808A770:
	strb r0, [r4]
	adds r0, r3, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0x40
	beq _0808A790
	ldrb r0, [r4]
	adds r1, r2, #0
	asrs r2, r5, #0x18
	bl sub_808A658
	strb r0, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r6, r0
	beq _0808A794
_0808A790:
	movs r0, #1
	b _0808A796
_0808A794:
	movs r0, #0
_0808A796:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_808A79C
sub_808A79C: @ 0x0808A79C
	adds r1, r0, #0
	adds r1, #0x2e
	adds r0, #0x30
	ldrb r1, [r1]
	ldrb r0, [r0]
	ands r1, r0
	adds r0, r1, #0
	cmp r0, #0
	bne _0808A7B2
	movs r0, #0
	b _0808A7B4
_0808A7B2:
	movs r0, #1
_0808A7B4:
	bx lr
	.align 2, 0

	thumb_func_start sub_808A7B8
sub_808A7B8: @ 0x0808A7B8
	push {r4, lr}
	mov ip, r0
	mov r2, ip
	adds r2, #0x29
	adds r0, #0x2b
	ldrb r1, [r2]
	ldrb r0, [r0]
	adds r0, r1, r0
	strb r0, [r2]
	ldr r3, _0808A828 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r4, [r3, #1]
	ands r0, r4
	movs r1, #0x40
	orrs r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r3, #1]
	mov r0, ip
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	ble _0808A82C
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x2f
	strb r0, [r1]
	ldrb r4, [r2]
	lsls r0, r4, #1
	adds r1, #4
	strb r0, [r1]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	movs r4, #0x10
	rsbs r4, r4, #0
	adds r1, r4, #0
	subs r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x2e
	strb r1, [r0]
	ldrb r2, [r2]
	lsls r1, r2, #1
	movs r2, #0x60
	rsbs r2, r2, #0
	adds r0, r2, #0
	subs r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x32
	b _0808A860
	.align 2, 0
_0808A828: .4byte gDispIo
_0808A82C:
	ldrb r4, [r2]
	lsls r0, r4, #1
	adds r0, r0, r4
	movs r1, #0x78
	subs r1, r1, r0
	adds r0, r3, #0
	adds r0, #0x2f
	strb r1, [r0]
	ldrb r0, [r2]
	lsls r1, r0, #1
	movs r0, #0x50
	subs r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x33
	strb r0, [r1]
	ldrb r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, #0x78
	adds r1, r3, #0
	adds r1, #0x2e
	strb r0, [r1]
	ldrb r2, [r2]
	lsls r0, r2, #1
	adds r0, #0x50
	adds r1, #4
_0808A860:
	strb r0, [r1]
	adds r2, r3, #0
	adds r2, #0x35
	movs r0, #1
	ldrb r4, [r2]
	orrs r0, r4
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
	adds r2, #1
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x29
	ldrb r0, [r0]
	cmp r0, #0x27
	bls _0808A8AC
	mov r0, ip
	bl Proc_Break
_0808A8AC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808A8B4
sub_808A8B4: @ 0x0808A8B4
	push {r4, r5, lr}
	adds r3, r0, #0
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _0808A8E4 @ =gUnk_0868A308
	adds r1, r3, #0
	bl SpawnProcLocking
	adds r2, r0, #0
	adds r2, #0x2a
	movs r1, #0
	strb r4, [r2]
	adds r2, #1
	strb r5, [r2]
	adds r0, #0x29
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808A8E4: .4byte gUnk_0868A308

	thumb_func_start sub_808A8E8
sub_808A8E8: @ 0x0808A8E8
	push {lr}
	ldr r0, _0808A8FC @ =gBg2Tm
	ldr r1, _0808A900 @ =0x06007000
	movs r2, #0x80
	lsls r2, r2, #4
	bl RegisterDataMove
	pop {r0}
	bx r0
	.align 2, 0
_0808A8FC: .4byte gBg2Tm
_0808A900: .4byte 0x06007000

	thumb_func_start sub_808A904
sub_808A904: @ 0x0808A904
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808A914 @ =gUnk_0868A328
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808A914: .4byte gUnk_0868A328

	thumb_func_start sub_808A918
sub_808A918: @ 0x0808A918
	push {r4, r5, r6, lr}
	sub sp, #0x20
	adds r5, r1, #0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r6, r4, #0
	cmp r4, #2
	bhi _0808A9B4
	adds r0, r4, #0
	bl sub_808525C
	lsls r0, r0, #0x18
	asrs r2, r0, #0x18
	cmp r2, #0
	beq _0808A98C
	adds r0, r4, #0
	mov r1, sp
	bl sub_8085270
	mov r0, sp
	bl sub_8070E0C
	adds r1, r5, #0
	adds r1, #0x37
	adds r1, r1, r4
	strb r0, [r1]
	lsls r1, r4, #2
	adds r0, r5, #0
	adds r0, #0x44
	adds r0, r0, r1
	ldr r1, [sp]
	str r1, [r0]
	mov r1, sp
	movs r0, #0x20
	ldrb r1, [r1, #0x14]
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _0808A972
	adds r0, r5, #0
	adds r0, #0x3a
	adds r0, r0, r4
	movs r1, #1
	b _0808A978
_0808A972:
	adds r0, r5, #0
	adds r0, #0x3a
	adds r0, r0, r4
_0808A978:
	strb r1, [r0]
	ldr r0, _0808A988 @ =0x02000464
	adds r0, r6, r0
	mov r1, sp
	ldrb r1, [r1, #0x14]
	strb r1, [r0]
	b _0808A9EA
	.align 2, 0
_0808A988: .4byte 0x02000464
_0808A98C:
	adds r0, r5, #0
	adds r0, #0x37
	adds r0, r0, r6
	movs r1, #0xff
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x3a
	adds r0, r0, r6
	strb r2, [r0]
	lsls r1, r6, #2
	adds r0, r5, #0
	adds r0, #0x44
	adds r0, r0, r1
	str r2, [r0]
	ldr r0, _0808A9B0 @ =0x02000464
	adds r0, r6, r0
	strb r2, [r0]
	b _0808A9EA
	.align 2, 0
_0808A9B0: .4byte 0x02000464
_0808A9B4:
	adds r4, r5, #0
	adds r4, #0x40
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r4]
	cmp r1, r0
	bne _0808A9EA
	movs r0, #3
	bl sub_80859E0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808A9E6
	movs r0, #3
	mov r1, sp
	bl sub_8085A34
	mov r0, sp
	ldrb r0, [r0, #0xc]
	adds r1, r5, #0
	adds r1, #0x3f
	strb r0, [r1]
	ldr r0, [sp]
	str r0, [r5, #0x50]
	b _0808A9EA
_0808A9E6:
	movs r0, #0xf0
	strh r0, [r4]
_0808A9EA:
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808A9F4
sub_808A9F4: @ 0x0808A9F4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	movs r5, #0
	movs r7, #0x1b
	movs r6, #0x1a
_0808AA06:
	ldr r0, _0808AA50 @ =0x02000464
	adds r0, r5, r0
	movs r1, #0x40
	ldrb r0, [r0]
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	rsbs r1, r1, #0
	asrs r4, r1, #0x1f
	movs r0, #4
	ands r4, r0
	cmp r5, r8
	beq _0808AA24
	movs r0, #2
	orrs r4, r0
_0808AA24:
	movs r1, #1
	adds r0, r4, #0
	orrs r0, r1
	adds r1, r6, #0
	bl sub_8070CB4
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_8070CB4
	adds r7, #2
	adds r6, #2
	adds r5, #1
	cmp r5, #2
	ble _0808AA06
	bl EnablePalSync
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808AA50: .4byte 0x02000464

	thumb_func_start sub_808AA54
sub_808AA54: @ 0x0808AA54
	push {r4, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	movs r1, #0
	movs r2, #1
	cmp r2, r3
	bge _0808AA7A
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r4, [r0]
_0808AA6A:
	adds r0, r4, #0
	ands r0, r2
	cmp r0, #0
	beq _0808AA74
	adds r1, #1
_0808AA74:
	lsls r2, r2, #1
	cmp r2, r3
	blt _0808AA6A
_0808AA7A:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_808AA84
sub_808AA84: @ 0x0808AA84
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x46
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	cmp r0, #0
	bgt _0808AB34
	movs r0, #4
	strb r0, [r1]
	ldr r0, _0808AAD0 @ =0x0203DBE8
	bl SetTextFont
	movs r0, #1
	bl SetTextFontGlyphs
	movs r6, #0
	adds r0, r4, #0
	adds r0, #0x45
	adds r7, r0, #0
	ldrb r0, [r7]
	cmp r6, r0
	bge _0808AB2E
	adds r5, r4, #0
	adds r5, #0x44
_0808AABA:
	ldr r0, [r4, #0x40]
	ldrb r2, [r0]
	adds r3, r0, #0
	cmp r2, #3
	bgt _0808AAD4
	cmp r2, #1
	bge _0808AAE4
	cmp r2, #0
	beq _0808AADA
	b _0808AB06
	.align 2, 0
_0808AAD0: .4byte 0x0203DBE8
_0808AAD4:
	cmp r2, #4
	beq _0808AB00
	b _0808AB06
_0808AADA:
	movs r0, #0
	bl SetTextFont
	movs r0, #1
	b _0808AB36
_0808AAE4:
	adds r0, r3, #1
	str r0, [r4, #0x40]
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
	adds r1, r4, #0
	adds r1, #0x46
	movs r0, #8
	strb r0, [r1]
	ldrb r1, [r5]
	cmp r1, #5
	bne _0808AB26
	movs r0, #1
	b _0808AB36
_0808AB00:
	adds r0, r3, #1
	str r0, [r4, #0x40]
	b _0808AB26
_0808AB06:
	ldrb r1, [r5]
	lsls r0, r1, #3
	ldr r1, _0808AB3C @ =0x0203DC10
	adds r0, r0, r1
	adds r1, r3, #0
	bl Text_DrawCharacter
	str r0, [r4, #0x40]
	ldr r0, _0808AB40 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808AB26
	movs r0, #0x6e
	bl m4aSongNumStart
_0808AB26:
	adds r6, #1
	ldrb r0, [r7]
	cmp r6, r0
	blt _0808AABA
_0808AB2E:
	movs r0, #0
	bl SetTextFont
_0808AB34:
	movs r0, #0
_0808AB36:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808AB3C: .4byte 0x0203DC10
_0808AB40: .4byte gPlaySt

	thumb_func_start sub_808AB44
sub_808AB44: @ 0x0808AB44
	ldr r0, _0808AB60 @ =0x04000006
	ldrh r0, [r0]
	adds r1, r0, #0
	cmp r0, #0x20
	bne _0808AB6C
	ldr r1, _0808AB64 @ =0x04000050
	movs r0, #0xcf
	strh r0, [r1]
	adds r1, #4
	ldr r0, _0808AB68 @ =0x0203DC6C
	ldrb r0, [r0]
	lsrs r0, r0, #1
	b _0808ABC8
	.align 2, 0
_0808AB60: .4byte 0x04000006
_0808AB64: .4byte 0x04000050
_0808AB68: .4byte 0x0203DC6C
_0808AB6C:
	cmp r0, #0x78
	bne _0808AB7C
	ldr r1, _0808AB78 @ =0x04000050
	movs r0, #0
	b _0808ABC8
	.align 2, 0
_0808AB78: .4byte 0x04000050
_0808AB7C:
	cmp r0, #0x84
	bne _0808ABB8
	ldr r1, _0808ABA8 @ =0x04000050
	movs r0, #0xcf
	strh r0, [r1]
	ldr r3, _0808ABAC @ =0x04000040
	ldr r0, _0808ABB0 @ =0x0203DC6D
	ldrb r2, [r0]
	movs r0, #0xa
	subs r0, r0, r2
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #0xa
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, #0x78
	adds r1, r1, r0
	strh r1, [r3]
	ldr r1, _0808ABB4 @ =0x0400004A
	movs r0, #0xf
	b _0808ABC8
	.align 2, 0
_0808ABA8: .4byte 0x04000050
_0808ABAC: .4byte 0x04000040
_0808ABB0: .4byte 0x0203DC6D
_0808ABB4: .4byte 0x0400004A
_0808ABB8:
	cmp r1, #0x98
	bne _0808ABCA
	ldr r1, _0808ABCC @ =0x04000050
	movs r0, #0
	strh r0, [r1]
	subs r1, #6
	ldr r2, _0808ABD0 @ =0x0000FFFF
	adds r0, r2, #0
_0808ABC8:
	strh r0, [r1]
_0808ABCA:
	bx lr
	.align 2, 0
_0808ABCC: .4byte 0x04000050
_0808ABD0: .4byte 0x0000FFFF

	thumb_func_start sub_808ABD4
sub_808ABD4: @ 0x0808ABD4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r7, r0, #0
	movs r0, #0
	bl InitBgs
	bl ResetTextFont
	bl ResetText
	bl ApplySystemObjectsGraphics
	bl LoadUiFrameGraphics
	bl InitSystemTextFont
	ldr r0, _0808AD70 @ =gDispIo
	mov ip, r0
	movs r3, #1
	ldrb r2, [r0, #1]
	orrs r2, r3
	movs r4, #2
	orrs r2, r4
	movs r1, #4
	mov r8, r1
	mov r5, r8
	orrs r2, r5
	movs r6, #8
	mov sl, r6
	mov r0, sl
	orrs r2, r0
	movs r1, #0x10
	mov sb, r1
	mov r5, sb
	orrs r2, r5
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	mov r6, ip
	ldrb r6, [r6, #0xc]
	ands r0, r6
	mov r5, ip
	strb r0, [r5, #0xc]
	adds r0, r1, #0
	ldrb r6, [r5, #0x10]
	ands r0, r6
	orrs r0, r4
	strb r0, [r5, #0x10]
	ldrb r0, [r5, #0x14]
	ands r1, r0
	orrs r1, r3
	strb r1, [r5, #0x14]
	movs r0, #3
	ldrb r1, [r5, #0x18]
	orrs r0, r1
	strb r0, [r5, #0x18]
	movs r0, #0x20
	orrs r2, r0
	movs r0, #0x41
	rsbs r0, r0, #0
	ands r2, r0
	movs r0, #0x7f
	ands r2, r0
	strb r2, [r5, #1]
	mov r1, ip
	adds r1, #0x34
	ldrb r0, [r1]
	orrs r0, r3
	orrs r0, r4
	mov r2, r8
	orrs r0, r2
	mov r5, sl
	orrs r0, r5
	mov r6, sb
	orrs r0, r6
	strb r0, [r1]
	subs r1, #7
	movs r0, #0
	strb r0, [r1]
	adds r1, #4
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x36
	ldrb r1, [r0]
	orrs r3, r1
	orrs r3, r4
	orrs r3, r2
	orrs r3, r5
	orrs r3, r6
	strb r3, [r0]
	movs r0, #0
	bl SetBlankChr
	ldr r0, _0808AD74 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808AD78 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808AD7C @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808AD80 @ =gUnk_0832BF28
	ldr r1, _0808AD84 @ =0x06011000
	bl Decompress
	ldr r0, _0808AD88 @ =gUnk_0832C33C
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #0xf
	bl EnableBgSync
	ldr r4, _0808AD8C @ =0x0203DC3C
	movs r6, #5
_0808ACD8:
	adds r0, r4, #0
	movs r1, #0xa
	bl InitText
	adds r0, r4, #0
	bl ClearText
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bge _0808ACD8
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r1, _0808AD90 @ =0x0000FFF8
	movs r0, #2
	movs r2, #0
	bl SetBgOffset
	adds r4, r7, #0
	adds r4, #0x38
	adds r0, r4, #0
	bl sub_808677C
	adds r1, r7, #0
	adds r1, #0x2b
	movs r0, #0
	strb r0, [r1]
	movs r6, #0
	movs r0, #0
	ldrsb r0, [r4, r0]
	mov sb, r4
	mov r8, r1
	adds r5, r7, #0
	adds r5, #0x2a
	movs r2, #0x2c
	adds r2, r2, r7
	mov sl, r2
	adds r1, #2
	str r1, [sp, #8]
	adds r2, r7, #0
	adds r2, #0x2e
	str r2, [sp, #0xc]
	adds r1, #0x11
	str r1, [sp, #0x10]
	adds r2, #0x11
	str r2, [sp, #0x14]
	adds r1, #8
	str r1, [sp, #0x18]
	cmp r0, #0
	beq _0808AD94
	movs r0, #1
	mov r2, r8
	strb r0, [r2]
	mov r2, sb
	mov r1, r8
_0808AD56:
	adds r6, #1
	cmp r6, #5
	bgt _0808AD94
	adds r0, r2, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0808AD94
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _0808AD56
	.align 2, 0
_0808AD70: .4byte gDispIo
_0808AD74: .4byte gBg0Tm
_0808AD78: .4byte gBg1Tm
_0808AD7C: .4byte gBg2Tm
_0808AD80: .4byte gUnk_0832BF28
_0808AD84: .4byte 0x06011000
_0808AD88: .4byte gUnk_0832C33C
_0808AD8C: .4byte 0x0203DC3C
_0808AD90: .4byte 0x0000FFF8
_0808AD94:
	mov r6, r8
	ldrb r6, [r6]
	lsls r3, r6, #1
	adds r3, #2
	movs r0, #1
	str r0, [sp]
	movs r0, #0
	movs r1, #5
	movs r2, #0xc
	bl sub_8041358
	ldr r4, _0808AED4 @ =gBg1Tm
	ldr r1, _0808AED8 @ =gBg2Tm
	adds r0, r4, #0
	movs r2, #0xc
	movs r3, #0x13
	bl TmCopyRect_t
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #0x13
	movs r3, #0
	bl TmFillRect_t
	movs r0, #1
	movs r1, #0x26
	movs r2, #0xa
	bl sub_804169C
	mov r1, sb
	movs r0, #0
	ldrsb r0, [r1, r0]
	ldr r1, _0808AEDC @ =0x06002000
	movs r2, #0xa
	bl sub_8087BD8
	ldr r2, _0808AEE0 @ =gMapSize
	movs r6, #0
	ldrsh r1, [r2, r6]
	lsls r1, r1, #1
	adds r0, r1, #0
	subs r0, #0x40
	str r0, [r7, #0x30]
	movs r0, #2
	ldrsh r2, [r2, r0]
	lsls r2, r2, #1
	adds r0, r2, #0
	subs r0, #0x40
	str r0, [r7, #0x34]
	subs r1, #0xac
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	subs r2, #0x5c
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #1
	bl SetBgOffset
	movs r0, #0
	strb r0, [r5]
	movs r6, #0
	mov r1, r8
	ldrb r1, [r1]
	cmp r6, r1
	bge _0808AE60
	movs r5, #0xc0
	lsls r5, r5, #1
_0808AE1A:
	lsls r4, r6, #3
	ldr r0, _0808AEE4 @ =0x0203DC3C
	adds r4, r4, r0
	mov r2, sb
	adds r2, r2, r6
	str r2, [sp, #4]
	ldrb r0, [r2]
	lsls r2, r0, #0x18
	asrs r2, r2, #0x1f
	movs r0, #4
	ands r2, r0
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetParams
	ldr r1, [sp, #4]
	movs r0, #0
	ldrsb r0, [r1, r0]
	bl sub_80867F0
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	ldr r1, _0808AEE8 @ =gBg0Tm+0x4
	adds r1, r5, r1
	adds r0, r4, #0
	bl PutText
	adds r5, #0x80
	adds r6, #1
	mov r2, r8
	ldrb r2, [r2]
	cmp r6, r2
	blt _0808AE1A
_0808AE60:
	movs r4, #0
	mov r5, sl
	strb r4, [r5]
	ldr r6, [sp, #8]
	strb r4, [r6]
	ldr r0, [sp, #0xc]
	strb r4, [r0]
	ldr r1, [sp, #0x10]
	strb r4, [r1]
	movs r0, #1
	ldr r2, [sp, #0x14]
	strb r0, [r2]
	movs r0, #4
	ldr r5, [sp, #0x18]
	strb r0, [r5]
	adds r0, r7, #0
	bl sub_808B7A0
	ldr r6, _0808AEEC @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r6, #0
	bl Decompress
	ldr r0, _0808AEF0 @ =gUnk_08320D98
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	adds r0, r7, #0
	bl sub_808B928
	str r0, [r7, #0x4c]
	ldr r0, _0808AEF4 @ =0x0203DC6C
	strb r4, [r0]
	ldr r0, _0808AEF8 @ =0x0203DC6D
	strb r4, [r0]
	adds r0, r7, #0
	bl sub_808AEFC
	adds r0, r7, #0
	bl StartGreenText
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808AED4: .4byte gBg1Tm
_0808AED8: .4byte gBg2Tm
_0808AEDC: .4byte 0x06002000
_0808AEE0: .4byte gMapSize
_0808AEE4: .4byte 0x0203DC3C
_0808AEE8: .4byte gBg0Tm+0x4
_0808AEEC: .4byte gUnk_0831B0A8
_0808AEF0: .4byte gUnk_08320D98
_0808AEF4: .4byte 0x0203DC6C
_0808AEF8: .4byte 0x0203DC6D

	thumb_func_start sub_808AEFC
sub_808AEFC: @ 0x0808AEFC
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r5, _0808AF48 @ =0x0203DBE8
	adds r0, r5, #0
	bl SetTextFont
	movs r0, #0
	bl SetTextFontGlyphs
	adds r5, #0x18
	adds r0, r5, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r0, r5, #0
	movs r1, #2
	bl Text_SetColor
	adds r0, r4, #0
	adds r0, #0x2a
	adds r4, #0x38
	ldrb r0, [r0]
	adds r4, r0, r4
	movs r0, #0
	ldrsb r0, [r4, r0]
	bl sub_80867F0
	adds r1, r0, #0
	adds r0, r5, #0
	bl Text_DrawString
	movs r0, #0
	bl SetTextFont
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808AF48: .4byte 0x0203DBE8

	thumb_func_start sub_808AF4C
sub_808AF4C: @ 0x0808AF4C
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r4, _0808B010 @ =0x0203DBE8
	adds r0, r4, #0
	bl SetTextFont
	movs r0, #0
	bl SetTextFontGlyphs
	adds r5, r4, #0
	adds r5, #0x18
	movs r4, #6
_0808AF64:
	adds r0, r5, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0808AF64
	ldr r4, _0808B014 @ =0x0203DC08
	ldr r1, _0808B018 @ =gUnk_08336CD0
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x80
	bl Text_SetCursor
	ldr r1, _0808B01C @ =gUnk_08336CF0
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0xa0
	bl Text_SetCursor
	ldr r1, _0808B020 @ =gUnk_08336CF8
	adds r0, r4, #0
	bl Text_DrawString
	subs r4, #8
	adds r0, r4, #0
	movs r1, #2
	bl Text_SetColor
	adds r6, r7, #0
	adds r6, #0x2a
	adds r5, r7, #0
	adds r5, #0x38
	ldrb r1, [r6]
	adds r0, r1, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_80867F0
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x58
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _0808B024 @ =gUnk_08336D00
	adds r0, r4, #0
	bl Text_DrawString
	adds r0, r4, #0
	movs r1, #0x70
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #2
	bl Text_SetColor
	ldrb r6, [r6]
	adds r5, r6, r5
	movs r0, #0
	ldrsb r0, [r5, r0]
	bl sub_80867FC
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	movs r0, #0
	bl SetTextFont
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B010: .4byte 0x0203DBE8
_0808B014: .4byte 0x0203DC08
_0808B018: .4byte gUnk_08336CD0
_0808B01C: .4byte gUnk_08336CF0
_0808B020: .4byte gUnk_08336CF8
_0808B024: .4byte gUnk_08336D00

	thumb_func_start sub_808B028
sub_808B028: @ 0x0808B028
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r5, r4, #0
	adds r5, #0x2a
	ldrb r7, [r5]
	ldr r0, _0808B0C8 @ =gKeySt
	ldr r1, [r0]
	ldrh r2, [r1, #8]
	movs r6, #1
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0808B0D4
	movs r0, #1
	bl SetTextFontGlyphs
	adds r0, r4, #0
	bl sub_808AF4C
	adds r0, r4, #0
	adds r0, #0x38
	ldrb r5, [r5]
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_8086910
	str r0, [r4, #0x40]
	add r2, sp, #4
	mov r1, sp
	bl sub_8071C00
	ldr r1, [sp]
	movs r0, #0xf0
	subs r0, r0, r1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x47
	movs r5, #0
	strb r0, [r1]
	ldr r1, [sp, #4]
	movs r0, #0x58
	subs r0, r0, r1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x48
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x44
	strb r5, [r0]
	adds r0, #1
	strb r6, [r0]
	ldr r0, _0808B0CC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B0AC
	movs r0, #0x6a
	bl m4aSongNumStart
_0808B0AC:
	adds r0, r4, #0
	adds r0, #0x3e
	strb r6, [r0]
	adds r0, #1
	strb r5, [r0]
	ldr r0, _0808B0D0 @ =sub_808AB44
	bl SetOnHBlankA
	adds r0, r4, #0
	movs r1, #1
	bl Proc_Goto
	b _0808B156
	.align 2, 0
_0808B0C8: .4byte gKeySt
_0808B0CC: .4byte gPlaySt
_0808B0D0: .4byte sub_808AB44
_0808B0D4:
	ldrh r1, [r1, #6]
	movs r6, #0x40
	adds r0, r6, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _0808B108
	cmp r7, #0
	beq _0808B0EC
	subs r0, r7, #1
	b _0808B0FC
_0808B0EC:
	adds r0, r6, #0
	ands r0, r2
	cmp r0, #0
	beq _0808B0FE
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	subs r0, #1
_0808B0FC:
	strb r0, [r5]
_0808B0FE:
	adds r1, r4, #0
	adds r1, #0x2e
	movs r0, #0xff
	strb r0, [r1]
	b _0808B156
_0808B108:
	movs r6, #0x80
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _0808B136
	adds r1, r7, #1
	adds r0, r4, #0
	adds r0, #0x2b
	ldrb r0, [r0]
	cmp r1, r0
	bge _0808B122
	strb r1, [r5]
	b _0808B12C
_0808B122:
	adds r0, r6, #0
	ands r0, r2
	cmp r0, #0
	beq _0808B12C
	strb r3, [r5]
_0808B12C:
	adds r1, r4, #0
	adds r1, #0x2e
	movs r0, #1
	strb r0, [r1]
	b _0808B156
_0808B136:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0808B156
	ldr r0, _0808B190 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B14E
	movs r0, #0x6b
	bl m4aSongNumStart
_0808B14E:
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
_0808B156:
	adds r5, r4, #0
	adds r5, #0x2a
	ldrb r0, [r5]
	cmp r0, r7
	beq _0808B186
	lsls r1, r7, #1
	adds r1, #0x26
	movs r0, #1
	movs r2, #0xa
	bl sub_8041728
	ldrb r5, [r5]
	lsls r1, r5, #1
	adds r1, #0x26
	movs r0, #1
	movs r2, #0xa
	bl sub_804169C
	movs r0, #4
	bl EnableBgSync
	adds r0, r4, #0
	bl Proc_Break
_0808B186:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B190: .4byte gPlaySt

	thumb_func_start sub_808B194
sub_808B194: @ 0x0808B194
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r0, #0x2c
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808B1B4
	ldr r0, _0808B2A4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B1B4
	movs r0, #0x66
	bl m4aSongNumStart
_0808B1B4:
	adds r5, r4, #0
	adds r5, #0x2c
	ldrb r0, [r5]
	adds r0, #2
	movs r1, #0
	mov r8, r1
	strb r0, [r5]
	adds r7, r4, #0
	adds r7, #0x2d
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	ldr r0, [r4, #0x30]
	subs r0, #0x6c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	ldr r0, [r4, #0x34]
	adds r6, r0, #0
	subs r6, #0x1c
	adds r0, r4, #0
	adds r0, #0x2e
	movs r3, #0
	ldrsb r3, [r0, r3]
	ldrb r0, [r7]
	lsls r2, r0, #7
	lsls r1, r0, #3
	muls r0, r1, r0
	subs r0, r2, r0
	cmp r0, #0
	bge _0808B1F4
	adds r0, #7
_0808B1F4:
	asrs r0, r0, #3
	adds r2, r3, #0
	muls r2, r0, r2
	adds r2, r6, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #1
	mov r1, ip
	bl SetBgOffset
	ldr r3, _0808B2A8 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldrb r2, [r5]
	movs r0, #0x10
	subs r0, r0, r2
	adds r1, r3, #0
	adds r1, #0x44
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	mov r5, r8
	strb r5, [r0]
	ldr r0, _0808B2AC @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	ldr r1, _0808B2B0 @ =0x0000E0FF
	ands r0, r1
	movs r5, #0x80
	lsls r5, r5, #4
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	cmp r2, #0x10
	bne _0808B298
	adds r0, r4, #0
	bl Proc_Break
	adds r1, r4, #0
	adds r1, #0x2a
	adds r0, r4, #0
	adds r0, #0x38
	ldrb r1, [r1]
	adds r0, r1, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, _0808B2B4 @ =0x06002000
	movs r2, #0xa
	bl sub_8087BD8
	ldr r1, _0808B2B8 @ =gMapSize
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #1
	subs r0, #0x40
	str r0, [r4, #0x30]
	movs r5, #2
	ldrsh r0, [r1, r5]
	lsls r0, r0, #1
	subs r0, #0x40
	str r0, [r4, #0x34]
	adds r0, r4, #0
	bl sub_808AEFC
	movs r0, #2
	bl EnableBgSync
	mov r0, r8
	strb r0, [r7]
_0808B298:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B2A4: .4byte gPlaySt
_0808B2A8: .4byte gDispIo
_0808B2AC: .4byte 0x0000FFE0
_0808B2B0: .4byte 0x0000E0FF
_0808B2B4: .4byte 0x06002000
_0808B2B8: .4byte gMapSize

	thumb_func_start sub_808B2BC
sub_808B2BC: @ 0x0808B2BC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x2c
	ldrb r0, [r4]
	subs r0, #2
	strb r0, [r4]
	adds r7, r5, #0
	adds r7, #0x2d
	ldrb r0, [r7]
	adds r0, #1
	strb r0, [r7]
	ldr r0, [r5, #0x30]
	subs r0, #0x6c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	ldr r1, [r5, #0x34]
	adds r0, r5, #0
	adds r0, #0x2e
	movs r3, #0
	ldrsb r3, [r0, r3]
	lsls r0, r3, #6
	rsbs r0, r0, #0
	subs r0, #0x1c
	adds r6, r1, r0
	ldrb r0, [r7]
	lsls r2, r0, #7
	lsls r1, r0, #3
	muls r0, r1, r0
	subs r0, r2, r0
	cmp r0, #0
	bge _0808B300
	adds r0, #7
_0808B300:
	asrs r0, r0, #3
	adds r2, r3, #0
	muls r2, r0, r2
	adds r2, r6, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #1
	mov r1, ip
	bl SetBgOffset
	ldr r3, _0808B36C @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldrb r2, [r4]
	movs r0, #0x10
	subs r0, r0, r2
	adds r1, r3, #0
	adds r1, #0x44
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r1, #2
	movs r0, #0
	strb r0, [r1]
	ldr r0, _0808B370 @ =0x0000FFE0
	ldrh r4, [r3, #0x3c]
	ands r0, r4
	movs r1, #2
	orrs r0, r1
	ldr r1, _0808B374 @ =0x0000E0FF
	ands r0, r1
	movs r4, #0x80
	lsls r4, r4, #4
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	cmp r4, #0
	bne _0808B366
	adds r0, r5, #0
	bl Proc_Break
	strb r4, [r7]
_0808B366:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B36C: .4byte gDispIo
_0808B370: .4byte 0x0000FFE0
_0808B374: .4byte 0x0000E0FF

	thumb_func_start sub_808B378
sub_808B378: @ 0x0808B378
	push {lr}
	adds r3, r0, #0
	ldr r2, _0808B3B0 @ =0x0203DC6C
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r0, _0808B3B4 @ =gKeySt
	ldr r1, [r0]
	movs r0, #3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0808B39E
	adds r1, r3, #0
	adds r1, #0x45
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x14
	strb r0, [r2]
_0808B39E:
	ldrb r2, [r2]
	cmp r2, #0x13
	bls _0808B3AA
	adds r0, r3, #0
	bl Proc_Break
_0808B3AA:
	pop {r0}
	bx r0
	.align 2, 0
_0808B3B0: .4byte 0x0203DC6C
_0808B3B4: .4byte gKeySt

	thumb_func_start sub_808B3B8
sub_808B3B8: @ 0x0808B3B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808B404 @ =gKeySt
	ldr r1, [r0]
	movs r0, #3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0808B3D2
	adds r1, r4, #0
	adds r1, #0x45
	movs r0, #0xff
	strb r0, [r1]
_0808B3D2:
	adds r0, r4, #0
	bl sub_808AA84
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B3FC
	ldr r0, _0808B408 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B3EE
	movs r0, #0x6a
	bl m4aSongNumStart
_0808B3EE:
	adds r1, r4, #0
	adds r1, #0x3e
	movs r0, #2
	strb r0, [r1]
	adds r0, r4, #0
	bl Proc_Break
_0808B3FC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808B404: .4byte gKeySt
_0808B408: .4byte gPlaySt

	thumb_func_start sub_808B40C
sub_808B40C: @ 0x0808B40C
	push {lr}
	adds r2, r0, #0
	ldr r1, _0808B42C @ =0x0203DC6D
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bne _0808B426
	adds r0, r2, #0
	bl Proc_Break
_0808B426:
	pop {r0}
	bx r0
	.align 2, 0
_0808B42C: .4byte 0x0203DC6D

	thumb_func_start sub_808B430
sub_808B430: @ 0x0808B430
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r7, r4, #0
	adds r7, #0x3f
	ldrb r2, [r7]
	ldr r0, _0808B464 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #8]
	movs r6, #0x30
	ands r6, r1
	cmp r6, #0
	beq _0808B46C
	adds r0, r2, #1
	movs r1, #1
	ands r0, r1
	strb r0, [r7]
	ldr r0, _0808B468 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B520
	movs r0, #0x67
	bl m4aSongNumStart
	b _0808B520
	.align 2, 0
_0808B464: .4byte gKeySt
_0808B468: .4byte gPlaySt
_0808B46C:
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0808B4B4
	ldr r0, _0808B4A8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B488
	movs r0, #0x6b
	bl m4aSongNumStart
_0808B488:
	adds r0, r4, #0
	adds r0, #0x3e
	strb r6, [r0]
	movs r0, #0
	bl SetOnHBlankA
	ldr r0, _0808B4AC @ =0x0203DC6C
	strb r6, [r0]
	ldr r0, _0808B4B0 @ =0x0203DC6D
	strb r6, [r0]
	adds r0, r4, #0
	bl Proc_Break
	movs r0, #1
	strb r0, [r7]
	b _0808B520
	.align 2, 0
_0808B4A8: .4byte gPlaySt
_0808B4AC: .4byte 0x0203DC6C
_0808B4B0: .4byte 0x0203DC6D
_0808B4B4:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808B520
	cmp r2, #0
	beq _0808B4F8
	ldr r0, _0808B4EC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808B4D0
	movs r0, #0x6b
	bl m4aSongNumStart
_0808B4D0:
	adds r0, r4, #0
	adds r0, #0x3e
	strb r5, [r0]
	movs r0, #0
	bl SetOnHBlankA
	ldr r0, _0808B4F0 @ =0x0203DC6C
	strb r5, [r0]
	ldr r0, _0808B4F4 @ =0x0203DC6D
	strb r5, [r0]
	adds r0, r4, #0
	bl Proc_Break
	b _0808B520
	.align 2, 0
_0808B4EC: .4byte gPlaySt
_0808B4F0: .4byte 0x0203DC6C
_0808B4F4: .4byte 0x0203DC6D
_0808B4F8:
	ldr r1, _0808B528 @ =gPlaySt
	adds r2, r4, #0
	adds r2, #0x2a
	adds r0, r4, #0
	adds r0, #0x38
	ldrb r2, [r2]
	adds r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1, #0xe]
	ldrb r1, [r1, #0x1d]
	lsls r0, r1, #0x1e
	cmp r0, #0
	blt _0808B518
	movs r0, #0x6a
	bl m4aSongNumStart
_0808B518:
	adds r0, r4, #0
	movs r1, #3
	bl Proc_Goto
_0808B520:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B528: .4byte gPlaySt

	thumb_func_start sub_808B52C
sub_808B52C: @ 0x0808B52C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x4c]
	bl Proc_End
	adds r0, r4, #0
	adds r0, #0x3f
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808B560
	movs r0, #0x80
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl StartBgmVolumeChange
	movs r0, #6
	bl SetNextGameAction
	ldr r0, [r4, #0x14]
	bl Proc_End
	movs r0, #0
	bl SetOnHBlankA
	b _0808B564
_0808B560:
	bl ForceEnableSounds
_0808B564:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808B56C
sub_808B56C: @ 0x0808B56C
	push {lr}
	bl EndGreenText
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808B578
sub_808B578: @ 0x0808B578
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0808B594 @ =gUnk_0868A58C
	bl SpawnProcLocking
	adds r1, r0, #0
	adds r0, #0x29
	strb r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808B594: .4byte gUnk_0868A58C

	thumb_func_start sub_808B598
sub_808B598: @ 0x0808B598
	push {r4, r5, r6, r7, lr}
	ldr r7, _0808B60C @ =0x06012000
	ldr r5, _0808B610 @ =0x0203DBE8
	adds r0, r5, #0
	adds r1, r7, #0
	movs r2, #5
	bl InitSpriteTextFont
	ldr r0, _0808B614 @ =Pal_SystemText
	movs r4, #0xa8
	lsls r4, r4, #2
	adds r1, r4, #0
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0808B618 @ =gPal
	adds r0, r0, r4
	movs r1, #0
	strh r1, [r0]
	adds r0, r5, #0
	bl SetTextFont
	movs r5, #0
_0808B5C6:
	lsls r4, r5, #3
	ldr r6, _0808B61C @ =0x0203DC00
	adds r4, r4, r6
	adds r0, r4, #0
	bl InitSpriteText
	adds r0, r4, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	adds r5, #1
	cmp r5, #6
	ble _0808B5C6
	movs r0, #0
	bl SetTextFont
	ldr r0, _0808B620 @ =0x0001FFFF
	ands r0, r7
	lsrs r0, r0, #5
	ldr r2, _0808B624 @ =0x000003FF
	adds r1, r2, #0
	ands r0, r1
	movs r2, #0xa0
	lsls r2, r2, #7
	adds r1, r2, #0
	adds r0, r0, r1
	strh r0, [r6, #0x38]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B60C: .4byte 0x06012000
_0808B610: .4byte 0x0203DBE8
_0808B614: .4byte Pal_SystemText
_0808B618: .4byte gPal
_0808B61C: .4byte 0x0203DC00
_0808B620: .4byte 0x0001FFFF
_0808B624: .4byte 0x000003FF

	thumb_func_start sub_808B628
sub_808B628: @ 0x0808B628
	push {lr}
	ldr r1, [r0, #0x14]
	str r1, [r0, #0x2c]
	adds r1, #0x2a
	ldrb r2, [r1]
	adds r1, r0, #0
	adds r1, #0x30
	strb r2, [r1]
	bl sub_808B598
	pop {r0}
	bx r0

	thumb_func_start sub_808B640
sub_808B640: @ 0x0808B640
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov sb, r0
	movs r4, #0
	movs r5, #0x80
	lsls r5, r5, #7
_0808B654:
	lsls r1, r4, #5
	str r5, [sp]
	movs r0, #0xb
	movs r2, #0
	ldr r3, _0808B680 @ =gUnk_0868A568
	bl PutSprite
	adds r4, #1
	cmp r4, #7
	ble _0808B654
	mov r1, sb
	ldr r0, [r1, #0x2c]
	adds r1, r0, #0
	adds r1, #0x3e
	ldrb r1, [r1]
	cmp r1, #1
	beq _0808B712
	cmp r1, #1
	bgt _0808B684
	cmp r1, #0
	beq _0808B68A
	b _0808B786
	.align 2, 0
_0808B680: .4byte gUnk_0868A568
_0808B684:
	cmp r1, #2
	beq _0808B6E0
	b _0808B786
_0808B68A:
	ldr r3, _0808B6D4 @ =gUnk_0868A570
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xb
	movs r1, #4
	movs r2, #4
	bl PutSprite
	mov r3, sb
	ldr r0, [r3, #0x2c]
	adds r0, #0x2a
	ldrb r0, [r0]
	lsls r1, r0, #4
	adds r1, #0x30
	movs r0, #0xe
	bl sub_80415CC
	movs r4, #0
	ldr r6, _0808B6D8 @ =0x0203DC38
	movs r5, #0x98
_0808B6B4:
	lsls r0, r4, #2
	ldrh r7, [r6]
	adds r0, r7, r0
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	movs r2, #4
	ldr r3, _0808B6DC @ =Sprite_32x16
	bl PutSpriteExt
	adds r5, #0x20
	adds r4, #1
	cmp r4, #6
	ble _0808B6B4
	b _0808B786
	.align 2, 0
_0808B6D4: .4byte gUnk_0868A570
_0808B6D8: .4byte 0x0203DC38
_0808B6DC: .4byte Sprite_32x16
_0808B6E0:
	adds r0, #0x3f
	ldrb r0, [r0]
	lsls r0, r0, #5
	adds r0, #0x94
	movs r1, #0x86
	bl sub_80415CC
	movs r4, #0
	ldr r6, _0808B798 @ =0x0203DC38
	movs r5, #0x18
_0808B6F4:
	lsls r0, r4, #2
	ldrh r1, [r6]
	adds r0, r1, r0
	adds r0, #0x40
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	movs r2, #0x86
	ldr r3, _0808B79C @ =Sprite_32x16
	bl PutSprite
	adds r5, #0x20
	adds r4, #1
	cmp r4, #5
	ble _0808B6F4
_0808B712:
	movs r4, #0
	ldr r6, _0808B798 @ =0x0203DC38
	movs r5, #0x10
_0808B718:
	lsls r0, r4, #2
	ldrh r3, [r6]
	adds r0, r3, r0
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	movs r2, #4
	ldr r3, _0808B79C @ =Sprite_32x16
	bl PutSpriteExt
	adds r5, #0x20
	adds r4, #1
	cmp r4, #6
	ble _0808B718
	movs r0, #0
	ldr r7, _0808B798 @ =0x0203DC38
	mov r8, r7
_0808B73A:
	movs r4, #0
	lsls r6, r0, #4
	adds r5, r0, #2
	adds r0, #1
	mov sl, r0
_0808B744:
	mov r1, sb
	ldr r0, [r1, #0x2c]
	adds r2, r0, #0
	adds r2, #0x47
	lsls r1, r4, #5
	ldrb r2, [r2]
	adds r1, r2, r1
	adds r0, #0x48
	ldrb r0, [r0]
	adds r2, r0, r6
	movs r3, #0x84
	lsls r3, r3, #3
	adds r2, r2, r3
	lsls r0, r4, #2
	mov r7, r8
	ldrh r7, [r7]
	adds r0, r7, r0
	lsls r3, r5, #6
	adds r0, r0, r3
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r0, r3
	str r0, [sp]
	movs r0, #4
	ldr r3, _0808B79C @ =Sprite_32x16
	bl PutSprite
	adds r4, #1
	cmp r4, #5
	ble _0808B744
	mov r0, sl
	cmp r0, #4
	ble _0808B73A
_0808B786:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B798: .4byte 0x0203DC38
_0808B79C: .4byte Sprite_32x16

	thumb_func_start sub_808B7A0
sub_808B7A0: @ 0x0808B7A0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808B7B0 @ =gUnk_0868A634
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0808B7B0: .4byte gUnk_0868A634

	thumb_func_start sub_808B7B4
sub_808B7B4: @ 0x0808B7B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov r8, r0
	ldr r4, _0808B848 @ =gBg3Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	movs r0, #0
	movs r1, #0x2c
	add r1, r8
	mov sb, r1
	movs r3, #0x1d
	mov ip, r3
	movs r1, #0x27
	mov sl, r1
	adds r7, r4, #0
	movs r3, #0xf4
	lsls r3, r3, #8
	adds r6, r3, #0
_0808B7E2:
	movs r2, #0
	adds r5, r0, #1
	lsls r4, r0, #6
	mov r3, sl
	subs r1, r3, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0808B84C @ =gUnk_08320436
	adds r3, r0, r1
_0808B7F6:
	mov r0, ip
	subs r1, r0, r2
	lsls r1, r1, #1
	adds r1, r4, r1
	adds r1, r1, r7
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	adds r0, r6, r0
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1d
	bls _0808B7F6
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1f
	bls _0808B7E2
	movs r0, #8
	bl EnableBgSync
	movs r4, #0
	mov r1, sb
	strb r4, [r1]
	mov r3, r8
	strh r4, [r3, #0x2a]
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _0808B850 @ =0x0400001E
	strh r4, [r0]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B848: .4byte gBg3Tm
_0808B84C: .4byte gUnk_08320436
_0808B850: .4byte 0x0400001E

	thumb_func_start sub_808B854
sub_808B854: @ 0x0808B854
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r6, r5, #0
	adds r6, #0x2c
	ldrb r0, [r6]
	cmp r0, #3
	bne _0808B896
	ldrh r0, [r5, #0x2a]
	adds r0, #1
	strh r0, [r5, #0x2a]
	lsls r0, r0, #0x10
	movs r1, #0xa0
	lsls r1, r1, #0x13
	cmp r0, r1
	bne _0808B87A
	movs r0, #0
	strh r0, [r5, #0x2a]
_0808B87A:
	movs r4, #0xff
	adds r2, r4, #0
	ldrh r1, [r5, #0x2a]
	ands r2, r1
	movs r0, #3
	movs r1, #0
	bl SetBgOffset
	ldr r0, _0808B918 @ =0x0400001E
	ldrh r1, [r5, #0x2a]
	ands r4, r1
	strh r4, [r0]
	movs r0, #0
	strb r0, [r6]
_0808B896:
	adds r1, r5, #0
	adds r1, #0x2c
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldrh r1, [r5, #0x2a]
	movs r0, #7
	ands r0, r1
	cmp r0, #0
	bne _0808B90E
	ldr r5, _0808B91C @ =gUnk_08320436
	lsrs r0, r1, #3
	subs r4, r0, #1
	movs r1, #0x1f
	ands r4, r1
	adds r0, #0x1e
	movs r1, #0x28
	bl __modsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0
	ldr r1, _0808B920 @ =gBg3Tm
	mov r8, r1
	movs r1, #0x1d
	mov ip, r1
	lsls r4, r4, #6
	movs r1, #0x27
	subs r1, r1, r0
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	mov r7, r8
	movs r0, #0xf4
	lsls r0, r0, #8
	adds r6, r0, #0
	adds r5, r4, #0
_0808B8E2:
	mov r0, ip
	subs r1, r0, r2
	lsls r1, r1, #1
	adds r1, r4, r1
	adds r1, r1, r7
	lsls r0, r2, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	adds r0, r6, r0
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0x1d
	bls _0808B8E2
	mov r1, r8
	adds r0, r5, r1
	ldr r1, _0808B924 @ =0x06007800
	adds r1, r5, r1
	movs r2, #0xf
	bl CpuFastSet
_0808B90E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B918: .4byte 0x0400001E
_0808B91C: .4byte gUnk_08320436
_0808B920: .4byte gBg3Tm
_0808B924: .4byte 0x06007800

	thumb_func_start sub_808B928
sub_808B928: @ 0x0808B928
	push {lr}
	ldr r0, _0808B938 @ =gUnk_0868A644
	movs r1, #0
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808B938: .4byte gUnk_0868A644

	thumb_func_start sub_808B93C
sub_808B93C: @ 0x0808B93C
	push {r4, r5, r6, lr}
	adds r1, r0, #0
	movs r1, #0xa
	bl __modsi3
	adds r1, r0, #0
	movs r4, #0
	ldr r5, _0808B9A8 @ =0x020004AC
	ldr r6, _0808B9AC @ =gUnk_0868A998
_0808B94E:
	lsrs r0, r4, #0x1f
	adds r0, r4, r0
	asrs r0, r0, #1
	lsls r0, r0, #1
	subs r0, r4, r0
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, r1
	bne _0808B96A
	adds r0, r1, #1
	movs r1, #0xa
	bl __modsi3
	adds r1, r0, #0
_0808B96A:
	adds r4, #1
	cmp r4, #2
	ble _0808B94E
	ldrb r0, [r5]
	strb r0, [r5, #1]
	strb r1, [r5]
	lsls r0, r1, #3
	adds r0, r0, r6
	ldr r4, [r0]
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r0, _0808B9B0 @ =0x06002800
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldrb r5, [r5]
	lsls r0, r5, #3
	adds r1, r6, #4
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808B9A8: .4byte 0x020004AC
_0808B9AC: .4byte gUnk_0868A998
_0808B9B0: .4byte 0x06002800

	thumb_func_start sub_808B9B4
sub_808B9B4: @ 0x0808B9B4
	movs r2, #0
	ldr r1, _0808B9C4 @ =gUnk_0868A664
_0808B9B8:
	ldr r0, [r1]
	cmp r0, #0
	blt _0808B9C8
	adds r1, #0xc
	adds r2, #1
	b _0808B9B8
	.align 2, 0
_0808B9C4: .4byte gUnk_0868A664
_0808B9C8:
	adds r0, r2, #0
	bx lr

	thumb_func_start sub_808B9CC
sub_808B9CC: @ 0x0808B9CC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	movs r0, #0
	bl InitBgs
	bl ResetTextFont
	bl ResetText
	bl ApplySystemObjectsGraphics
	bl InitSystemTextFont
	ldr r3, _0808BB78 @ =gDispIo
	movs r5, #1
	ldrb r2, [r3, #1]
	orrs r2, r5
	movs r4, #2
	orrs r2, r4
	movs r0, #4
	orrs r2, r0
	movs r0, #8
	orrs r2, r0
	movs r0, #0x10
	orrs r2, r0
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r6, [r3, #0xc]
	ands r0, r6
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r6, [r3, #0x10]
	ands r0, r6
	orrs r0, r4
	strb r0, [r3, #0x10]
	ldrb r0, [r3, #0x14]
	ands r1, r0
	orrs r1, r5
	strb r1, [r3, #0x14]
	movs r0, #3
	ldrb r1, [r3, #0x18]
	orrs r0, r1
	strb r0, [r3, #0x18]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r2, r0
	subs r0, #0x20
	ands r2, r0
	movs r0, #0x7f
	ands r2, r0
	strb r2, [r3, #1]
	movs r0, #0
	bl SetBlankChr
	ldr r0, _0808BB7C @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r6, _0808BB80 @ =gBg1Tm
	adds r0, r6, #0
	movs r1, #0
	bl TmFill
	ldr r2, _0808BB84 @ =gBg2Tm
	mov r8, r2
	mov r0, r8
	movs r1, #0
	bl TmFill
	ldr r0, _0808BB88 @ =gBg3Tm
	mov sb, r0
	movs r1, #0
	bl TmFill
	movs r0, #0xf
	bl EnableBgSync
	movs r3, #0
	str r3, [r7, #0x34]
	str r3, [r7, #0x30]
	ldr r1, _0808BB8C @ =0x020004AC
	movs r0, #0xff
	ldrb r2, [r1, #1]
	orrs r2, r0
	strb r2, [r1, #1]
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	adds r1, r7, #0
	adds r1, #0x29
	movs r0, #1
	strb r0, [r1]
	movs r1, #0
	strh r3, [r7, #0x2c]
	adds r0, r7, #0
	adds r0, #0x38
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #7
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	bl sub_808BE70
	adds r0, r7, #0
	bl sub_808BF00
	bl sub_808BFF0
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _0808BB90 @ =gUnk_08345934
	movs r0, #1
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0808BB94 @ =gUnk_08346184
	movs r1, #0x80
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r1, _0808BB98 @ =gUnk_0832C5E8
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r6, #0
	bl TmApplyTsa_t
	ldr r1, _0808BB9C @ =0x0000FF98
	ldr r2, _0808BBA0 @ =0x0000FFC0
	movs r0, #2
	bl SetBgOffset
	bl GetGameTime
	bl sub_808B93C
	ldr r1, _0808BBA4 @ =0x00006140
	mov r0, r8
	movs r2, #0xf
	movs r3, #0xa
	bl sub_808FDE8
	ldr r4, _0808BBA8 @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0808BBAC @ =gUnk_0832CA9C
	movs r1, #0xe0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0808BBB0 @ =gUnk_08345440
	movs r2, #0xe0
	lsls r2, r2, #7
	mov r0, sb
	bl TmApplyTsa_t
	ldr r0, _0808BBB4 @ =gUnk_0832CAFC
	ldr r1, _0808BBB8 @ =0x06012000
	bl Decompress
	ldr r0, _0808BBBC @ =gUnk_0832CC90
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808BBC0 @ =gUnk_08320EEC
	ldr r1, _0808BBC4 @ =0x06017000
	bl Decompress
	ldr r0, _0808BBC8 @ =gUnk_08319E88
	movs r1, #0xa8
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r7, #0x2e]
	adds r0, r7, #0
	bl sub_808C32C
	str r0, [r7, #0x3c]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BB78: .4byte gDispIo
_0808BB7C: .4byte gBg0Tm
_0808BB80: .4byte gBg1Tm
_0808BB84: .4byte gBg2Tm
_0808BB88: .4byte gBg3Tm
_0808BB8C: .4byte 0x020004AC
_0808BB90: .4byte gUnk_08345934
_0808BB94: .4byte gUnk_08346184
_0808BB98: .4byte gUnk_0832C5E8
_0808BB9C: .4byte 0x0000FF98
_0808BBA0: .4byte 0x0000FFC0
_0808BBA4: .4byte 0x00006140
_0808BBA8: .4byte gUnk_0831B0A8
_0808BBAC: .4byte gUnk_0832CA9C
_0808BBB0: .4byte gUnk_08345440
_0808BBB4: .4byte gUnk_0832CAFC
_0808BBB8: .4byte 0x06012000
_0808BBBC: .4byte gUnk_0832CC90
_0808BBC0: .4byte gUnk_08320EEC
_0808BBC4: .4byte 0x06017000
_0808BBC8: .4byte gUnk_08319E88

	thumb_func_start sub_808BBCC
sub_808BBCC: @ 0x0808BBCC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r0, _0808BC10 @ =gKeySt
	ldr r2, [r0]
	ldrh r1, [r2, #6]
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _0808BC18
	adds r0, r5, #0
	movs r1, #2
	bl Proc_Goto
	ldr r0, _0808BC14 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808BBFA
	movs r0, #0x67
	bl m4aSongNumStart
_0808BBFA:
	ldr r0, [r5, #0x30]
	cmp r0, #0
	bgt _0808BC04
	bl sub_808B9B4
_0808BC04:
	subs r0, #1
	str r0, [r5, #0x30]
	adds r1, r5, #0
	adds r1, #0x38
	b _0808BC78
	.align 2, 0
_0808BC10: .4byte gKeySt
_0808BC14: .4byte gPlaySt
_0808BC18:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0808BC58
	adds r0, r5, #0
	movs r1, #2
	bl Proc_Goto
	ldr r0, _0808BC48 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808BC38
	movs r0, #0x67
	bl m4aSongNumStart
_0808BC38:
	ldr r4, [r5, #0x30]
	adds r4, #1
	bl sub_808B9B4
	cmp r4, r0
	bne _0808BC4C
	str r6, [r5, #0x30]
	b _0808BC52
	.align 2, 0
_0808BC48: .4byte gPlaySt
_0808BC4C:
	ldr r0, [r5, #0x30]
	adds r0, #1
	str r0, [r5, #0x30]
_0808BC52:
	adds r1, r5, #0
	adds r1, #0x39
	b _0808BC78
_0808BC58:
	adds r4, r5, #0
	adds r4, #0x40
	ldrb r0, [r4]
	cmp r0, #0
	bne _0808BCB4
	ldrh r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808BC7E
	movs r0, #1
	rsbs r0, r0, #0
	bl FadeBgmOut
	adds r1, r5, #0
	adds r1, #0x29
_0808BC78:
	movs r0, #1
	strb r0, [r1]
	b _0808BCB4
_0808BC7E:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808BC92
	adds r0, r5, #0
	bl sub_808BE5C
	movs r0, #1
	strb r0, [r4]
	b _0808BCB4
_0808BC92:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0808BCB4
	adds r0, r5, #0
	movs r1, #3
	bl Proc_Goto
	bl IsBgmPlaying
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BCB4
	movs r0, #1
	rsbs r0, r0, #0
	bl FadeBgmOut
_0808BCB4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808BCBC
sub_808BCBC: @ 0x0808BCBC
	push {r4, r5, lr}
	adds r5, r0, #0
	ldrh r4, [r5, #0x2c]
	adds r4, #1
	strh r4, [r5, #0x2c]
	movs r0, #6
	subs r0, r0, r4
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	strh r0, [r5, #0x2e]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	cmp r4, #6
	bne _0808BCE8
	adds r0, r5, #0
	bl sub_808BF00
	adds r0, r5, #0
	bl Proc_Break
_0808BCE8:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808BCF0
sub_808BCF0: @ 0x0808BCF0
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldrh r4, [r5, #0x2c]
	subs r4, #1
	movs r6, #0
	strh r4, [r5, #0x2c]
	movs r0, #6
	subs r0, r0, r4
	lsls r0, r0, #8
	movs r1, #6
	bl __divsi3
	strh r0, [r5, #0x2e]
	lsls r4, r4, #0x10
	cmp r4, #0
	bne _0808BD20
	adds r0, r5, #0
	bl Proc_Break
	adds r0, r5, #0
	adds r0, #0x38
	strb r6, [r0]
	adds r0, #1
	strb r6, [r0]
_0808BD20:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808BD28
sub_808BD28: @ 0x0808BD28
	push {lr}
	ldr r3, _0808BD54 @ =gDispIo
	movs r1, #2
	rsbs r1, r1, #0
	ldrb r2, [r3, #1]
	ands r1, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	subs r2, #2
	ands r1, r2
	subs r2, #4
	ands r1, r2
	subs r2, #8
	ands r1, r2
	strb r1, [r3, #1]
	ldr r0, [r0, #0x3c]
	bl Proc_End
	pop {r0}
	bx r0
	.align 2, 0
_0808BD54: .4byte gDispIo

	thumb_func_start sub_808BD58
sub_808BD58: @ 0x0808BD58
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808BD68 @ =gUnk_0868AA08
	bl SpawnProcLocking
	pop {r1}
	bx r1
	.align 2, 0
_0808BD68: .4byte gUnk_0868AA08

	thumb_func_start sub_808BD6C
sub_808BD6C: @ 0x0808BD6C
	movs r1, #0
	strh r1, [r0, #0x2c]
	ldr r1, [r0, #0x14]
	ldr r1, [r1, #0x30]
	str r1, [r0, #0x30]
	bx lr

	thumb_func_start sub_808BD78
sub_808BD78: @ 0x0808BD78
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldrh r4, [r6, #0x2c]
	adds r4, #1
	movs r3, #0
	strh r4, [r6, #0x2c]
	ldr r5, _0808BDEC @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x44
	strb r3, [r0]
	adds r0, #1
	strb r3, [r0]
	ldrh r0, [r6, #0x2c]
	movs r1, #3
	bl __udivsi3
	adds r1, r5, #0
	adds r1, #0x46
	strb r0, [r1]
	ldr r0, _0808BDF0 @ =0x0000FFE0
	ldrh r1, [r5, #0x3c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r5, #0x3c]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	cmp r4, #0x30
	bne _0808BDE4
	ldr r2, _0808BDF4 @ =gUnk_0868A664
	ldr r1, [r6, #0x30]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	movs r1, #0
	bl StartBgm
	bl GetGameTime
	bl sub_808B93C
	adds r0, r6, #0
	bl Proc_Break
_0808BDE4:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808BDEC: .4byte gDispIo
_0808BDF0: .4byte 0x0000FFE0
_0808BDF4: .4byte gUnk_0868A664

	thumb_func_start sub_808BDF8
sub_808BDF8: @ 0x0808BDF8
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	ldrh r4, [r6, #0x2c]
	subs r4, #1
	movs r7, #0
	strh r4, [r6, #0x2c]
	ldr r5, _0808BE54 @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x44
	strb r7, [r0]
	adds r0, #1
	strb r7, [r0]
	ldrh r0, [r6, #0x2c]
	movs r1, #3
	bl __udivsi3
	adds r1, r5, #0
	adds r1, #0x46
	strb r0, [r1]
	ldr r0, _0808BE58 @ =0x0000FFE0
	ldrh r1, [r5, #0x3c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r5, #0x3c]
	lsls r4, r4, #0x10
	cmp r4, #0
	bne _0808BE4C
	adds r0, r6, #0
	bl Proc_Break
	ldr r0, [r6, #0x14]
	adds r0, #0x40
	strb r7, [r0]
_0808BE4C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BE54: .4byte gDispIo
_0808BE58: .4byte 0x0000FFE0

	thumb_func_start sub_808BE5C
sub_808BE5C: @ 0x0808BE5C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808BE6C @ =gUnk_0868AA80
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808BE6C: .4byte gUnk_0868AA80

	thumb_func_start sub_808BE70
sub_808BE70: @ 0x0808BE70
	push {r4, r5, r6, lr}
	ldr r6, _0808BEE8 @ =0x06014000
	ldr r4, _0808BEEC @ =0x02000468
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #5
	bl InitSpriteTextFont
	ldr r0, _0808BEF0 @ =Pal_SystemText
	movs r5, #0xd0
	lsls r5, r5, #2
	adds r1, r5, #0
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0808BEF4 @ =gPal
	adds r0, r0, r5
	movs r1, #0
	strh r1, [r0]
	bl EnablePalSync
	adds r0, r4, #0
	bl SetTextFont
	adds r0, r4, #0
	adds r0, #0x18
	bl InitSpriteText
	adds r0, r4, #0
	adds r0, #0x20
	bl InitSpriteText
	adds r4, #0x28
	movs r5, #2
_0808BEB4:
	adds r0, r4, #0
	bl InitSpriteText
	adds r4, #8
	subs r5, #1
	cmp r5, #0
	bge _0808BEB4
	movs r0, #0
	bl SetTextFont
	ldr r2, _0808BEEC @ =0x02000468
	ldr r0, _0808BEF8 @ =0x0001FFFF
	ands r0, r6
	lsrs r0, r0, #5
	ldr r3, _0808BEFC @ =0x000003FF
	adds r1, r3, #0
	ands r0, r1
	movs r3, #0xa0
	lsls r3, r3, #8
	adds r1, r3, #0
	adds r0, r0, r1
	adds r2, #0x40
	strh r0, [r2]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808BEE8: .4byte 0x06014000
_0808BEEC: .4byte 0x02000468
_0808BEF0: .4byte Pal_SystemText
_0808BEF4: .4byte gPal
_0808BEF8: .4byte 0x0001FFFF
_0808BEFC: .4byte 0x000003FF

	thumb_func_start sub_808BF00
sub_808BF00: @ 0x0808BF00
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	adds r7, r0, #0
	ldr r0, [r7, #0x30]
	mov r8, r0
	ldr r6, _0808BF90 @ =0x02000468
	adds r0, r6, #0
	bl SetTextFont
	movs r0, #1
	bl SetTextFontGlyphs
	mov r1, r8
	lsls r0, r1, #1
	add r0, r8
	lsls r0, r0, #2
	mov sb, r0
	ldr r5, _0808BF94 @ =gUnk_0868A664
	adds r5, #4
	add r5, sb
	ldr r0, [r5]
	bl DecodeMsg
	add r1, sp, #4
	mov sl, r1
	mov r1, sp
	mov r2, sl
	bl sub_8071C00
	adds r4, r6, #0
	adds r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	ldr r0, [sp]
	movs r1, #0xb0
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	adds r0, r4, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r0, [r5]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r4, #0
	bl Text_DrawString
	adds r6, #0x20
	adds r0, r6, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	mov r0, r8
	cmp r0, #0
	bne _0808BF98
	adds r1, r7, #0
	adds r1, #0x41
	movs r0, #1
	strb r0, [r1]
	b _0808BFD6
	.align 2, 0
_0808BF90: .4byte 0x02000468
_0808BF94: .4byte gUnk_0868A664
_0808BF98:
	adds r1, r7, #0
	adds r1, #0x41
	movs r0, #0
	strb r0, [r1]
	ldr r4, _0808BFEC @ =gUnk_0868A664
	adds r4, #8
	add r4, sb
	ldr r0, [r4]
	bl DecodeMsg
	mov r1, sp
	mov r2, sl
	bl sub_8071C00
	ldr r0, [sp]
	movs r1, #0xa8
	subs r1, r1, r0
	adds r0, r6, #0
	bl Text_SetCursor
	adds r0, r6, #0
	movs r1, #0
	bl Text_SetColor
	ldr r0, [r4]
	bl DecodeMsg
	adds r1, r0, #0
	adds r0, r6, #0
	bl Text_DrawString
_0808BFD6:
	movs r0, #0
	bl SetTextFont
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BFEC: .4byte gUnk_0868A664

	thumb_func_start sub_808BFF0
sub_808BFF0: @ 0x0808BFF0
	push {r4, r5, lr}
	ldr r5, _0808C074 @ =0x02000468
	adds r0, r5, #0
	bl SetTextFont
	movs r0, #0
	bl SetTextFontGlyphs
	adds r4, r5, #0
	adds r4, #0x28
	adds r0, r4, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _0808C078 @ =gUnk_08336D3C
	adds r0, r4, #0
	bl Text_DrawString
	adds r4, #8
	adds r0, r4, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _0808C07C @ =gUnk_08336D48
	adds r0, r4, #0
	bl Text_DrawString
	adds r5, #0x38
	adds r0, r5, #0
	movs r1, #0
	bl SpriteText_DrawBackgroundExt
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetCursor
	adds r0, r5, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _0808C080 @ =gUnk_08336D54
	adds r0, r5, #0
	bl Text_DrawString
	movs r0, #0
	bl SetTextFont
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808C074: .4byte 0x02000468
_0808C078: .4byte gUnk_08336D3C
_0808C07C: .4byte gUnk_08336D48
_0808C080: .4byte gUnk_08336D54

	thumb_func_start sub_808C084
sub_808C084: @ 0x0808C084
	ldr r1, [r0, #0x14]
	str r1, [r0, #0x2c]
	adds r1, r0, #0
	adds r1, #0x30
	movs r2, #0
	strb r2, [r1]
	adds r0, #0x31
	strb r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_808C098
sub_808C098: @ 0x0808C098
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	str r0, [sp, #4]
	ldr r3, _0808C300 @ =gUnk_0868A9E8
	movs r4, #0x80
	lsls r4, r4, #7
	str r4, [sp]
	movs r0, #0xb
	movs r1, #0x14
	movs r2, #0x4d
	bl PutSprite
	ldr r3, _0808C304 @ =gUnk_0868A9F0
	str r4, [sp]
	movs r0, #0xb
	movs r1, #0x14
	movs r2, #0x61
	bl PutSprite
	ldr r3, _0808C308 @ =gUnk_0868A9F8
	str r4, [sp]
	movs r0, #0xb
	movs r1, #0x14
	movs r2, #0x75
	bl PutSprite
	ldr r6, _0808C30C @ =gUnk_0868A988
	ldr r0, [sp, #4]
	adds r0, #0x30
	ldrb r0, [r0]
	lsrs r0, r0, #3
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r4, #0xa0
	lsls r4, r4, #7
	adds r0, r0, r4
	str r0, [sp]
	movs r0, #0xb
	movs r1, #0x1a
	movs r2, #0x1a
	adds r3, r6, #0
	bl PutSpriteExt
	ldr r5, _0808C310 @ =0x000010CE
	ldr r0, [sp, #4]
	adds r0, #0x31
	ldrb r0, [r0]
	lsrs r0, r0, #3
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r0, r0, r4
	str r0, [sp]
	movs r0, #0xb
	adds r1, r5, #0
	movs r2, #0x1a
	adds r3, r6, #0
	bl PutSpriteExt
	ldr r1, [sp, #4]
	ldr r0, [r1, #0x2c]
	ldrh r0, [r0, #0x2e]
	cmp r0, #0x30
	bhi _0808C12C
	b _0808C246
_0808C12C:
	ldr r4, _0808C314 @ =gSinLut
	movs r2, #0x80
	adds r2, r2, r4
	mov sb, r2
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	ldr r3, [sp, #4]
	ldr r1, [r3, #0x2c]
	ldrh r1, [r1, #0x2e]
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	ldr r2, [sp, #4]
	ldr r1, [r2, #0x2c]
	ldrh r1, [r1, #0x2e]
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r3, [sp, #4]
	ldr r0, [r3, #0x2c]
	adds r0, #0x41
	ldrb r0, [r0]
	movs r4, #0x18
	cmp r0, #0
	bne _0808C1F6
	movs r4, #0x10
	ldr r0, _0808C318 @ =0x020004A8
	mov r8, r0
	movs r7, #0x40
	movs r6, #0x20
	movs r5, #4
_0808C1B2:
	mov r1, r8
	ldrh r1, [r1]
	adds r0, r1, r7
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r0, r2
	str r0, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r3, #0x88
	lsls r3, r3, #1
	adds r2, r4, r3
	ldr r3, _0808C31C @ =Sprite_32x16
	bl PutSpriteExt
	adds r7, #4
	adds r6, #0x20
	subs r5, #1
	cmp r5, #0
	bge _0808C1B2
	movs r0, #0x88
	lsls r0, r0, #1
	adds r2, r4, r0
	ldr r3, _0808C320 @ =Sprite_16x16
	ldr r0, _0808C324 @ =0x02000468
	adds r0, #0x40
	ldrh r0, [r0]
	ldr r1, _0808C328 @ =0x00001054
	adds r0, r0, r1
	str r0, [sp]
	movs r0, #4
	movs r1, #0xc0
	bl PutSpriteExt
_0808C1F6:
	movs r5, #0
	ldr r7, _0808C318 @ =0x020004A8
	movs r6, #0x20
_0808C1FC:
	lsls r0, r5, #2
	ldrh r2, [r7]
	adds r0, r2, r0
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r0, r3
	str r0, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r3, #0x80
	lsls r3, r3, #1
	adds r2, r4, r3
	ldr r3, _0808C31C @ =Sprite_32x16
	bl PutSpriteExt
	adds r6, #0x20
	adds r5, #1
	cmp r5, #4
	ble _0808C1FC
	lsls r1, r5, #5
	adds r1, #0x20
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r4, r0
	ldr r3, _0808C320 @ =Sprite_16x16
	ldr r4, _0808C324 @ =0x02000468
	adds r4, #0x40
	lsls r0, r5, #2
	ldrh r4, [r4]
	adds r0, r4, r0
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r0, r4
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
_0808C246:
	movs r4, #0
	ldr r0, [sp, #4]
	adds r0, #0x30
	str r0, [sp, #8]
	ldr r1, [sp, #4]
	adds r1, #0x31
	str r1, [sp, #0xc]
	ldr r2, _0808C318 @ =0x020004A8
	mov sl, r2
_0808C258:
	asrs r1, r4, #1
	lsls r0, r4, #2
	lsls r7, r4, #6
	adds r3, r4, #1
	mov sb, r3
	adds r0, r0, r4
	lsls r0, r0, #2
	mov r8, r0
	movs r6, #0x80
	lsls r1, r1, #4
	adds r4, r1, #0
	adds r4, #0x28
	movs r5, #1
_0808C272:
	mov r1, sl
	ldrh r1, [r1]
	adds r0, r1, r6
	adds r0, r0, r7
	str r0, [sp]
	movs r0, #4
	adds r1, r4, #0
	mov r2, r8
	adds r2, #0x4c
	ldr r3, _0808C31C @ =Sprite_32x16
	bl PutSpriteExt
	adds r6, #4
	adds r4, #0x20
	subs r5, #1
	cmp r5, #0
	bge _0808C272
	mov r4, sb
	cmp r4, #2
	ble _0808C258
	ldr r1, [sp, #8]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	ldr r2, [sp, #0xc]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	ldr r3, [sp, #4]
	ldr r0, [r3, #0x2c]
	adds r0, #0x38
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808C2BC
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_0808C2BC:
	ldr r4, [sp, #4]
	ldr r0, [r4, #0x2c]
	adds r0, #0x39
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808C2CE
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
_0808C2CE:
	ldr r0, [sp, #8]
	ldrb r1, [r0]
	lsrs r0, r1, #3
	cmp r0, #5
	bls _0808C2E0
	adds r0, r1, #0
	subs r0, #0x30
	ldr r1, [sp, #8]
	strb r0, [r1]
_0808C2E0:
	ldr r2, [sp, #0xc]
	ldrb r1, [r2]
	lsrs r0, r1, #3
	cmp r0, #5
	bls _0808C2F0
	adds r0, r1, #0
	subs r0, #0x30
	strb r0, [r2]
_0808C2F0:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C300: .4byte gUnk_0868A9E8
_0808C304: .4byte gUnk_0868A9F0
_0808C308: .4byte gUnk_0868A9F8
_0808C30C: .4byte gUnk_0868A988
_0808C310: .4byte 0x000010CE
_0808C314: .4byte gSinLut
_0808C318: .4byte 0x020004A8
_0808C31C: .4byte Sprite_32x16
_0808C320: .4byte Sprite_16x16
_0808C324: .4byte 0x02000468
_0808C328: .4byte 0x00001054

	thumb_func_start sub_808C32C
sub_808C32C: @ 0x0808C32C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808C33C @ =gUnk_0868AAA8
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_0808C33C: .4byte gUnk_0868AAA8

	thumb_func_start sub_808C340
sub_808C340: @ 0x0808C340
	ldr r0, _0808C34C @ =gUnk_0868AAC8
	ldr r0, [r0]
	ldrh r0, [r0, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bx lr
	.align 2, 0
_0808C34C: .4byte gUnk_0868AAC8

	thumb_func_start sub_808C350
sub_808C350: @ 0x0808C350
	push {lr}
	ldr r1, _0808C378 @ =gUnk_0868AAE4
	ldr r0, _0808C37C @ =gUnk_0868AAC8
	ldr r2, [r0]
	movs r3, #0x32
	ldrsh r0, [r2, r3]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	movs r3, #0x2a
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_808CAF0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0
_0808C378: .4byte gUnk_0868AAE4
_0808C37C: .4byte gUnk_0868AAC8

	thumb_func_start sub_808C380
sub_808C380: @ 0x0808C380
	push {lr}
	ldr r0, _0808C38C @ =gUnk_0868AB22
	bl InitBgs
	pop {r0}
	bx r0
	.align 2, 0
_0808C38C: .4byte gUnk_0868AB22

	thumb_func_start sub_808C390
sub_808C390: @ 0x0808C390
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	ldr r4, _0808C410 @ =gBg3Tm
	cmp r5, #0
	bne _0808C3AA
	movs r0, #3
	bl GetBgChrOffset
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r5, r0, r1
_0808C3AA:
	cmp r6, #0
	bge _0808C3B0
	movs r6, #0xe
_0808C3B0:
	ldr r0, _0808C414 @ =gUnk_08336D5C
	adds r1, r5, #0
	bl Decompress
	ldr r0, _0808C418 @ =gUnk_0833BFDC
	lsls r1, r6, #5
	movs r2, #0x40
	bl ApplyPaletteExt
	movs r0, #3
	bl GetBgChrOffset
	subs r0, r5, r0
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x14
	movs r1, #0xf
	ands r1, r6
	lsls r1, r1, #0xc
	adds r1, r0, r1
	movs r2, #0
	ldr r3, _0808C41C @ =0x0000027F
_0808C3DA:
	adds r0, r2, r1
	strh r0, [r4]
	adds r4, #2
	adds r2, #1
	cmp r2, r3
	ble _0808C3DA
	ldr r4, _0808C420 @ =gBg3Tm+0xC0
	ldr r3, _0808C424 @ =gUnk_086773D8
	movs r5, #0x80
	lsls r5, r5, #5
	adds r1, r5, #0
	movs r2, #0xe0
	lsls r2, r2, #1
_0808C3F4:
	ldrh r5, [r4]
	adds r0, r1, r5
	strh r0, [r4]
	adds r4, #2
	subs r2, #1
	cmp r2, #0
	bne _0808C3F4
	adds r0, r3, #0
	adds r1, r7, #0
	bl SpawnProc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C410: .4byte gBg3Tm
_0808C414: .4byte gUnk_08336D5C
_0808C418: .4byte gUnk_0833BFDC
_0808C41C: .4byte 0x0000027F
_0808C420: .4byte gBg3Tm+0xC0
_0808C424: .4byte gUnk_086773D8

	thumb_func_start sub_808C428
sub_808C428: @ 0x0808C428
	push {r4, r5, lr}
	lsls r3, r0, #1
	adds r3, r3, r1
	lsls r3, r3, #5
	ldr r4, _0808C490 @ =gUnk_0868AB3C
	ldr r2, _0808C494 @ =gUnk_0868AAE4
	ldr r1, _0808C498 @ =gUnk_0868AAC8
	ldr r1, [r1]
	movs r5, #0x32
	ldrsh r1, [r1, r5]
	lsls r1, r1, #3
	adds r2, #4
	adds r1, r1, r2
	ldr r1, [r1]
	adds r1, r1, r0
	movs r0, #0x2c
	ldrb r1, [r1]
	muls r0, r1, r0
	adds r0, r0, r4
	adds r0, #0x24
	ldrb r2, [r0]
	movs r1, #0x84
	lsls r1, r1, #7
	adds r1, r2, r1
	ldr r4, _0808C49C @ =gBg2Tm
	adds r0, r3, #2
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r1, [r0]
	adds r0, r3, #3
	lsls r0, r0, #1
	adds r0, r0, r4
	ldr r5, _0808C4A0 @ =0x00004201
	adds r1, r2, r5
	strh r1, [r0]
	adds r0, r3, #0
	adds r0, #0x22
	lsls r0, r0, #1
	adds r0, r0, r4
	adds r5, #0x1f
	adds r1, r2, r5
	strh r1, [r0]
	adds r3, #0x23
	lsls r3, r3, #1
	adds r3, r3, r4
	ldr r0, _0808C4A4 @ =0x00004221
	adds r2, r2, r0
	strh r2, [r3]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808C490: .4byte gUnk_0868AB3C
_0808C494: .4byte gUnk_0868AAE4
_0808C498: .4byte gUnk_0868AAC8
_0808C49C: .4byte gBg2Tm
_0808C4A0: .4byte 0x00004201
_0808C4A4: .4byte 0x00004221

	thumb_func_start sub_808C4A8
sub_808C4A8: @ 0x0808C4A8
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r4, _0808C504 @ =gUnk_0868AAC8
	ldr r0, [r4]
	adds r0, #0xa8
	bl ClearText
	ldr r5, _0808C508 @ =gUnk_0868AB3C
	bl sub_808C350
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	ldr r2, _0808C50C @ =gUnk_0868AAE4
	ldr r3, [r4]
	movs r6, #0x32
	ldrsh r1, [r3, r6]
	lsls r1, r1, #3
	adds r2, #4
	adds r1, r1, r2
	movs r6, #0x2a
	ldrsh r2, [r3, r6]
	ldr r1, [r1]
	adds r1, r1, r2
	movs r2, #0x2c
	ldrb r1, [r1]
	muls r1, r2, r1
	adds r0, r0, r1
	adds r0, r0, r5
	ldrh r0, [r0, #4]
	bl DecodeMsg
	adds r3, r0, #0
	ldr r0, [r4]
	adds r0, #0xa8
	ldr r1, _0808C510 @ =gBg0Tm+0x448
	movs r2, #0x16
	str r2, [sp]
	str r3, [sp, #4]
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808C504: .4byte gUnk_0868AAC8
_0808C508: .4byte gUnk_0868AB3C
_0808C50C: .4byte gUnk_0868AAE4
_0808C510: .4byte gBg0Tm+0x448

	thumb_func_start sub_808C514
sub_808C514: @ 0x0808C514
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	ldr r6, _0808C57C @ =gUnk_0868AAC8
	lsls r4, r4, #3
	adds r4, #0x38
	ldr r0, [r6]
	adds r0, r0, r4
	bl ClearText
	ldr r2, _0808C580 @ =gUnk_0868AB3C
	ldr r1, _0808C584 @ =gUnk_0868AAE4
	ldr r0, [r6]
	movs r3, #0x32
	ldrsh r0, [r0, r3]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	add r0, r8
	movs r1, #0x2c
	ldrb r0, [r0]
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0]
	bl DecodeMsg
	adds r2, r0, #0
	ldr r0, [r6]
	adds r0, r0, r4
	lsls r5, r5, #6
	ldr r1, _0808C588 @ =gBg2Tm+0x8
	adds r5, r5, r1
	movs r1, #9
	str r1, [sp]
	str r2, [sp, #4]
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808C57C: .4byte gUnk_0868AAC8
_0808C580: .4byte gUnk_0868AB3C
_0808C584: .4byte gUnk_0868AAE4
_0808C588: .4byte gBg2Tm+0x8

	thumb_func_start sub_808C58C
sub_808C58C: @ 0x0808C58C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r3, r0, #0
	str r1, [sp]
	str r2, [sp, #4]
	ldr r2, _0808C658 @ =gUnk_0868AAE4
	ldr r0, _0808C65C @ =gUnk_0868AAC8
	ldr r0, [r0]
	movs r4, #0x32
	ldrsh r1, [r0, r4]
	lsls r1, r1, #3
	adds r2, #4
	adds r1, r1, r2
	ldr r1, [r1]
	adds r1, r1, r3
	ldrb r1, [r1]
	mov sb, r1
	ldr r2, _0808C660 @ =gUnk_0868AB3C
	movs r1, #0x2c
	mov r3, sb
	muls r3, r1, r3
	adds r1, r3, #0
	adds r4, r1, r2
	ldrb r1, [r4, #8]
	lsrs r1, r1, #3
	str r1, [sp, #8]
	ldr r2, [sp]
	lsls r1, r2, #3
	adds r5, r1, #0
	adds r5, #0x70
	adds r0, r0, r5
	bl ClearText
	movs r3, #0
	mov r8, r3
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _0808C628
	mov sl, r5
_0808C5E2:
	ldr r0, _0808C65C @ =gUnk_0868AAC8
	ldr r0, [r0]
	mov r1, sl
	adds r7, r0, r1
	ldrb r6, [r4, #8]
	subs r6, #0x78
	mov r2, sb
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bl sub_808CAF0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r5, #1
	cmp r8, r0
	bne _0808C604
	movs r5, #2
_0808C604:
	ldrh r0, [r4, #6]
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl Text_InsertDrawString
	adds r4, #8
	movs r3, #1
	add r8, r3
	mov r0, r8
	cmp r0, #3
	bgt _0808C628
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _0808C5E2
_0808C628:
	ldr r0, _0808C65C @ =gUnk_0868AAC8
	ldr r2, [sp]
	lsls r1, r2, #3
	adds r1, #0x70
	ldr r0, [r0]
	adds r0, r0, r1
	ldr r3, [sp, #4]
	lsls r1, r3, #5
	ldr r4, [sp, #8]
	adds r1, r1, r4
	lsls r1, r1, #1
	ldr r2, _0808C664 @ =gBg2Tm
	adds r1, r1, r2
	bl PutText
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C658: .4byte gUnk_0868AAE4
_0808C65C: .4byte gUnk_0868AAC8
_0808C660: .4byte gUnk_0868AB3C
_0808C664: .4byte gBg2Tm

	thumb_func_start sub_808C668
sub_808C668: @ 0x0808C668
	push {lr}
	movs r0, #1
	movs r1, #0x12
	bl ApplyIconPalette
	movs r0, #0x80
	movs r1, #3
	bl sub_809777C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808C680
sub_808C680: @ 0x0808C680
	push {lr}
	bl sub_808C340
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808C6A2
	bl sub_808C350
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808C6A2
	movs r0, #0xc0
	movs r1, #0x20
	movs r2, #0x12
	bl PutSysAButton
_0808C6A2:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808C6A8
sub_808C6A8: @ 0x0808C6A8
	push {r4, r5, r6, lr}
	ldr r1, _0808C74C @ =gUnk_0868AAE4
	ldr r6, _0808C750 @ =gUnk_0868AAC8
	ldr r2, [r6]
	movs r3, #0x32
	ldrsh r0, [r2, r3]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	movs r3, #0x2a
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r5, [r0]
	ldr r2, _0808C754 @ =gUnk_0868AAFC
	movs r3, #0x83
	lsls r3, r3, #6
	movs r0, #0x22
	movs r1, #8
	bl PutOamHiRam
	ldr r0, [r6]
	movs r1, #0x2a
	ldrsh r4, [r0, r1]
	movs r2, #0x2c
	ldrsh r0, [r0, r2]
	subs r4, r4, r0
	lsls r4, r4, #4
	adds r4, #0x20
	movs r0, #0x10
	adds r1, r4, #0
	bl sub_804163C
	adds r0, r5, #0
	bl sub_808CAF0
	ldr r2, _0808C758 @ =gUnk_0868AB3C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	movs r1, #0x2c
	muls r1, r5, r1
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0, #8]
	subs r0, #2
	adds r1, r4, #0
	bl sub_80415CC
	ldr r1, [r6]
	movs r3, #0x34
	ldrsh r0, [r1, r3]
	cmp r0, #6
	ble _0808C746
	movs r2, #0x2c
	ldrsh r0, [r1, r2]
	cmp r0, #0
	beq _0808C728
	movs r2, #0xc2
	lsls r2, r2, #6
	movs r0, #0x64
	movs r1, #0x1d
	movs r3, #1
	bl sub_80977C0
_0808C728:
	ldr r0, [r6]
	movs r3, #0x2c
	ldrsh r1, [r0, r3]
	movs r2, #0x34
	ldrsh r0, [r0, r2]
	subs r0, #6
	cmp r1, r0
	bge _0808C746
	movs r2, #0xc2
	lsls r2, r2, #6
	movs r0, #0x64
	movs r1, #0x7d
	movs r3, #0
	bl sub_80977C0
_0808C746:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808C74C: .4byte gUnk_0868AAE4
_0808C750: .4byte gUnk_0868AAC8
_0808C754: .4byte gUnk_0868AAFC
_0808C758: .4byte gUnk_0868AB3C

	thumb_func_start sub_808C75C
sub_808C75C: @ 0x0808C75C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	ldr r0, _0808C964 @ =gUnk_0868AAC8
	mov sl, r0
	ldr r0, [r0]
	movs r4, #0
	strh r4, [r0, #0x32]
	bl sub_80846F0
	cmp r0, #0
	beq _0808C784
	mov r2, sl
	ldr r1, [r2]
	ldrh r0, [r1, #0x32]
	adds r0, #1
	strh r0, [r1, #0x32]
_0808C784:
	mov r3, sl
	ldr r1, [r3]
	ldr r2, _0808C968 @ =gUnk_0868AAE4
	movs r3, #0x32
	ldrsh r0, [r1, r3]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r1, #0x34]
	strh r4, [r1, #0x2a]
	strh r4, [r1, #0x2c]
	mov r0, sb
	strh r4, [r0, #0x2e]
	strh r4, [r0, #0x30]
	adds r0, #0x36
	movs r1, #0
	strb r1, [r0]
	bl LoadUiFrameGraphics
	ldr r7, _0808C96C @ =gDispIo
	movs r4, #1
	ldrb r0, [r7, #1]
	orrs r0, r4
	movs r2, #2
	mov r8, r2
	mov r3, r8
	orrs r0, r3
	movs r1, #4
	orrs r0, r1
	movs r6, #8
	orrs r0, r6
	movs r5, #0x10
	orrs r0, r5
	strb r0, [r7, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	mov r3, sb
	ldrh r2, [r3, #0x2e]
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #0x20
	ldrb r1, [r7, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r7, #1]
	adds r0, r7, #0
	adds r0, #0x2d
	movs r2, #0
	strb r2, [r0]
	adds r1, r7, #0
	adds r1, #0x31
	movs r0, #0x20
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x80
	strb r0, [r1]
	adds r1, #4
	ldrb r0, [r1]
	orrs r0, r4
	mov r3, r8
	orrs r0, r3
	movs r2, #4
	orrs r0, r2
	orrs r0, r6
	orrs r0, r5
	strb r0, [r1]
	adds r1, #2
	ldrb r3, [r1]
	orrs r4, r3
	mov r0, r8
	orrs r4, r0
	movs r0, #5
	rsbs r0, r0, #0
	ands r4, r0
	orrs r4, r6
	orrs r4, r5
	strb r4, [r1]
	ldr r0, _0808C970 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r5, _0808C974 @ =gBg1Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r0, _0808C978 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808C97C @ =gBg3Tm
	movs r1, #0
	bl TmFill
	ldr r4, _0808C980 @ =gUnk_0833C03C
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808C984 @ =gUnk_0833B958
	ldr r1, _0808C988 @ =0x06011800
	bl Decompress
	ldr r0, _0808C98C @ =gUnk_0833BB28
	ldr r1, _0808C990 @ =0x06004000
	bl Decompress
	ldr r4, _0808C994 @ =gUnk_0833BB14
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r2, _0808C998 @ =0x06005000
	adds r1, r1, r2
	adds r0, r4, #0
	bl Decompress
	ldr r1, _0808C99C @ =gUnk_0833BE84
	movs r4, #0x80
	lsls r4, r4, #5
	adds r0, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	ldr r3, _0808C9A0 @ =0x00000404
	adds r5, r5, r3
	ldr r1, _0808C9A4 @ =gUnk_0833BF08
	adds r0, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	bl ResetTextFont
	mov r1, sl
	ldr r0, [r1]
	adds r0, #0xa8
	movs r1, #0x16
	bl InitText
	bl sub_808C4A8
	mov r2, sl
	ldr r0, [r2]
	adds r0, #0x68
	movs r1, #9
	bl InitText
	mov r3, sl
	ldr r0, [r3]
	adds r0, #0xa0
	movs r1, #0xe
	bl InitText
	movs r4, #0
	mov r8, sl
	movs r7, #0x70
	movs r6, #0x38
	movs r5, #4
_0808C8FA:
	adds r0, r4, #0
	movs r1, #4
	bl sub_808C428
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r6
	movs r1, #9
	bl InitText
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r7
	movs r1, #0xe
	bl InitText
	adds r0, r4, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_808C514
	adds r0, r4, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_808C58C
	adds r7, #8
	adds r6, #8
	adds r5, #2
	adds r4, #1
	cmp r4, #5
	ble _0808C8FA
	movs r2, #1
	rsbs r2, r2, #0
	mov r0, sb
	movs r1, #0
	bl sub_808C390
	ldr r0, _0808C9A8 @ =gUnk_0868ADC4
	mov r1, sb
	bl SpawnProc
	movs r0, #0xf
	bl EnableBgSync
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C964: .4byte gUnk_0868AAC8
_0808C968: .4byte gUnk_0868AAE4
_0808C96C: .4byte gDispIo
_0808C970: .4byte gBg0Tm
_0808C974: .4byte gBg1Tm
_0808C978: .4byte gBg2Tm
_0808C97C: .4byte gBg3Tm
_0808C980: .4byte gUnk_0833C03C
_0808C984: .4byte gUnk_0833B958
_0808C988: .4byte 0x06011800
_0808C98C: .4byte gUnk_0833BB28
_0808C990: .4byte 0x06004000
_0808C994: .4byte gUnk_0833BB14
_0808C998: .4byte 0x06005000
_0808C99C: .4byte gUnk_0833BE84
_0808C9A0: .4byte 0x00000404
_0808C9A4: .4byte gUnk_0833BF08
_0808C9A8: .4byte gUnk_0868ADC4

	thumb_func_start sub_808C9AC
sub_808C9AC: @ 0x0808C9AC
	push {lr}
	bl sub_808CA14
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808C9C0
	movs r0, #1
	rsbs r0, r0, #0
	bl sub_8041308
_0808C9C0:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808C9C8
sub_808C9C8: @ 0x0808C9C8
	push {lr}
	bl sub_808CA14
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CA0C
	ldr r1, _0808CA00 @ =gUnk_0868AAE4
	ldr r0, _0808CA04 @ =gUnk_0868AAC8
	ldr r2, [r0]
	movs r3, #0x32
	ldrsh r0, [r2, r3]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	movs r3, #0x2a
	ldrsh r1, [r2, r3]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_808CAF0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808CA08
	movs r0, #1
	bl FadeBgmOut
	b _0808CA0C
	.align 2, 0
_0808CA00: .4byte gUnk_0868AAE4
_0808CA04: .4byte gUnk_0868AAC8
_0808CA08:
	bl StartMapSongBgm
_0808CA0C:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808CA14
sub_808CA14: @ 0x0808CA14
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	movs r7, #0
	ldr r0, _0808CA70 @ =gUnk_0868AAC8
	ldr r0, [r0]
	movs r1, #0x2a
	ldrsh r5, [r0, r1]
	ldr r1, _0808CA74 @ =gUnk_0868AAE4
	movs r2, #0x32
	ldrsh r0, [r0, r2]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	adds r0, r0, r5
	ldrb r4, [r0]
	adds r6, r4, #0
	bl sub_808C350
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0808CA78 @ =gKeySt
	ldr r0, [r0]
	ldrh r1, [r0, #6]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	beq _0808CAD8
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0808CA7C
	cmp r3, #0
	beq _0808CAA2
	subs r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	adds r0, r4, #0
	adds r1, r3, #0
	bl sub_808CC18
	movs r7, #1
	b _0808CAA6
	.align 2, 0
_0808CA70: .4byte gUnk_0868AAC8
_0808CA74: .4byte gUnk_0868AAE4
_0808CA78: .4byte gKeySt
_0808CA7C:
	ldr r2, _0808CAE4 @ =gUnk_0868AB3C
	adds r4, r3, #1
	lsls r0, r4, #3
	movs r1, #0x2c
	muls r1, r6, r1
	adds r0, r0, r1
	adds r0, r0, r2
	ldrh r0, [r0, #6]
	cmp r0, #0
	beq _0808CAA2
	cmp r3, #2
	bhi _0808CAA2
	lsls r0, r4, #0x18
	lsrs r3, r0, #0x18
	adds r0, r6, #0
	adds r1, r3, #0
	bl sub_808CC18
	movs r7, #1
_0808CAA2:
	cmp r7, #0
	beq _0808CAD8
_0808CAA6:
	ldr r0, _0808CAE8 @ =gUnk_0868ADA4
	mov r1, r8
	bl SpawnProc
	adds r0, r5, #0
	movs r1, #7
	bl __modsi3
	adds r1, r0, #0
	lsls r2, r5, #1
	adds r2, #4
	adds r0, r5, #0
	bl sub_808C58C
	movs r0, #5
	bl EnableBgSync
	ldr r0, _0808CAEC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808CAD8
	movs r0, #0x67
	bl m4aSongNumStart
_0808CAD8:
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808CAE4: .4byte gUnk_0868AB3C
_0808CAE8: .4byte gUnk_0868ADA4
_0808CAEC: .4byte gPlaySt

	thumb_func_start sub_808CAF0
sub_808CAF0: @ 0x0808CAF0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0
	cmp r0, #0xd
	bls _0808CAFC
	b _0808CC10
_0808CAFC:
	lsls r0, r0, #2
	ldr r1, _0808CB08 @ =_0808CB0C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CB08: .4byte _0808CB0C
_0808CB0C: @ jump table
	.4byte _0808CB44 @ case 0
	.4byte _0808CB7A @ case 1
	.4byte _0808CB88 @ case 2
	.4byte _0808CB94 @ case 3
	.4byte _0808CBA0 @ case 4
	.4byte _0808CBB0 @ case 5
	.4byte _0808CBBC @ case 6
	.4byte _0808CBC8 @ case 7
	.4byte _0808CBD4 @ case 8
	.4byte _0808CC10 @ case 9
	.4byte _0808CBE0 @ case 10
	.4byte _0808CBF0 @ case 11
	.4byte _0808CBFC @ case 12
	.4byte _0808CC08 @ case 13
_0808CB44:
	ldr r0, _0808CB5C @ =gPlaySt
	ldrb r0, [r0, #0x1e]
	lsls r0, r0, #0x1e
	lsrs r0, r0, #0x1e
	cmp r0, #1
	beq _0808CB72
	cmp r0, #1
	bgt _0808CB60
	cmp r0, #0
	beq _0808CB6A
	b _0808CB7A
	.align 2, 0
_0808CB5C: .4byte gPlaySt
_0808CB60:
	cmp r0, #2
	beq _0808CB76
	cmp r0, #3
	beq _0808CB6E
	b _0808CB7A
_0808CB6A:
	movs r0, #0
	b _0808CC12
_0808CB6E:
	movs r0, #1
	b _0808CC12
_0808CB72:
	movs r0, #2
	b _0808CC12
_0808CB76:
	movs r0, #3
	b _0808CC12
_0808CB7A:
	ldr r0, _0808CB84 @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	lsls r0, r0, #0x1e
	b _0808CC0E
	.align 2, 0
_0808CB84: .4byte gPlaySt
_0808CB88:
	ldr r0, _0808CB90 @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	b _0808CBE4
	.align 2, 0
_0808CB90: .4byte gPlaySt
_0808CB94:
	ldr r0, _0808CB9C @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	lsls r0, r0, #0x1b
	b _0808CC0E
	.align 2, 0
_0808CB9C: .4byte gPlaySt
_0808CBA0:
	ldr r0, _0808CBAC @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	lsls r0, r0, #0x19
	lsrs r2, r0, #0x1e
	b _0808CC10
	.align 2, 0
_0808CBAC: .4byte gPlaySt
_0808CBB0:
	ldr r0, _0808CBB8 @ =gPlaySt
	ldrb r0, [r0, #0x1c]
	lsrs r2, r0, #7
	b _0808CC10
	.align 2, 0
_0808CBB8: .4byte gPlaySt
_0808CBBC:
	ldr r0, _0808CBC4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	b _0808CC0C
	.align 2, 0
_0808CBC4: .4byte gPlaySt
_0808CBC8:
	ldr r0, _0808CBD0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	b _0808CC0E
	.align 2, 0
_0808CBD0: .4byte gPlaySt
_0808CBD4:
	ldr r0, _0808CBDC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	b _0808CBE4
	.align 2, 0
_0808CBDC: .4byte gPlaySt
_0808CBE0:
	ldr r0, _0808CBEC @ =gPlaySt
	ldrb r0, [r0, #0x1e]
_0808CBE4:
	lsls r0, r0, #0x1c
	lsrs r2, r0, #0x1e
	b _0808CC10
	.align 2, 0
_0808CBEC: .4byte gPlaySt
_0808CBF0:
	ldr r0, _0808CBF8 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsrs r2, r0, #7
	b _0808CC10
	.align 2, 0
_0808CBF8: .4byte gPlaySt
_0808CBFC:
	ldr r0, _0808CC04 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x19
	b _0808CC0E
	.align 2, 0
_0808CC04: .4byte gPlaySt
_0808CC08:
	ldr r0, _0808CC14 @ =gPlaySt
	ldrb r0, [r0, #0x1c]
_0808CC0C:
	lsls r0, r0, #0x1f
_0808CC0E:
	lsrs r2, r0, #0x1f
_0808CC10:
	adds r0, r2, #0
_0808CC12:
	bx lr
	.align 2, 0
_0808CC14: .4byte gPlaySt

	thumb_func_start sub_808CC18
sub_808CC18: @ 0x0808CC18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	cmp r0, #0xd
	bls _0808CC26
	b _0808CDC4
_0808CC26:
	lsls r0, r0, #2
	ldr r1, _0808CC30 @ =_0808CC34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CC30: .4byte _0808CC34
_0808CC34: @ jump table
	.4byte _0808CC6C @ case 0
	.4byte _0808CCD4 @ case 1
	.4byte _0808CCE8 @ case 2
	.4byte _0808CCFC @ case 3
	.4byte _0808CD10 @ case 4
	.4byte _0808CD24 @ case 5
	.4byte _0808CD30 @ case 6
	.4byte _0808CD44 @ case 7
	.4byte _0808CD58 @ case 8
	.4byte _0808CDC4 @ case 9
	.4byte _0808CD6C @ case 10
	.4byte _0808CD88 @ case 11
	.4byte _0808CD94 @ case 12
	.4byte _0808CDB0 @ case 13
_0808CC6C:
	cmp r3, #1
	beq _0808CC98
	cmp r3, #1
	bgt _0808CC7A
	cmp r3, #0
	beq _0808CC84
	b _0808CCD4
_0808CC7A:
	cmp r3, #2
	beq _0808CCA8
	cmp r3, #3
	beq _0808CCBC
	b _0808CCD4
_0808CC84:
	ldr r1, _0808CC94 @ =gPlaySt
	movs r0, #4
	rsbs r0, r0, #0
	ldrb r2, [r1, #0x1e]
	ands r0, r2
	strb r0, [r1, #0x1e]
	b _0808CDC4
	.align 2, 0
_0808CC94: .4byte gPlaySt
_0808CC98:
	ldr r1, _0808CCA4 @ =gPlaySt
	movs r0, #3
	ldrb r3, [r1, #0x1e]
	orrs r0, r3
	strb r0, [r1, #0x1e]
	b _0808CDC4
	.align 2, 0
_0808CCA4: .4byte gPlaySt
_0808CCA8:
	ldr r0, _0808CCB8 @ =gPlaySt
	movs r1, #4
	rsbs r1, r1, #0
	ldrb r2, [r0, #0x1e]
	ands r1, r2
	movs r2, #1
	b _0808CCC8
	.align 2, 0
_0808CCB8: .4byte gPlaySt
_0808CCBC:
	ldr r0, _0808CCD0 @ =gPlaySt
	movs r1, #4
	rsbs r1, r1, #0
	ldrb r3, [r0, #0x1e]
	ands r1, r3
	movs r2, #2
_0808CCC8:
	orrs r1, r2
	strb r1, [r0, #0x1e]
	b _0808CDC4
	.align 2, 0
_0808CCD0: .4byte gPlaySt
_0808CCD4:
	ldr r2, _0808CCE4 @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #1
	movs r0, #3
	rsbs r0, r0, #0
	b _0808CDBC
	.align 2, 0
_0808CCE4: .4byte gPlaySt
_0808CCE8:
	ldr r2, _0808CCF8 @ =gPlaySt
	movs r0, #3
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0808CDBC
	.align 2, 0
_0808CCF8: .4byte gPlaySt
_0808CCFC:
	ldr r2, _0808CD0C @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #4
	movs r0, #0x11
	rsbs r0, r0, #0
	b _0808CDBC
	.align 2, 0
_0808CD0C: .4byte gPlaySt
_0808CD10:
	ldr r2, _0808CD20 @ =gPlaySt
	movs r0, #3
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #5
	movs r0, #0x61
	rsbs r0, r0, #0
	b _0808CDBC
	.align 2, 0
_0808CD20: .4byte gPlaySt
_0808CD24:
	ldr r2, _0808CD2C @ =gPlaySt
	lsls r1, r3, #7
	movs r0, #0x7f
	b _0808CDBC
	.align 2, 0
_0808CD2C: .4byte gPlaySt
_0808CD30:
	ldr r2, _0808CD40 @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	movs r0, #2
	rsbs r0, r0, #0
	b _0808CDA2
	.align 2, 0
_0808CD40: .4byte gPlaySt
_0808CD44:
	ldr r2, _0808CD54 @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #1
	movs r0, #3
	rsbs r0, r0, #0
	b _0808CDA2
	.align 2, 0
_0808CD54: .4byte gPlaySt
_0808CD58:
	ldr r2, _0808CD68 @ =gPlaySt
	movs r0, #3
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0xd
	rsbs r0, r0, #0
	b _0808CDA2
	.align 2, 0
_0808CD68: .4byte gPlaySt
_0808CD6C:
	ldr r2, _0808CD84 @ =gPlaySt
	movs r0, #3
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #2
	movs r0, #0xd
	rsbs r0, r0, #0
	ldrb r3, [r2, #0x1e]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #0x1e]
	b _0808CDC4
	.align 2, 0
_0808CD84: .4byte gPlaySt
_0808CD88:
	ldr r2, _0808CD90 @ =gPlaySt
	lsls r1, r3, #7
	movs r0, #0x7f
	b _0808CDA2
	.align 2, 0
_0808CD90: .4byte gPlaySt
_0808CD94:
	ldr r2, _0808CDAC @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	lsls r1, r1, #6
	movs r0, #0x41
	rsbs r0, r0, #0
_0808CDA2:
	ldrb r3, [r2, #0x1d]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #0x1d]
	b _0808CDC4
	.align 2, 0
_0808CDAC: .4byte gPlaySt
_0808CDB0:
	ldr r2, _0808CDC8 @ =gPlaySt
	movs r0, #1
	adds r1, r3, #0
	ands r1, r0
	movs r0, #2
	rsbs r0, r0, #0
_0808CDBC:
	ldrb r3, [r2, #0x1c]
	ands r0, r3
	orrs r0, r1
	strb r0, [r2, #0x1c]
_0808CDC4:
	bx lr
	.align 2, 0
_0808CDC8: .4byte gPlaySt

	thumb_func_start sub_808CDCC
sub_808CDCC: @ 0x0808CDCC
	push {r4, r5, r6, r7, lr}
	adds r5, r1, #0
	adds r7, r2, #0
	lsls r0, r5, #1
	adds r6, r0, #4
	lsls r0, r6, #5
	ldr r2, _0808CE44 @ =gBg2Tm
	movs r4, #0
	adds r1, r0, #0
	adds r1, #0x22
	adds r0, #2
	movs r3, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r2
	lsls r1, r1, #1
	adds r1, r1, r2
_0808CDEC:
	strh r4, [r0]
	strh r4, [r1]
	adds r1, #2
	adds r0, #2
	subs r3, #1
	cmp r3, #0
	bge _0808CDEC
	adds r0, r5, #0
	movs r1, #7
	bl __modsi3
	adds r4, r0, #0
	adds r0, r5, #0
	movs r1, #4
	bl sub_808C428
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_808C514
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_808C58C
	ldr r1, _0808CE48 @ =gBg0Tm
	movs r2, #0
	adds r0, r7, #0
	adds r0, #0x62
	movs r3, #0x1a
	lsls r0, r0, #1
	adds r0, r0, r1
_0808CE2E:
	strh r2, [r0]
	adds r0, #2
	subs r3, #1
	cmp r3, #0
	bge _0808CE2E
	movs r0, #5
	bl EnableBgSync
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808CE44: .4byte gBg2Tm
_0808CE48: .4byte gBg0Tm

	thumb_func_start sub_808CE4C
sub_808CE4C: @ 0x0808CE4C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	movs r3, #0
	movs r1, #0x30
	ldrsh r0, [r4, r1]
	cmp r0, #6
	bls _0808CE5C
	b _0808D06C
_0808CE5C:
	lsls r0, r0, #2
	ldr r1, _0808CE68 @ =_0808CE6C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808CE68: .4byte _0808CE6C
_0808CE6C: @ jump table
	.4byte _0808CE88 @ case 0
	.4byte _0808D048 @ case 1
	.4byte _0808D048 @ case 2
	.4byte _0808D048 @ case 3
	.4byte _0808D058 @ case 4
	.4byte _0808D058 @ case 5
	.4byte _0808D058 @ case 6
_0808CE88:
	ldr r0, _0808CEA8 @ =gKeySt
	ldr r2, [r0]
	ldrh r1, [r2, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808CEB0
	ldr r0, _0808CEAC @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808CF02
	movs r0, #0x6b
	bl m4aSongNumStart
	b _0808CF02
	.align 2, 0
_0808CEA8: .4byte gKeySt
_0808CEAC: .4byte gPlaySt
_0808CEB0:
	movs r5, #1
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0808CF18
	ldr r1, _0808CF0C @ =gUnk_0868AAE4
	ldr r0, _0808CF10 @ =gUnk_0868AAC8
	ldr r2, [r0]
	movs r3, #0x32
	ldrsh r0, [r2, r3]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	movs r5, #0x2a
	ldrsh r1, [r2, r5]
	ldr r0, [r0]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	beq _0808CEDA
	b _0808D06C
_0808CEDA:
	movs r0, #0
	bl sub_808CAF0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	beq _0808CEEA
	b _0808D06C
_0808CEEA:
	ldr r0, _0808CF14 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808CEFA
	movs r0, #0x6a
	bl m4aSongNumStart
_0808CEFA:
	adds r1, r4, #0
	adds r1, #0x36
	movs r0, #1
	strb r0, [r1]
_0808CF02:
	adds r0, r4, #0
	bl Proc_Break
	b _0808D06C
	.align 2, 0
_0808CF0C: .4byte gUnk_0868AAE4
_0808CF10: .4byte gUnk_0868AAC8
_0808CF14: .4byte gPlaySt
_0808CF18:
	ldrh r1, [r2, #6]
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _0808CFF8
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808CF78
	ldr r0, _0808CF74 @ =gUnk_0868AAC8
	ldr r2, [r0]
	ldrh r1, [r2, #0x2a]
	movs r6, #0x2a
	ldrsh r0, [r2, r6]
	cmp r0, #0
	beq _0808CFC6
	subs r0, r1, #1
	strh r0, [r2, #0x2a]
	movs r1, #0x2a
	ldrsh r0, [r2, r1]
	movs r3, #0x2c
	ldrsh r1, [r2, r3]
	subs r0, r0, r1
	cmp r0, #0
	bgt _0808CF6E
	ldrh r1, [r2, #0x2c]
	movs r6, #0x2c
	ldrsh r0, [r2, r6]
	cmp r0, #0
	beq _0808CF6E
	subs r0, r1, #1
	strh r0, [r2, #0x2c]
	movs r0, #0x2a
	ldrsh r1, [r2, r0]
	subs r1, #1
	adds r0, r4, #0
	movs r2, #0
	bl sub_808CDCC
	ldrh r0, [r4, #0x2e]
	subs r0, #4
	strh r0, [r4, #0x2e]
	strh r5, [r4, #0x30]
_0808CF6E:
	movs r3, #1
	b _0808CFCA
	.align 2, 0
_0808CF74: .4byte gUnk_0868AAC8
_0808CF78:
	ldr r0, _0808CFEC @ =gUnk_0868AAC8
	ldr r2, [r0]
	movs r5, #0x2a
	ldrsh r1, [r2, r5]
	movs r6, #0x34
	ldrsh r0, [r2, r6]
	subs r0, #1
	cmp r1, r0
	bge _0808CFC6
	ldrh r0, [r2, #0x2a]
	adds r0, #1
	strh r0, [r2, #0x2a]
	movs r0, #0x2a
	ldrsh r1, [r2, r0]
	movs r3, #0x2c
	ldrsh r0, [r2, r3]
	subs r0, r1, r0
	cmp r0, #4
	ble _0808CFC4
	movs r5, #0x34
	ldrsh r0, [r2, r5]
	subs r0, #1
	cmp r1, r0
	bge _0808CFC4
	ldrh r0, [r2, #0x2c]
	adds r0, #1
	strh r0, [r2, #0x2c]
	adds r1, #1
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r0, r4, #0
	bl sub_808CDCC
	ldrh r0, [r4, #0x2e]
	adds r0, #4
	strh r0, [r4, #0x2e]
	movs r0, #4
	strh r0, [r4, #0x30]
_0808CFC4:
	movs r3, #1
_0808CFC6:
	cmp r3, #0
	beq _0808CFF8
_0808CFCA:
	ldr r0, _0808CFF0 @ =gUnk_0868ADA4
	adds r1, r4, #0
	bl SpawnProc
	movs r0, #5
	bl EnableBgSync
	ldr r0, _0808CFF4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808D06C
	movs r0, #0x66
	bl m4aSongNumStart
	b _0808D06C
	.align 2, 0
_0808CFEC: .4byte gUnk_0868AAC8
_0808CFF0: .4byte gUnk_0868ADA4
_0808CFF4: .4byte gPlaySt
_0808CFF8:
	ldr r0, _0808D038 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0x30
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0808D06C
	ldr r3, _0808D03C @ =gUnk_0868AB3C
	ldr r1, _0808D040 @ =gUnk_0868AAE4
	ldr r0, _0808D044 @ =gUnk_0868AAC8
	ldr r2, [r0]
	movs r5, #0x32
	ldrsh r0, [r2, r5]
	lsls r0, r0, #3
	adds r1, #4
	adds r0, r0, r1
	movs r6, #0x2a
	ldrsh r1, [r2, r6]
	ldr r0, [r0]
	adds r0, r0, r1
	movs r1, #0x2c
	ldrb r0, [r0]
	muls r0, r1, r0
	adds r3, #0x28
	adds r0, r0, r3
	ldr r1, [r0]
	cmp r1, #0
	beq _0808D06C
	adds r0, r4, #0
	bl _call_via_r1
	b _0808D06C
	.align 2, 0
_0808D038: .4byte gKeySt
_0808D03C: .4byte gUnk_0868AB3C
_0808D040: .4byte gUnk_0868AAE4
_0808D044: .4byte gUnk_0868AAC8
_0808D048:
	ldrh r0, [r4, #0x2e]
	subs r0, #4
	strh r0, [r4, #0x2e]
	ldrh r0, [r4, #0x30]
	cmp r0, #3
	bne _0808D068
	movs r0, #0
	b _0808D06A
_0808D058:
	ldrh r0, [r4, #0x2e]
	adds r0, #4
	strh r0, [r4, #0x2e]
	ldrh r0, [r4, #0x30]
	cmp r0, #6
	bne _0808D068
	movs r0, #0
	b _0808D06A
_0808D068:
	adds r0, #1
_0808D06A:
	strh r0, [r4, #0x30]
_0808D06C:
	ldrh r2, [r4, #0x2e]
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_808D07C
sub_808D07C: @ 0x0808D07C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_806EABC
	ldr r0, _0808D0A0 @ =gUnk_0868ADC4
	bl Proc_EndEach
	ldr r0, _0808D0A4 @ =gUnk_0868ADA4
	bl Proc_EndEach
	adds r0, r4, #0
	adds r0, #0x36
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808D0A8
	movs r0, #1
	b _0808D0B8
	.align 2, 0
_0808D0A0: .4byte gUnk_0868ADC4
_0808D0A4: .4byte gUnk_0868ADA4
_0808D0A8:
	adds r0, r4, #0
	bl sub_80762B4
	adds r0, r4, #0
	movs r1, #0
	bl Proc_Goto
	movs r0, #0
_0808D0B8:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808D0C0
sub_808D0C0: @ 0x0808D0C0
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808D0F0 @ =gBg0Tm+0x58
	movs r1, #6
	movs r2, #0xe
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _0808D0F4 @ =gBg1Tm+0x16
	movs r1, #8
	movs r2, #0x10
	movs r3, #0
	bl TmFillRect_t
	adds r0, r4, #0
	bl sub_80419CC
	movs r0, #3
	bl EnableBgSync
	movs r0, #1
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808D0F0: .4byte gBg0Tm+0x58
_0808D0F4: .4byte gBg1Tm+0x16

	thumb_func_start sub_808D0F8
sub_808D0F8: @ 0x0808D0F8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r0, _0808D148 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0xc
	ble _0808D15E
	movs r2, #0
	ldr r7, _0808D14C @ =gUnk_0868AF74
_0808D10C:
	ldrb r0, [r7, #1]
	str r2, [sp]
	bl GetUnitByPid
	ldr r2, [sp]
	cmp r0, #0
	beq _0808D156
	movs r4, #1
	adds r6, r7, #0
	movs r1, #1
	adds r0, r2, #0
	eors r0, r1
	lsls r5, r0, #0x18
_0808D126:
	adds r0, r4, #0
	str r2, [sp]
	bl GetUnit
	ldr r2, [sp]
	cmp r0, #0
	beq _0808D150
	ldr r0, [r0]
	cmp r0, #0
	beq _0808D150
	ldrb r0, [r0, #4]
	ldrb r1, [r6, #1]
	cmp r0, r1
	bne _0808D150
	lsrs r0, r5, #0x18
	b _0808D160
	.align 2, 0
_0808D148: .4byte gPlaySt
_0808D14C: .4byte gUnk_0868AF74
_0808D150:
	adds r4, #1
	cmp r4, #0x3f
	ble _0808D126
_0808D156:
	adds r7, #0x10
	adds r2, #1
	cmp r2, #1
	ble _0808D10C
_0808D15E:
	movs r0, #0xff
_0808D160:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_808D168
sub_808D168: @ 0x0808D168
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	bl SetInitTalkTextFont
	bl ClearTalkText
	bl EndTalk
	adds r0, r4, #0
	bl DecodeMsg
	adds r2, r0, #0
	movs r0, #0xa
	movs r1, #0xe
	adds r3, r5, #0
	bl StartTalkExt
	movs r0, #1
	bl SetTalkPrintColor
	movs r0, #1
	bl SetTalkFlag
	movs r0, #2
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkFlag
	movs r0, #3
	bl SetTalkPrintDelay
	movs r0, #1
	bl SetActiveTalkFace
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808D1B8
sub_808D1B8: @ 0x0808D1B8
	push {r4, lr}
	adds r4, r0, #0
	bl SetInitTalkTextFont
	bl ClearTalkText
	bl EndTalk
	adds r0, r4, #0
	bl DecodeMsg
	adds r2, r0, #0
	movs r0, #0xa
	movs r1, #0xe
	bl StartTalk
	movs r0, #1
	bl SetTalkPrintColor
	movs r0, #1
	bl SetTalkFlag
	movs r0, #2
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkFlag
	movs r0, #3
	bl SetTalkPrintDelay
	movs r0, #1
	bl SetActiveTalkFace
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808D204
sub_808D204: @ 0x0808D204
	push {lr}
	ldr r0, _0808D210 @ =gUnk_0868AFBE
	bl InitBgs
	pop {r0}
	bx r0
	.align 2, 0
_0808D210: .4byte gUnk_0868AFBE

	thumb_func_start sub_808D214
sub_808D214: @ 0x0808D214
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sl, r0
	ldr r5, _0808D2FC @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r5, #0
	adds r1, #0x44
	movs r3, #0
	movs r7, #0x10
	mov sb, r7
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #1
	movs r2, #1
	movs r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x46
	strb r3, [r0]
	ldr r0, _0808D300 @ =0x0000FFE0
	ldrh r1, [r5, #0x3c]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	ldr r1, _0808D304 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #4
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r5, #0x3c]
	movs r7, #0x20
	mov r8, r7
	mov r0, r8
	ldrb r1, [r5, #1]
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r5, #1]
	adds r1, r5, #0
	adds r1, #0x2d
	movs r0, #0x40
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x68
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x98
	strb r0, [r1]
	adds r6, r5, #0
	adds r6, #0x34
	ldrb r0, [r6]
	orrs r0, r2
	movs r4, #2
	orrs r0, r4
	movs r3, #4
	orrs r0, r3
	movs r1, #8
	orrs r0, r1
	mov r7, sb
	orrs r0, r7
	adds r5, #0x36
	ldrb r7, [r5]
	orrs r2, r7
	orrs r2, r4
	orrs r2, r3
	orrs r2, r1
	mov r1, sb
	orrs r2, r1
	mov r3, r8
	orrs r0, r3
	strb r0, [r6]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r2, r0
	strb r2, [r5]
	movs r0, #9
	movs r1, #0xd
	movs r2, #0x14
	movs r3, #6
	bl PutTalkBubbleTm
	movs r0, #8
	movs r1, #0x10
	movs r2, #2
	bl PutTalkBubbleTail
	movs r0, #2
	bl EnableBgSync
	mov r0, sl
	bl sub_808D954
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808D2FC: .4byte gDispIo
_0808D300: .4byte 0x0000FFE0
_0808D304: .4byte 0x0000E0FF

	thumb_func_start sub_808D308
sub_808D308: @ 0x0808D308
	push {lr}
	ldr r1, _0808D334 @ =gUnk_0868AF58
	ldr r0, _0808D338 @ =0x020169CC
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r2, [r0]
	lsls r1, r2, #3
	subs r1, #2
	ldrb r0, [r0, #1]
	lsls r2, r0, #3
	ldr r0, _0808D33C @ =0x020169DC
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _0808D340
	cmp r0, #2
	beq _0808D34A
	b _0808D352
	.align 2, 0
_0808D334: .4byte gUnk_0868AF58
_0808D338: .4byte 0x020169CC
_0808D33C: .4byte 0x020169DC
_0808D340:
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_80415CC
	b _0808D352
_0808D34A:
	adds r0, r1, #0
	adds r1, r2, #0
	bl sub_804163C
_0808D352:
	ldr r2, _0808D364 @ =gUnk_0868AFA4
	movs r3, #0x82
	lsls r3, r3, #6
	movs r0, #0x20
	movs r1, #8
	bl PutOamHiRam
	pop {r0}
	bx r0
	.align 2, 0
_0808D364: .4byte gUnk_0868AFA4

	thumb_func_start sub_808D368
sub_808D368: @ 0x0808D368
	ldr r1, _0808D370 @ =0x020169DC
	movs r0, #1
	strb r0, [r1]
	bx lr
	.align 2, 0
_0808D370: .4byte 0x020169DC

	thumb_func_start sub_808D374
sub_808D374: @ 0x0808D374
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r0, _0808D544 @ =0x020169CE
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0808D548 @ =0x020169DC
	strb r1, [r0]
	bl sub_808D0F8
	ldr r1, _0808D54C @ =0x020169DB
	strb r0, [r1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0808D396
	movs r0, #2
	strb r0, [r1]
_0808D396:
	bl ResetText
	bl LoadUiFrameGraphics
	ldr r2, _0808D550 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _0808D554 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r5, _0808D558 @ =gBg1Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r6, _0808D55C @ =gBg3Tm
	adds r0, r6, #0
	movs r1, #0
	bl TmFill
	ldr r4, _0808D560 @ =gUnk_0833C01C
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	adds r4, #0x20
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808D564 @ =gUnk_0833C09C
	ldr r1, _0808D568 @ =0x06011000
	bl Decompress
	ldr r4, _0808D56C @ =gUnk_08336D5C
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0808D570 @ =0x06003000
	bl sub_80412B0
	bl LoadUiFrameGraphics
	ldr r1, _0808D574 @ =gUnk_0833C1D8
	movs r4, #0x8c
	lsls r4, r4, #5
	adds r0, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	adds r5, #0x56
	ldr r1, _0808D578 @ =gUnk_0833C234
	adds r0, r5, #0
	adds r2, r4, #0
	bl TmApplyTsa_t
	movs r1, #0x80
	lsls r1, r1, #7
	adds r0, r6, #0
	bl sub_8090854
	bl ResetTextFont
	movs r6, #0
_0808D460:
	lsls r5, r6, #3
	ldr r0, _0808D57C @ =0x020169E0
	adds r5, r5, r0
	adds r0, r5, #0
	movs r1, #6
	bl InitText
	adds r0, r5, #0
	bl ClearText
	ldr r0, _0808D580 @ =gUnk_0868AEB4
	lsls r4, r6, #2
	adds r0, r4, r0
	ldr r0, [r0]
	bl DecodeMsg
	ldr r1, _0808D584 @ =gUnk_0868AF58
	adds r4, r4, r1
	ldrb r2, [r4, #1]
	lsls r1, r2, #5
	ldrb r4, [r4]
	adds r1, r4, r1
	lsls r1, r1, #1
	ldr r2, _0808D554 @ =gBg0Tm
	adds r1, r1, r2
	movs r2, #6
	str r2, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	adds r6, #1
	cmp r6, #6
	ble _0808D460
	ldr r1, _0808D588 @ =0x020169CC
	movs r0, #0
	strh r0, [r1]
	movs r0, #0
	movs r1, #0
	bl sub_808D6D4
	movs r0, #0x80
	lsls r0, r0, #2
	movs r1, #2
	movs r2, #1
	bl InitTalk
	ldr r1, _0808D58C @ =gUnk_0868AF74
	ldr r0, _0808D54C @ =0x020169DB
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	movs r2, #0x50
	movs r3, #3
	bl StartTalkFace
	ldr r0, _0808D590 @ =gUnk_0868AFD8
	movs r1, #3
	bl SpawnProc
	movs r0, #0xb
	bl EnableBgSync
	bl sub_808F33C
	ldr r5, _0808D594 @ =0x02016A2E
	ldr r4, _0808D598 @ =0x020169D4
	strb r0, [r4, #1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5]
	bl sub_808F490
	strb r0, [r4, #2]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #2]
	bl sub_808F524
	strb r0, [r4, #3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #4]
	bl sub_808F5AC
	strb r0, [r4, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #6]
	bl sub_808F600
	strb r0, [r4, #5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #8]
	bl sub_808F68C
	strb r0, [r4, #6]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #0xa]
	bl sub_808F6E0
	strb r0, [r4]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808D544: .4byte 0x020169CE
_0808D548: .4byte 0x020169DC
_0808D54C: .4byte 0x020169DB
_0808D550: .4byte gDispIo
_0808D554: .4byte gBg0Tm
_0808D558: .4byte gBg1Tm
_0808D55C: .4byte gBg3Tm
_0808D560: .4byte gUnk_0833C01C
_0808D564: .4byte gUnk_0833C09C
_0808D568: .4byte 0x06011000
_0808D56C: .4byte gUnk_08336D5C
_0808D570: .4byte 0x06003000
_0808D574: .4byte gUnk_0833C1D8
_0808D578: .4byte gUnk_0833C234
_0808D57C: .4byte 0x020169E0
_0808D580: .4byte gUnk_0868AEB4
_0808D584: .4byte gUnk_0868AF58
_0808D588: .4byte 0x020169CC
_0808D58C: .4byte gUnk_0868AF74
_0808D590: .4byte gUnk_0868AFD8
_0808D594: .4byte 0x02016A2E
_0808D598: .4byte 0x020169D4

	thumb_func_start sub_808D59C
sub_808D59C: @ 0x0808D59C
	push {r4, lr}
	adds r4, r0, #0
	ldr r3, _0808D5B0 @ =0x020169CE
	ldrh r1, [r3]
	cmp r1, #0
	beq _0808D5B4
	cmp r1, #1
	beq _0808D5D0
	b _0808D62A
	.align 2, 0
_0808D5B0: .4byte 0x020169CE
_0808D5B4:
	ldr r0, _0808D5C8 @ =0x020169D0
	strh r1, [r0]
	ldr r1, _0808D5CC @ =0x020169D2
	movs r0, #0x10
	strh r0, [r1]
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
	b _0808D62A
	.align 2, 0
_0808D5C8: .4byte 0x020169D0
_0808D5CC: .4byte 0x020169D2
_0808D5D0:
	ldr r2, _0808D614 @ =0x020169D2
	ldrh r0, [r2]
	lsrs r1, r0, #2
	cmp r1, #0
	bne _0808D5DC
	movs r1, #1
_0808D5DC:
	cmp r0, #1
	bls _0808D620
	ldr r0, _0808D618 @ =0x020169D0
	ldrh r4, [r0]
	adds r3, r4, r1
	strh r3, [r0]
	ldrh r0, [r2]
	subs r4, r0, r1
	strh r4, [r2]
	ldr r1, _0808D61C @ =gDispIo
	mov ip, r1
	mov r2, ip
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x44
	movs r1, #0
	strb r3, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r1, [r0]
	b _0808D62A
	.align 2, 0
_0808D614: .4byte 0x020169D2
_0808D618: .4byte 0x020169D0
_0808D61C: .4byte gDispIo
_0808D620:
	movs r0, #0
	strh r0, [r3]
	adds r0, r4, #0
	bl Proc_Break
_0808D62A:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_808D630
sub_808D630: @ 0x0808D630
	push {r4, r5, lr}
	ldr r5, _0808D640 @ =0x020169CE
	ldrh r1, [r5]
	cmp r1, #0
	beq _0808D644
	cmp r1, #1
	beq _0808D678
	b _0808D6CE
	.align 2, 0
_0808D640: .4byte 0x020169CE
_0808D644:
	bl IsTalkActive
	lsls r0, r0, #0x18
	asrs r4, r0, #0x18
	cmp r4, #0
	bne _0808D6CE
	bl ClearTalkText
	bl EndTalk
	movs r0, #1
	bl EnableBgSync
	ldr r1, _0808D670 @ =0x020169D0
	movs r0, #0x10
	strh r0, [r1]
	ldr r0, _0808D674 @ =0x020169D2
	strh r4, [r0]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0808D6CE
	.align 2, 0
_0808D670: .4byte 0x020169D0
_0808D674: .4byte 0x020169D2
_0808D678:
	ldr r3, _0808D6BC @ =0x020169D0
	ldrh r4, [r3]
	lsrs r1, r4, #2
	cmp r1, #0
	bne _0808D684
	movs r1, #1
_0808D684:
	adds r2, r4, #0
	cmp r2, #0
	beq _0808D6C8
	subs r4, r4, r1
	strh r4, [r3]
	ldr r0, _0808D6C0 @ =0x020169D2
	ldrh r2, [r0]
	adds r3, r2, r1
	strh r3, [r0]
	ldr r0, _0808D6C4 @ =gDispIo
	mov ip, r0
	mov r2, ip
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x44
	movs r1, #0
	strb r4, [r0]
	adds r0, #1
	strb r3, [r0]
	adds r0, #1
	strb r1, [r0]
	b _0808D6CE
	.align 2, 0
_0808D6BC: .4byte 0x020169D0
_0808D6C0: .4byte 0x020169D2
_0808D6C4: .4byte gDispIo
_0808D6C8:
	strh r2, [r5]
	bl Proc_Break
_0808D6CE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_808D6D4
sub_808D6D4: @ 0x0808D6D4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	adds r6, r5, #0
	ldr r2, _0808D79C @ =0x000011DE
	ldr r3, _0808D7A0 @ =0x000011DD
	cmp r0, #3
	bhi _0808D6EE
	adds r1, r2, #0
	adds r2, r3, #0
	adds r3, r1, #0
_0808D6EE:
	ldr r7, _0808D7A4 @ =gUnk_0868AF58
	lsls r0, r0, #2
	adds r0, r0, r7
	ldrb r1, [r0, #1]
	adds r1, #1
	lsls r1, r1, #5
	ldrb r0, [r0]
	adds r1, r0, r1
	subs r0, r1, #1
	ldr r4, _0808D7A8 @ =gBg1Tm
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	lsls r0, r1, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r0, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r0, r1, #2
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r0, r1, #3
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r0, r1, #4
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r1, #5
	lsls r1, r1, #1
	adds r1, r1, r4
	strh r2, [r1]
	ldr r2, _0808D7AC @ =0x000011F8
	ldr r3, _0808D7B0 @ =0x000011FB
	cmp r5, #3
	bhi _0808D744
	adds r1, r2, #0
	adds r2, r3, #0
	adds r3, r1, #0
_0808D744:
	lsls r0, r6, #2
	adds r0, r0, r7
	ldrb r1, [r0, #1]
	adds r1, #1
	lsls r1, r1, #5
	ldrb r0, [r0]
	adds r1, r0, r1
	subs r0, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r2, #1
	adds r3, #1
	lsls r0, r1, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r0, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r0, r1, #2
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r0, r1, #3
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r3, [r0]
	adds r0, r1, #4
	lsls r0, r0, #1
	adds r0, r0, r4
	strh r2, [r0]
	adds r3, #1
	adds r1, #5
	lsls r1, r1, #1
	adds r1, r1, r4
	strh r3, [r1]
	movs r0, #2
	bl EnableBgSync
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808D79C: .4byte 0x000011DE
_0808D7A0: .4byte 0x000011DD
_0808D7A4: .4byte gUnk_0868AF58
_0808D7A8: .4byte gBg1Tm
_0808D7AC: .4byte 0x000011F8
_0808D7B0: .4byte 0x000011FB

	thumb_func_start sub_808D7B4
sub_808D7B4: @ 0x0808D7B4
	push {lr}
	ldr r0, _0808D7E8 @ =gUnk_0868AF74
	ldr r1, _0808D7EC @ =0x020169DB
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r0, #0xc
	adds r1, r1, r0
	ldr r0, _0808D7F0 @ =0x020169CC
	movs r2, #0
	ldrsh r0, [r0, r2]
	ldr r1, [r1]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl sub_808D1B8
	ldr r0, _0808D7F4 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808D7E4
	movs r0, #0x66
	bl m4aSongNumStart
_0808D7E4:
	pop {r0}
	bx r0
	.align 2, 0
_0808D7E8: .4byte gUnk_0868AF74
_0808D7EC: .4byte 0x020169DB
_0808D7F0: .4byte 0x020169CC
_0808D7F4: .4byte gPlaySt

	thumb_func_start sub_808D7F8
sub_808D7F8: @ 0x0808D7F8
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	movs r2, #4
	ldr r0, _0808D820 @ =gKeySt
	ldr r1, [r0]
	ldrh r0, [r1, #8]
	cmp r0, #1
	beq _0808D828
	cmp r0, #2
	beq _0808D858
	ldr r0, _0808D824 @ =0x020169CC
	movs r3, #0
	ldrsh r4, [r0, r3]
	ldrh r1, [r1, #6]
	adds r6, r0, #0
	cmp r1, #0x20
	beq _0808D8D0
	cmp r1, #0x20
	bgt _0808D89A
	b _0808D894
	.align 2, 0
_0808D820: .4byte gKeySt
_0808D824: .4byte 0x020169CC
_0808D828:
	bl ClearTalkText
	bl EndTalk
	ldr r1, _0808D850 @ =0x020169DC
	movs r0, #2
	strb r0, [r1]
	ldr r0, _0808D854 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808D846
	movs r0, #0x6a
	bl m4aSongNumStart
_0808D846:
	adds r0, r5, #0
	movs r1, #3
	bl Proc_Goto
	b _0808D8FA
	.align 2, 0
_0808D850: .4byte 0x020169DC
_0808D854: .4byte gPlaySt
_0808D858:
	bl ClearTalkText
	bl EndTalk
	ldr r0, _0808D88C @ =gBg1Tm+0x350
	movs r1, #0x15
	movs r2, #6
	movs r3, #0
	bl TmFillRect_t
	movs r0, #2
	bl EnableBgSync
	ldr r0, _0808D890 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808D882
	movs r0, #0x6b
	bl m4aSongNumStart
_0808D882:
	adds r0, r5, #0
	movs r1, #4
	bl Proc_Goto
	b _0808D8FA
	.align 2, 0
_0808D88C: .4byte gBg1Tm+0x350
_0808D890: .4byte gPlaySt
_0808D894:
	cmp r1, #0x10
	beq _0808D8D0
	b _0808D8E0
_0808D89A:
	cmp r1, #0x40
	beq _0808D8A4
	cmp r1, #0x80
	beq _0808D8B8
	b _0808D8E0
_0808D8A4:
	cmp r4, #4
	bge _0808D8B0
	cmp r4, #0
	bne _0808D8B4
	movs r4, #3
	b _0808D8E0
_0808D8B0:
	cmp r4, #4
	ble _0808D8DA
_0808D8B4:
	subs r4, #1
	b _0808D8E0
_0808D8B8:
	cmp r4, #4
	bge _0808D8C4
	cmp r4, #3
	blt _0808D8C8
	movs r4, #0
	b _0808D8E0
_0808D8C4:
	cmp r4, #5
	bgt _0808D8CC
_0808D8C8:
	adds r4, #1
	b _0808D8E0
_0808D8CC:
	movs r4, #4
	b _0808D8E0
_0808D8D0:
	cmp r4, r2
	bge _0808D8DE
	adds r4, r4, r2
	cmp r4, #6
	ble _0808D8E0
_0808D8DA:
	movs r4, #6
	b _0808D8E0
_0808D8DE:
	subs r4, r4, r2
_0808D8E0:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, r4
	beq _0808D8FA
	ldrh r0, [r6]
	lsls r1, r4, #0x10
	lsrs r1, r1, #0x10
	bl sub_808D6D4
	strh r4, [r6]
	adds r0, r5, #0
	bl sub_808D7B4
_0808D8FA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_808D900
sub_808D900: @ 0x0808D900
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808D91C @ =gKeySt
	ldr r1, [r0]
	movs r0, #2
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0808D920
	adds r0, r4, #0
	movs r1, #4
	bl Proc_Goto
	b _0808D930
	.align 2, 0
_0808D91C: .4byte gKeySt
_0808D920:
	bl IsTalkActive
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808D930
	adds r0, r4, #0
	bl Proc_Break
_0808D930:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808D938
sub_808D938: @ 0x0808D938
	push {r4, lr}
	adds r4, r0, #0
	bl IsTalkActive
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808D94C
	adds r0, r4, #0
	bl Proc_Break
_0808D94C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808D954
sub_808D954: @ 0x0808D954
	push {lr}
	adds r1, r0, #0
	ldr r2, _0808D970 @ =gUnk_0868AF74
	ldr r0, _0808D974 @ =0x020169DB
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r2, #4
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r0, [r0]
	bl sub_808D168
	pop {r0}
	bx r0
	.align 2, 0
_0808D970: .4byte gUnk_0868AF74
_0808D974: .4byte 0x020169DB

	thumb_func_start sub_808D978
sub_808D978: @ 0x0808D978
	push {lr}
	adds r1, r0, #0
	ldr r2, _0808D994 @ =gUnk_0868AF74
	ldr r0, _0808D998 @ =0x020169DB
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r2, #4
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r0, [r0, #4]
	bl sub_808D168
	pop {r0}
	bx r0
	.align 2, 0
_0808D994: .4byte gUnk_0868AF74
_0808D998: .4byte 0x020169DB

	thumb_func_start sub_808D99C
sub_808D99C: @ 0x0808D99C
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808D9AC @ =0x000006FF
	bl sub_808D168
	pop {r0}
	bx r0
	.align 2, 0
_0808D9AC: .4byte 0x000006FF

	thumb_func_start sub_808D9B0
sub_808D9B0: @ 0x0808D9B0
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0808D9E0 @ =gUnk_0868AF74
	ldr r2, _0808D9E4 @ =0x020169DB
	ldrb r2, [r2]
	lsls r2, r2, #4
	adds r0, #8
	adds r2, r2, r0
	ldr r3, _0808D9E8 @ =0x020169D4
	ldr r0, _0808D9EC @ =0x020169CC
	movs r4, #0
	ldrsh r0, [r0, r4]
	adds r0, r0, r3
	ldr r2, [r2]
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	bl sub_808D168
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808D9E0: .4byte gUnk_0868AF74
_0808D9E4: .4byte 0x020169DB
_0808D9E8: .4byte 0x020169D4
_0808D9EC: .4byte 0x020169CC

	thumb_func_start sub_808D9F0
sub_808D9F0: @ 0x0808D9F0
	push {lr}
	adds r1, r0, #0
	ldr r2, _0808DA0C @ =gUnk_0868AF74
	ldr r0, _0808DA10 @ =0x020169DB
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r2, #4
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r0, [r0, #8]
	bl sub_808D168
	pop {r0}
	bx r0
	.align 2, 0
_0808DA0C: .4byte gUnk_0868AF74
_0808DA10: .4byte 0x020169DB

	thumb_func_start sub_808DA14
sub_808DA14: @ 0x0808DA14
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov sb, r0
	adds r4, r1, #0
	mov r8, r2
	adds r7, r3, #0
	ldr r0, [sp, #0x1c]
	lsls r0, r0, #5
	movs r1, #0x10
	bl Div
	adds r6, r0, #0
	mov r5, r8
	adds r0, r5, r7
	cmp r5, r0
	bge _0808DA84
	movs r0, #0x1f
	mov ip, r0
	lsls r1, r5, #1
	lsls r0, r4, #5
	add r0, sb
	adds r4, r1, r0
_0808DA44:
	ldrh r1, [r4]
	movs r3, #0x1f
	ands r3, r1
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x15
	mov r0, ip
	ands r2, r0
	lsrs r1, r1, #0x1a
	ands r1, r0
	adds r0, r3, #0
	muls r0, r6, r0
	asrs r0, r0, #5
	subs r3, r3, r0
	adds r0, r2, #0
	muls r0, r6, r0
	asrs r0, r0, #5
	subs r2, r2, r0
	adds r0, r1, #0
	muls r0, r6, r0
	asrs r0, r0, #5
	subs r1, r1, r0
	lsls r2, r2, #5
	orrs r3, r2
	lsls r1, r1, #0xa
	orrs r3, r1
	strh r3, [r4]
	adds r4, #2
	adds r5, #1
	mov r1, r8
	adds r0, r1, r7
	cmp r5, r0
	blt _0808DA44
_0808DA84:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_808DA90
sub_808DA90: @ 0x0808DA90
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sl, r0
	adds r4, r1, #0
	mov sb, r2
	mov r8, r3
	ldr r0, [sp, #0x20]
	lsls r0, r0, #5
	movs r1, #0x10
	bl Div
	adds r7, r0, #0
	mov r5, sb
	mov r1, r8
	adds r0, r5, r1
	cmp r5, r0
	bge _0808DB06
	movs r0, #0x1f
	mov ip, r0
	movs r6, #0x1f
	lsls r1, r5, #1
	lsls r0, r4, #5
	add r0, sl
	adds r4, r1, r0
_0808DAC6:
	ldrh r1, [r4]
	adds r3, r6, #0
	ands r3, r1
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x15
	mov r0, ip
	ands r2, r0
	lsrs r1, r1, #0x1a
	ands r1, r0
	subs r0, r6, r3
	muls r0, r7, r0
	asrs r0, r0, #5
	adds r3, r3, r0
	subs r0, r6, r2
	muls r0, r7, r0
	asrs r0, r0, #5
	adds r2, r2, r0
	subs r0, r6, r1
	muls r0, r7, r0
	asrs r0, r0, #5
	adds r1, r1, r0
	lsls r2, r2, #5
	orrs r3, r2
	lsls r1, r1, #0xa
	orrs r3, r1
	strh r3, [r4]
	adds r4, #2
	adds r5, #1
	mov r0, sb
	add r0, r8
	cmp r5, r0
	blt _0808DAC6
_0808DB06:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_808DB14
sub_808DB14: @ 0x0808DB14
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	mov sb, r3
	ldr r7, [sp, #0x20]
	movs r4, #0x37
	str r4, [sp]
	movs r0, #1
	adds r1, r5, #0
	adds r2, r6, #0
	adds r3, r7, #0
	bl Interpolate
	adds r6, r0, #0
	str r4, [sp]
	movs r0, #1
	mov r1, r8
	mov r2, sb
	adds r3, r7, #0
	bl Interpolate
	adds r5, r0, #0
	ldr r0, _0808DB88 @ =gUnk_0833C01C
	ldr r4, _0808DB8C @ =gPal+0x80
	adds r1, r4, #0
	movs r2, #8
	bl CpuFastSet
	subs r4, #0x80
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xa
	movs r3, #5
	bl sub_808DA90
	str r5, [sp]
	adds r0, r4, #0
	movs r1, #4
	movs r2, #2
	movs r3, #8
	bl sub_808DA14
	bl EnablePalSync
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808DB88: .4byte gUnk_0833C01C
_0808DB8C: .4byte gPal+0x80

	thumb_func_start sub_808DB90
sub_808DB90: @ 0x0808DB90
	movs r1, #0
	strh r1, [r0, #0x2a]
	strh r1, [r0, #0x2c]
	bx lr

	thumb_func_start sub_808DB98
sub_808DB98: @ 0x0808DB98
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	movs r0, #0x2c
	ldrsh r5, [r4, r0]
	cmp r5, #5
	beq _0808DBDA
	cmp r5, #5
	bgt _0808DBB0
	cmp r5, #0
	beq _0808DBB6
	b _0808DC20
_0808DBB0:
	cmp r5, #0xa
	beq _0808DC1C
	b _0808DC20
_0808DBB6:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	str r0, [sp]
	movs r0, #0
	movs r1, #5
	movs r2, #0
	movs r3, #4
	bl sub_808DB14
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x37
	ble _0808DC26
	strh r5, [r4, #0x2a]
	b _0808DC20
_0808DBDA:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	str r0, [sp]
	movs r0, #5
	movs r1, #0
	movs r2, #4
	movs r3, #0
	bl sub_808DB14
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x37
	ble _0808DC26
	movs r0, #0
	strh r0, [r4, #0x2a]
	ldrh r0, [r4, #0x2c]
	adds r0, #1
	strh r0, [r4, #0x2c]
	ldr r0, _0808DC18 @ =0x02016A18
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _0808DC26
	adds r0, r4, #0
	bl Proc_Break
	b _0808DC26
	.align 2, 0
_0808DC18: .4byte 0x02016A18
_0808DC1C:
	movs r0, #0
	b _0808DC24
_0808DC20:
	ldrh r0, [r4, #0x2c]
	adds r0, #1
_0808DC24:
	strh r0, [r4, #0x2c]
_0808DC26:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808DC30
sub_808DC30: @ 0x0808DC30
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0
	strh r5, [r4, #0x2a]
	bl GetCurrentBgmSong
	str r0, [r4, #0x30]
	ldr r0, _0808DC48 @ =0x02016A18
	strh r5, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0808DC48: .4byte 0x02016A18

	thumb_func_start sub_808DC4C
sub_808DC4C: @ 0x0808DC4C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808DC6C @ =0x020169DB
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808DCA6
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0x1e
	beq _0808DC84
	cmp r0, #0x1e
	bgt _0808DC70
	cmp r0, #0
	beq _0808DC76
	b _0808DCFC
	.align 2, 0
_0808DC6C: .4byte 0x020169DB
_0808DC70:
	cmp r0, #0xd2
	beq _0808DC9C
	b _0808DCCA
_0808DC76:
	ldr r0, _0808DC80 @ =gUnk_0868AFF0
	movs r1, #3
	bl SpawnProc
	b _0808DCFC
	.align 2, 0
_0808DC80: .4byte gUnk_0868AFF0
_0808DC84:
	ldr r0, _0808DC98 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808DCFC
	movs r0, #0x41
	bl m4aSongNumStart
	b _0808DCFC
	.align 2, 0
_0808DC98: .4byte gPlaySt
_0808DC9C:
	movs r0, #1
	rsbs r0, r0, #0
	bl FadeBgmOut
	b _0808DCFC
_0808DCA6:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0x69
	beq _0808DCD8
	cmp r0, #0x69
	bgt _0808DCBC
	cmp r0, #0
	beq _0808DCD0
	cmp r0, #0x41
	beq _0808DCD8
	b _0808DCFC
_0808DCBC:
	cmp r0, #0x96
	beq _0808DCD8
	cmp r0, #0x96
	bgt _0808DCCA
	cmp r0, #0x73
	beq _0808DCD8
	b _0808DCFC
_0808DCCA:
	cmp r0, #0xe6
	beq _0808DCF4
	b _0808DCFC
_0808DCD0:
	ldr r0, _0808DCEC @ =gUnk_0868AFF0
	movs r1, #3
	bl SpawnProc
_0808DCD8:
	ldr r0, _0808DCF0 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0808DCFC
	movs r0, #0xee
	bl m4aSongNumStart
	b _0808DCFC
	.align 2, 0
_0808DCEC: .4byte gUnk_0868AFF0
_0808DCF0: .4byte gPlaySt
_0808DCF4:
	ldr r1, _0808DD20 @ =0x02016A18
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0808DCFC:
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	ldr r0, _0808DD20 @ =0x02016A18
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _0808DD1A
	ldr r0, [r4, #0x30]
	movs r1, #0
	bl StartBgm
	adds r0, r4, #0
	bl Proc_Break
_0808DD1A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808DD20: .4byte 0x02016A18

	thumb_func_start sub_808DD24
sub_808DD24: @ 0x0808DD24
	push {lr}
	bl ClearPutTalkText
	bl EndTalk
	bl ClearTalk
	ldr r0, _0808DD3C @ =gUnk_0868AFD8
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0808DD3C: .4byte gUnk_0868AFD8

	thumb_func_start sub_808DD40
sub_808DD40: @ 0x0808DD40
	push {r4, r5, r6, lr}
	movs r5, #0
	ldr r6, _0808DD70 @ =gUnk_0868B3FC
	ldr r0, _0808DD74 @ =gUnk_0868B420
	adds r4, r0, #0
	adds r4, #0xc
_0808DD4C:
	ldr r2, [r6]
	lsls r3, r5, #1
	adds r0, r2, #0
	adds r0, #0x42
	adds r0, r0, r3
	ldrb r1, [r4]
	strh r1, [r0]
	adds r2, #0x50
	adds r2, r2, r3
	ldrb r0, [r4, #1]
	strh r0, [r2]
	adds r4, #0x10
	adds r5, #1
	cmp r5, #6
	ble _0808DD4C
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808DD70: .4byte gUnk_0868B3FC
_0808DD74: .4byte gUnk_0868B420

	thumb_func_start sub_808DD78
sub_808DD78: @ 0x0808DD78
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r6, _0808DDF8 @ =gUnk_0868B3FC
	ldr r0, _0808DDFC @ =gUnk_0868B490
	adds r5, r0, #0
	adds r5, #0xc
_0808DD84:
	ldr r2, [r6]
	lsls r3, r4, #1
	adds r0, r2, #0
	adds r0, #0x42
	adds r0, r0, r3
	ldrb r1, [r5]
	strh r1, [r0]
	adds r2, #0x50
	adds r2, r2, r3
	ldrb r0, [r5, #1]
	strh r0, [r2]
	adds r5, #0x10
	adds r4, #1
	cmp r4, #3
	ble _0808DD84
	bl sub_808F3E8
	ldr r5, _0808DE00 @ =0x02016A2E
	ldr r4, _0808DDF8 @ =gUnk_0868B3FC
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x6c
	strh r0, [r1]
	strh r0, [r5]
	bl sub_808F550
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x6e
	strh r0, [r1]
	strh r0, [r5, #2]
	bl sub_808F4B8
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x70
	strh r0, [r1]
	strh r0, [r5, #4]
	bl sub_808F73C
	ldr r1, [r4]
	adds r1, #0x72
	strh r0, [r1]
	movs r4, #0
_0808DDE2:
	adds r0, r4, #0
	movs r1, #0
	bl sub_808DF78
	adds r4, #1
	cmp r4, #3
	ble _0808DDE2
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808DDF8: .4byte gUnk_0868B3FC
_0808DDFC: .4byte gUnk_0868B490
_0808DE00: .4byte 0x02016A2E

	thumb_func_start sub_808DE04
sub_808DE04: @ 0x0808DE04
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	mov r8, r3
	movs r0, #8
	str r0, [sp]
	movs r0, #1
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl Interpolate
	adds r5, r0, #0
	ldr r0, _0808DE54 @ =gUnk_08342AB8
	mov r2, r8
	lsls r1, r2, #5
	ldr r4, _0808DE58 @ =gPal
	adds r1, r1, r4
	movs r2, #8
	bl CpuFastSet
	adds r0, r4, #0
	mov r1, r8
	movs r2, #1
	adds r3, r5, #0
	bl sub_805B644
	bl EnablePalSync
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808DE54: .4byte gUnk_08342AB8
_0808DE58: .4byte gPal

	thumb_func_start sub_808DE5C
sub_808DE5C: @ 0x0808DE5C
	movs r1, #0
	strh r1, [r0, #0x2a]
	strh r1, [r0, #0x2c]
	ldr r1, _0808DE6C @ =gUnk_0868B5E0
	ldrb r1, [r1]
	strh r1, [r0, #0x2e]
	bx lr
	.align 2, 0
_0808DE6C: .4byte gUnk_0868B5E0

	thumb_func_start sub_808DE70
sub_808DE70: @ 0x0808DE70
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x2a
	ldrsh r2, [r4, r0]
	ldrh r3, [r4, #0x36]
	adds r3, #0x14
	movs r0, #8
	movs r1, #0x10
	bl sub_808DE04
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	ble _0808DE9C
	movs r0, #0
	strh r0, [r4, #0x2a]
	adds r0, r4, #0
	bl Proc_Break
_0808DE9C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808DEA4
sub_808DEA4: @ 0x0808DEA4
	push {r4, lr}
	sub sp, #0x48
	adds r4, r0, #0
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #8
	bgt _0808DEC6
	adds r2, r0, #0
	ldrh r3, [r4, #0x36]
	adds r3, #0x14
	movs r0, #0x10
	movs r1, #0
	bl sub_808DE04
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
_0808DEC6:
	movs r0, #0
	str r0, [sp, #0x1c]
	ldr r0, _0808DF30 @ =gUnk_0868B5C8
	str r0, [sp, #0x3c]
	mov r1, sp
	movs r2, #0x32
	ldrsh r0, [r4, r2]
	adds r0, #7
	lsls r0, r0, #3
	strh r0, [r1, #2]
	movs r3, #0x34
	ldrsh r0, [r4, r3]
	adds r0, #1
	lsls r0, r0, #3
	strh r0, [r1, #4]
	mov r2, sp
	movs r1, #0x2c
	ldrsh r0, [r4, r1]
	lsls r0, r0, #2
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r0, r3
	ldr r3, _0808DF34 @ =0xFFFFC000
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #8]
	mov r0, sp
	bl BasPutOam
	ldrh r0, [r4, #0x2e]
	subs r0, #1
	strh r0, [r4, #0x2e]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808DF28
	ldrh r0, [r4, #0x2c]
	adds r0, #1
	strh r0, [r4, #0x2c]
	ldr r1, _0808DF38 @ =gUnk_0868B5E0
	movs r2, #0x2c
	ldrsh r0, [r4, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4, #0x2e]
	cmp r0, #0
	bne _0808DF28
	adds r0, r4, #0
	bl Proc_Break
_0808DF28:
	add sp, #0x48
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808DF30: .4byte gUnk_0868B5C8
_0808DF34: .4byte 0xFFFFC000
_0808DF38: .4byte gUnk_0868B5E0

	thumb_func_start sub_808DF3C
sub_808DF3C: @ 0x0808DF3C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, _0808DF70 @ =gUnk_08342AD8
	movs r1, #0xe0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808DF74 @ =gUnk_0868B5E8
	movs r1, #3
	bl SpawnProc
	strh r4, [r0, #0x36]
	strh r5, [r0, #0x32]
	strh r6, [r0, #0x34]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808DF70: .4byte gUnk_08342AD8
_0808DF74: .4byte gUnk_0868B5E8

	thumb_func_start sub_808DF78
sub_808DF78: @ 0x0808DF78
	push {lr}
	adds r3, r0, #0
	ldr r0, _0808DFB8 @ =gUnk_0868B3FC
	ldr r0, [r0]
	mov ip, r0
	lsls r2, r3, #1
	adds r0, #0x5e
	adds r0, r0, r2
	strh r1, [r0]
	lsls r0, r3, #2
	mov r2, ip
	adds r2, #0x7c
	adds r2, r2, r0
	ldr r0, _0808DFBC @ =gUnk_0868B4D0
	lsls r1, r1, #3
	adds r1, r1, r0
	ldr r0, [r1]
	str r0, [r2]
	mov r0, ip
	adds r0, #0x98
	adds r0, r0, r3
	ldrb r1, [r1, #4]
	strb r1, [r0]
	ldr r0, _0808DFC0 @ =gUnk_08342AB8
	adds r3, #0x14
	lsls r3, r3, #5
	adds r1, r3, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r0}
	bx r0
	.align 2, 0
_0808DFB8: .4byte gUnk_0868B3FC
_0808DFBC: .4byte gUnk_0868B4D0
_0808DFC0: .4byte gUnk_08342AB8

	thumb_func_start sub_808DFC4
sub_808DFC4: @ 0x0808DFC4
	movs r1, #0
	strh r1, [r0, #0x2a]
	bx lr
	.align 2, 0

	thumb_func_start sub_808DFCC
sub_808DFCC: @ 0x0808DFCC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	movs r1, #0x2a
	ldrsh r3, [r7, r1]
	movs r2, #8
	str r2, [sp]
	movs r0, #5
	movs r1, #2
	mov r2, r8
	bl Interpolate
	mov sb, r0
	ldr r4, _0808E0A0 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sl, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sl
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x1f
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r0, _0808E0A4 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0808E068
	ldrh r0, [r7, #0x2a]
	adds r0, #1
	strh r0, [r7, #0x2a]
_0808E068:
	ldrh r0, [r7, #0x2a]
	adds r1, r0, #1
	strh r1, [r7, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _0808E0CA
	movs r2, #8
	strh r2, [r7, #0x2a]
	ldr r0, _0808E0A8 @ =gUnk_0868B3FC
	ldr r1, [r0]
	adds r0, r7, #0
	adds r0, #0x9f
	ldrb r3, [r0]
	lsls r2, r3, #1
	adds r0, r1, #0
	adds r0, #0x5e
	adds r0, r0, r2
	adds r1, #0x6c
	adds r1, r1, r2
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	bhs _0808E0AC
	adds r0, r7, #0
	bl Proc_Break
	b _0808E0CA
	.align 2, 0
_0808E0A0: .4byte gSinLut
_0808E0A4: .4byte gKeySt
_0808E0A8: .4byte gUnk_0868B3FC
_0808E0AC:
	cmp r3, #5
	bhi _0808E0C2
	cmp r0, #3
	bls _0808E0C2
	movs r0, #0x32
	ldrsh r1, [r7, r0]
	movs r0, #0x34
	ldrsh r2, [r7, r0]
	adds r0, r3, #0
	bl sub_808DF3C
_0808E0C2:
	adds r0, r7, #0
	movs r1, #1
	bl Proc_Goto
_0808E0CA:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808E0DC
sub_808E0DC: @ 0x0808E0DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	movs r1, #0x2a
	ldrsh r0, [r7, r1]
	movs r3, #0x11
	subs r3, r3, r0
	movs r0, #8
	str r0, [sp]
	movs r0, #5
	movs r1, #2
	mov r2, r8
	bl Interpolate
	mov sb, r0
	ldr r4, _0808E1C4 @ =gSinLut
	movs r2, #0x80
	adds r2, r2, r4
	mov sl, r2
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sl
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x1f
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r0, _0808E1C8 @ =gKeySt
	ldr r1, [r0]
	movs r0, #1
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _0808E17C
	ldrh r0, [r7, #0x2a]
	adds r0, #1
	strh r0, [r7, #0x2a]
_0808E17C:
	ldrh r0, [r7, #0x2a]
	adds r1, r0, #1
	strh r1, [r7, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _0808E1B4
	movs r0, #0x10
	strh r0, [r7, #0x2a]
	ldr r0, _0808E1CC @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r1, r7, #0
	adds r1, #0x9f
	ldrb r2, [r1]
	lsls r1, r2, #1
	adds r0, #0x5e
	adds r0, r0, r1
	ldrh r1, [r0]
	cmp r1, #5
	bgt _0808E1B4
	adds r1, #1
	adds r0, r2, #0
	bl sub_808DF78
	adds r0, r7, #0
	movs r1, #0
	bl Proc_Goto
_0808E1B4:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E1C4: .4byte gSinLut
_0808E1C8: .4byte gKeySt
_0808E1CC: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E1D0
sub_808E1D0: @ 0x0808E1D0
	ldr r0, _0808E1E0 @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	bx lr
	.align 2, 0
_0808E1E0: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E1E4
sub_808E1E4: @ 0x0808E1E4
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	ldr r4, _0808E260 @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x1f
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808E260: .4byte gSinLut

	thumb_func_start sub_808E264
sub_808E264: @ 0x0808E264
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808E280 @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #4
	bhi _0808E27C
	adds r0, r1, #0
	movs r1, #2
	bl Proc_Goto
_0808E27C:
	pop {r0}
	bx r0
	.align 2, 0
_0808E280: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E284
sub_808E284: @ 0x0808E284
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0808E2C8 @ =gUnk_0868B610
	bl SpawnProcLocking
	ldr r2, _0808E2CC @ =gUnk_0868B3FC
	ldr r1, [r2]
	adds r1, #0x9f
	ldrb r1, [r1]
	adds r3, r0, #0
	adds r3, #0x9f
	strb r1, [r3]
	ldr r3, [r2]
	movs r1, #0x9f
	adds r1, r1, r3
	mov ip, r1
	ldrb r4, [r1]
	lsls r2, r4, #1
	adds r1, r3, #0
	adds r1, #0x42
	adds r1, r1, r2
	ldrh r1, [r1]
	strh r1, [r0, #0x32]
	mov r1, ip
	ldrb r1, [r1]
	lsls r2, r1, #1
	adds r1, r3, #0
	adds r1, #0x50
	adds r1, r1, r2
	ldrh r1, [r1]
	strh r1, [r0, #0x34]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808E2C8: .4byte gUnk_0868B610
_0808E2CC: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E2D0
sub_808E2D0: @ 0x0808E2D0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808E2EC @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #5
	bls _0808E2E8
	adds r0, r1, #0
	movs r1, #3
	bl Proc_Goto
_0808E2E8:
	pop {r0}
	bx r0
	.align 2, 0
_0808E2EC: .4byte gUnk_0868B3FC

	thumb_func_start nullsub_46
nullsub_46: @ 0x0808E2F0
	bx lr
	.align 2, 0

	thumb_func_start sub_808E2F4
sub_808E2F4: @ 0x0808E2F4
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	str r0, [sp]
	movs r0, #0xa
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	ldr r4, _0808E388 @ =gSinLut
	movs r1, #0x80
	adds r1, r1, r4
	mov sb, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x1f
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r0, _0808E38C @ =gUnk_0868B648
	movs r1, #3
	bl SpawnProc
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808E388: .4byte gSinLut
_0808E38C: .4byte gUnk_0868B648

	thumb_func_start sub_808E390
sub_808E390: @ 0x0808E390
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r6, #0
	ldr r1, _0808E41C @ =gUnk_0868B3FC
	ldr r0, [r1]
	adds r0, #0x9f
	ldrb r0, [r0]
	adds r0, #1
	cmp r6, r0
	bge _0808E414
	adds r7, r1, #0
_0808E3A6:
	ldr r3, [r7]
	lsls r1, r6, #1
	adds r0, r3, #0
	adds r0, #0x42
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #6
	lsls r5, r0, #3
	adds r0, r3, #0
	adds r0, #0x50
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r4, r0, #3
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r6, r0
	bne _0808E3DA
	movs r0, #0xf8
	lsls r0, r0, #6
	orrs r5, r0
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r4, r0
_0808E3DA:
	adds r0, r3, #0
	adds r0, #0x5e
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r2, r0, #1
	adds r2, #0xc0
	lsls r1, r6, #2
	adds r0, r3, #0
	adds r0, #0x7c
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r6, #4
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	orrs r0, r2
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r4, #0
	bl PutSpriteExt
	adds r6, #1
	ldr r0, [r7]
	adds r0, #0x9f
	ldrb r0, [r0]
	adds r0, #1
	cmp r6, r0
	blt _0808E3A6
_0808E414:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E41C: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E420
sub_808E420: @ 0x0808E420
	movs r1, #0
	strh r1, [r0, #0x2a]
	ldr r1, _0808E430 @ =0x02016A28
	ldrh r1, [r1]
	subs r1, #1
	strh r1, [r0, #0x2c]
	bx lr
	.align 2, 0
_0808E430: .4byte 0x02016A28

	thumb_func_start sub_808E434
sub_808E434: @ 0x0808E434
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldrh r0, [r7, #0x2a]
	adds r1, r0, #1
	strh r1, [r7, #0x2a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _0808E456
	adds r0, r7, #0
	bl Proc_Break
_0808E456:
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	movs r1, #0x2a
	ldrsh r3, [r7, r1]
	movs r0, #8
	str r0, [sp]
	movs r0, #5
	movs r1, #2
	mov r2, r8
	bl Interpolate
	mov sl, r0
	ldr r4, _0808E4E4 @ =gSinLut
	movs r2, #0x80
	adds r2, r2, r4
	mov sb, r2
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, sb
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x2c
	ldrsh r1, [r7, r2]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E4E4: .4byte gSinLut

	thumb_func_start sub_808E4E8
sub_808E4E8: @ 0x0808E4E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r1, _0808E5DC @ =0x02016A28
	movs r0, #0
	strh r0, [r1]
	movs r0, #0
	strh r0, [r7, #0x2c]
	strh r0, [r7, #0x2e]
	ldr r1, _0808E5E0 @ =gUnk_0868B5B0
	ldr r0, _0808E5E4 @ =0x02016A2A
	ldrh r0, [r0]
	lsls r0, r0, #3
	adds r0, r0, r1
	ldr r2, [r0]
	movs r1, #0x2e
	ldrsh r0, [r7, r1]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	beq _0808E53C
_0808E524:
	ldrh r0, [r7, #0x2e]
	adds r0, #1
	strh r0, [r7, #0x2e]
	movs r3, #0x2e
	ldrsh r0, [r7, r3]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	bne _0808E524
_0808E53C:
	movs r0, #0
	mov r8, r0
	movs r1, #0x2e
	ldrsh r0, [r7, r1]
	cmp r8, r0
	bge _0808E5CC
	movs r2, #0x80
	lsls r2, r2, #1
	mov sb, r2
	ldr r3, _0808E5E8 @ =gSinLut
	mov sl, r3
_0808E552:
	mov r0, sb
	str r0, [sp]
	mov r0, r8
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	ldr r1, _0808E5EC @ =gSinLut+0x80
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	mov r3, sl
	movs r1, #0
	ldrsh r0, [r3, r1]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r2, sl
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r1, _0808E5EC @ =gSinLut+0x80
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	movs r3, #1
	add r8, r3
	movs r1, #0x2e
	ldrsh r0, [r7, r1]
	cmp r8, r0
	blt _0808E552
_0808E5CC:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E5DC: .4byte 0x02016A28
_0808E5E0: .4byte gUnk_0868B5B0
_0808E5E4: .4byte 0x02016A2A
_0808E5E8: .4byte gSinLut
_0808E5EC: .4byte gSinLut+0x80

	thumb_func_start sub_808E5F0
sub_808E5F0: @ 0x0808E5F0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r4, r0, #0
	movs r7, #0
	ldr r1, _0808E6B8 @ =0x02016A1E
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r1, [r1]
	subs r1, r0, r1
	ldr r0, _0808E6BC @ =0x02016A2A
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808E61E
	adds r1, #0x80
	ldr r0, _0808E6C0 @ =0x000001FF
	ands r1, r0
	ldr r2, _0808E6C4 @ =gUnk_0868B720
	ldr r3, _0808E6C8 @ =0x00002084
	movs r0, #0xa2
	bl PutOamHiRam
_0808E61E:
	ldrh r0, [r4, #0x2c]
	adds r0, #1
	strh r0, [r4, #0x2c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xe
	bgt _0808E646
	strh r7, [r4, #0x2c]
	ldr r2, _0808E6CC @ =0x02016A28
	ldrh r1, [r2]
	movs r3, #0x2e
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0808E646
	adds r0, r1, #1
	strh r0, [r2]
	ldr r0, _0808E6D0 @ =gUnk_0868B700
	movs r1, #3
	bl SpawnProc
_0808E646:
	ldr r2, _0808E6D4 @ =gUnk_0868B5B0
	ldr r0, _0808E6BC @ =0x02016A2A
	ldrh r0, [r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	ldr r1, [r0]
	movs r6, #0
	ldr r0, _0808E6CC @ =0x02016A28
	ldrh r0, [r0]
	cmp r6, r0
	bge _0808E6AA
	mov r8, r2
	adds r4, r1, #0
_0808E660:
	ldr r0, _0808E6BC @ =0x02016A2A
	ldrh r0, [r0]
	lsls r1, r0, #3
	add r1, r8
	ldrb r0, [r1, #4]
	adds r2, r0, r7
	lsls r0, r6, #9
	adds r3, r2, r0
	ldrb r1, [r1, #5]
	movs r0, #0x84
	lsls r0, r0, #1
	adds r2, r1, r0
	ldrb r0, [r4, #2]
	ldr r5, _0808E6D8 @ =gUnk_0868B410
	cmp r0, #0
	beq _0808E682
	ldr r5, _0808E6DC @ =gUnk_0868B418
_0808E682:
	movs r0, #0
	ldrsb r0, [r4, r0]
	lsls r0, r0, #1
	movs r1, #0xc6
	lsls r1, r1, #6
	adds r0, r0, r1
	str r0, [sp]
	movs r0, #4
	adds r1, r3, #0
	adds r3, r5, #0
	bl PutSpriteExt
	ldrb r3, [r4, #1]
	adds r7, r3, r7
	adds r4, #4
	adds r6, #1
	ldr r0, _0808E6CC @ =0x02016A28
	ldrh r0, [r0]
	cmp r6, r0
	blt _0808E660
_0808E6AA:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E6B8: .4byte 0x02016A1E
_0808E6BC: .4byte 0x02016A2A
_0808E6C0: .4byte 0x000001FF
_0808E6C4: .4byte gUnk_0868B720
_0808E6C8: .4byte 0x00002084
_0808E6CC: .4byte 0x02016A28
_0808E6D0: .4byte gUnk_0868B700
_0808E6D4: .4byte gUnk_0868B5B0
_0808E6D8: .4byte gUnk_0868B410
_0808E6DC: .4byte gUnk_0868B418

	thumb_func_start sub_808E6E0
sub_808E6E0: @ 0x0808E6E0
	push {lr}
	ldr r2, _0808E6F4 @ =gUnk_0868B720
	ldr r3, _0808E6F8 @ =0x00002084
	movs r0, #0x58
	movs r1, #0x3e
	bl PutOamHiRam
	pop {r0}
	bx r0
	.align 2, 0
_0808E6F4: .4byte gUnk_0868B720
_0808E6F8: .4byte 0x00002084

	thumb_func_start sub_808E6FC
sub_808E6FC: @ 0x0808E6FC
	push {lr}
	ldr r0, _0808E70C @ =gUnk_0868B750
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0808E70C: .4byte gUnk_0868B750

	thumb_func_start sub_808E710
sub_808E710: @ 0x0808E710
	ldr r2, _0808E72C @ =gUnk_0868B3FC
	ldr r0, [r2]
	movs r1, #0
	str r1, [r0, #0x38]
	str r1, [r0, #0x3c]
	adds r0, #0x40
	strb r1, [r0]
	ldr r0, [r2]
	adds r0, #0x41
	strb r1, [r0]
	ldr r0, [r2]
	adds r0, #0x9f
	strb r1, [r0]
	bx lr
	.align 2, 0
_0808E72C: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E730
sub_808E730: @ 0x0808E730
	push {r4, lr}
	ldr r3, _0808E798 @ =gUnk_0868B3FC
	ldr r0, [r3]
	adds r0, #0x40
	ldrb r1, [r0]
	adds r1, #3
	strb r1, [r0]
	ldr r0, [r3]
	adds r0, #0x41
	ldrb r1, [r0]
	adds r1, #1
	strb r1, [r0]
	ldr r0, [r3]
	mov ip, r0
	mov r2, ip
	adds r2, #0x40
	ldrb r4, [r2]
	lsrs r1, r4, #2
	mov r4, ip
	ldr r0, [r4, #0x38]
	adds r0, r0, r1
	str r0, [r4, #0x38]
	mov r0, ip
	adds r0, #0x41
	ldrb r0, [r0]
	lsrs r1, r0, #2
	ldr r0, [r4, #0x3c]
	adds r0, r0, r1
	str r0, [r4, #0x3c]
	movs r1, #3
	adds r0, r1, #0
	ldrb r4, [r2]
	ands r0, r4
	strb r0, [r2]
	ldr r0, [r3]
	adds r0, #0x41
	ldrb r2, [r0]
	ands r1, r2
	strb r1, [r0]
	ldr r2, [r3]
	ldr r1, [r2, #0x38]
	movs r0, #0xff
	ands r1, r0
	ldr r2, [r2, #0x3c]
	ands r2, r0
	movs r0, #2
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808E798: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E79C
sub_808E79C: @ 0x0808E79C
	push {r4, r5, r6, lr}
	ldr r6, _0808E7C8 @ =gUnk_0868B3FC
	movs r5, #0xa0
	movs r4, #7
_0808E7A4:
	ldr r0, [r6]
	adds r0, r0, r5
	movs r1, #0xf
	bl InitText
	adds r5, #8
	subs r4, #1
	cmp r4, #0
	bge _0808E7A4
	ldr r0, _0808E7C8 @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0xe0
	movs r1, #3
	bl InitText
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808E7C8: .4byte gUnk_0868B3FC

	thumb_func_start sub_808E7CC
sub_808E7CC: @ 0x0808E7CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r4, r2, #0x18
	str r4, [sp, #0x10]
	movs r6, #0
	cmp r1, #0x32
	bne _0808E818
	ldr r7, _0808E814 @ =0x00000BA1
	adds r0, r7, #0
	bl DecodeMsg
	bl GetStringTextLen
	adds r5, r0, #0
	cmp r4, #0
	beq _0808E800
	movs r0, #0x30
	subs r0, r0, r5
	asrs r6, r0, #1
_0808E800:
	adds r0, r7, #0
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
	b _0808E91E
	.align 2, 0
_0808E814: .4byte 0x00000BA1
_0808E818:
	ldr r0, _0808E930 @ =0x00000B9E
	bl DecodeMsg
	bl GetStringTextLen
	str r0, [sp]
	adds r5, r0, #0
	mov r0, r8
	asrs r4, r0, #1
	adds r0, r4, #0
	movs r1, #0xa
	bl __divsi3
	adds r7, r0, #0
	adds r0, r4, #0
	movs r1, #0xa
	bl __modsi3
	adds r4, r0, #0
	cmp r7, #0
	beq _0808E858
	ldr r1, _0808E934 @ =gUnk_0868B788
	lsls r0, r7, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	subs r0, #1
	str r0, [sp, #4]
	adds r5, r5, r0
_0808E858:
	lsls r0, r4, #1
	ldr r1, _0808E934 @ =gUnk_0868B788
	adds r0, r0, r1
	mov sl, r0
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	subs r0, #1
	str r0, [sp, #8]
	adds r5, r5, r0
	ldr r0, _0808E938 @ =0x00000B9F
	bl DecodeMsg
	bl GetStringTextLen
	str r0, [sp, #0xc]
	adds r5, r5, r0
	movs r4, #1
	mov r0, r8
	ands r4, r0
	cmp r4, #0
	beq _0808E896
	movs r0, #0xba
	lsls r0, r0, #4
	bl DecodeMsg
	bl GetStringTextLen
	adds r5, r5, r0
_0808E896:
	ldr r1, [sp, #0x10]
	cmp r1, #0
	beq _0808E8A2
	movs r0, #0x30
	subs r0, r0, r5
	asrs r6, r0, #1
_0808E8A2:
	ldr r0, _0808E930 @ =0x00000B9E
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, [sp]
	adds r6, r6, r0
	cmp r7, #0
	beq _0808E8D8
	lsls r0, r7, #1
	ldr r1, _0808E934 @ =gUnk_0868B788
	adds r0, r0, r1
	ldrh r0, [r0]
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, [sp, #4]
	adds r6, r6, r0
_0808E8D8:
	mov r1, sl
	ldrh r0, [r1]
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, [sp, #8]
	adds r6, r6, r0
	ldr r0, _0808E938 @ =0x00000B9F
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
	ldr r0, [sp, #0xc]
	adds r6, r6, r0
	cmp r4, #0
	beq _0808E91E
	movs r0, #0xba
	lsls r0, r0, #4
	bl DecodeMsg
	adds r3, r0, #0
	mov r0, sb
	adds r1, r6, #0
	movs r2, #0
	bl Text_InsertDrawString
_0808E91E:
	adds r0, r5, #0
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808E930: .4byte 0x00000B9E
_0808E934: .4byte gUnk_0868B788
_0808E938: .4byte 0x00000B9F

	thumb_func_start sub_808E93C
sub_808E93C: @ 0x0808E93C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	ldr r7, _0808E95C @ =0x02016A24
	ldrh r4, [r7]
	bl sub_80848DC
	cmp r4, r0
	blt _0808E960
	movs r0, #1
	b _0808EA58
	.align 2, 0
_0808E95C: .4byte 0x02016A24
_0808E960:
	ldrh r0, [r7]
	bl sub_80848BC
	mov sb, r0
	movs r6, #7
	ldrh r0, [r7]
	ands r6, r0
	ldr r1, _0808EA68 @ =gUnk_0868B3FC
	mov r8, r1
	lsls r6, r6, #3
	adds r6, #0xa0
	ldr r0, [r1]
	adds r0, r0, r6
	bl ClearText
	mov r2, r8
	ldr r0, [r2]
	adds r0, #0xe0
	bl ClearText
	mov r3, sb
	ldr r0, [r3]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r1, [r0]
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r6
	movs r2, #1
	bl sub_808E7CC
	mov r3, sb
	ldr r0, [r3]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	bl GetStringTextLen
	movs r4, #0x46
	subs r4, r4, r0
	lsrs r0, r4, #0x1f
	adds r4, r4, r0
	asrs r4, r4, #1
	mov r0, r8
	ldr r5, [r0]
	adds r5, r5, r6
	adds r4, #0x28
	mov r1, sb
	ldr r0, [r1]
	lsls r0, r0, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	adds r3, r0, #0
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl Text_InsertDrawString
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r6
	mov r3, sl
	lsls r5, r3, #6
	ldr r4, _0808EA6C @ =gBg0Tm+0x2
	adds r1, r5, r4
	bl PutText
	adds r0, r4, #0
	adds r0, #0x1e
	adds r0, r5, r0
	mov r1, sb
	ldr r2, [r1]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x16
	movs r1, #2
	bl PutNumber
	ldr r0, _0808EA70 @ =0x00000725
	bl DecodeMsg
	adds r3, r0, #0
	mov r2, r8
	ldr r0, [r2]
	adds r0, #0xe0
	adds r1, r4, #0
	adds r1, #0x20
	adds r1, r5, r1
	movs r2, #3
	str r2, [sp]
	str r3, [sp, #4]
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	adds r4, #0x26
	adds r5, r5, r4
	movs r0, #0xb4
	mov r3, sb
	ldrh r3, [r3, #2]
	adds r2, r3, #0
	muls r2, r0, r2
	adds r0, r5, #0
	movs r1, #2
	movs r3, #1
	bl PutTime
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	movs r0, #1
	bl EnableBgSync
	movs r0, #0
_0808EA58:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808EA68: .4byte gUnk_0868B3FC
_0808EA6C: .4byte gBg0Tm+0x2
_0808EA70: .4byte 0x00000725

	thumb_func_start sub_808EA74
sub_808EA74: @ 0x0808EA74
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r7, r0, #0
	bl sub_808F33C
	ldr r6, _0808EB84 @ =0x02016A2E
	ldr r4, _0808EB88 @ =gUnk_0868B3FC
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x6c
	strh r0, [r1]
	strh r0, [r6]
	bl sub_808F490
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x6e
	strh r0, [r1]
	strh r0, [r6, #2]
	bl sub_808F524
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x70
	strh r0, [r1]
	strh r0, [r6, #4]
	bl sub_808F5AC
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x72
	strh r0, [r1]
	strh r0, [r6, #6]
	bl sub_808F600
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x74
	strh r0, [r1]
	strh r0, [r6, #8]
	bl sub_808F68C
	ldr r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, #0x76
	strh r0, [r1]
	strh r0, [r6, #0xa]
	movs r6, #0
_0808EAE6:
	adds r0, r6, #0
	movs r1, #0
	bl sub_808DF78
	adds r6, #1
	cmp r6, #5
	ble _0808EAE6
	bl sub_808F6E0
	ldr r4, _0808EB88 @ =gUnk_0868B3FC
	ldr r1, [r4]
	adds r1, #0x78
	strh r0, [r1]
	movs r0, #6
	movs r1, #0
	bl sub_808DF78
	movs r6, #0
	subs r7, #6
	mov sb, r7
	mov r8, r4
	ldr r5, _0808EB8C @ =gUnk_0868B420
	movs r7, #0xe8
_0808EB14:
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r7
	movs r1, #6
	bl InitText
	mov r2, r8
	ldr r0, [r2]
	adds r0, r0, r7
	bl ClearText
	ldrh r0, [r5]
	bl DecodeMsg
	str r0, [sp, #8]
	mov r4, r8
	ldr r3, [r4]
	adds r0, r3, r7
	lsls r4, r6, #1
	adds r1, r3, #0
	adds r1, #0x50
	adds r1, r1, r4
	movs r2, #0
	ldrsh r1, [r1, r2]
	add r1, sb
	movs r2, #0x1f
	ands r1, r2
	lsls r1, r1, #5
	adds r3, #0x42
	adds r3, r3, r4
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r1, r1, r2
	lsls r1, r1, #1
	ldr r2, _0808EB90 @ =gBg0Tm
	adds r1, r1, r2
	ldr r2, [r5, #4]
	movs r3, #6
	str r3, [sp]
	ldr r3, [sp, #8]
	str r3, [sp, #4]
	movs r3, #0
	bl PutDrawText
	adds r5, #0x10
	adds r7, #8
	adds r6, #1
	cmp r6, #6
	ble _0808EB14
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808EB84: .4byte 0x02016A2E
_0808EB88: .4byte gUnk_0868B3FC
_0808EB8C: .4byte gUnk_0868B420
_0808EB90: .4byte gBg0Tm

	thumb_func_start sub_808EB94
sub_808EB94: @ 0x0808EB94
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	adds r6, r0, #0
	movs r0, #6
	mov sb, r0
	adds r6, #0x16
	ldr r4, _0808EC10 @ =gUnk_0868B3FC
	movs r5, #0x8c
	lsls r5, r5, #1
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #6
	bl InitText
	ldr r0, [r4]
	adds r0, r0, r5
	bl ClearText
	ldr r2, _0808EC14 @ =gUnk_0868B420
	mov r8, r2
	mov r0, r8
	adds r0, #0x60
	ldrh r0, [r0]
	bl DecodeMsg
	ldr r3, [r4]
	adds r5, r3, r5
	adds r1, r3, #0
	adds r1, #0x5c
	movs r4, #0
	ldrsh r1, [r1, r4]
	adds r1, r1, r6
	movs r2, #0x1f
	ands r1, r2
	lsls r1, r1, #5
	adds r3, #0x4e
	movs r4, #0
	ldrsh r2, [r3, r4]
	adds r1, r1, r2
	lsls r1, r1, #1
	ldr r2, _0808EC18 @ =gBg0Tm
	adds r1, r1, r2
	mov r3, r8
	ldr r2, [r3, #0x64]
	mov r4, sb
	str r4, [sp]
	str r0, [sp, #4]
	adds r0, r5, #0
	movs r3, #0
	bl PutDrawText
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808EC10: .4byte gUnk_0868B3FC
_0808EC14: .4byte gUnk_0868B420
_0808EC18: .4byte gBg0Tm

	thumb_func_start sub_808EC1C
sub_808EC1C: @ 0x0808EC1C
	push {r4, r5, r6, r7, lr}
	movs r6, #0
	bl sub_80848DC
	adds r5, r0, #0
	movs r4, #0
	cmp r6, r5
	bge _0808EC40
	movs r7, #0xb4
_0808EC2E:
	adds r0, r4, #0
	bl sub_80848BC
	ldrh r0, [r0, #2]
	muls r0, r7, r0
	adds r6, r6, r0
	adds r4, #1
	cmp r4, r5
	blt _0808EC2E
_0808EC40:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_808EC48
sub_808EC48: @ 0x0808EC48
	push {r4, lr}
	adds r4, r0, #0
	bl sub_808EC1C
	adds r2, r0, #0
	adds r4, #3
	movs r0, #0x1f
	ands r4, r0
	lsls r4, r4, #6
	ldr r0, _0808EC74 @ =gBg0Tm+0x28
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl PutTime
	movs r0, #1
	bl EnableBgSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808EC74: .4byte gBg0Tm+0x28

	thumb_func_start sub_808EC78
sub_808EC78: @ 0x0808EC78
	push {r4, r5, r6, lr}
	subs r0, #0x50
	lsls r0, r0, #2
	movs r2, #0xf0
	lsls r2, r2, #2
	ands r0, r2
	adds r1, r0, #0
	adds r1, #0x40
	ands r1, r2
	ldr r2, _0808ECCC @ =gBg0Tm
	movs r5, #0
	adds r3, r1, #0
	adds r3, #0x20
	lsls r1, r1, #1
	adds r4, r1, r2
	adds r1, r0, #0
	adds r1, #0x20
	lsls r0, r0, #1
	adds r0, r0, r2
	movs r6, #0x1f
	lsls r1, r1, #1
	adds r1, r1, r2
	lsls r3, r3, #1
	adds r3, r3, r2
_0808ECA8:
	strh r5, [r0]
	strh r5, [r1]
	strh r5, [r4]
	strh r5, [r3]
	adds r3, #2
	adds r4, #2
	adds r1, #2
	adds r0, #2
	subs r6, #1
	cmp r6, #0
	bge _0808ECA8
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808ECCC: .4byte gBg0Tm

	thumb_func_start sub_808ECD0
sub_808ECD0: @ 0x0808ECD0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	str r0, [sp]
	lsls r2, r2, #0x10
	movs r3, #0
	lsrs r2, r2, #4
	mov ip, r2
_0808ECE6:
	movs r2, #0
	lsls r0, r3, #8
	str r0, [sp, #0x10]
	adds r3, #1
	str r3, [sp, #8]
_0808ECF0:
	lsls r0, r2, #3
	ldr r3, [sp, #0x10]
	adds r0, r3, r0
	movs r6, #0
	str r6, [sp, #4]
	adds r2, #1
	str r2, [sp, #0xc]
	lsls r2, r0, #1
	adds r0, r2, #0
	adds r0, #0xc0
	ldr r7, [sp]
	adds r0, r0, r7
	str r0, [sp, #0x14]
	adds r0, r2, #0
	adds r0, #0x80
	adds r0, r0, r7
	str r0, [sp, #0x18]
	adds r0, r2, #0
	adds r0, #0x40
	adds r0, r0, r7
	str r0, [sp, #0x1c]
	adds r2, r2, r7
	mov r0, ip
	adds r0, #0xe0
	adds r0, r0, r1
	mov sl, r0
	mov r0, ip
	adds r0, #0xc0
	adds r0, r0, r1
	mov sb, r0
	mov r0, ip
	adds r0, #0xa0
	adds r0, r0, r1
	mov r8, r0
	mov r0, ip
	adds r0, #0x80
	adds r0, r1, r0
	str r0, [sp, #0x20]
	mov r0, ip
	adds r0, #0x60
	adds r0, r1, r0
	str r0, [sp, #0x24]
	mov r0, ip
	adds r0, #0x40
	adds r5, r1, r0
	subs r0, #0x20
	adds r4, r1, r0
	mov r0, ip
	adds r3, r1, r0
_0808ED52:
	strh r3, [r2]
	ldr r6, [sp, #0x1c]
	strh r4, [r6]
	ldr r7, [sp, #0x18]
	strh r5, [r7]
	mov r0, sp
	ldrh r6, [r0, #0x24]
	ldr r0, [sp, #0x14]
	strh r6, [r0]
	movs r7, #0x80
	lsls r7, r7, #1
	adds r0, r2, r7
	mov r6, sp
	ldrh r6, [r6, #0x20]
	strh r6, [r0]
	adds r7, #0x40
	adds r0, r2, r7
	mov r6, r8
	strh r6, [r0]
	adds r7, #0x40
	adds r0, r2, r7
	mov r6, sb
	strh r6, [r0]
	adds r7, #0x40
	adds r0, r2, r7
	mov r6, sl
	strh r6, [r0]
	ldr r7, [sp, #0x14]
	adds r7, #2
	str r7, [sp, #0x14]
	ldr r0, [sp, #0x18]
	adds r0, #2
	str r0, [sp, #0x18]
	ldr r6, [sp, #0x1c]
	adds r6, #2
	str r6, [sp, #0x1c]
	adds r2, #2
	movs r7, #1
	add sl, r7
	movs r0, #1
	add sb, r0
	add r8, r0
	ldr r6, [sp, #0x20]
	adds r6, #1
	str r6, [sp, #0x20]
	ldr r7, [sp, #0x24]
	adds r7, #1
	str r7, [sp, #0x24]
	adds r5, #1
	adds r4, #1
	adds r3, #1
	ldr r0, [sp, #4]
	adds r0, #1
	str r0, [sp, #4]
	cmp r0, #7
	ble _0808ED52
	ldr r2, [sp, #0xc]
	cmp r2, #3
	ble _0808ECF0
	ldr r3, [sp, #8]
	cmp r3, #3
	ble _0808ECE6
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808EDE0
sub_808EDE0: @ 0x0808EDE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl ResetText
	bl LoadUiFrameGraphics
	bl ResetTextFont
	bl sub_808E79C
	ldr r7, _0808EFE8 @ =gDispIo
	movs r4, #1
	ldrb r0, [r7, #1]
	orrs r0, r4
	movs r1, #2
	mov sb, r1
	mov r2, sb
	orrs r0, r2
	movs r5, #4
	mov sl, r5
	mov r1, sl
	orrs r0, r1
	movs r2, #8
	orrs r0, r2
	movs r5, #0x10
	mov r8, r5
	mov r1, r8
	orrs r0, r1
	strb r0, [r7, #1]
	ldr r0, _0808EFEC @ =0x02016A24
	movs r6, #0
	strh r6, [r0]
	ldr r0, _0808EFF0 @ =0x02016A26
	strh r6, [r0]
	ldr r0, _0808EFF4 @ =0x02016A2C
	strb r6, [r0]
	ldr r1, _0808EFF8 @ =0x02016A1C
	movs r0, #0x80
	strh r0, [r1]
	ldr r5, _0808EFFC @ =0x02016A1E
	movs r0, #0xe0
	strh r0, [r5]
	ldr r1, _0808F000 @ =0x02016A20
	movs r0, #0xff
	strh r0, [r1]
	movs r0, #0
	movs r1, #0
	movs r2, #0x80
	bl SetBgOffset
	ldrh r2, [r5]
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r2, #0x20
	ldrb r0, [r7, #1]
	orrs r0, r2
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r7, #1]
	adds r0, r7, #0
	adds r0, #0x2d
	strb r6, [r0]
	adds r1, r7, #0
	adds r1, #0x31
	movs r0, #0x18
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x88
	strb r0, [r1]
	adds r1, #4
	ldrb r5, [r1]
	orrs r4, r5
	mov r0, sb
	orrs r4, r0
	mov r5, sl
	orrs r4, r5
	movs r0, #8
	orrs r4, r0
	mov r5, r8
	orrs r4, r5
	adds r3, r7, #0
	adds r3, #0x36
	subs r0, #0xa
	ldrb r5, [r3]
	ands r0, r5
	mov r5, sb
	orrs r0, r5
	mov r5, sl
	orrs r0, r5
	movs r5, #8
	orrs r0, r5
	mov r5, r8
	orrs r0, r5
	orrs r4, r2
	strb r4, [r1]
	orrs r0, r2
	strb r0, [r3]
	ldr r0, _0808F004 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r5, _0808F008 @ =gBg1Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r0, _0808F00C @ =gBg2Tm
	mov r8, r0
	movs r1, #0
	bl TmFill
	ldr r1, _0808F010 @ =gBg3Tm
	mov sl, r1
	mov r0, sl
	movs r1, #0
	bl TmFill
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r7, #0
	adds r1, #0x44
	movs r0, #6
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	strb r6, [r0]
	ldr r0, _0808F014 @ =0x0000FFE0
	ldrh r2, [r7, #0x3c]
	ands r0, r2
	movs r1, #4
	orrs r0, r1
	ldr r1, _0808F018 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r7, #0x3c]
	bl sub_808DD40
	ldr r0, _0808F01C @ =gUnk_0834138C
	movs r1, #0x80
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0808F020 @ =gUnk_08341DA0
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808F024 @ =gUnk_0833C03C
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r4, _0808F028 @ =gUnk_08342A98
	movs r1, #0x98
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808F02C @ =gUnk_083092CC
	ldr r1, _0808F030 @ =0x06011000
	bl Decompress
	ldr r0, _0808F034 @ =gUnk_08342438
	ldr r1, _0808F038 @ =0x06011800
	bl Decompress
	ldr r0, _0808F03C @ =gUnk_08341DC0
	ldr r1, _0808F040 @ =0x06013000
	bl Decompress
	ldr r0, _0808F044 @ =gUnk_083413CC
	ldr r1, _0808F048 @ =0x0600D000
	bl Decompress
	ldr r4, _0808F04C @ =gUnk_0833C984
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r1, _0808F050 @ =0x00000426
	adds r5, r5, r1
	ldr r1, _0808F054 @ =gUnk_08342AF8
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r5, #0
	bl TmApplyTsa_t
	movs r1, #0xa0
	lsls r1, r1, #2
	mov r0, r8
	movs r2, #6
	bl sub_808ECD0
	ldr r1, _0808F058 @ =gUnk_08340ED8
	movs r2, #0x80
	lsls r2, r2, #7
	mov r0, sl
	bl TmApplyTsa_t
	ldr r0, _0808F05C @ =gUnk_0868B768
	movs r1, #3
	bl SpawnProc
	movs r0, #0xf
	bl EnableBgSync
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808EFE8: .4byte gDispIo
_0808EFEC: .4byte 0x02016A24
_0808EFF0: .4byte 0x02016A26
_0808EFF4: .4byte 0x02016A2C
_0808EFF8: .4byte 0x02016A1C
_0808EFFC: .4byte 0x02016A1E
_0808F000: .4byte 0x02016A20
_0808F004: .4byte gBg0Tm
_0808F008: .4byte gBg1Tm
_0808F00C: .4byte gBg2Tm
_0808F010: .4byte gBg3Tm
_0808F014: .4byte 0x0000FFE0
_0808F018: .4byte 0x0000E0FF
_0808F01C: .4byte gUnk_0834138C
_0808F020: .4byte gUnk_08341DA0
_0808F024: .4byte gUnk_0833C03C
_0808F028: .4byte gUnk_08342A98
_0808F02C: .4byte gUnk_083092CC
_0808F030: .4byte 0x06011000
_0808F034: .4byte gUnk_08342438
_0808F038: .4byte 0x06011800
_0808F03C: .4byte gUnk_08341DC0
_0808F040: .4byte 0x06013000
_0808F044: .4byte gUnk_083413CC
_0808F048: .4byte 0x0600D000
_0808F04C: .4byte gUnk_0833C984
_0808F050: .4byte 0x00000426
_0808F054: .4byte gUnk_08342AF8
_0808F058: .4byte gUnk_08340ED8
_0808F05C: .4byte gUnk_0868B768

	thumb_func_start sub_808F060
sub_808F060: @ 0x0808F060
	push {r4, lr}
	movs r4, #0
	movs r1, #4
	strh r1, [r0, #0x2e]
	strh r4, [r0, #0x30]
	ldr r2, _0808F08C @ =0x02016A1C
	ldr r1, _0808F090 @ =0x02016A22
	movs r0, #0x7a
	strh r0, [r1]
	strh r0, [r2]
	movs r0, #0
	bl sub_808E93C
	ldr r0, _0808F094 @ =0x02016A24
	strh r4, [r0]
	movs r0, #1
	bl EnableBgSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808F08C: .4byte 0x02016A1C
_0808F090: .4byte 0x02016A22
_0808F094: .4byte 0x02016A24

	thumb_func_start sub_808F098
sub_808F098: @ 0x0808F098
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r1, #0x30
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0808F0B0
	ldr r0, _0808F12C @ =0x02016A1C
	ldrh r0, [r0]
	bl sub_808EC78
	movs r0, #0
	strh r0, [r4, #0x30]
_0808F0B0:
	ldr r7, _0808F130 @ =0x02016A26
	ldrh r0, [r7]
	cmp r0, #8
	bhi _0808F0CC
	ldrh r0, [r4, #0x2e]
	adds r1, r0, #1
	strh r1, [r4, #0x2e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	bgt _0808F0C8
	b _0808F220
_0808F0C8:
	movs r0, #0
	strh r0, [r4, #0x2e]
_0808F0CC:
	ldr r5, _0808F12C @ =0x02016A1C
	ldrh r2, [r5]
	adds r2, #1
	strh r2, [r5]
	movs r6, #0xff
	ands r2, r6
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldrh r1, [r7]
	cmp r1, #0xc
	bls _0808F0F8
	ldr r0, _0808F134 @ =0x02016A1E
	ldrh r2, [r0]
	adds r2, #1
	strh r2, [r0]
	ands r2, r6
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
_0808F0F8:
	ldr r2, _0808F138 @ =0x02016A22
	ldrh r5, [r5]
	ldrh r1, [r2]
	subs r0, r5, r1
	movs r1, #0xf0
	ands r0, r1
	asrs r1, r0, #3
	ldr r0, _0808F13C @ =0x02016A20
	adds r3, r0, #0
	ldrh r0, [r3]
	cmp r1, r0
	bne _0808F112
	b _0808F220
_0808F112:
	strh r1, [r3]
	movs r0, #1
	strh r0, [r4, #0x30]
	ldrh r0, [r7]
	cmp r0, #0xe
	bls _0808F120
	b _0808F218
_0808F120:
	lsls r0, r0, #2
	ldr r1, _0808F140 @ =_0808F144
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808F12C: .4byte 0x02016A1C
_0808F130: .4byte 0x02016A26
_0808F134: .4byte 0x02016A1E
_0808F138: .4byte 0x02016A22
_0808F13C: .4byte 0x02016A20
_0808F140: .4byte _0808F144
_0808F144: @ jump table
	.4byte _0808F180 @ case 0
	.4byte _0808F218 @ case 1
	.4byte _0808F218 @ case 2
	.4byte _0808F218 @ case 3
	.4byte _0808F218 @ case 4
	.4byte _0808F218 @ case 5
	.4byte _0808F218 @ case 6
	.4byte _0808F218 @ case 7
	.4byte _0808F18E @ case 8
	.4byte _0808F1A4 @ case 9
	.4byte _0808F218 @ case 10
	.4byte _0808F1BC @ case 11
	.4byte _0808F218 @ case 12
	.4byte _0808F1C4 @ case 13
	.4byte _0808F1EC @ case 14
_0808F180:
	ldrh r0, [r3]
	bl sub_808E93C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808F220
	b _0808F218
_0808F18E:
	ldr r0, _0808F1A0 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	movs r0, #1
	bl EnableBgSync
	b _0808F218
	.align 2, 0
_0808F1A0: .4byte gBg0Tm
_0808F1A4:
	movs r1, #0x80
	strh r1, [r2]
	ldr r0, _0808F1B8 @ =0x02016A1C
	strh r1, [r0]
	movs r0, #0
	strh r0, [r3]
	bl sub_808EA74
	b _0808F218
	.align 2, 0
_0808F1B8: .4byte 0x02016A1C
_0808F1BC:
	ldrh r0, [r3]
	bl sub_808EB94
	b _0808F218
_0808F1C4:
	ldrh r0, [r3]
	bl sub_808EC48
	ldr r2, _0808F1E8 @ =gDispIo
	adds r2, #0x36
	movs r0, #1
	ldrb r1, [r2]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
	b _0808F218
	.align 2, 0
_0808F1E8: .4byte gDispIo
_0808F1EC:
	ldr r1, _0808F20C @ =0x02016A2A
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0808F210 @ =gUnk_0868B730
	movs r1, #3
	bl SpawnProc
	ldr r0, _0808F214 @ =gUnk_0868B6D8
	movs r1, #3
	bl SpawnProc
	adds r0, r4, #0
	bl Proc_Break
	b _0808F220
	.align 2, 0
_0808F20C: .4byte 0x02016A2A
_0808F210: .4byte gUnk_0868B730
_0808F214: .4byte gUnk_0868B6D8
_0808F218:
	ldr r1, _0808F228 @ =0x02016A26
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0808F220:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808F228: .4byte 0x02016A26

	thumb_func_start sub_808F22C
sub_808F22C: @ 0x0808F22C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0808F254 @ =gKeySt
	ldr r1, [r0]
	movs r0, #3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0808F25C
	ldr r0, _0808F258 @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #6
	bne _0808F25C
	adds r0, r4, #0
	bl Proc_Break
	b _0808F270
	.align 2, 0
_0808F254: .4byte gKeySt
_0808F258: .4byte gUnk_0868B3FC
_0808F25C:
	bl sub_8036DEC
	cmp r0, #0
	beq _0808F270
	ldr r1, _0808F278 @ =0x02016A2C
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl Proc_Break
_0808F270:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808F278: .4byte 0x02016A2C

	thumb_func_start sub_808F27C
sub_808F27C: @ 0x0808F27C
	push {lr}
	ldr r0, _0808F298 @ =gUnk_0868B5E8
	bl Proc_EndEach
	ldr r0, _0808F29C @ =gUnk_0868B88C
	bl Proc_EndEach
	ldr r0, _0808F2A0 @ =gUnk_0868B610
	bl Proc_EndEach
	bl EndGreenText
	pop {r0}
	bx r0
	.align 2, 0
_0808F298: .4byte gUnk_0868B5E8
_0808F29C: .4byte gUnk_0868B88C
_0808F2A0: .4byte gUnk_0868B610

	thumb_func_start sub_808F2A4
sub_808F2A4: @ 0x0808F2A4
	push {lr}
	ldr r0, _0808F2D4 @ =gUnk_0868B648
	bl Proc_EndEach
	ldr r0, _0808F2D8 @ =gUnk_0868B768
	bl Proc_EndEach
	ldr r0, _0808F2DC @ =gUnk_0868B730
	bl Proc_EndEach
	ldr r0, _0808F2E0 @ =gUnk_0868B6D8
	bl Proc_EndEach
	ldr r0, _0808F2E4 @ =gUnk_0868B80C
	bl Proc_EndEach
	ldr r0, _0808F2E8 @ =gUnk_0868B8AC
	bl Proc_EndEach
	ldr r0, _0808F2EC @ =gUnk_0868B750
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_0808F2D4: .4byte gUnk_0868B648
_0808F2D8: .4byte gUnk_0868B768
_0808F2DC: .4byte gUnk_0868B730
_0808F2E0: .4byte gUnk_0868B6D8
_0808F2E4: .4byte gUnk_0868B80C
_0808F2E8: .4byte gUnk_0868B8AC
_0808F2EC: .4byte gUnk_0868B750

	thumb_func_start sub_808F2F0
sub_808F2F0: @ 0x0808F2F0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808F308 @ =0x02016A2C
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808F304
	adds r0, r1, #0
	movs r1, #1
	bl Proc_Goto
_0808F304:
	pop {r0}
	bx r0
	.align 2, 0
_0808F308: .4byte 0x02016A2C

	thumb_func_start sub_808F30C
sub_808F30C: @ 0x0808F30C
	push {r4, r5, r6, lr}
	movs r6, #0
	bl sub_80848DC
	adds r5, r0, #0
	movs r4, #0
	cmp r6, r5
	bge _0808F330
_0808F31C:
	adds r0, r4, #0
	bl sub_80848BC
	ldr r0, [r0]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x16
	adds r6, r6, r0
	adds r4, #1
	cmp r4, r5
	blt _0808F31C
_0808F330:
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808F33C
sub_808F33C: @ 0x0808F33C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	bl sub_808F30C
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r1, #0
	add r0, sp, #0xc
_0808F34C:
	str r1, [r0]
	subs r0, #4
	cmp r0, sp
	bge _0808F34C
	bl sub_80848DC
	adds r6, r0, #0
	movs r4, #0
	cmp r4, r6
	bge _0808F3C6
	ldr r5, _0808F3E4 @ =ChapterInfoTable
_0808F362:
	adds r0, r4, #0
	bl sub_80848BC
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r5
	ldr r2, [sp]
	ldrb r1, [r1, #0x1e]
	adds r2, r1, r2
	str r2, [sp]
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r5
	ldr r2, [sp, #4]
	ldrb r1, [r1, #0x1d]
	adds r2, r1, r2
	str r2, [sp, #4]
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r5
	ldr r2, [sp, #8]
	ldrb r1, [r1, #0x1c]
	adds r2, r1, r2
	str r2, [sp, #8]
	ldr r1, [r0]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1a
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r1, [sp, #0xc]
	ldrb r0, [r0, #0x1b]
	adds r1, r0, r1
	str r1, [sp, #0xc]
	adds r4, #1
	cmp r4, r6
	blt _0808F362
_0808F3C6:
	movs r4, #0
	mov r1, sp
_0808F3CA:
	ldr r0, [r1]
	cmp r7, r0
	bgt _0808F3D8
	adds r1, #4
	adds r4, #1
	cmp r4, #3
	ble _0808F3CA
_0808F3D8:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808F3E4: .4byte ChapterInfoTable

	thumb_func_start sub_808F3E8
sub_808F3E8: @ 0x0808F3E8
	push {lr}
	sub sp, #0x10
	bl sub_8086AAC
	ldr r3, _0808F44C @ =ChapterInfoTable
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldrb r1, [r1, #0x1e]
	str r1, [sp]
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldrb r1, [r1, #0x1d]
	str r1, [sp, #4]
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldrb r1, [r1, #0x1c]
	str r1, [sp, #8]
	ldr r2, [r0]
	lsls r2, r2, #0x1a
	lsrs r2, r2, #0x1a
	lsls r1, r2, #4
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldrb r1, [r1, #0x1b]
	str r1, [sp, #0xc]
	ldr r0, [r0]
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x16
	ldr r0, _0808F450 @ =0x02016A2D
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808F454
	movs r0, #0
	b _0808F46A
	.align 2, 0
_0808F44C: .4byte ChapterInfoTable
_0808F450: .4byte 0x02016A2D
_0808F454:
	movs r2, #0
	mov r1, sp
_0808F458:
	ldr r0, [r1]
	cmp r3, r0
	bgt _0808F466
	adds r1, #4
	adds r2, #1
	cmp r2, #3
	ble _0808F458
_0808F466:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
_0808F46A:
	add sp, #0x10
	pop {r1}
	bx r1

	thumb_func_start sub_808F470
sub_808F470: @ 0x0808F470
	push {r4, lr}
	bl sub_8084CD8
	adds r4, r0, #0
	bl sub_8084CFC
	movs r1, #0x64
	muls r0, r1, r0
	adds r1, r4, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_808F490
sub_808F490: @ 0x0808F490
	push {lr}
	bl sub_808F470
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r1, #0
	ldr r3, _0808F4B4 @ =gUnk_0868B79C
_0808F49E:
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r2, r0
	blt _0808F4AC
	adds r1, #1
	cmp r1, #3
	ble _0808F49E
_0808F4AC:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0
_0808F4B4: .4byte gUnk_0868B79C

	thumb_func_start sub_808F4B8
sub_808F4B8: @ 0x0808F4B8
	push {r4, lr}
	bl sub_8084CD8
	adds r4, r0, #0
	bl sub_8084CFC
	movs r1, #0x64
	muls r0, r1, r0
	adds r1, r4, #0
	bl __divsi3
	adds r2, r0, #0
	movs r1, #0
	ldr r3, _0808F4EC @ =gUnk_0868B79C
_0808F4D4:
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r2, r0
	blt _0808F4E2
	adds r1, #1
	cmp r1, #3
	ble _0808F4D4
_0808F4E2:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F4EC: .4byte gUnk_0868B79C

	thumb_func_start sub_808F4F0
sub_808F4F0: @ 0x0808F4F0
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #1
_0808F4F6:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0808F514
	ldr r0, [r1]
	cmp r0, #0
	beq _0808F514
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _0808F514
	adds r5, #1
_0808F514:
	adds r4, #1
	cmp r4, #0x3f
	ble _0808F4F6
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_808F524
sub_808F524: @ 0x0808F524
	push {lr}
	bl sub_808F4F0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	movs r1, #0
	ldr r3, _0808F54C @ =gUnk_0868B7A0
_0808F532:
	adds r0, r1, r3
	ldrb r0, [r0]
	cmp r2, r0
	bge _0808F544
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #3
	bls _0808F532
_0808F544:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0
_0808F54C: .4byte gUnk_0868B7A0

	thumb_func_start sub_808F550
sub_808F550: @ 0x0808F550
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #1
_0808F556:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _0808F574
	ldr r0, [r1]
	cmp r0, #0
	beq _0808F574
	movs r0, #4
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _0808F574
	adds r5, #1
_0808F574:
	adds r4, #1
	cmp r4, #0x3f
	ble _0808F556
	movs r1, #0
	ldr r2, _0808F598 @ =gUnk_0868B7A4
_0808F57E:
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r5, r0
	bge _0808F590
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #3
	bls _0808F57E
_0808F590:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808F598: .4byte gUnk_0868B7A4

	thumb_func_start sub_808F59C
sub_808F59C: @ 0x0808F59C
	push {lr}
	bl sub_8084D34
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808F5AC
sub_808F5AC: @ 0x0808F5AC
	push {r4, lr}
	bl sub_808F59C
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	bl sub_80848DC
	subs r0, #1
	bl sub_80848BC
	ldr r1, [r0]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1a
	movs r3, #0
	ldr r2, _0808F5FC @ =ChapterInfoTable
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r1, [r0, #0x26]
	cmp r4, r1
	ble _0808F5F2
	movs r3, #1
	ldrh r1, [r0, #0x24]
	cmp r4, r1
	ble _0808F5F2
	movs r3, #2
	ldrh r1, [r0, #0x22]
	cmp r4, r1
	ble _0808F5F2
	movs r3, #3
	ldrh r0, [r0, #0x20]
	cmp r4, r0
	ble _0808F5F2
	movs r3, #4
_0808F5F2:
	adds r0, r3, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F5FC: .4byte ChapterInfoTable

	thumb_func_start sub_808F600
sub_808F600: @ 0x0808F600
	push {r4, lr}
	bl sub_8017104
	adds r4, r0, #0
	bl sub_80848DC
	bl sub_80848BC
	ldr r0, _0808F640 @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r0, [r0]
	lsrs r3, r0, #1
	movs r1, #0
	ldr r2, _0808F644 @ =gUnk_0868B7A8
_0808F626:
	ldr r0, [r2]
	muls r0, r3, r0
	cmp r4, r0
	blo _0808F636
	adds r2, #4
	adds r1, #1
	cmp r1, #3
	ble _0808F626
_0808F636:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F640: .4byte gPlaySt
_0808F644: .4byte gUnk_0868B7A8

	thumb_func_start sub_808F648
sub_808F648: @ 0x0808F648
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #1
_0808F64E:
	adds r0, r4, #0
	bl GetUnit
	adds r2, r0, #0
	cmp r2, #0
	beq _0808F67A
	ldr r1, [r2]
	cmp r1, #0
	beq _0808F67A
	ldr r0, [r2, #4]
	ldr r1, [r1, #0x28]
	ldr r0, [r0, #0x24]
	orrs r1, r0
	movs r0, #0x80
	lsls r0, r0, #1
	ands r1, r0
	cmp r1, #0
	beq _0808F674
	adds r5, #0x14
_0808F674:
	movs r0, #8
	ldrsb r0, [r2, r0]
	adds r5, r5, r0
_0808F67A:
	adds r4, #1
	cmp r4, #0x3f
	ble _0808F64E
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808F68C
sub_808F68C: @ 0x0808F68C
	push {r4, lr}
	bl sub_808F648
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	bl sub_80848DC
	subs r0, #1
	bl sub_80848BC
	ldr r1, [r0]
	lsls r1, r1, #0x1a
	lsrs r1, r1, #0x1a
	movs r3, #0
	ldr r2, _0808F6DC @ =ChapterInfoTable
	lsls r0, r1, #4
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldrh r1, [r0, #0x2e]
	cmp r4, r1
	ble _0808F6D2
	movs r3, #1
	ldrh r1, [r0, #0x2c]
	cmp r4, r1
	ble _0808F6D2
	movs r3, #2
	ldrh r1, [r0, #0x2a]
	cmp r4, r1
	ble _0808F6D2
	movs r3, #3
	ldrh r0, [r0, #0x28]
	cmp r4, r0
	ble _0808F6D2
	movs r3, #4
_0808F6D2:
	adds r0, r3, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F6DC: .4byte ChapterInfoTable

	thumb_func_start sub_808F6E0
sub_808F6E0: @ 0x0808F6E0
	push {r4, r5, r6, lr}
	movs r4, #0
	ldr r5, _0808F72C @ =gUnk_0868B7B8
	movs r3, #0
	ldr r1, _0808F730 @ =0x02016A2E
	movs r2, #5
_0808F6EC:
	ldrh r6, [r1]
	adds r0, r6, r3
	adds r0, r0, r5
	ldrb r0, [r0]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r3, #5
	adds r1, #2
	subs r2, #1
	cmp r2, #0
	bge _0808F6EC
	movs r2, #0
	ldr r0, _0808F734 @ =gUnk_0868B7D6
_0808F708:
	ldrh r1, [r0]
	cmp r4, r1
	blo _0808F724
	adds r0, #2
	adds r2, #1
	cmp r2, #4
	ble _0808F708
	ldr r1, _0808F738 @ =gPlaySt
	movs r0, #0x40
	ldrb r1, [r1, #0x14]
	ands r0, r1
	cmp r0, #0
	beq _0808F724
	adds r2, #1
_0808F724:
	adds r0, r2, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808F72C: .4byte gUnk_0868B7B8
_0808F730: .4byte 0x02016A2E
_0808F734: .4byte gUnk_0868B7D6
_0808F738: .4byte gPlaySt

	thumb_func_start sub_808F73C
sub_808F73C: @ 0x0808F73C
	push {r4, r5, lr}
	movs r3, #0
	ldr r4, _0808F774 @ =gUnk_0868B7E2
	ldr r2, _0808F778 @ =0x02016A2E
	movs r1, #2
_0808F746:
	ldrh r5, [r2]
	adds r0, r5, r4
	ldrb r0, [r0]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bge _0808F746
	movs r1, #0
	ldr r0, _0808F77C @ =gUnk_0868B7E8
_0808F75E:
	ldrh r2, [r0]
	cmp r3, r2
	blo _0808F76C
	adds r0, #2
	adds r1, #1
	cmp r1, #4
	ble _0808F75E
_0808F76C:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808F774: .4byte gUnk_0868B7E2
_0808F778: .4byte 0x02016A2E
_0808F77C: .4byte gUnk_0868B7E8

	thumb_func_start sub_808F780
sub_808F780: @ 0x0808F780
	push {lr}
	ldr r0, _0808F78C @ =gUnk_0868B7F4
	bl InitBgs
	pop {r0}
	bx r0
	.align 2, 0
_0808F78C: .4byte gUnk_0868B7F4

	thumb_func_start sub_808F790
sub_808F790: @ 0x0808F790
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808F7AC @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #2
	bls _0808F7A8
	adds r0, r1, #0
	movs r1, #3
	bl Proc_Goto
_0808F7A8:
	pop {r0}
	bx r0
	.align 2, 0
_0808F7AC: .4byte gUnk_0868B3FC

	thumb_func_start sub_808F7B0
sub_808F7B0: @ 0x0808F7B0
	push {lr}
	adds r1, r0, #0
	ldr r0, _0808F7CC @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #1
	bhi _0808F7C8
	adds r0, r1, #0
	movs r1, #2
	bl Proc_Goto
_0808F7C8:
	pop {r0}
	bx r0
	.align 2, 0
_0808F7CC: .4byte gUnk_0868B3FC

	thumb_func_start sub_808F7D0
sub_808F7D0: @ 0x0808F7D0
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	ldr r4, [sp, #0x18]
	ldr r6, [sp, #0x1c]
	str r4, [sp]
	bl Interpolate
	adds r5, r0, #0
	ldr r2, _0808F810 @ =gUnk_08343358
	ldr r7, _0808F814 @ =0x02016A2D
	ldrb r0, [r7]
	cmp r0, #0
	bne _0808F7EC
	adds r2, #0x20
_0808F7EC:
	lsls r1, r6, #5
	ldr r4, _0808F818 @ =gPal
	adds r1, r1, r4
	adds r0, r2, #0
	movs r2, #8
	bl CpuFastSet
	ldrb r0, [r7]
	cmp r0, #0
	beq _0808F81C
	str r5, [sp]
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	movs r3, #7
	bl sub_808DA90
	b _0808F82A
	.align 2, 0
_0808F810: .4byte gUnk_08343358
_0808F814: .4byte 0x02016A2D
_0808F818: .4byte gPal
_0808F81C:
	str r5, [sp]
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	movs r3, #0xb
	bl sub_808DA14
_0808F82A:
	bl EnablePalSync
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808F838
sub_808F838: @ 0x0808F838
	movs r1, #0
	strh r1, [r0, #0x2a]
	strh r1, [r0, #0x2c]
	strh r1, [r0, #0x2e]
	bx lr
	.align 2, 0

	thumb_func_start sub_808F844
sub_808F844: @ 0x0808F844
	push {r4, lr}
	sub sp, #8
	adds r4, r0, #0
	movs r1, #0x2e
	ldrsh r0, [r4, r1]
	cmp r0, #2
	beq _0808F87C
	cmp r0, #2
	bgt _0808F85C
	cmp r0, #0
	beq _0808F862
	b _0808F8A4
_0808F85C:
	cmp r0, #0x11
	beq _0808F8A0
	b _0808F8A4
_0808F862:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0x59
	bgt _0808F8A4
	adds r3, r0, #0
	movs r0, #0x5a
	str r0, [sp]
	movs r0, #0x13
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xf
	b _0808F894
_0808F87C:
	movs r1, #0x2a
	ldrsh r0, [r4, r1]
	cmp r0, #0x77
	bgt _0808F8A4
	adds r3, r0, #0
	movs r0, #0x78
	str r0, [sp]
	movs r0, #0x13
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xf
	movs r2, #0
_0808F894:
	bl sub_808F7D0
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	b _0808F8AE
_0808F8A0:
	movs r0, #0
	b _0808F8AC
_0808F8A4:
	movs r0, #0
	strh r0, [r4, #0x2a]
	ldrh r0, [r4, #0x2e]
	adds r0, #1
_0808F8AC:
	strh r0, [r4, #0x2e]
_0808F8AE:
	add sp, #8
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_808F8B8
sub_808F8B8: @ 0x0808F8B8
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	str r0, [sp]
	movs r0, #0xa
	mov r1, r8
	movs r2, #0
	movs r3, #0
	bl SetObjAffine
	ldr r4, _0808F96C @ =gSinLut
	movs r1, #0x80
	adds r1, r1, r4
	mov sb, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	movs r1, #2
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x1f
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r2, _0808F970 @ =0x02016A2A
	ldr r0, _0808F974 @ =0x02016A2D
	ldrb r0, [r0]
	movs r1, #2
	cmp r0, #0
	beq _0808F944
	movs r1, #1
_0808F944:
	strh r1, [r2]
	ldr r0, _0808F978 @ =gUnk_0868B730
	movs r1, #3
	bl SpawnProc
	ldr r0, _0808F97C @ =gUnk_0868B80C
	movs r1, #3
	bl SpawnProc
	ldr r0, _0808F980 @ =gUnk_0868B88C
	movs r1, #3
	bl SpawnProc
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808F96C: .4byte gSinLut
_0808F970: .4byte 0x02016A2A
_0808F974: .4byte 0x02016A2D
_0808F978: .4byte gUnk_0868B730
_0808F97C: .4byte gUnk_0868B80C
_0808F980: .4byte gUnk_0868B88C

	thumb_func_start sub_808F984
sub_808F984: @ 0x0808F984
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	movs r6, #0
	ldr r1, _0808FA10 @ =gUnk_0868B3FC
	ldr r0, [r1]
	adds r0, #0x9f
	ldrb r0, [r0]
	adds r0, #1
	cmp r6, r0
	bge _0808FA08
	adds r7, r1, #0
_0808F99A:
	ldr r3, [r7]
	lsls r1, r6, #1
	adds r0, r3, #0
	adds r0, #0x42
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, #6
	lsls r5, r0, #3
	adds r0, r3, #0
	adds r0, #0x50
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r4, r0, #3
	adds r0, r3, #0
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r6, r0
	bne _0808F9CE
	movs r0, #0xf8
	lsls r0, r0, #6
	orrs r5, r0
	movs r0, #0x80
	lsls r0, r0, #1
	orrs r4, r0
_0808F9CE:
	adds r0, r3, #0
	adds r0, #0x5e
	adds r0, r0, r1
	ldrh r0, [r0]
	lsls r2, r0, #1
	adds r2, #0xc0
	lsls r1, r6, #2
	adds r0, r3, #0
	adds r0, #0x7c
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r6, #4
	movs r1, #0xf
	ands r0, r1
	lsls r0, r0, #0xc
	orrs r0, r2
	str r0, [sp]
	movs r0, #4
	adds r1, r5, #0
	adds r2, r4, #0
	bl PutSpriteExt
	adds r6, #1
	ldr r0, [r7]
	adds r0, #0x9f
	ldrb r0, [r0]
	adds r0, #1
	cmp r6, r0
	blt _0808F99A
_0808FA08:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808FA10: .4byte gUnk_0868B3FC

	thumb_func_start sub_808FA14
sub_808FA14: @ 0x0808FA14
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl HasNextChapter
	ldr r1, _0808FCA0 @ =0x02016A2D
	strb r0, [r1]
	bl ResetText
	bl LoadUiFrameGraphics
	bl ResetTextFont
	bl sub_808E79C
	ldr r7, _0808FCA4 @ =gDispIo
	movs r4, #1
	ldrb r0, [r7, #1]
	orrs r0, r4
	movs r2, #2
	mov sb, r2
	mov r6, sb
	orrs r0, r6
	movs r1, #4
	mov r8, r1
	mov r2, r8
	orrs r0, r2
	movs r6, #8
	orrs r0, r6
	movs r5, #0x10
	orrs r0, r5
	strb r0, [r7, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r2, #0x20
	ldrb r0, [r7, #1]
	orrs r0, r2
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r7, #1]
	adds r0, r7, #0
	adds r0, #0x2d
	movs r1, #0
	mov sl, r1
	mov r6, sl
	strb r6, [r0]
	adds r1, r7, #0
	adds r1, #0x31
	movs r0, #0x18
	strb r0, [r1]
	subs r1, #5
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0x88
	strb r0, [r1]
	adds r1, #4
	ldrb r0, [r1]
	orrs r4, r0
	mov r6, sb
	orrs r4, r6
	mov r0, r8
	orrs r4, r0
	movs r6, #8
	orrs r4, r6
	orrs r4, r5
	adds r3, r7, #0
	adds r3, #0x36
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r6, [r3]
	ands r0, r6
	mov r6, sb
	orrs r0, r6
	mov r6, r8
	orrs r0, r6
	movs r6, #8
	orrs r0, r6
	orrs r0, r5
	orrs r4, r2
	strb r4, [r1]
	orrs r0, r2
	strb r0, [r3]
	ldr r0, _0808FCA8 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _0808FCAC @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r5, _0808FCB0 @ =gBg2Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r6, _0808FCB4 @ =gBg3Tm
	adds r0, r6, #0
	movs r1, #0
	bl TmFill
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r7, #0
	adds r1, #0x44
	movs r0, #6
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	mov r2, sl
	strb r2, [r0]
	ldr r0, _0808FCB8 @ =0x0000FFE0
	ldrh r1, [r7, #0x3c]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	ldr r1, _0808FCBC @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r7, #0x3c]
	bl sub_808DD78
	ldr r0, _0808FCC0 @ =gUnk_0834138C
	movs r1, #0x80
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _0808FCC4 @ =gUnk_08341DA0
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808FCC8 @ =gUnk_0833C03C
	movs r1, #0x90
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r2, _0808FCCC @ =gUnk_08343358
	ldr r1, _0808FCA0 @ =0x02016A2D
	ldrb r0, [r1]
	cmp r0, #0
	bne _0808FB7C
	adds r2, #0x20
_0808FB7C:
	movs r1, #0x98
	lsls r1, r1, #2
	adds r0, r2, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808FCD0 @ =gUnk_08342A98
	movs r1, #0xd8
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808FCD4 @ =gUnk_083092CC
	ldr r1, _0808FCD8 @ =0x06011000
	bl Decompress
	ldr r0, _0808FCDC @ =gUnk_08342438
	ldr r1, _0808FCE0 @ =0x06011800
	bl Decompress
	ldr r0, _0808FCE4 @ =gUnk_08342B54
	ldr r1, _0808FCE8 @ =0x06013000
	bl Decompress
	ldr r0, _0808FCEC @ =gUnk_083413CC
	ldr r1, _0808FCF0 @ =0x0600D000
	bl Decompress
	ldr r4, _0808FCF4 @ =gUnk_0833C984
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r1, r2
	adds r0, r4, #0
	bl Decompress
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r5, #0
	movs r2, #6
	bl sub_808ECD0
	ldr r1, _0808FCF8 @ =gUnk_08340ED8
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r6, #0
	bl TmApplyTsa_t
	ldr r5, _0808FCFC @ =gUnk_0868B3FC
	movs r4, #0xe8
	movs r6, #3
_0808FBE8:
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #6
	bl InitText
	adds r4, #8
	subs r6, #1
	cmp r6, #0
	bge _0808FBE8
	bl sub_8086AAC
	adds r5, r0, #0
	ldr r4, _0808FD00 @ =gBg0Tm+0x1CA
	ldr r2, [r5]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x16
	adds r0, r4, #0
	movs r1, #2
	bl PutNumber
	ldr r0, _0808FD04 @ =0x00000725
	bl DecodeMsg
	adds r1, r4, #2
	movs r2, #6
	str r2, [sp]
	str r0, [sp, #4]
	movs r0, #0
	movs r2, #0
	movs r3, #0
	bl PutDrawText
	adds r4, #0x1a
	movs r0, #0xb4
	ldrh r5, [r5, #2]
	adds r2, r5, #0
	muls r2, r0, r2
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl PutTime
	movs r7, #0xe8
	ldr r5, _0808FD08 @ =gUnk_0868B490
	movs r6, #3
_0808FC42:
	ldrh r0, [r5]
	bl DecodeMsg
	adds r4, r0, #0
	ldr r0, _0808FCFC @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, r0, r7
	ldrb r2, [r5, #0xd]
	lsls r1, r2, #5
	subs r1, #1
	ldrb r2, [r5, #0xc]
	adds r1, r2, r1
	lsls r1, r1, #1
	ldr r2, _0808FCA8 @ =gBg0Tm
	adds r1, r1, r2
	ldr r2, [r5, #4]
	movs r3, #6
	str r3, [sp]
	str r4, [sp, #4]
	movs r3, #0
	bl PutDrawText
	adds r7, #8
	adds r5, #0x10
	subs r6, #1
	cmp r6, #0
	bge _0808FC42
	ldr r0, _0808FD0C @ =gUnk_0868B768
	movs r1, #3
	bl SpawnProc
	ldr r0, _0808FD10 @ =gUnk_0868B8AC
	movs r1, #3
	bl SpawnProc
	movs r0, #0xf
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808FCA0: .4byte 0x02016A2D
_0808FCA4: .4byte gDispIo
_0808FCA8: .4byte gBg0Tm
_0808FCAC: .4byte gBg1Tm
_0808FCB0: .4byte gBg2Tm
_0808FCB4: .4byte gBg3Tm
_0808FCB8: .4byte 0x0000FFE0
_0808FCBC: .4byte 0x0000E0FF
_0808FCC0: .4byte gUnk_0834138C
_0808FCC4: .4byte gUnk_08341DA0
_0808FCC8: .4byte gUnk_0833C03C
_0808FCCC: .4byte gUnk_08343358
_0808FCD0: .4byte gUnk_08342A98
_0808FCD4: .4byte gUnk_083092CC
_0808FCD8: .4byte 0x06011000
_0808FCDC: .4byte gUnk_08342438
_0808FCE0: .4byte 0x06011800
_0808FCE4: .4byte gUnk_08342B54
_0808FCE8: .4byte 0x06013000
_0808FCEC: .4byte gUnk_083413CC
_0808FCF0: .4byte 0x0600D000
_0808FCF4: .4byte gUnk_0833C984
_0808FCF8: .4byte gUnk_08340ED8
_0808FCFC: .4byte gUnk_0868B3FC
_0808FD00: .4byte gBg0Tm+0x1CA
_0808FD04: .4byte 0x00000725
_0808FD08: .4byte gUnk_0868B490
_0808FD0C: .4byte gUnk_0868B768
_0808FD10: .4byte gUnk_0868B8AC

	thumb_func_start sub_808FD14
sub_808FD14: @ 0x0808FD14
	push {lr}
	adds r2, r0, #0
	ldr r0, _0808FD3C @ =gKeySt
	ldr r1, [r0]
	movs r0, #3
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0808FD38
	ldr r0, _0808FD40 @ =gUnk_0868B3FC
	ldr r0, [r0]
	adds r0, #0x9f
	ldrb r0, [r0]
	cmp r0, #3
	bne _0808FD38
	adds r0, r2, #0
	bl Proc_Break
_0808FD38:
	pop {r0}
	bx r0
	.align 2, 0
_0808FD3C: .4byte gKeySt
_0808FD40: .4byte gUnk_0868B3FC

	thumb_func_start sub_808FD44
sub_808FD44: @ 0x0808FD44
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _0808FD5C
	ldr r0, _0808FD58 @ =gUnk_0868B8E4
	movs r1, #3
	bl SpawnProc
	b _0808FD62
	.align 2, 0
_0808FD58: .4byte gUnk_0868B8E4
_0808FD5C:
	ldr r0, _0808FD68 @ =gUnk_0868B8E4
	bl SpawnProcLocking
_0808FD62:
	pop {r0}
	bx r0
	.align 2, 0
_0808FD68: .4byte gUnk_0868B8E4

	thumb_func_start sub_808FD6C
sub_808FD6C: @ 0x0808FD6C
	push {lr}
	adds r1, r0, #0
	cmp r1, #0
	bne _0808FD84
	ldr r0, _0808FD80 @ =gUnk_0868B99C
	movs r1, #3
	bl SpawnProc
	b _0808FD8A
	.align 2, 0
_0808FD80: .4byte gUnk_0868B99C
_0808FD84:
	ldr r0, _0808FD90 @ =gUnk_0868B99C
	bl SpawnProcLocking
_0808FD8A:
	pop {r0}
	bx r0
	.align 2, 0
_0808FD90: .4byte gUnk_0868B99C

	thumb_func_start sub_808FD94
sub_808FD94: @ 0x0808FD94
	push {r4, lr}
	ldr r4, _0808FDCC @ =gUnk_083442C4
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r1, #0xa0
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0808FDD0 @ =gUnk_08343398
	ldr r1, _0808FDD4 @ =0x06015000
	bl Decompress
	ldr r0, _0808FDD8 @ =gUnk_08343A80
	ldr r1, _0808FDDC @ =0x06014000
	bl Decompress
	ldr r0, _0808FDE0 @ =gUnk_08343FAC
	ldr r1, _0808FDE4 @ =0x06001000
	bl Decompress
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808FDCC: .4byte gUnk_083442C4
_0808FDD0: .4byte gUnk_08343398
_0808FDD4: .4byte 0x06015000
_0808FDD8: .4byte gUnk_08343A80
_0808FDDC: .4byte 0x06014000
_0808FDE0: .4byte gUnk_08343FAC
_0808FDE4: .4byte 0x06001000

	thumb_func_start sub_808FDE8
sub_808FDE8: @ 0x0808FDE8
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	adds r3, r5, #0
	lsls r0, r3, #0x10
	cmp r0, #0
	beq _0808FE30
_0808FE00:
	asrs r0, r0, #0x10
	subs r0, r5, r0
	lsls r0, r0, #6
	adds r2, r7, r0
	lsls r1, r6, #0x10
	lsls r3, r3, #0x10
	cmp r1, #0
	beq _0808FE24
_0808FE10:
	strh r4, [r2]
	adds r2, #2
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, _0808FE38 @ =0xFFFF0000
	adds r1, r1, r0
	asrs r0, r1, #0x10
	cmp r0, #0
	bgt _0808FE10
_0808FE24:
	ldr r1, _0808FE38 @ =0xFFFF0000
	adds r0, r3, r1
	lsrs r3, r0, #0x10
	lsls r0, r3, #0x10
	cmp r0, #0
	bgt _0808FE00
_0808FE30:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808FE38: .4byte 0xFFFF0000

	thumb_func_start sub_808FE3C
sub_808FE3C: @ 0x0808FE3C
	push {r4, lr}
	adds r4, r0, #0
	bl LoadUiFrameGraphics
	adds r4, #0x64
	movs r3, #0
	movs r0, #0
	strh r0, [r4]
	ldr r0, _0808FEA4 @ =0x02016A3C
	strb r3, [r0]
	ldr r0, _0808FEA8 @ =0x02016A3D
	strb r3, [r0]
	ldr r0, _0808FEAC @ =0x02016A3F
	strb r3, [r0]
	ldr r0, _0808FEB0 @ =0x02016A40
	strb r3, [r0]
	ldr r4, _0808FEB4 @ =gDispIo
	adds r2, r4, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x44
	strb r3, [r0]
	adds r1, r4, #0
	adds r1, #0x45
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x46
	strb r3, [r0]
	ldr r0, _0808FEB8 @ =0x0000FFE0
	ldrh r2, [r4, #0x3c]
	ands r0, r2
	movs r1, #3
	orrs r0, r1
	ldr r1, _0808FEBC @ =0x0000E0FF
	ands r0, r1
	movs r2, #0xc0
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r4, #0x3c]
	bl sub_808FD94
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0808FEA4: .4byte 0x02016A3C
_0808FEA8: .4byte 0x02016A3D
_0808FEAC: .4byte 0x02016A3F
_0808FEB0: .4byte 0x02016A40
_0808FEB4: .4byte gDispIo
_0808FEB8: .4byte 0x0000FFE0
_0808FEBC: .4byte 0x0000E0FF

	thumb_func_start sub_808FEC0
sub_808FEC0: @ 0x0808FEC0
	push {lr}
	ldr r2, _0808FED4 @ =0x02016A41
	movs r1, #1
	strb r1, [r2]
	bl sub_808FE3C
	bl sub_8091588
	pop {r0}
	bx r0
	.align 2, 0
_0808FED4: .4byte 0x02016A41

	thumb_func_start sub_808FED8
sub_808FED8: @ 0x0808FED8
	push {lr}
	ldr r2, _0808FEEC @ =0x02016A41
	movs r1, #2
	strb r1, [r2]
	bl sub_808FE3C
	bl sub_8091588
	pop {r0}
	bx r0
	.align 2, 0
_0808FEEC: .4byte 0x02016A41

	thumb_func_start sub_808FEF0
sub_808FEF0: @ 0x0808FEF0
	push {lr}
	ldr r2, _0808FF00 @ =0x02016A41
	movs r1, #0
	strb r1, [r2]
	bl sub_808FE3C
	pop {r0}
	bx r0
	.align 2, 0
_0808FF00: .4byte 0x02016A41

	thumb_func_start sub_808FF04
sub_808FF04: @ 0x0808FF04
	push {r4, r5, lr}
	adds r3, r0, #0
	adds r5, r1, #0
	adds r4, r2, #0
	ldr r0, _0808FF34 @ =0x02016A42
	ldrb r0, [r0]
	cmp r0, #0x13
	bhi _0808FF40
	ldr r1, _0808FF38 @ =0x02016A43
	adds r2, r3, #0
	adds r2, #0x4c
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, r0, r1
	movs r1, #0x16
	strb r1, [r0]
	ldr r1, _0808FF3C @ =0x02016AC3
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, r0, r1
	asrs r1, r4, #1
	strb r1, [r0]
	b _0808FF8C
	.align 2, 0
_0808FF34: .4byte 0x02016A42
_0808FF38: .4byte 0x02016A43
_0808FF3C: .4byte 0x02016AC3
_0808FF40:
	ldr r1, _0808FF5C @ =0x02016AC3
	adds r0, r3, #0
	adds r0, #0x4c
	movs r2, #0
	ldrsh r4, [r0, r2]
	adds r3, r4, r1
	ldrb r1, [r3]
	adds r2, r0, #0
	cmp r1, #0
	beq _0808FF60
	subs r0, r1, #1
	strb r0, [r3]
	b _0808FF8C
	.align 2, 0
_0808FF5C: .4byte 0x02016AC3
_0808FF60:
	ldr r3, _0808FF88 @ =0x02016A43
	adds r0, r4, r3
	ldrb r1, [r0]
	adds r1, #4
	strb r1, [r0]
	movs r1, #0
	ldrsh r0, [r2, r1]
	adds r0, r0, r3
	ldrb r1, [r0]
	cmp r1, r5
	ble _0808FF78
	strb r5, [r0]
_0808FF78:
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r3
	ldrb r0, [r0]
	b _0808FF94
	.align 2, 0
_0808FF88: .4byte 0x02016A43
_0808FF8C:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	movs r0, #0xf0
_0808FF94:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_808FF9C
sub_808FF9C: @ 0x0808FF9C
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	ldr r2, _0808FFC8 @ =gUnk_0868BB1C
	ldrb r0, [r2]
	cmp r0, #0
	beq _0808FFD8
	movs r1, #0
	adds r3, r2, #0
_0808FFB0:
	ldrb r0, [r3]
	cmp r0, r6
	bne _0808FFCC
	ldrb r0, [r3, #1]
	cmp r0, r5
	bne _0808FFCC
	ldrb r3, [r3, #2]
	adds r0, r3, r4
	adds r4, r0, #0
	subs r4, #8
	b _0808FFD8
	.align 2, 0
_0808FFC8: .4byte gUnk_0868BB1C
_0808FFCC:
	adds r1, #4
	adds r3, #4
	adds r0, r1, r2
	ldrb r0, [r0]
	cmp r0, #0
	bne _0808FFB0
_0808FFD8:
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_808FFE0
sub_808FFE0: @ 0x0808FFE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp]
	mov r8, r1
	ldr r2, _08090050 @ =gUnk_0866354C
	lsls r0, r1, #1
	add r0, r8
	lsls r4, r0, #2
	adds r1, r4, r2
	ldrb r3, [r1, #8]
	lsls r0, r3, #3
	adds r5, r0, #0
	adds r5, #0x16
	ldrb r0, [r1, #9]
	adds r0, #2
	lsls r7, r0, #3
	movs r6, #0
	str r6, [sp, #8]
	movs r3, #0
	mov ip, r3
	ldr r1, _08090054 @ =0x02016A3C
	ldrb r6, [r1]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	subs r0, #1
	cmp r0, #1
	bhi _08090026
	b _080902D0
_08090026:
	ldr r0, [sp]
	adds r0, #0x4c
	mov r1, sp
	ldrh r1, [r1, #8]
	strh r1, [r0]
	ldr r0, _08090058 @ =0x02016A3F
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809003A
	b _080902D0
_0809003A:
	movs r6, #0
	str r6, [sp, #4]
	cmp r0, #1
	bne _08090048
	movs r0, #0x80
	lsls r0, r0, #3
	str r0, [sp, #4]
_08090048:
	adds r0, r2, #4
	adds r0, r4, r0
	ldr r0, [r0]
	b _080902BA
	.align 2, 0
_08090050: .4byte gUnk_0866354C
_08090054: .4byte 0x02016A3C
_08090058: .4byte 0x02016A3F
_0809005C:
	mov r0, sl
	subs r0, #0xa
	cmp r0, #0x24
	bls _08090066
	b _0809017C
_08090066:
	lsls r0, r0, #2
	ldr r1, _08090070 @ =_08090074
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08090070: .4byte _08090074
_08090074: @ jump table
	.4byte _08090108 @ case 0
	.4byte _0809017C @ case 1
	.4byte _0809017C @ case 2
	.4byte _0809017C @ case 3
	.4byte _0809017C @ case 4
	.4byte _0809017C @ case 5
	.4byte _0809017C @ case 6
	.4byte _0809017C @ case 7
	.4byte _0809017C @ case 8
	.4byte _0809017C @ case 9
	.4byte _0809017C @ case 10
	.4byte _0809017C @ case 11
	.4byte _0809017C @ case 12
	.4byte _0809017C @ case 13
	.4byte _0809017C @ case 14
	.4byte _0809017C @ case 15
	.4byte _0809017C @ case 16
	.4byte _0809017C @ case 17
	.4byte _0809017C @ case 18
	.4byte _0809017C @ case 19
	.4byte _0809017C @ case 20
	.4byte _0809017C @ case 21
	.4byte _08090128 @ case 22
	.4byte _0809017C @ case 23
	.4byte _0809017C @ case 24
	.4byte _0809017C @ case 25
	.4byte _0809017C @ case 26
	.4byte _0809017C @ case 27
	.4byte _0809012C @ case 28
	.4byte _0809017C @ case 29
	.4byte _0809017C @ case 30
	.4byte _0809017C @ case 31
	.4byte _0809017C @ case 32
	.4byte _0809017C @ case 33
	.4byte _08090130 @ case 34
	.4byte _0809017C @ case 35
	.4byte _08090134 @ case 36
_08090108:
	adds r7, #0x10
	ldr r1, _08090124 @ =gUnk_0866354C
	mov r3, r8
	lsls r2, r3, #1
	adds r0, r2, r3
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r0, [r0, #8]
	lsls r0, r0, #3
	adds r5, r0, #0
	adds r5, #0x16
	movs r3, #0
	b _080902A2
	.align 2, 0
_08090124: .4byte gUnk_0866354C
_08090128:
	adds r5, #7
	b _0809029E
_0809012C:
	movs r4, #0x1c
	b _08090136
_08090130:
	movs r4, #0x1a
	b _08090136
_08090134:
	movs r4, #0x1b
_08090136:
	ldr r0, [sp]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_808FF04
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r7, #0
	ldr r6, [sp, #4]
	orrs r1, r6
	ldr r2, _08090174 @ =Sprite_16x16
	lsls r3, r4, #1
	movs r4, #0xa8
	lsls r4, r4, #2
	adds r3, r3, r4
	movs r4, #0x80
	lsls r4, r4, #7
	orrs r3, r4
	bl PutOamHiRam
	adds r2, r5, #1
	ldr r1, _08090178 @ =gUnk_0868BA3C
	adds r0, r1, #0
	adds r0, #0xd0
	ldrb r0, [r0]
	adds r5, r0, r2
	adds r1, #0xd2
	ldrb r3, [r1]
	mov r6, r8
	lsls r2, r6, #1
	b _080902A2
	.align 2, 0
_08090174: .4byte Sprite_16x16
_08090178: .4byte gUnk_0868BA3C
_0809017C:
	cmp r4, #0x60
	bgt _08090214
	subs r4, #0x41
	movs r0, #0
	mov sb, r0
	cmp r4, #0xf
	ble _0809018E
	movs r1, #0x20
	mov sb, r1
_0809018E:
	cmp r3, #0
	beq _080901B4
	ldr r0, _080901B0 @ =gUnk_0868BA3C
	lsls r1, r4, #3
	adds r0, r1, r0
	ldrb r0, [r0, #1]
	adds r2, r0, r3
	movs r0, #0xff
	ands r2, r0
	adds r6, r1, #0
	cmp r2, #0x7f
	bgt _080901C8
	movs r0, #0xf
	ands r2, r0
	asrs r0, r2, #1
	subs r5, r5, r0
	b _080901C8
	.align 2, 0
_080901B0: .4byte gUnk_0868BA3C
_080901B4:
	ldr r0, _0809020C @ =gUnk_0868BA3C
	lsls r2, r4, #3
	adds r0, r2, r0
	movs r1, #0x40
	ldrb r0, [r0, #1]
	ands r1, r0
	adds r6, r2, #0
	cmp r1, #0
	beq _080901C8
	subs r5, #2
_080901C8:
	adds r0, r5, #0
	mov r1, ip
	mov r2, sl
	bl sub_808FF9C
	adds r5, r0, #0
	ldr r0, [sp]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_808FF04
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r7, #0
	ldr r2, [sp, #4]
	orrs r1, r2
	ldr r2, _08090210 @ =Sprite_16x16
	lsls r3, r4, #1
	movs r4, #0xa0
	lsls r4, r4, #2
	add r4, sb
	adds r3, r3, r4
	movs r4, #0x80
	lsls r4, r4, #7
	orrs r3, r4
	bl PutOamHiRam
	adds r1, r5, #1
	ldr r0, _0809020C @ =gUnk_0868BA3C
	adds r0, r6, r0
	ldrb r3, [r0]
	adds r5, r3, r1
	ldrb r3, [r0, #2]
	b _0809029E
	.align 2, 0
_0809020C: .4byte gUnk_0868BA3C
_08090210: .4byte Sprite_16x16
_08090214:
	subs r4, #0x61
	movs r6, #0
	mov sb, r6
	cmp r4, #0xf
	ble _08090222
	movs r0, #0x20
	mov sb, r0
_08090222:
	cmp r3, #0
	beq _08090248
	ldr r0, _08090244 @ =gUnk_0868BA3C
	lsls r1, r4, #3
	adds r0, r1, r0
	ldrb r0, [r0, #4]
	adds r2, r0, r3
	movs r0, #0xff
	ands r2, r0
	adds r6, r1, #0
	cmp r2, #0x7f
	bgt _0809025C
	movs r0, #0xf
	ands r2, r0
	asrs r0, r2, #1
	subs r5, r5, r0
	b _0809025C
	.align 2, 0
_08090244: .4byte gUnk_0868BA3C
_08090248:
	ldr r0, _080902E0 @ =gUnk_0868BA3C
	lsls r2, r4, #3
	adds r0, r2, r0
	movs r1, #0x40
	ldrb r0, [r0, #4]
	ands r1, r0
	adds r6, r2, #0
	cmp r1, #0
	beq _0809025C
	subs r5, #2
_0809025C:
	adds r0, r5, #0
	mov r1, ip
	mov r2, sl
	bl sub_808FF9C
	adds r5, r0, #0
	ldr r0, [sp]
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_808FF04
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r7, #1
	ldr r2, [sp, #4]
	orrs r1, r2
	ldr r2, _080902E4 @ =Sprite_16x16
	lsls r3, r4, #1
	movs r4, #0x80
	lsls r4, r4, #2
	add r4, sb
	adds r3, r3, r4
	movs r4, #0x80
	lsls r4, r4, #7
	orrs r3, r4
	bl PutOamHiRam
	adds r1, r5, #1
	ldr r0, _080902E0 @ =gUnk_0868BA3C
	adds r0, r6, r0
	ldrb r3, [r0, #3]
	adds r5, r3, r1
	ldrb r3, [r0, #5]
_0809029E:
	mov r4, r8
	lsls r2, r4, #1
_080902A2:
	mov ip, sl
	ldr r6, [sp, #8]
	adds r6, #1
	str r6, [sp, #8]
	ldr r1, _080902E8 @ =gUnk_0866354C
	mov r4, r8
	adds r0, r2, r4
	lsls r0, r0, #2
	adds r1, #4
	adds r0, r0, r1
	ldr r0, [r0]
	adds r0, r0, r6
_080902BA:
	ldrb r4, [r0]
	mov sl, r4
	cmp r4, #0
	beq _080902C4
	b _0809005C
_080902C4:
	ldr r1, _080902EC @ =0x02016A42
	ldrb r0, [r1]
	cmp r0, #0x13
	bhi _080902D0
	adds r0, #1
	strb r0, [r1]
_080902D0:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080902E0: .4byte gUnk_0868BA3C
_080902E4: .4byte Sprite_16x16
_080902E8: .4byte gUnk_0866354C
_080902EC: .4byte 0x02016A42

	thumb_func_start sub_80902F0
sub_80902F0: @ 0x080902F0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r4, _08090374 @ =gUnk_0866354C
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	adds r0, r0, r4
	mov r8, r0
	ldrb r6, [r0, #8]
	adds r6, #1
	ldrb r1, [r0, #9]
	lsls r1, r1, #5
	mov sl, r1
	movs r0, #0
	mov sb, r0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _08090378 @ =0x02016A42
	mov r1, sb
	strb r1, [r0]
	cmp r5, #0
	beq _0809035E
	subs r1, r5, #1
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldrb r0, [r0, #9]
	lsls r4, r0, #6
	ldr r0, _0809037C @ =gBg0Tm
	adds r0, r4, r0
	movs r1, #0x1e
	movs r2, #2
	movs r3, #0
	bl TmFillRect_t
	ldr r0, _08090380 @ =gBg1Tm
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #0x1e
	movs r2, #2
	movs r3, #0
	bl TmFillRect_t
_0809035E:
	movs r7, #0x81
	lsls r7, r7, #7
	mov r1, r8
	ldr r0, [r1]
	cmp r0, #0
	bne _0809036C
	b _080904D6
_0809036C:
	ldr r1, _0809037C @ =gBg0Tm
	mov r8, r1
	b _080904CE
	.align 2, 0
_08090374: .4byte gUnk_0866354C
_08090378: .4byte 0x02016A42
_0809037C: .4byte gBg0Tm
_08090380: .4byte gBg1Tm
_08090384:
	adds r0, r4, #0
	subs r0, #0xa
	cmp r0, #0x24
	bls _0809038E
	b _0809049C
_0809038E:
	lsls r0, r0, #2
	ldr r1, _0809039C @ =_080903A0
	adds r0, r0, r1
	ldr r0, [r0]
	lsls r2, r5, #1
	mov pc, r0
	.align 2, 0
_0809039C: .4byte _080903A0
_080903A0: @ jump table
	.4byte _08090434 @ case 0
	.4byte _0809049C @ case 1
	.4byte _0809049C @ case 2
	.4byte _0809049C @ case 3
	.4byte _0809049C @ case 4
	.4byte _0809049C @ case 5
	.4byte _0809049C @ case 6
	.4byte _0809049C @ case 7
	.4byte _0809049C @ case 8
	.4byte _0809049C @ case 9
	.4byte _0809049C @ case 10
	.4byte _0809049C @ case 11
	.4byte _0809049C @ case 12
	.4byte _0809049C @ case 13
	.4byte _0809049C @ case 14
	.4byte _0809049C @ case 15
	.4byte _0809049C @ case 16
	.4byte _0809049C @ case 17
	.4byte _0809049C @ case 18
	.4byte _0809049C @ case 19
	.4byte _0809049C @ case 20
	.4byte _0809049C @ case 21
	.4byte _080904B4 @ case 22
	.4byte _0809049C @ case 23
	.4byte _0809049C @ case 24
	.4byte _0809049C @ case 25
	.4byte _0809049C @ case 26
	.4byte _0809049C @ case 27
	.4byte _08090468 @ case 28
	.4byte _0809049C @ case 29
	.4byte _0809049C @ case 30
	.4byte _0809049C @ case 31
	.4byte _0809049C @ case 32
	.4byte _0809049C @ case 33
	.4byte _08090494 @ case 34
	.4byte _0809049C @ case 35
	.4byte _08090498 @ case 36
_08090434:
	ldr r0, _08090460 @ =gUnk_0866354C
	lsls r4, r5, #1
	adds r1, r4, r5
	lsls r1, r1, #2
	adds r1, r1, r0
	ldrb r6, [r1, #8]
	adds r6, #1
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0xfe
	bl SetBgOffset
	ldr r0, _08090464 @ =gBg1Tm
	mov r8, r0
	adds r2, r4, #0
	b _080904B4
	.align 2, 0
_08090460: .4byte gUnk_0866354C
_08090464: .4byte gBg1Tm
_08090468:
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	mov r0, sl
	adds r1, r0, r2
	lsls r1, r1, #1
	add r1, r8
	adds r0, r7, #0
	adds r0, #0x1c
	strh r0, [r1]
	adds r0, #1
	strh r0, [r1, #2]
	adds r3, r1, #0
	adds r3, #0x40
	adds r0, #0x1f
	strh r0, [r3]
	adds r1, #0x42
	adds r0, #1
	strh r0, [r1]
	adds r2, #1
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	b _080904B2
_08090494:
	movs r4, #0x1a
	b _0809049E
_08090498:
	movs r4, #0x1b
	b _0809049E
_0809049C:
	subs r4, #0x41
_0809049E:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	add r0, sl
	lsls r0, r0, #1
	add r0, r8
	adds r1, r7, r4
	strh r1, [r0]
	adds r0, #0x40
	adds r1, #0x20
	strh r1, [r0]
_080904B2:
	lsls r2, r5, #1
_080904B4:
	lsls r0, r6, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r6, r0, #0x10
	movs r0, #1
	add sb, r0
	ldr r1, _080904EC @ =gUnk_0866354C
	adds r0, r2, r5
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	add r0, sb
_080904CE:
	ldrb r4, [r0]
	cmp r4, #0
	beq _080904D6
	b _08090384
_080904D6:
	movs r0, #3
	bl EnableBgSync
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080904EC: .4byte gUnk_0866354C

	thumb_func_start sub_80904F0
sub_80904F0: @ 0x080904F0
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	ldr r1, _08090504 @ =0x02016A3F
	movs r0, #1
	strb r0, [r1]
	bx lr
	.align 2, 0
_08090504: .4byte 0x02016A3F

	thumb_func_start sub_8090508
sub_8090508: @ 0x08090508
	push {r4, lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x66
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _08090578
	adds r4, r2, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _08090536
	adds r0, r2, #0
	bl Proc_Break
_08090536:
	ldr r3, _08090580 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldrh r1, [r4]
	adds r0, r3, #0
	adds r0, #0x44
	strb r1, [r0]
	movs r0, #0x10
	subs r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08090584 @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #3
	orrs r0, r1
	ldr r1, _08090588 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0xc0
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
_08090578:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08090580: .4byte gDispIo
_08090584: .4byte 0x0000FFE0
_08090588: .4byte 0x0000E0FF

	thumb_func_start sub_809058C
sub_809058C: @ 0x0809058C
	push {lr}
	ldr r0, _0809059C @ =gUnk_0868BB3C
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0809059C: .4byte gUnk_0868BB3C

	thumb_func_start sub_80905A0
sub_80905A0: @ 0x080905A0
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x66
	ldrh r0, [r1]
	adds r0, #1
	movs r5, #0
	strh r0, [r1]
	movs r1, #3
	ands r0, r1
	cmp r0, #0
	bne _080905FC
	adds r4, r2, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _080905D4
	adds r0, r2, #0
	bl Proc_Break
	ldr r0, _08090604 @ =0x02016A3F
	strb r5, [r0]
_080905D4:
	ldr r3, _08090608 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldrh r2, [r4]
	movs r0, #0x10
	subs r0, r0, r2
	adds r1, r3, #0
	adds r1, #0x44
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r5, [r0]
_080905FC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08090604: .4byte 0x02016A3F
_08090608: .4byte gDispIo

	thumb_func_start sub_809060C
sub_809060C: @ 0x0809060C
	push {lr}
	ldr r0, _0809061C @ =gUnk_0868BB5C
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_0809061C: .4byte gUnk_0868BB5C

	thumb_func_start sub_8090620
sub_8090620: @ 0x08090620
	ldr r1, _0809062C @ =0x02016A40
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	bx lr
	.align 2, 0
_0809062C: .4byte 0x02016A40

	thumb_func_start sub_8090630
sub_8090630: @ 0x08090630
	movs r1, #0
	ldr r0, _08090640 @ =0x02016A3C
	ldrb r0, [r0]
	cmp r0, #0x31
	bls _0809063C
	movs r1, #1
_0809063C:
	adds r0, r1, #0
	bx lr
	.align 2, 0
_08090640: .4byte 0x02016A3C

	thumb_func_start sub_8090644
sub_8090644: @ 0x08090644
	push {lr}
	ldr r1, _08090658 @ =0x02016A3F
	movs r0, #0xff
	strb r0, [r1]
	ldr r0, _0809065C @ =0x02016A3C
	ldrb r0, [r0]
	bl sub_80902F0
	pop {r0}
	bx r0
	.align 2, 0
_08090658: .4byte 0x02016A3F
_0809065C: .4byte 0x02016A3C

	thumb_func_start sub_8090660
sub_8090660: @ 0x08090660
	push {lr}
	ldr r1, _08090670 @ =0x02016A3C
	ldrb r1, [r1]
	bl sub_808FFE0
	pop {r0}
	bx r0
	.align 2, 0
_08090670: .4byte 0x02016A3C

	thumb_func_start sub_8090674
sub_8090674: @ 0x08090674
	push {r4, lr}
	adds r0, #0x64
	movs r4, #0
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08090704 @ =gUnk_0868BA24
	bl InitBgs
	ldr r2, _08090708 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _0809070C @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	ldr r1, _08090710 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r2, #0x3c]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r0, _08090714 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08090718 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	bl sub_808FD94
	ldr r0, _0809071C @ =gUnk_0868BB7C
	movs r1, #3
	bl SpawnProc
	movs r0, #3
	bl EnableBgSync
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08090704: .4byte gUnk_0868BA24
_08090708: .4byte gDispIo
_0809070C: .4byte 0x0000FFE0
_08090710: .4byte 0x0000E0FF
_08090714: .4byte gBg0Tm
_08090718: .4byte gBg1Tm
_0809071C: .4byte gUnk_0868BB7C

	thumb_func_start sub_8090720
sub_8090720: @ 0x08090720
	push {lr}
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	lsls r1, r1, #0x10
	movs r0, #0x96
	lsls r0, r0, #0x11
	cmp r1, r0
	ble _0809073C
	adds r0, r2, #0
	bl Proc_Break
_0809073C:
	pop {r0}
	bx r0

	thumb_func_start sub_8090740
sub_8090740: @ 0x08090740
	push {lr}
	ldr r1, _08090760 @ =0x02016A3F
	movs r0, #0
	strb r0, [r1]
	ldr r0, _08090764 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	movs r0, #1
	bl EnableBgSync
	ldr r0, _08090768 @ =gUnk_0868BB7C
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_08090760: .4byte 0x02016A3F
_08090764: .4byte gBg0Tm
_08090768: .4byte gUnk_0868BB7C

	thumb_func_start sub_809076C
sub_809076C: @ 0x0809076C
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _08090814 @ =gUnk_0868BA24
	bl InitBgs
	adds r4, #0x4e
	movs r2, #0
	movs r0, #0x8c
	lsls r0, r0, #2
	strh r0, [r4]
	ldr r3, _08090818 @ =gDispIo
	movs r0, #1
	ldrb r1, [r3, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r4, [r1]
	ands r0, r4
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x44
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldr r0, _0809081C @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	ldr r1, _08090820 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _08090824 @ =gBg0Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	ldr r0, _08090828 @ =gUnk_08345420
	movs r1, #0x40
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r5, _0809082C @ =gUnk_08344CD0
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r5, #0
	bl Decompress
	movs r1, #0xa3
	lsls r1, r1, #1
	adds r4, r4, r1
	ldr r1, _08090830 @ =gUnk_0834523C
	movs r2, #0x80
	lsls r2, r2, #6
	adds r0, r4, #0
	bl TmApplyTsa_t
	movs r0, #1
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08090814: .4byte gUnk_0868BA24
_08090818: .4byte gDispIo
_0809081C: .4byte 0x0000FFE0
_08090820: .4byte 0x0000E0FF
_08090824: .4byte gBg0Tm
_08090828: .4byte gUnk_08345420
_0809082C: .4byte gUnk_08344CD0
_08090830: .4byte gUnk_0834523C

	thumb_func_start sub_8090834
sub_8090834: @ 0x08090834
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x4e
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809084E
	adds r0, r2, #0
	bl Proc_Break
_0809084E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8090854
sub_8090854: @ 0x08090854
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	movs r0, #0
_0809085C:
	movs r3, #0
	adds r4, r0, #1
	lsls r1, r0, #5
	lsls r0, r0, #6
	adds r2, r0, r6
_08090866:
	adds r0, r1, r3
	orrs r0, r5
	strh r0, [r2]
	adds r2, #2
	adds r3, #1
	cmp r3, #0x1f
	ble _08090866
	adds r0, r4, #0
	cmp r0, #0x13
	ble _0809085C
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8090880
sub_8090880: @ 0x08090880
	push {lr}
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r1, _080908A0 @ =gDispIo
	adds r1, #0x3d
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_080908A0: .4byte gDispIo

	thumb_func_start sub_80908A4
sub_80908A4: @ 0x080908A4
	push {r4, r5, r6, lr}
	adds r0, #0x64
	movs r4, #0
	movs r1, #0
	strh r1, [r0]
	ldr r0, _080909DC @ =gUnk_0868BA24
	bl InitBgs
	ldr r3, _080909E0 @ =gDispIo
	movs r0, #1
	ldrb r1, [r3, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r3, #1]
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r0, #0xa
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _080909E4 @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #0x18
	orrs r0, r1
	ldr r1, _080909E8 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r3, #0x3c]
	adds r1, r3, #0
	adds r1, #0x3d
	movs r0, #0x20
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	movs r0, #0
	movs r1, #4
	movs r2, #4
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r6, _080909EC @ =gBg0Tm
	adds r0, r6, #0
	movs r1, #0
	bl TmFill
	ldr r5, _080909F0 @ =gBg3Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r0, _080909F4 @ =gUnk_08344CB0
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080909F8 @ =gUnk_08320D98
	movs r1, #0x80
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _080909FC @ =gUnk_08344304
	ldr r1, _08090A00 @ =0x06001000
	bl Decompress
	ldr r4, _08090A04 @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r1, _08090A08 @ =gUnk_08345440
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r5, #0
	bl TmApplyTsa_t
	movs r3, #0xc1
	lsls r3, r3, #7
	movs r2, #0
_0809097C:
	ldr r1, _08090A0C @ =0x00000107
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	adds r1, r3, r2
	strh r1, [r0]
	ldr r0, _08090A10 @ =0x00000127
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r0, r2
	strh r0, [r1]
	ldr r0, _08090A14 @ =0x00000147
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x40
	adds r0, r0, r2
	strh r0, [r1]
	ldr r0, _08090A18 @ =0x00000167
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x60
	adds r0, r0, r2
	strh r0, [r1]
	ldr r0, _08090A1C @ =0x00000187
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x80
	adds r0, r0, r2
	strh r0, [r1]
	adds r2, #1
	cmp r2, #0x10
	ble _0809097C
	movs r0, #9
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080909DC: .4byte gUnk_0868BA24
_080909E0: .4byte gDispIo
_080909E4: .4byte 0x0000FFE0
_080909E8: .4byte 0x0000E0FF
_080909EC: .4byte gBg0Tm
_080909F0: .4byte gBg3Tm
_080909F4: .4byte gUnk_08344CB0
_080909F8: .4byte gUnk_08320D98
_080909FC: .4byte gUnk_08344304
_08090A00: .4byte 0x06001000
_08090A04: .4byte gUnk_0831B0A8
_08090A08: .4byte gUnk_08345440
_08090A0C: .4byte 0x00000107
_08090A10: .4byte 0x00000127
_08090A14: .4byte 0x00000147
_08090A18: .4byte 0x00000167
_08090A1C: .4byte 0x00000187

	thumb_func_start sub_8090A20
sub_8090A20: @ 0x08090A20
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _08090A3C
	adds r0, r2, #0
	bl Proc_Break
_08090A3C:
	pop {r0}
	bx r0

	thumb_func_start sub_8090A40
sub_8090A40: @ 0x08090A40
	push {r4, r5, r6, lr}
	adds r0, #0x64
	movs r4, #0
	movs r1, #0
	strh r1, [r0]
	ldr r0, _08090B54 @ =gUnk_0868BA24
	bl InitBgs
	ldr r2, _08090B58 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _08090B5C @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	ldr r1, _08090B60 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r2, #0x3c]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r6, _08090B64 @ =gBg0Tm
	adds r0, r6, #0
	movs r1, #0
	bl TmFill
	ldr r5, _08090B68 @ =gBg3Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r0, _08090B6C @ =gUnk_0833BFDC
	movs r1, #0x80
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08090B70 @ =gUnk_08344CB0
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08090B74 @ =gUnk_083449F8
	ldr r1, _08090B78 @ =0x06001000
	bl Decompress
	ldr r4, _08090B7C @ =gUnk_08336D5C
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r1, r3
	adds r0, r4, #0
	bl Decompress
	movs r1, #0x80
	lsls r1, r1, #7
	adds r0, r5, #0
	bl sub_8090854
	movs r3, #0xc1
	lsls r3, r3, #7
	movs r2, #0
_08090AFC:
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r2, r1
	lsls r0, r0, #1
	adds r0, r0, r6
	adds r1, r3, r2
	strh r1, [r0]
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x20
	adds r0, r0, r2
	strh r0, [r1]
	movs r0, #0xa6
	lsls r0, r0, #1
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x40
	adds r0, r0, r2
	strh r0, [r1]
	movs r0, #0xb6
	lsls r0, r0, #1
	adds r1, r2, r0
	lsls r1, r1, #1
	adds r1, r1, r6
	adds r0, r3, #0
	adds r0, #0x60
	adds r0, r0, r2
	strh r0, [r1]
	adds r2, #1
	cmp r2, #5
	ble _08090AFC
	movs r0, #9
	bl EnableBgSync
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08090B54: .4byte gUnk_0868BA24
_08090B58: .4byte gDispIo
_08090B5C: .4byte 0x0000FFE0
_08090B60: .4byte 0x0000E0FF
_08090B64: .4byte gBg0Tm
_08090B68: .4byte gBg3Tm
_08090B6C: .4byte gUnk_0833BFDC
_08090B70: .4byte gUnk_08344CB0
_08090B74: .4byte gUnk_083449F8
_08090B78: .4byte 0x06001000
_08090B7C: .4byte gUnk_08336D5C

	thumb_func_start sub_8090B80
sub_8090B80: @ 0x08090B80
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _08090B9C
	adds r0, r2, #0
	bl Proc_Break
_08090B9C:
	pop {r0}
	bx r0

	thumb_func_start sub_8090BA0
sub_8090BA0: @ 0x08090BA0
	ldr r1, _08090BBC @ =0x02016A3D
	ldrb r0, [r1]
	cmp r0, #0xc
	bhi _08090BC4
	ldr r0, _08090BC0 @ =gUnk_0868BCE4
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	beq _08090BC4
	movs r0, #1
	b _08090BC6
	.align 2, 0
_08090BBC: .4byte 0x02016A3D
_08090BC0: .4byte gUnk_0868BCE4
_08090BC4:
	movs r0, #0
_08090BC6:
	bx lr

	thumb_func_start sub_8090BC8
sub_8090BC8: @ 0x08090BC8
	push {r4, r5, lr}
	movs r5, #0
	adds r0, #0x64
	movs r4, #0
	strh r5, [r0]
	ldr r0, _08090C48 @ =gUnk_0868BA24
	bl InitBgs
	ldr r2, _08090C4C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _08090C50 @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	ldr r1, _08090C54 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r2, #0x3c]
	ldr r2, _08090C58 @ =0x0000FFFC
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	ldr r0, _08090C5C @ =gBg2Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08090C60 @ =0x02016A3D
	ldrb r0, [r0]
	cmp r0, #0xa
	beq _08090C64
	cmp r0, #0xa
	blt _08090C96
	cmp r0, #0xb
	beq _08090C74
	cmp r0, #0xc
	beq _08090C88
	b _08090C96
	.align 2, 0
_08090C48: .4byte gUnk_0868BA24
_08090C4C: .4byte gDispIo
_08090C50: .4byte 0x0000FFE0
_08090C54: .4byte 0x0000E0FF
_08090C58: .4byte 0x0000FFFC
_08090C5C: .4byte gBg2Tm
_08090C60: .4byte 0x02016A3D
_08090C64:
	movs r0, #0x6b
	bl CheckFlag
	movs r1, #0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08090C84
	b _08090C82
_08090C74:
	bl GetEndingId
	movs r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08090C84
_08090C82:
	movs r1, #1
_08090C84:
	adds r5, r1, #0
	b _08090C96
_08090C88:
	bl GetEndingId
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
_08090C96:
	lsls r0, r5, #0x18
	adds r5, r0, #0
	cmp r5, #0
	beq _08090CB8
	ldr r0, _08090CB0 @ =gUnk_0868BCE4
	ldr r1, _08090CB4 @ =0x02016A3D
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r0, #8
	adds r1, r1, r0
	ldr r4, [r1]
	b _08090CC4
	.align 2, 0
_08090CB0: .4byte gUnk_0868BCE4
_08090CB4: .4byte 0x02016A3D
_08090CB8:
	ldr r1, _08090CE8 @ =gUnk_0868BCE4
	ldr r0, _08090CEC @ =0x02016A3D
	ldrb r0, [r0]
	lsls r0, r0, #4
	adds r0, r0, r1
	ldr r4, [r0]
_08090CC4:
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r3, _08090CF0 @ =0x06002800
	adds r1, r1, r3
	adds r0, r4, #0
	bl Decompress
	cmp r5, #0
	beq _08090CF4
	ldr r0, _08090CE8 @ =gUnk_0868BCE4
	ldr r1, _08090CEC @ =0x02016A3D
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r0, #0xc
	b _08090CFE
	.align 2, 0
_08090CE8: .4byte gUnk_0868BCE4
_08090CEC: .4byte 0x02016A3D
_08090CF0: .4byte 0x06002800
_08090CF4:
	ldr r0, _08090D24 @ =gUnk_0868BCE4
	ldr r1, _08090D28 @ =0x02016A3D
	ldrb r1, [r1]
	lsls r1, r1, #4
	adds r0, #4
_08090CFE:
	adds r1, r1, r0
	ldr r0, [r1]
	movs r1, #0xc0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08090D2C @ =gBg2Tm+0x14E
	ldr r1, _08090D30 @ =0x00006140
	movs r2, #0xf
	movs r3, #0xa
	bl sub_808FDE8
	movs r0, #4
	bl EnableBgSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08090D24: .4byte gUnk_0868BCE4
_08090D28: .4byte 0x02016A3D
_08090D2C: .4byte gBg2Tm+0x14E
_08090D30: .4byte 0x00006140

	thumb_func_start sub_8090D34
sub_8090D34: @ 0x08090D34
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _08090D50
	adds r0, r2, #0
	bl Proc_Break
_08090D50:
	pop {r0}
	bx r0

	thumb_func_start sub_8090D54
sub_8090D54: @ 0x08090D54
	ldr r0, _08090D60 @ =0x02016A40
	ldrb r0, [r0]
	cmp r0, #1
	bls _08090D64
	movs r0, #0
	b _08090D66
	.align 2, 0
_08090D60: .4byte 0x02016A40
_08090D64:
	movs r0, #1
_08090D66:
	bx lr

	thumb_func_start sub_8090D68
sub_8090D68: @ 0x08090D68
	push {lr}
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bl EndAllMus
	pop {r0}
	bx r0

	thumb_func_start sub_8090D78
sub_8090D78: @ 0x08090D78
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #7
	bls _08090D88
	b _08090F2A
_08090D88:
	lsls r0, r0, #2
	ldr r1, _08090D94 @ =_08090D98
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08090D94: .4byte _08090D98
_08090D98: @ jump table
	.4byte _08090DB8 @ case 0
	.4byte _08090E84 @ case 1
	.4byte _08090EC0 @ case 2
	.4byte _08090ED0 @ case 3
	.4byte _08090EDC @ case 4
	.4byte _08090EF2 @ case 5
	.4byte _08090F1C @ case 6
	.4byte _08090F24 @ case 7
_08090DB8:
	ldr r0, _08090DD0 @ =0x02016A3E
	movs r1, #0
	strb r1, [r0]
	bl sub_8090630
	cmp r0, #1
	bne _08090DD4
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #2
	strh r0, [r1]
	b _08090F2A
	.align 2, 0
_08090DD0: .4byte 0x02016A3E
_08090DD4:
	ldr r2, _08090DFC @ =gUnk_0866354C
	ldr r1, _08090E00 @ =0x02016A3C
	ldrb r3, [r1]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	cmp r0, #1
	bne _08090E0C
	ldr r0, _08090E04 @ =0x02016A41
	ldrb r0, [r0]
	cmp r0, #0
	beq _08090E68
	ldr r0, _08090E08 @ =gUnk_0868BC44
	adds r1, r4, #0
	bl SpawnProcLocking
	b _08090E68
	.align 2, 0
_08090DFC: .4byte gUnk_0866354C
_08090E00: .4byte 0x02016A3C
_08090E04: .4byte 0x02016A41
_08090E08: .4byte gUnk_0868BC44
_08090E0C:
	cmp r0, #2
	bne _08090E60
	bl sub_809164C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3f
	bhi _08090E38
	ldr r0, _08090E30 @ =0x02016A41
	ldrb r0, [r0]
	cmp r0, #0
	beq _08090E38
	ldr r0, _08090E34 @ =gUnk_0868BE74
	adds r1, r4, #0
	bl SpawnProcLocking
	b _08090E4A
	.align 2, 0
_08090E30: .4byte 0x02016A41
_08090E34: .4byte gUnk_0868BE74
_08090E38:
	bl sub_8090BA0
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090E4A
	ldr r0, _08090E58 @ =gUnk_0868BDB4
	adds r1, r4, #0
	bl SpawnProcLocking
_08090E4A:
	ldr r1, _08090E5C @ =0x02016A3E
	movs r0, #2
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	b _08090E68
	.align 2, 0
_08090E58: .4byte gUnk_0868BDB4
_08090E5C: .4byte 0x02016A3E
_08090E60:
	ldr r0, _08090E7C @ =gUnk_0868BB9C
	adds r1, r4, #0
	bl SpawnProcLocking
_08090E68:
	ldr r1, _08090E80 @ =0x02016A3E
	movs r0, #1
	ldrb r3, [r1]
	orrs r0, r3
	strb r0, [r1]
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #1
	strh r0, [r1]
	b _08090F2A
	.align 2, 0
_08090E7C: .4byte gUnk_0868BB9C
_08090E80: .4byte 0x02016A3E
_08090E84:
	ldr r2, _08090EB4 @ =0x02016A3E
	movs r0, #1
	ldrb r1, [r2]
	ands r0, r1
	cmp r0, #0
	beq _08090E98
	ldr r1, _08090EB8 @ =0x02016A3C
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08090E98:
	movs r0, #2
	ldrb r2, [r2]
	ands r0, r2
	cmp r0, #0
	beq _08090EAA
	ldr r1, _08090EBC @ =0x02016A3D
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_08090EAA:
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0
	strh r0, [r1]
	b _08090F2A
	.align 2, 0
_08090EB4: .4byte 0x02016A3E
_08090EB8: .4byte 0x02016A3C
_08090EBC: .4byte 0x02016A3D
_08090EC0:
	ldr r0, _08090ECC @ =gUnk_0868BBEC
_08090EC2:
	adds r1, r4, #0
	bl SpawnProcLocking
	b _08090F10
	.align 2, 0
_08090ECC: .4byte gUnk_0868BBEC
_08090ED0:
	bl sub_806DEB4
	ldr r0, _08090ED8 @ =gUnk_0868B8E4
	b _08090EC2
	.align 2, 0
_08090ED8: .4byte gUnk_0868B8E4
_08090EDC:
	movs r0, #0x36
	movs r1, #0
	bl StartBgm
	bl sub_8091588
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_08090EF2:
	movs r0, #0
	bl sub_80916AC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3f
	bhi _08090F10
	ldr r0, _08090F0C @ =gUnk_0868BF3C
	adds r1, r4, #0
	bl SpawnProcLocking
	b _08090F2A
	.align 2, 0
_08090F0C: .4byte gUnk_0868BF3C
_08090F10:
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _08090F2A
_08090F1C:
	ldr r0, _08090F30 @ =gUnk_0868BC8C
	adds r1, r4, #0
	bl SpawnProcLocking
_08090F24:
	adds r0, r4, #0
	bl Proc_Break
_08090F2A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08090F30: .4byte gUnk_0868BC8C

	thumb_func_start sub_8090F34
sub_8090F34: @ 0x08090F34
	push {lr}
	adds r1, r0, #0
	ldr r0, _08090F44 @ =gUnk_0868BDF4
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08090F44: .4byte gUnk_0868BDF4

	thumb_func_start sub_8090F48
sub_8090F48: @ 0x08090F48
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _08090F68 @ =gUnk_0866354C
	ldr r3, _08090F6C @ =0x02016A3C
	ldrb r2, [r3]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	subs r0, #1
	cmp r0, #1
	bhi _08090F70
	adds r0, r2, #1
	strb r0, [r3]
	b _08090FFC
	.align 2, 0
_08090F68: .4byte gUnk_0866354C
_08090F6C: .4byte 0x02016A3C
_08090F70:
	adds r0, r5, #0
	adds r0, #0x64
	movs r4, #0
	ldrsh r1, [r0, r4]
	adds r4, r0, #0
	cmp r1, #0xb4
	beq _08090FEC
	cmp r1, #0xb4
	bgt _08090F88
	cmp r1, #0x3c
	beq _08090F98
	b _08090FEC
_08090F88:
	movs r0, #0xd2
	lsls r0, r0, #1
	cmp r1, r0
	beq _08090FA4
	adds r0, #0x78
	cmp r1, r0
	beq _08090FAA
	b _08090FEC
_08090F98:
	adds r0, r2, #0
	bl sub_80902F0
	bl sub_809058C
	b _08090FEC
_08090FA4:
	bl sub_809060C
	b _08090FEC
_08090FAA:
	movs r0, #0
	strh r0, [r4]
	ldrb r0, [r3]
	adds r0, #1
	strb r0, [r3]
	ldr r0, _08090FE0 @ =0x02016A40
	ldrb r0, [r0]
	cmp r0, #0
	beq _08090FF2
	ldr r0, _08090FE4 @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _08090FE8 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	movs r0, #3
	bl EnableBgSync
	adds r0, r5, #0
	bl Proc_Break
	bl sub_8090620
	b _08090FF2
	.align 2, 0
_08090FE0: .4byte 0x02016A40
_08090FE4: .4byte gBg0Tm
_08090FE8: .4byte gBg1Tm
_08090FEC:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08090FF2:
	ldr r0, _08091004 @ =0x02016A3C
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_808FFE0
_08090FFC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08091004: .4byte 0x02016A3C

	thumb_func_start sub_8091008
sub_8091008: @ 0x08091008
	push {lr}
	ldr r0, _08091018 @ =gUnk_0868BE2C
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08091018: .4byte gUnk_0868BE2C

	thumb_func_start sub_809101C
sub_809101C: @ 0x0809101C
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #1
	bl GetUnitByPid
	adds r5, r0, #0
	adds r1, r4, #0
	bl GetUnitSupportNumByPid
	adds r1, r0, #0
	adds r0, r5, #0
	bl GetUnitSupportLevel
	cmp r0, #2
	bgt _08091042
	movs r0, #0
	b _08091044
_08091042:
	movs r0, #1
_08091044:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_809104C
sub_809104C: @ 0x0809104C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r4, #1
	ldr r3, _080910B8 @ =0x02016B94
	ldr r2, _080910BC @ =gPal
_0809105A:
	lsls r1, r4, #1
	adds r1, r1, r3
	adds r0, r4, #0
	adds r0, #0x20
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	beq _080910C8
	movs r4, #0
	ldr r7, _080910C0 @ =gPal+0x40
	ldr r0, _080910B8 @ =0x02016B94
	mov r8, r0
	ldr r5, _080910C4 @ =0x02016C94
	mov sb, r5
	mov r6, r8
_0809107C:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #8
	bl CpuFastSet
	mov r0, r8
	adds r1, r4, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_805B5C8
	adds r0, r7, #0
	adds r0, #0x20
	adds r1, r5, #0
	movs r2, #8
	bl CpuFastSet
	mov r0, sb
	adds r1, r4, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_805B5C8
	adds r5, #0x20
	adds r6, #0x20
	adds r4, #1
	cmp r4, #7
	ble _0809107C
	b _080910CE
	.align 2, 0
_080910B8: .4byte 0x02016B94
_080910BC: .4byte gPal
_080910C0: .4byte gPal+0x40
_080910C4: .4byte 0x02016C94
_080910C8:
	adds r4, #1
	cmp r4, #0xf
	ble _0809105A
_080910CE:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80910DC
sub_80910DC: @ 0x080910DC
	push {r4, r5, lr}
	movs r2, #0
	ldr r0, _080910F4 @ =0x04000006
	ldrh r0, [r0]
	cmp r0, #0x18
	beq _080910FE
	cmp r0, #0x18
	bgt _080910F8
	cmp r0, #0
	beq _0809110C
	b _08091110
	.align 2, 0
_080910F4: .4byte 0x04000006
_080910F8:
	cmp r0, #0x30
	beq _0809110C
	b _08091110
_080910FE:
	ldr r1, _08091108 @ =0x04000012
	movs r0, #4
	strh r0, [r1]
	b _08091110
	.align 2, 0
_08091108: .4byte 0x04000012
_0809110C:
	ldr r0, _08091134 @ =0x04000012
	strh r2, [r0]
_08091110:
	ldr r0, _08091138 @ =0x04000006
	ldrh r0, [r0]
	cmp r0, #0x3c
	beq _08091186
	cmp r0, #0x3c
	bgt _08091156
	cmp r0, #0x34
	beq _0809118E
	cmp r0, #0x34
	bgt _08091142
	cmp r0, #0x30
	beq _08091192
	cmp r0, #0x30
	bgt _0809113C
	cmp r0, #0
	beq _08091194
	b _080911BA
	.align 2, 0
_08091134: .4byte 0x04000012
_08091138: .4byte 0x04000006
_0809113C:
	cmp r0, #0x32
	beq _08091190
	b _080911BA
_08091142:
	cmp r0, #0x38
	beq _0809118A
	cmp r0, #0x38
	bgt _08091150
	cmp r0, #0x36
	beq _0809118C
	b _080911BA
_08091150:
	cmp r0, #0x3a
	beq _08091188
	b _080911BA
_08091156:
	cmp r0, #0x96
	beq _0809118E
	cmp r0, #0x96
	bgt _08091172
	cmp r0, #0x92
	beq _0809118A
	cmp r0, #0x92
	bgt _0809116C
	cmp r0, #0x90
	beq _08091188
	b _080911BA
_0809116C:
	cmp r0, #0x94
	beq _0809118C
	b _080911BA
_08091172:
	cmp r0, #0x9a
	beq _08091192
	cmp r0, #0x9a
	bgt _08091180
	cmp r0, #0x98
	beq _08091190
	b _080911BA
_08091180:
	cmp r0, #0x9c
	beq _08091194
	b _080911BA
_08091186:
	adds r2, #1
_08091188:
	adds r2, #1
_0809118A:
	adds r2, #1
_0809118C:
	adds r2, #1
_0809118E:
	adds r2, #1
_08091190:
	adds r2, #1
_08091192:
	adds r2, #1
_08091194:
	lsls r0, r2, #5
	ldr r2, _080911C0 @ =0x02016B94
	ldr r1, _080911C4 @ =0x02016C94
	adds r3, r0, r1
	ldr r5, _080911C8 @ =0x05000060
	adds r1, r0, r2
	ldr r4, _080911CC @ =0x05000040
	movs r2, #0xf
_080911A4:
	ldrh r0, [r1]
	strh r0, [r4]
	ldrh r0, [r3]
	strh r0, [r5]
	adds r3, #2
	adds r5, #2
	adds r1, #2
	adds r4, #2
	subs r2, #1
	cmp r2, #0
	bge _080911A4
_080911BA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080911C0: .4byte 0x02016B94
_080911C4: .4byte 0x02016C94
_080911C8: .4byte 0x05000060
_080911CC: .4byte 0x05000040

	thumb_func_start sub_80911D0
sub_80911D0: @ 0x080911D0
	push {r4, r5, lr}
	movs r3, #0
	ldr r4, _08091210 @ =0x04000006
	ldrh r0, [r4]
	cmp r0, #0
	bne _080911E8
	ldr r2, _08091214 @ =0x04000010
	ldr r0, _08091218 @ =0x02016B90
	ldrh r1, [r0]
	strh r1, [r2]
	ldr r0, _0809121C @ =0x04000014
	strh r1, [r0]
_080911E8:
	ldrh r0, [r4]
	cmp r0, #0x50
	bne _080911FA
	ldr r2, _08091214 @ =0x04000010
	ldr r0, _08091218 @ =0x02016B90
	ldrh r1, [r0, #2]
	strh r1, [r2]
	ldr r0, _0809121C @ =0x04000014
	strh r1, [r0]
_080911FA:
	ldrh r0, [r4]
	cmp r0, #0x2a
	beq _0809124C
	cmp r0, #0x2a
	bgt _08091220
	cmp r0, #0
	beq _08091234
	cmp r0, #0x18
	beq _08091240
	b _08091252
	.align 2, 0
_08091210: .4byte 0x04000006
_08091214: .4byte 0x04000010
_08091218: .4byte 0x02016B90
_0809121C: .4byte 0x04000014
_08091220:
	cmp r0, #0x68
	beq _08091240
	cmp r0, #0x68
	bgt _0809122E
	cmp r0, #0x50
	beq _08091234
	b _08091252
_0809122E:
	cmp r0, #0x7a
	beq _0809124C
	b _08091252
_08091234:
	ldr r1, _0809123C @ =0x04000012
	movs r0, #0
	b _08091250
	.align 2, 0
_0809123C: .4byte 0x04000012
_08091240:
	ldr r1, _08091248 @ =0x04000012
	movs r0, #4
	b _08091250
	.align 2, 0
_08091248: .4byte 0x04000012
_0809124C:
	ldr r1, _08091268 @ =0x04000012
	movs r0, #5
_08091250:
	strh r0, [r1]
_08091252:
	ldr r0, _0809126C @ =0x04000006
	ldrh r0, [r0]
	subs r0, #9
	cmp r0, #0x86
	bls _0809125E
	b _080914C4
_0809125E:
	lsls r0, r0, #2
	ldr r1, _08091270 @ =_08091274
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091268: .4byte 0x04000012
_0809126C: .4byte 0x04000006
_08091270: .4byte _08091274
_08091274: @ jump table
	.4byte _0809149E @ case 0
	.4byte _080914C4 @ case 1
	.4byte _080914C4 @ case 2
	.4byte _080914C4 @ case 3
	.4byte _080914C4 @ case 4
	.4byte _080914C4 @ case 5
	.4byte _080914C4 @ case 6
	.4byte _080914C4 @ case 7
	.4byte _080914C4 @ case 8
	.4byte _0809149C @ case 9
	.4byte _080914C4 @ case 10
	.4byte _080914C4 @ case 11
	.4byte _080914C4 @ case 12
	.4byte _080914C4 @ case 13
	.4byte _080914C4 @ case 14
	.4byte _080914C4 @ case 15
	.4byte _080914C4 @ case 16
	.4byte _080914C4 @ case 17
	.4byte _0809149A @ case 18
	.4byte _080914C4 @ case 19
	.4byte _080914C4 @ case 20
	.4byte _080914C4 @ case 21
	.4byte _080914C4 @ case 22
	.4byte _080914C4 @ case 23
	.4byte _080914C4 @ case 24
	.4byte _080914C4 @ case 25
	.4byte _080914C4 @ case 26
	.4byte _08091498 @ case 27
	.4byte _080914C4 @ case 28
	.4byte _080914C4 @ case 29
	.4byte _080914C4 @ case 30
	.4byte _080914C4 @ case 31
	.4byte _080914C4 @ case 32
	.4byte _080914C4 @ case 33
	.4byte _080914C4 @ case 34
	.4byte _080914C4 @ case 35
	.4byte _08091496 @ case 36
	.4byte _080914C4 @ case 37
	.4byte _080914C4 @ case 38
	.4byte _080914C4 @ case 39
	.4byte _080914C4 @ case 40
	.4byte _080914C4 @ case 41
	.4byte _080914C4 @ case 42
	.4byte _080914C4 @ case 43
	.4byte _080914C4 @ case 44
	.4byte _08091494 @ case 45
	.4byte _080914C4 @ case 46
	.4byte _080914C4 @ case 47
	.4byte _080914C4 @ case 48
	.4byte _080914C4 @ case 49
	.4byte _080914C4 @ case 50
	.4byte _080914C4 @ case 51
	.4byte _080914C4 @ case 52
	.4byte _080914C4 @ case 53
	.4byte _08091492 @ case 54
	.4byte _080914C4 @ case 55
	.4byte _080914C4 @ case 56
	.4byte _080914C4 @ case 57
	.4byte _080914C4 @ case 58
	.4byte _080914C4 @ case 59
	.4byte _080914C4 @ case 60
	.4byte _080914C4 @ case 61
	.4byte _080914C4 @ case 62
	.4byte _08091490 @ case 63
	.4byte _080914C4 @ case 64
	.4byte _080914C4 @ case 65
	.4byte _080914C4 @ case 66
	.4byte _080914C4 @ case 67
	.4byte _080914C4 @ case 68
	.4byte _080914C4 @ case 69
	.4byte _080914C4 @ case 70
	.4byte _080914C4 @ case 71
	.4byte _080914C4 @ case 72
	.4byte _080914C4 @ case 73
	.4byte _080914C4 @ case 74
	.4byte _080914C4 @ case 75
	.4byte _080914C4 @ case 76
	.4byte _080914C4 @ case 77
	.4byte _080914C4 @ case 78
	.4byte _080914C4 @ case 79
	.4byte _08091492 @ case 80
	.4byte _080914C4 @ case 81
	.4byte _080914C4 @ case 82
	.4byte _080914C4 @ case 83
	.4byte _080914C4 @ case 84
	.4byte _080914C4 @ case 85
	.4byte _080914C4 @ case 86
	.4byte _080914C4 @ case 87
	.4byte _080914C4 @ case 88
	.4byte _08091494 @ case 89
	.4byte _080914C4 @ case 90
	.4byte _080914C4 @ case 91
	.4byte _080914C4 @ case 92
	.4byte _080914C4 @ case 93
	.4byte _080914C4 @ case 94
	.4byte _080914C4 @ case 95
	.4byte _080914C4 @ case 96
	.4byte _080914C4 @ case 97
	.4byte _08091496 @ case 98
	.4byte _080914C4 @ case 99
	.4byte _080914C4 @ case 100
	.4byte _080914C4 @ case 101
	.4byte _080914C4 @ case 102
	.4byte _080914C4 @ case 103
	.4byte _080914C4 @ case 104
	.4byte _080914C4 @ case 105
	.4byte _080914C4 @ case 106
	.4byte _08091498 @ case 107
	.4byte _080914C4 @ case 108
	.4byte _080914C4 @ case 109
	.4byte _080914C4 @ case 110
	.4byte _080914C4 @ case 111
	.4byte _080914C4 @ case 112
	.4byte _080914C4 @ case 113
	.4byte _080914C4 @ case 114
	.4byte _080914C4 @ case 115
	.4byte _0809149A @ case 116
	.4byte _080914C4 @ case 117
	.4byte _080914C4 @ case 118
	.4byte _080914C4 @ case 119
	.4byte _080914C4 @ case 120
	.4byte _080914C4 @ case 121
	.4byte _080914C4 @ case 122
	.4byte _080914C4 @ case 123
	.4byte _080914C4 @ case 124
	.4byte _0809149C @ case 125
	.4byte _080914C4 @ case 126
	.4byte _080914C4 @ case 127
	.4byte _080914C4 @ case 128
	.4byte _080914C4 @ case 129
	.4byte _080914C4 @ case 130
	.4byte _080914C4 @ case 131
	.4byte _080914C4 @ case 132
	.4byte _080914C4 @ case 133
	.4byte _0809149E @ case 134
_08091490:
	adds r3, #1
_08091492:
	adds r3, #1
_08091494:
	adds r3, #1
_08091496:
	adds r3, #1
_08091498:
	adds r3, #1
_0809149A:
	adds r3, #1
_0809149C:
	adds r3, #1
_0809149E:
	lsls r0, r3, #5
	ldr r2, _080914CC @ =0x02016B94
	ldr r1, _080914D0 @ =0x02016C94
	adds r3, r0, r1
	ldr r5, _080914D4 @ =0x05000060
	adds r1, r0, r2
	ldr r4, _080914D8 @ =0x05000040
	movs r2, #0xf
_080914AE:
	ldrh r0, [r1]
	strh r0, [r4]
	ldrh r0, [r3]
	strh r0, [r5]
	adds r3, #2
	adds r5, #2
	adds r1, #2
	adds r4, #2
	subs r2, #1
	cmp r2, #0
	bge _080914AE
_080914C4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080914CC: .4byte 0x02016B94
_080914D0: .4byte 0x02016C94
_080914D4: .4byte 0x05000060
_080914D8: .4byte 0x05000040

	thumb_func_start sub_80914DC
sub_80914DC: @ 0x080914DC
	push {r4, r5, r6, lr}
	movs r5, #0
	movs r6, #0
	movs r4, #1
_080914E4:
	adds r0, r4, #0
	bl GetUnit
	adds r1, r0, #0
	cmp r1, #0
	beq _08091520
	ldr r0, [r1]
	cmp r0, #0
	beq _08091520
	movs r0, #8
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	bne _08091514
	cmp r5, #0xd
	bgt _08091520
	ldr r0, _08091510 @ =0x0203DCA7
	adds r0, r5, r0
	strb r4, [r0]
	adds r5, #1
	b _08091520
	.align 2, 0
_08091510: .4byte 0x0203DCA7
_08091514:
	cmp r6, #0x35
	bgt _08091520
	ldr r0, _08091544 @ =0x0203DC70
	adds r0, r6, r0
	strb r4, [r0]
	adds r6, #1
_08091520:
	adds r4, #1
	cmp r4, #0x3f
	ble _080914E4
	ldr r0, _08091548 @ =0x0203DCA7
	adds r0, r5, r0
	movs r2, #0xff
	ldrb r1, [r0]
	orrs r1, r2
	strb r1, [r0]
	ldr r0, _08091544 @ =0x0203DC70
	adds r0, r6, r0
	ldrb r1, [r0]
	orrs r2, r1
	strb r2, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08091544: .4byte 0x0203DC70
_08091548: .4byte 0x0203DCA7

	thumb_func_start sub_809154C
sub_809154C: @ 0x0809154C
	push {r4, r5, lr}
	movs r5, #0
	movs r4, #1
_08091552:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _0809156E
	ldr r0, [r0]
	cmp r0, #0
	beq _0809156E
	cmp r5, #0x35
	bgt _0809156E
	ldr r0, _08091584 @ =0x0203DC70
	adds r0, r5, r0
	strb r4, [r0]
	adds r5, #1
_0809156E:
	adds r4, #1
	cmp r4, #0x3f
	ble _08091552
	ldr r0, _08091584 @ =0x0203DC70
	adds r0, r5, r0
	movs r1, #0xff
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08091584: .4byte 0x0203DC70

	thumb_func_start sub_8091588
sub_8091588: @ 0x08091588
	ldr r0, _08091594 @ =0x02016B88
	movs r1, #1
	strb r1, [r0]
	ldr r0, _08091598 @ =0x02016B89
	strb r1, [r0]
	bx lr
	.align 2, 0
_08091594: .4byte 0x02016B88
_08091598: .4byte 0x02016B89

	thumb_func_start sub_809159C
sub_809159C: @ 0x0809159C
	push {lr}
	sub sp, #0x18
	ldr r1, _08091624 @ =gUnk_08346574
	mov r0, sp
	movs r2, #0x18
	bl memcpy
	mov r0, sp
	bl InitBgs
	ldr r2, _08091628 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r1, #8
	movs r0, #0
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	ldr r0, _0809162C @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	ldr r1, _08091630 @ =0x0000E0FF
	ands r0, r1
	strh r0, [r2, #0x3c]
	bl InitFaces
	bl ResetText
	ldr r0, _08091634 @ =gUnk_08320D98
	movs r1, #0x40
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _08091638 @ =gUnk_0831B0A8
	ldr r1, _0809163C @ =0x06008000
	bl Decompress
	ldr r0, _08091640 @ =gUnk_08346184
	movs r1, #0x80
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _08091644 @ =gUnk_08345934
	ldr r1, _08091648 @ =0x06006000
	bl Decompress
	add sp, #0x18
	pop {r0}
	bx r0
	.align 2, 0
_08091624: .4byte gUnk_08346574
_08091628: .4byte gDispIo
_0809162C: .4byte 0x0000FFE0
_08091630: .4byte 0x0000E0FF
_08091634: .4byte gUnk_08320D98
_08091638: .4byte gUnk_0831B0A8
_0809163C: .4byte 0x06008000
_08091640: .4byte gUnk_08346184
_08091644: .4byte gUnk_08345934
_08091648: .4byte 0x06006000

	thumb_func_start sub_809164C
sub_809164C: @ 0x0809164C
	push {r4, r5, lr}
	ldr r0, _080916A4 @ =0x02016B88
	movs r4, #0
	ldrsb r4, [r0, r4]
	cmp r4, #0x3f
	bgt _08091698
	movs r5, #1
	rsbs r5, r5, #0
_0809165C:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _08091692
	ldr r0, [r0]
	cmp r0, #0
	beq _08091692
	ldrb r0, [r0, #4]
	cmp r0, #0x42
	beq _08091692
	ldr r1, _080916A8 @ =0x0203DCA7
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, r5
	beq _08091692
	movs r2, #1
	rsbs r2, r2, #0
_08091680:
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, r4
	beq _08091698
	adds r1, #1
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, r2
	bne _08091680
_08091692:
	adds r4, #1
	cmp r4, #0x3f
	ble _0809165C
_08091698:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080916A4: .4byte 0x02016B88
_080916A8: .4byte 0x0203DCA7

	thumb_func_start sub_80916AC
sub_80916AC: @ 0x080916AC
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080916BC
	ldr r0, _080916B8 @ =0x02016B88
	b _080916BE
	.align 2, 0
_080916B8: .4byte 0x02016B88
_080916BC:
	ldr r0, _08091724 @ =0x02016B89
_080916BE:
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r0, #0
	cmp r4, #0x3f
	bgt _08091718
	movs r6, #1
	rsbs r6, r6, #0
_080916CE:
	adds r0, r4, #0
	bl GetUnit
	cmp r0, #0
	beq _08091712
	ldr r0, [r0]
	cmp r0, #0
	beq _08091712
	ldrb r0, [r0, #4]
	cmp r0, #0x42
	beq _08091712
	movs r2, #0
	ldr r0, _08091728 @ =0x0203DC70
	movs r1, #0
	ldrsb r1, [r0, r1]
	adds r3, r0, #0
	cmp r1, r6
	beq _08091712
	adds r5, r3, #0
	movs r1, #1
	rsbs r1, r1, #0
_080916F8:
	adds r0, r2, r5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r4
	beq _08091718
	adds r2, #1
	adds r0, r2, r3
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, r1
	bne _080916F8
_08091712:
	adds r4, #1
	cmp r4, #0x3f
	ble _080916CE
_08091718:
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_08091724: .4byte 0x02016B89
_08091728: .4byte 0x0203DC70

	thumb_func_start sub_809172C
sub_809172C: @ 0x0809172C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	str r0, [sp]
	ldr r0, _08091808 @ =0x02016B88
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	str r0, [sp, #4]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	mov r8, r0
	bl sub_8084F4C
	mov sl, r0
	ldr r0, _0809180C @ =gUnk_08677FD0
	movs r1, #3
	bl SpawnProc
	adds r6, r0, #0
	movs r5, #0
	movs r7, #0xe0
	lsls r7, r7, #1
_08091766:
	lsls r0, r5, #3
	ldr r1, _08091810 @ =0x02016B48
	mov sb, r1
	adds r4, r0, r1
	movs r1, #0x1e
	cmp r5, #1
	bgt _08091776
	movs r1, #0x14
_08091776:
	adds r0, r4, #0
	bl InitText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _08091814 @ =gBg0Tm+0x2
	adds r1, r7, r1
	adds r0, r4, #0
	bl PutText
	lsls r1, r5, #2
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r0, r1
	str r4, [r0]
	adds r7, #0x80
	adds r5, #1
	cmp r5, #5
	ble _08091766
	movs r0, #4
	ldr r2, [sp, #4]
	ldrh r2, [r2, #0xc]
	ands r0, r2
	cmp r0, #0
	beq _08091818
	mov r1, sl
	ldrb r1, [r1, #3]
	lsls r0, r1, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r1, [r0]
	mov r0, sb
	movs r2, #0
	bl sub_808E7CC
	adds r1, r0, #0
	ldr r2, [sp]
	str r1, [r2, #0x54]
	adds r1, #3
	mov r0, sb
	bl Text_SetCursor
	mov r1, sl
	ldrb r1, [r1, #3]
	lsls r0, r1, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	str r0, [r6, #0x2c]
	mov r2, sl
	ldrb r2, [r2, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	bl GetStringTextLen
	ldr r2, [sp]
	ldr r1, [r2, #0x54]
	adds r1, #6
	adds r1, r1, r0
	str r1, [r2, #0x54]
	b _08091848
	.align 2, 0
_08091808: .4byte 0x02016B88
_0809180C: .4byte gUnk_08677FD0
_08091810: .4byte 0x02016B48
_08091814: .4byte gBg0Tm+0x2
_08091818:
	mov r0, r8
	bl sub_809101C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091838
	ldr r0, _08091834 @ =gUnk_0868BFCC
	mov r2, r8
	lsls r1, r2, #3
	adds r1, r1, r0
	ldrh r0, [r1, #2]
	bl DecodeMsg
	b _08091846
	.align 2, 0
_08091834: .4byte gUnk_0868BFCC
_08091838:
	ldr r0, _0809187C @ =gUnk_0868BFCC
	mov r2, r8
	lsls r1, r2, #3
	adds r1, r1, r0
	ldrh r0, [r1]
	bl DecodeMsg
_08091846:
	str r0, [r6, #0x2c]
_08091848:
	adds r0, r6, #0
	adds r0, #0x5c
	movs r2, #0
	strh r2, [r0]
	str r2, [r6, #0x30]
	adds r1, r6, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x5e
	strh r2, [r0]
	movs r0, #1
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809187C: .4byte gUnk_0868BFCC

	thumb_func_start sub_8091880
sub_8091880: @ 0x08091880
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _08091908 @ =0x02016B88
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	movs r1, #4
	ldrh r0, [r0, #0xc]
	ands r1, r0
	cmp r1, #0
	beq _080918FC
	ldr r4, _0809190C @ =gUnk_08677FD0
	adds r0, r4, #0
	bl Proc_Find
	cmp r0, #0
	bne _08091902
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r5, r0, #0
	ldr r0, _08091910 @ =0x02016B48
	movs r3, #5
	adds r2, r0, #0
	adds r2, #0x28
	adds r1, r5, #0
	adds r1, #0x48
_080918BE:
	str r2, [r1]
	subs r2, #8
	subs r1, #4
	subs r3, #1
	cmp r3, #0
	bge _080918BE
	movs r4, #0
	ldr r1, [r6, #0x54]
	bl Text_SetCursor
	ldr r0, _08091914 @ =0x00000A6E
	bl DecodeMsg
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0x5c
	strh r4, [r0]
	str r4, [r5, #0x30]
	adds r1, r5, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x5e
	strh r4, [r0]
	movs r0, #1
	bl EnableBgSync
_080918FC:
	adds r0, r6, #0
	bl Proc_Break
_08091902:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08091908: .4byte 0x02016B88
_0809190C: .4byte gUnk_08677FD0
_08091910: .4byte 0x02016B48
_08091914: .4byte 0x00000A6E

	thumb_func_start sub_8091918
sub_8091918: @ 0x08091918
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0809193C @ =0x02016B88
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	movs r1, #4
	ldrh r0, [r0, #0xc]
	ands r1, r0
	cmp r1, #0
	beq _08091940
	movs r0, #0x96
	lsls r0, r0, #1
	b _08091942
	.align 2, 0
_0809193C: .4byte 0x02016B88
_08091940:
	ldr r0, _08091954 @ =0x00000352
_08091942:
	str r0, [r4, #0x30]
	ldr r0, _08091958 @ =gUnk_0868BE4C
	movs r1, #3
	bl SpawnProc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08091954: .4byte 0x00000352
_08091958: .4byte gUnk_0868BE4C

	thumb_func_start sub_809195C
sub_809195C: @ 0x0809195C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	mov r8, r0
	bl sub_809164C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080919E8 @ =0x02016B88
	adds r1, r0, #1
	strb r1, [r2]
	bl GetUnit
	adds r6, r0, #0
	bl GetUnitFid
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl ResetText
	ldr r0, _080919EC @ =gBg3Tm
	ldr r1, _080919F0 @ =gUnk_08345440
	movs r2, #0x80
	lsls r2, r2, #6
	bl TmApplyTsa_t
	movs r5, #0
	str r5, [sp, #4]
	ldr r1, _080919F4 @ =0x0600D800
	ldr r2, _080919F8 @ =0x01000800
	add r0, sp, #4
	bl CpuFastSet
	movs r0, #0x42
	str r0, [sp]
	movs r0, #0
	adds r1, r4, #0
	movs r2, #0xbe
	movs r3, #2
	bl StartFace
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	movs r3, #0
	bl sub_80920B4
	mov r0, r8
	str r5, [r0, #0x2c]
	ldr r0, _080919FC @ =0x02016B44
	strb r5, [r0]
	ldr r0, _08091A00 @ =gUnk_0868BFAC
	movs r1, #0
	bl SpawnProc
	ldr r0, _08091A04 @ =sub_80910DC
	bl SetOnHBlankA
	movs r0, #3
	bl EnableBgSync
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080919E8: .4byte 0x02016B88
_080919EC: .4byte gBg3Tm
_080919F0: .4byte gUnk_08345440
_080919F4: .4byte 0x0600D800
_080919F8: .4byte 0x01000800
_080919FC: .4byte 0x02016B44
_08091A00: .4byte gUnk_0868BFAC
_08091A04: .4byte sub_80910DC

	thumb_func_start sub_8091A08
sub_8091A08: @ 0x08091A08
	push {lr}
	adds r2, r0, #0
	ldr r0, [r2, #0x2c]
	adds r0, #1
	str r0, [r2, #0x2c]
	ldr r1, [r2, #0x30]
	cmp r0, r1
	bne _08091A1E
	adds r0, r2, #0
	bl Proc_Break
_08091A1E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8091A24
sub_8091A24: @ 0x08091A24
	push {lr}
	movs r0, #0
	bl EndFaceById
	ldr r0, _08091A44 @ =gUnk_08677FD0
	bl Proc_EndEach
	ldr r0, _08091A48 @ =gUnk_0868BFAC
	bl Proc_EndEach
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0
	.align 2, 0
_08091A44: .4byte gUnk_08677FD0
_08091A48: .4byte gUnk_0868BFAC

	thumb_func_start sub_8091A4C
sub_8091A4C: @ 0x08091A4C
	push {lr}
	ldr r0, _08091A60 @ =gUnk_0868BE74
	bl Proc_Find
	cmp r0, #0
	beq _08091A5A
	movs r0, #1
_08091A5A:
	pop {r1}
	bx r1
	.align 2, 0
_08091A60: .4byte gUnk_0868BE74

	thumb_func_start sub_8091A64
sub_8091A64: @ 0x08091A64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	ldr r0, _08091B3C @ =0x02016B88
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	str r0, [sp]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	str r0, [sp, #4]
	bl sub_8084F4C
	mov sb, r0
	ldr r0, _08091B40 @ =gUnk_08677FD0
	movs r1, #3
	bl SpawnProc
	adds r6, r0, #0
	movs r5, #0
	movs r7, #0xc0
	lsls r7, r7, #1
_08091A9E:
	lsls r4, r5, #3
	ldr r0, _08091B44 @ =0x02016B48
	mov r8, r0
	add r4, r8
	adds r0, r4, #0
	movs r1, #0x14
	bl InitText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _08091B48 @ =gBg0Tm+0x4
	adds r1, r7, r1
	adds r0, r4, #0
	bl PutText
	lsls r1, r5, #2
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r0, r1
	str r4, [r0]
	adds r7, #0x80
	adds r5, #1
	cmp r5, #1
	ble _08091A9E
	movs r0, #4
	ldr r1, [sp]
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _08091B4C
	mov r2, sb
	ldrb r2, [r2, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r1, [r0]
	mov r0, r8
	movs r2, #0
	bl sub_808E7CC
	adds r1, r0, #0
	mov r0, sl
	str r1, [r0, #0x54]
	adds r1, #3
	mov r0, r8
	bl Text_SetCursor
	mov r1, sb
	ldrb r1, [r1, #3]
	lsls r0, r1, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	str r0, [r6, #0x2c]
	mov r2, sb
	ldrb r2, [r2, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	bl GetStringTextLen
	mov r2, sl
	ldr r1, [r2, #0x54]
	adds r1, #6
	adds r1, r1, r0
	str r1, [r2, #0x54]
	b _08091B5C
	.align 2, 0
_08091B3C: .4byte 0x02016B88
_08091B40: .4byte gUnk_08677FD0
_08091B44: .4byte 0x02016B48
_08091B48: .4byte gBg0Tm+0x4
_08091B4C:
	ldr r1, _08091B90 @ =gUnk_0868BFCC
	ldr r2, [sp, #4]
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r0, [r0, #4]
	bl DecodeMsg
	str r0, [r6, #0x2c]
_08091B5C:
	adds r0, r6, #0
	adds r0, #0x5c
	movs r2, #0
	strh r2, [r0]
	str r2, [r6, #0x30]
	adds r1, r6, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x5e
	strh r2, [r0]
	movs r0, #1
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091B90: .4byte gUnk_0868BFCC

	thumb_func_start sub_8091B94
sub_8091B94: @ 0x08091B94
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _08091C1C @ =0x02016B88
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	movs r1, #4
	ldrh r0, [r0, #0xc]
	ands r1, r0
	cmp r1, #0
	beq _08091C10
	ldr r4, _08091C20 @ =gUnk_08677FD0
	adds r0, r4, #0
	bl Proc_Find
	cmp r0, #0
	bne _08091C16
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r5, r0, #0
	ldr r0, _08091C24 @ =0x02016B48
	movs r3, #1
	adds r2, r0, #0
	adds r2, #8
	adds r1, r5, #0
	adds r1, #0x38
_08091BD2:
	str r2, [r1]
	subs r2, #8
	subs r1, #4
	subs r3, #1
	cmp r3, #0
	bge _08091BD2
	movs r4, #0
	ldr r1, [r6, #0x54]
	bl Text_SetCursor
	ldr r0, _08091C28 @ =0x00000A6E
	bl DecodeMsg
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0x5c
	strh r4, [r0]
	str r4, [r5, #0x30]
	adds r1, r5, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x5e
	strh r4, [r0]
	movs r0, #1
	bl EnableBgSync
_08091C10:
	adds r0, r6, #0
	bl Proc_Break
_08091C16:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08091C1C: .4byte 0x02016B88
_08091C20: .4byte gUnk_08677FD0
_08091C24: .4byte 0x02016B48
_08091C28: .4byte 0x00000A6E

	thumb_func_start sub_8091C2C
sub_8091C2C: @ 0x08091C2C
	push {lr}
	ldr r0, _08091C3C @ =gUnk_0868BEEC
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08091C3C: .4byte gUnk_0868BEEC

	thumb_func_start sub_8091C40
sub_8091C40: @ 0x08091C40
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sl, r0
	ldr r0, _08091D18 @ =0x02016B89
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	str r0, [sp]
	ldr r0, [r0]
	ldrb r0, [r0, #4]
	str r0, [sp, #4]
	bl sub_8084F4C
	mov sb, r0
	ldr r0, _08091D1C @ =gUnk_08677FD0
	movs r1, #3
	bl SpawnProc
	adds r6, r0, #0
	movs r5, #0
	movs r7, #0x80
	lsls r7, r7, #3
_08091C7A:
	lsls r4, r5, #3
	ldr r0, _08091D20 @ =0x02016B78
	mov r8, r0
	add r4, r8
	adds r0, r4, #0
	movs r1, #0x14
	bl InitText
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetColor
	ldr r1, _08091D24 @ =gBg0Tm+0x1A
	adds r1, r7, r1
	adds r0, r4, #0
	bl PutText
	lsls r1, r5, #2
	adds r0, r6, #0
	adds r0, #0x34
	adds r0, r0, r1
	str r4, [r0]
	adds r7, #0x80
	adds r5, #1
	cmp r5, #1
	ble _08091C7A
	movs r0, #4
	ldr r1, [sp]
	ldrh r1, [r1, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _08091D28
	mov r2, sb
	ldrb r2, [r2, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	adds r0, #0x3e
	ldrb r1, [r0]
	mov r0, r8
	movs r2, #0
	bl sub_808E7CC
	adds r1, r0, #0
	mov r0, sl
	str r1, [r0, #0x54]
	adds r1, #3
	mov r0, r8
	bl Text_SetCursor
	mov r1, sb
	ldrb r1, [r1, #3]
	lsls r0, r1, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	str r0, [r6, #0x2c]
	mov r2, sb
	ldrb r2, [r2, #3]
	lsls r0, r2, #0x1a
	lsrs r0, r0, #0x1a
	bl GetChapterInfo
	ldrh r0, [r0, #0x38]
	bl DecodeMsg
	bl GetStringTextLen
	mov r2, sl
	ldr r1, [r2, #0x54]
	adds r1, #6
	adds r1, r1, r0
	str r1, [r2, #0x54]
	b _08091D38
	.align 2, 0
_08091D18: .4byte 0x02016B89
_08091D1C: .4byte gUnk_08677FD0
_08091D20: .4byte 0x02016B78
_08091D24: .4byte gBg0Tm+0x1A
_08091D28:
	ldr r1, _08091D6C @ =gUnk_0868BFCC
	ldr r2, [sp, #4]
	lsls r0, r2, #3
	adds r0, r0, r1
	ldrh r0, [r0, #4]
	bl DecodeMsg
	str r0, [r6, #0x2c]
_08091D38:
	adds r0, r6, #0
	adds r0, #0x5c
	movs r2, #0
	strh r2, [r0]
	str r2, [r6, #0x30]
	adds r1, r6, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r6, #0
	adds r0, #0x5e
	strh r2, [r0]
	movs r0, #1
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091D6C: .4byte gUnk_0868BFCC

	thumb_func_start sub_8091D70
sub_8091D70: @ 0x08091D70
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _08091DF8 @ =0x02016B89
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl GetUnit
	movs r1, #4
	ldrh r0, [r0, #0xc]
	ands r1, r0
	cmp r1, #0
	beq _08091DEC
	ldr r4, _08091DFC @ =gUnk_08677FD0
	adds r0, r4, #0
	bl Proc_Find
	cmp r0, #0
	bne _08091DF2
	adds r0, r4, #0
	movs r1, #3
	bl SpawnProc
	adds r5, r0, #0
	ldr r0, _08091E00 @ =0x02016B78
	movs r3, #1
	adds r2, r0, #0
	adds r2, #8
	adds r1, r5, #0
	adds r1, #0x38
_08091DAE:
	str r2, [r1]
	subs r2, #8
	subs r1, #4
	subs r3, #1
	cmp r3, #0
	bge _08091DAE
	movs r4, #0
	ldr r1, [r6, #0x54]
	bl Text_SetCursor
	ldr r0, _08091E04 @ =0x00000A6E
	bl DecodeMsg
	str r0, [r5, #0x2c]
	adds r0, r5, #0
	adds r0, #0x5c
	strh r4, [r0]
	str r4, [r5, #0x30]
	adds r1, r5, #0
	adds r1, #0x60
	movs r0, #4
	strh r0, [r1]
	adds r1, #2
	movs r0, #1
	strh r0, [r1]
	adds r0, r5, #0
	adds r0, #0x5e
	strh r4, [r0]
	movs r0, #1
	bl EnableBgSync
_08091DEC:
	adds r0, r6, #0
	bl Proc_Break
_08091DF2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08091DF8: .4byte 0x02016B89
_08091DFC: .4byte gUnk_08677FD0
_08091E00: .4byte 0x02016B78
_08091E04: .4byte 0x00000A6E

	thumb_func_start sub_8091E08
sub_8091E08: @ 0x08091E08
	push {lr}
	ldr r0, _08091E20 @ =0x02016B8A
	ldrb r0, [r0]
	cmp r0, #1
	bne _08091E1A
	ldr r0, _08091E24 @ =gUnk_0868BF14
	movs r1, #3
	bl SpawnProc
_08091E1A:
	pop {r0}
	bx r0
	.align 2, 0
_08091E20: .4byte 0x02016B8A
_08091E24: .4byte gUnk_0868BF14

	thumb_func_start sub_8091E28
sub_8091E28: @ 0x08091E28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r0
	ldr r7, _08091F3C @ =0x02016B8A
	movs r0, #1
	mov sl, r0
	strb r0, [r7]
	movs r0, #0
	bl sub_80916AC
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, _08091F40 @ =0x02016B88
	adds r0, r4, #1
	strb r0, [r1]
	movs r0, #1
	bl sub_80916AC
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0x3f
	ble _08091E60
	movs r0, #0
	strb r0, [r7]
_08091E60:
	ldr r1, _08091F44 @ =0x02016B89
	adds r0, r6, #1
	strb r0, [r1]
	bl ResetText
	ldr r0, _08091F48 @ =gBg3Tm
	ldr r1, _08091F4C @ =gUnk_08345440
	movs r2, #0x80
	lsls r2, r2, #6
	bl TmApplyTsa_t
	movs r1, #0
	mov r8, r1
	str r1, [sp, #4]
	ldr r1, _08091F50 @ =0x0600D800
	ldr r2, _08091F54 @ =0x01000800
	add r0, sp, #4
	bl CpuFastSet
	adds r0, r4, #0
	bl GetUnit
	adds r5, r0, #0
	bl GetUnitFid
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r1, #0xff
	lsls r1, r1, #8
	movs r0, #0
	movs r2, #0
	bl SetBgOffset
	movs r2, #0xdf
	lsls r2, r2, #1
	movs r0, #0x42
	str r0, [sp]
	movs r0, #0
	adds r1, r4, #0
	movs r3, #0
	bl StartFace
	ldr r1, _08091F58 @ =0x030048D4
	str r0, [r1]
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	movs r3, #1
	bl sub_80920B4
	ldrb r7, [r7]
	cmp r7, #1
	bne _08091F0C
	adds r0, r6, #0
	bl GetUnit
	adds r5, r0, #0
	bl GetUnitFid
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	movs r2, #0
	bl SetBgOffset
	movs r2, #0xce
	rsbs r2, r2, #0
	movs r0, #0x43
	str r0, [sp]
	movs r0, #1
	adds r1, r4, #0
	movs r3, #0x50
	bl StartFace
	ldr r1, _08091F5C @ =0x02016B8C
	str r0, [r1]
	movs r0, #0xb
	movs r1, #0xa
	adds r2, r5, #0
	movs r3, #1
	bl sub_80920B4
_08091F0C:
	mov r0, r8
	mov r1, sb
	str r0, [r1, #0x2c]
	ldr r0, _08091F60 @ =0x02016B44
	mov r1, sl
	strb r1, [r0]
	ldr r0, _08091F64 @ =gUnk_0868BFAC
	movs r1, #0
	bl SpawnProc
	ldr r0, _08091F68 @ =sub_80911D0
	bl SetOnHBlankA
	movs r0, #3
	bl EnableBgSync
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091F3C: .4byte 0x02016B8A
_08091F40: .4byte 0x02016B88
_08091F44: .4byte 0x02016B89
_08091F48: .4byte gBg3Tm
_08091F4C: .4byte gUnk_08345440
_08091F50: .4byte 0x0600D800
_08091F54: .4byte 0x01000800
_08091F58: .4byte 0x030048D4
_08091F5C: .4byte 0x02016B8C
_08091F60: .4byte 0x02016B44
_08091F64: .4byte gUnk_0868BFAC
_08091F68: .4byte sub_80911D0

	thumb_func_start sub_8091F6C
sub_8091F6C: @ 0x08091F6C
	push {r4, lr}
	adds r4, r0, #0
	ldr r1, [r4, #0x2c]
	cmp r1, #0x3c
	beq _08091FDE
	cmp r1, #0x3c
	bgt _08091F80
	cmp r1, #0x2d
	beq _08091FC8
	b _08091F8C
_08091F80:
	cmp r1, #0xc8
	beq _08091FE4
	movs r0, #0xf0
	lsls r0, r0, #1
	cmp r1, r0
	beq _08091FEA
_08091F8C:
	ldr r0, [r4, #0x2c]
	cmp r0, #0x2c
	bgt _08091FF0
	ldr r0, _08091FB8 @ =0x030048D4
	ldr r1, [r0]
	ldr r2, _08091FBC @ =0x02016B90
	movs r0, #0xbe
	ldrh r3, [r2]
	subs r0, r0, r3
	strh r0, [r1, #0x2e]
	ldr r0, _08091FC0 @ =0x02016B8A
	ldrb r0, [r0]
	cmp r0, #1
	bne _08091FF0
	ldr r0, _08091FC4 @ =0x02016B8C
	ldr r1, [r0]
	movs r0, #0x32
	ldrh r2, [r2, #2]
	subs r0, r0, r2
	strh r0, [r1, #0x2e]
	b _08091FF0
	.align 2, 0
_08091FB8: .4byte 0x030048D4
_08091FBC: .4byte 0x02016B90
_08091FC0: .4byte 0x02016B8A
_08091FC4: .4byte 0x02016B8C
_08091FC8:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	b _08091FF0
_08091FDE:
	bl sub_8091C2C
	b _08091FF0
_08091FE4:
	bl sub_8091E08
	b _08091FF0
_08091FEA:
	adds r0, r4, #0
	bl Proc_Break
_08091FF0:
	ldr r0, [r4, #0x2c]
	adds r0, #1
	str r0, [r4, #0x2c]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8091FFC
sub_8091FFC: @ 0x08091FFC
	push {lr}
	movs r0, #0
	bl EndFaceById
	movs r0, #1
	bl EndFaceById
	ldr r0, _08092020 @ =gUnk_08677FD0
	bl Proc_EndEach
	ldr r0, _08092024 @ =gUnk_0868BFAC
	bl Proc_EndEach
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0
	.align 2, 0
_08092020: .4byte gUnk_08677FD0
_08092024: .4byte gUnk_0868BFAC

	thumb_func_start sub_8092028
sub_8092028: @ 0x08092028
	push {lr}
	ldr r0, _0809203C @ =gUnk_0868BF3C
	bl Proc_Find
	cmp r0, #0
	beq _08092036
	movs r0, #1
_08092036:
	pop {r1}
	bx r1
	.align 2, 0
_0809203C: .4byte gUnk_0868BF3C

	thumb_func_start sub_8092040
sub_8092040: @ 0x08092040
	ldr r0, _08092050 @ =0x02016B90
	movs r1, #0xff
	lsls r1, r1, #8
	strh r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	strh r1, [r0, #2]
	bx lr
	.align 2, 0
_08092050: .4byte 0x02016B90

	thumb_func_start sub_8092054
sub_8092054: @ 0x08092054
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _080920A4 @ =0x02016B44
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08092098
	ldr r6, _080920A8 @ =0x02016B90
	ldrh r0, [r6, #2]
	cmp r0, #0
	beq _08092098
	ldr r0, _080920AC @ =gUnk_0868BF3C
	bl Proc_Find
	adds r5, r0, #0
	ldr r1, _080920B0 @ =0xFFFFFF00
	ldr r3, [r5, #0x2c]
	movs r4, #0x2d
	str r4, [sp]
	movs r0, #4
	movs r2, #0
	bl Interpolate
	strh r0, [r6]
	movs r1, #0x80
	lsls r1, r1, #1
	ldr r3, [r5, #0x2c]
	str r4, [sp]
	movs r0, #4
	movs r2, #0
	bl Interpolate
	strh r0, [r6, #2]
_08092098:
	bl sub_809104C
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080920A4: .4byte 0x02016B44
_080920A8: .4byte 0x02016B90
_080920AC: .4byte gUnk_0868BF3C
_080920B0: .4byte 0xFFFFFF00

	thumb_func_start sub_80920B4
sub_80920B4: @ 0x080920B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r2, #0
	adds r4, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, [r7]
	ldrb r0, [r0, #4]
	bl sub_8084F4C
	mov sl, r0
	ldr r0, [r7]
	ldrb r6, [r0, #4]
	cmp r4, #0
	bne _08092128
	ldr r4, _08092118 @ =gBg1Tm
	ldr r1, _0809211C @ =gUnk_083461C4
	movs r5, #0x86
	lsls r5, r5, #7
	adds r0, r4, #0
	adds r2, r5, #0
	bl TmApplyTsa_t
	movs r1, #0xd1
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08092120 @ =gUnk_08346330
	adds r2, r5, #0
	bl TmApplyTsa_t
	movs r0, #0x98
	lsls r0, r0, #3
	adds r4, r4, r0
	ldr r1, _08092124 @ =gUnk_083463B4
	adds r0, r4, #0
	adds r2, r5, #0
	bl TmApplyTsa_t
	b _0809213E
	.align 2, 0
_08092118: .4byte gBg1Tm
_0809211C: .4byte gUnk_083461C4
_08092120: .4byte gUnk_08346330
_08092124: .4byte gUnk_083463B4
_08092128:
	mov r1, sb
	lsls r0, r1, #5
	add r0, r8
	lsls r0, r0, #1
	ldr r1, _0809225C @ =gBg1Tm
	adds r0, r0, r1
	ldr r1, _08092260 @ =gUnk_083463F4
	movs r2, #0x86
	lsls r2, r2, #7
	bl TmApplyTsa_t
_0809213E:
	ldr r0, _08092264 @ =gUnk_0868BFCC
	lsls r4, r6, #3
	adds r4, r4, r0
	ldrh r0, [r4, #6]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x48
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r6, r1, #1
	ldrh r0, [r4, #6]
	bl DecodeMsg
	mov r4, sb
	adds r4, #1
	lsls r4, r4, #5
	adds r1, r4, #2
	add r1, r8
	lsls r1, r1, #1
	ldr r5, _08092268 @ =gBg0Tm
	adds r1, r1, r5
	movs r2, #9
	str r2, [sp]
	str r0, [sp, #4]
	movs r0, #0
	movs r2, #0
	adds r3, r6, #0
	bl PutDrawText
	ldr r0, [r7]
	ldrh r0, [r0]
	bl DecodeMsg
	bl GetStringTextLen
	movs r1, #0x28
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r6, r1, #1
	ldr r0, [r7]
	ldrh r0, [r0]
	bl DecodeMsg
	adds r4, #0xb
	add r4, r8
	lsls r4, r4, #1
	adds r4, r4, r5
	movs r1, #5
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #0
	adds r1, r4, #0
	movs r2, #0
	adds r3, r6, #0
	bl PutDrawText
	add r0, sp, #8
	movs r1, #0xf
	bl InitText
	mov r1, sb
	adds r1, #4
	lsls r1, r1, #5
	adds r1, #2
	add r1, r8
	lsls r1, r1, #1
	adds r1, r1, r5
	add r0, sp, #8
	bl PutText
	mov r0, sl
	ldrh r0, [r0, #0xa]
	lsls r3, r0, #0x12
	lsrs r3, r3, #0x14
	add r0, sp, #8
	movs r1, #0x1e
	movs r2, #0
	bl Text_InsertDrawNumberOrBlank
	ldr r0, _0809226C @ =0x000009C6
	bl DecodeMsg
	adds r3, r0, #0
	add r0, sp, #8
	movs r1, #0x26
	movs r2, #0
	bl Text_InsertDrawString
	movs r4, #0
	mov r1, sl
	ldrb r1, [r1]
	cmp r1, #0x63
	bhi _08092202
	movs r4, #6
_08092202:
	adds r1, r4, #0
	adds r1, #0x3f
	mov r0, sl
	ldr r3, [r0, #8]
	lsls r3, r3, #0xe
	lsrs r3, r3, #0x16
	add r0, sp, #8
	movs r2, #0
	bl Text_InsertDrawNumberOrBlank
	adds r4, #0x47
	ldr r0, _08092270 @ =0x000009C7
	bl DecodeMsg
	adds r3, r0, #0
	add r0, sp, #8
	adds r1, r4, #0
	movs r2, #0
	bl Text_InsertDrawString
	mov r1, sl
	ldrb r3, [r1]
	add r0, sp, #8
	movs r1, #0x5f
	movs r2, #0
	bl Text_InsertDrawNumberOrBlank
	ldr r0, _08092274 @ =0x000009C8
	bl DecodeMsg
	adds r3, r0, #0
	add r0, sp, #8
	movs r1, #0x67
	movs r2, #0
	bl Text_InsertDrawString
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809225C: .4byte gBg1Tm
_08092260: .4byte gUnk_083463F4
_08092264: .4byte gUnk_0868BFCC
_08092268: .4byte gBg0Tm
_0809226C: .4byte 0x000009C6
_08092270: .4byte 0x000009C7
_08092274: .4byte 0x000009C8

	thumb_func_start sub_8092278
sub_8092278: @ 0x08092278
	ldr r2, _08092288 @ =gUnk_0868C2DC
	lsls r0, r0, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	bx lr
	.align 2, 0
_08092288: .4byte gUnk_0868C2DC

	thumb_func_start sub_809228C
sub_809228C: @ 0x0809228C
	push {r4, lr}
	bl sub_8092278
	ldr r4, _080922AC @ =gBuf
	adds r1, r4, #0
	bl Decompress
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	bl ApplyPaletteExt
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080922AC: .4byte gBuf

	thumb_func_start sub_80922B0
sub_80922B0: @ 0x080922B0
	push {lr}
	ldr r0, _080922C0 @ =gUnk_0868C324
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_080922C0: .4byte gUnk_0868C324

	thumb_func_start sub_80922C4
sub_80922C4: @ 0x080922C4
	push {lr}
	ldr r0, _080922D4 @ =gUnk_0868C324
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_080922D4: .4byte gUnk_0868C324

	thumb_func_start sub_80922D8
sub_80922D8: @ 0x080922D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	mov ip, r0
	ldr r3, _080923C0 @ =gDispIo
	movs r4, #8
	rsbs r4, r4, #0
	ldrb r0, [r3]
	ands r4, r0
	movs r2, #4
	orrs r4, r2
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r3, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	orrs r0, r2
	subs r1, #6
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r3, #1]
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r2, [r3, #0xc]
	ands r0, r2
	strb r0, [r3, #0xc]
	adds r0, r1, #0
	ldrb r5, [r3, #0x10]
	ands r0, r5
	movs r2, #1
	orrs r0, r2
	strb r0, [r3, #0x10]
	ldrb r7, [r3, #0x14]
	ands r1, r7
	movs r0, #2
	orrs r1, r0
	strb r1, [r3, #0x14]
	movs r0, #3
	ldrb r1, [r3, #0x18]
	orrs r0, r1
	strb r0, [r3, #0x18]
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r4, r0
	strb r4, [r3]
	movs r1, #0
	mov r2, ip
	str r1, [r2, #0x2c]
	str r1, [r2, #0x30]
	movs r0, #0xf0
	lsls r0, r0, #6
	str r0, [r2, #0x34]
	movs r0, #0xa0
	lsls r0, r0, #6
	str r0, [r2, #0x38]
	str r1, [r2, #0x44]
	mov r5, ip
	adds r5, #0x48
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r5]
	mov r6, ip
	adds r6, #0x4a
	strh r0, [r6]
	mov r0, ip
	adds r0, #0x4c
	strh r1, [r0]
	adds r0, #6
	strb r2, [r0]
	subs r0, #4
	strh r1, [r0]
	adds r0, #5
	strb r2, [r0]
	subs r0, #3
	strh r1, [r0]
	adds r0, #4
	strb r2, [r0]
	mov r3, ip
	ldr r0, [r3, #0x2c]
	ldr r1, [r3, #0x30]
	ldr r2, [r3, #0x34]
	ldr r3, [r3, #0x38]
	mov r7, ip
	ldr r4, [r7, #0x44]
	str r4, [sp]
	movs r7, #0
	ldrsh r4, [r5, r7]
	str r4, [sp, #4]
	movs r5, #0
	ldrsh r4, [r6, r5]
	str r4, [sp, #8]
	bl sub_8092EB0
	movs r0, #0
	movs r1, #1
	bl sub_809228C
	movs r0, #0
	movs r1, #0
	bl sub_8092278
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl Decompress
	bl sub_8092838
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080923C0: .4byte gDispIo

	thumb_func_start nullsub_9
nullsub_9: @ 0x080923C4
	bx lr
	.align 2, 0

	thumb_func_start sub_80923C8
sub_80923C8: @ 0x080923C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r7, r2, #0
	mov r8, r3
	ldr r0, _080923F4 @ =gUnk_0868C37C
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	bl sub_8092854
	adds r1, r0, #0
	str r1, [r4, #0x58]
	cmp r1, #0
	bne _080923F8
	adds r0, r4, #0
	bl Proc_End
	b _0809241A
	.align 2, 0
_080923F4: .4byte gUnk_0868C37C
_080923F8:
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r4, #0x58]
	strb r5, [r0, #1]
	ldr r0, [r4, #0x58]
	strb r6, [r0, #5]
	ldr r1, [r4, #0x58]
	adds r0, r1, #0
	adds r0, #0xd4
	str r7, [r0]
	adds r0, #4
	mov r2, r8
	str r2, [r0]
	ldr r0, [sp, #0x18]
	str r0, [r1, #0xc]
	ldr r0, [sp, #0x1c]
	str r0, [r1, #8]
_0809241A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8092424
sub_8092424: @ 0x08092424
	push {lr}
	ldr r0, _08092430 @ =gUnk_0868C37C
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_08092430: .4byte gUnk_0868C37C

	thumb_func_start sub_8092434
sub_8092434: @ 0x08092434
	push {lr}
	ldr r0, _08092444 @ =gUnk_0868C37C
	bl Proc_Find
	cmp r0, #0
	bne _08092448
	movs r0, #0
	b _0809244A
	.align 2, 0
_08092444: .4byte gUnk_0868C37C
_08092448:
	movs r0, #1
_0809244A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8092450
sub_8092450: @ 0x08092450
	ldr r1, [r0, #0x58]
	movs r0, #0
	strb r0, [r1]
	bx lr

	thumb_func_start sub_8092458
sub_8092458: @ 0x08092458
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r7, [r0, #0x58]
	ldrb r0, [r7, #1]
	bl sub_809325C
	bl sub_8093284
	movs r1, #0
	strb r0, [r7, #4]
	str r1, [r7, #0x14]
	movs r3, #0
	cmp r3, r0
	bge _080924CE
_0809247C:
	ldrb r0, [r7, #1]
	str r3, [sp]
	bl sub_809325C
	ldr r3, [sp]
	adds r1, r3, #0
	bl sub_8093288
	ldr r3, [sp]
	lsls r4, r3, #2
	adds r2, r7, #0
	adds r2, #0x74
	adds r2, r2, r4
	adds r1, r7, #0
	adds r1, #0xd4
	ldr r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r2]
	ldrb r0, [r7, #1]
	str r3, [sp]
	bl sub_809325C
	ldr r3, [sp]
	adds r1, r3, #0
	bl sub_80932D8
	adds r2, r7, #0
	adds r2, #0xa4
	adds r2, r2, r4
	adds r1, r7, #0
	adds r1, #0xd8
	ldr r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #8
	str r0, [r2]
	ldr r3, [sp]
	adds r3, #1
	ldrb r1, [r7, #4]
	cmp r3, r1
	blt _0809247C
_080924CE:
	movs r3, #1
	movs r0, #0x14
	adds r0, r0, r7
	mov sb, r0
	ldrb r1, [r7, #4]
	cmp r3, r1
	bge _08092556
	movs r0, #0x74
	adds r0, r0, r7
	mov sl, r0
	movs r1, #0
	mov r8, r1
_080924E6:
	lsls r6, r3, #2
	mov r0, sl
	ldr r5, [r0, #4]
	adds r1, r0, #0
	adds r1, #4
	mov sl, r1
	subs r1, #4
	ldm r1!, {r0}
	subs r5, r5, r0
	adds r0, r7, #0
	adds r0, #0xa4
	adds r1, r0, r6
	add r0, r8
	ldr r4, [r1]
	ldr r0, [r0]
	subs r4, r4, r0
	adds r0, r5, #0
	muls r0, r5, r0
	adds r1, r4, #0
	muls r1, r4, r1
	adds r0, r0, r1
	str r3, [sp]
	bl Sqrt
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r1, sb
	adds r2, r1, r6
	add r1, r8
	ldr r1, [r1]
	adds r1, r1, r0
	str r1, [r2]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl ArcTan2
	adds r4, r7, #0
	adds r4, #0x44
	adds r4, r4, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x3f
	bl __divsi3
	str r0, [r4]
	movs r0, #4
	add r8, r0
	ldr r3, [sp]
	adds r3, #1
	ldrb r1, [r7, #4]
	cmp r3, r1
	blt _080924E6
_08092556:
	ldrb r0, [r7, #4]
	subs r0, #1
	lsls r0, r0, #2
	add r0, sb
	ldr r0, [r0]
	str r0, [r7, #0x10]
	ldr r1, [r7, #8]
	bl __divsi3
	adds r0, #1
	strb r0, [r7, #3]
	movs r3, #0
	ldrb r1, [r7, #3]
	cmp r3, r1
	bge _080925B2
	movs r6, #0
_08092576:
	lsls r5, r3, #2
	movs r0, #0x91
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r4, r4, r5
	ldr r0, [r7, #0xc]
	muls r0, r3, r0
	subs r1, #1
	str r3, [sp]
	bl __divsi3
	str r0, [r4]
	adds r0, r7, #0
	adds r0, #0xdc
	ldr r3, [sp]
	adds r0, r0, r3
	strb r6, [r0]
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r0, r5
	str r6, [r0]
	adds r0, r7, #0
	adds r0, #0xf0
	adds r0, r0, r3
	strb r6, [r0]
	adds r3, #1
	ldrb r1, [r7, #3]
	cmp r3, r1
	blt _08092576
_080925B2:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80925C4
sub_80925C4: @ 0x080925C4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r5, r0, #0
	lsls r7, r1, #2
	movs r2, #0xa5
	lsls r2, r2, #2
	adds r0, r5, r2
	adds r0, r0, r7
	ldr r0, [r0]
	adds r0, #0x20
	ldr r2, _08092640 @ =0x000003FF
	ands r0, r2
	asrs r2, r0, #6
	asrs r0, r0, #8
	lsls r3, r0, #8
	movs r0, #3
	ands r2, r0
	lsls r6, r2, #1
	ldrb r0, [r5, #3]
	subs r0, #1
	cmp r1, r0
	bne _08092648
	ldrb r0, [r5, #2]
	movs r4, #0x80
	lsls r4, r4, #1
	adds r1, r4, #0
	adds r2, r4, #0
	bl sub_8093064
	movs r0, #0xf
	ldrb r1, [r5, #5]
	ands r0, r1
	lsls r0, r0, #0xc
	movs r1, #0xc4
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r6, r6, r0
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	adds r0, r0, r7
	ldr r1, [r0]
	lsls r1, r1, #0xf
	lsrs r1, r1, #0x17
	ldrb r2, [r5, #2]
	lsls r0, r2, #9
	orrs r1, r0
	movs r2, #0xaa
	lsls r2, r2, #1
	adds r0, r5, r2
	adds r0, r0, r7
	ldr r2, [r0]
	asrs r2, r2, #8
	movs r0, #0xff
	ands r2, r0
	orrs r2, r4
	ldr r3, _08092644 @ =gUnk_0868C2D4
	str r6, [sp]
	movs r0, #0xc
	bl PutSpriteExt
	b _0809267A
	.align 2, 0
_08092640: .4byte 0x000003FF
_08092644: .4byte gUnk_0868C2D4
_08092648:
	movs r0, #0xf
	ldrb r1, [r5, #5]
	ands r0, r1
	lsls r0, r0, #0xc
	ldr r1, _08092684 @ =0x00000323
	adds r6, r0, r1
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r5, r2
	adds r0, r0, r7
	ldr r1, [r0]
	lsls r1, r1, #0xf
	lsrs r1, r1, #0x17
	adds r2, #0x50
	adds r0, r5, r2
	adds r0, r0, r7
	ldr r2, [r0]
	asrs r2, r2, #8
	movs r0, #0xff
	ands r2, r0
	ldr r3, _08092688 @ =gUnk_0868C2CC
	str r6, [sp]
	movs r0, #0xc
	bl PutSpriteExt
_0809267A:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092684: .4byte 0x00000323
_08092688: .4byte gUnk_0868C2CC

	thumb_func_start sub_809268C
sub_809268C: @ 0x0809268C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, [r0, #0x58]
	movs r0, #0
	mov sl, r0
	ldrb r1, [r4, #3]
	cmp sl, r1
	blt _080926A4
	b _08092828
_080926A4:
	movs r2, #0xf0
	adds r2, r2, r4
	mov sb, r2
	mov r8, r0
_080926AC:
	mov r1, sb
	ldrb r0, [r1]
	cmp r0, #1
	beq _0809276E
	cmp r0, #1
	bgt _080926BE
	cmp r0, #0
	beq _080926C6
	b _08092816
_080926BE:
	cmp r0, #0x63
	bne _080926C4
	b _0809280E
_080926C4:
	b _08092816
_080926C6:
	adds r0, r4, #0
	adds r0, #0xdc
	add r0, sl
	ldrb r6, [r0]
	movs r2, #0x82
	lsls r2, r2, #1
	adds r1, r4, r2
	add r1, r8
	lsls r2, r6, #2
	adds r0, r4, #0
	adds r0, #0x74
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0xaa
	lsls r0, r0, #1
	adds r1, r4, r0
	add r1, r8
	adds r0, r4, #0
	adds r0, #0xa4
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r1, #0xa5
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r2, r8
	adds r7, r0, r2
	adds r1, r6, #1
	lsls r1, r1, #2
	adds r0, r4, #0
	adds r0, #0x44
	adds r0, r0, r1
	ldr r1, [r0]
	str r1, [r7]
	movs r2, #0xd2
	lsls r2, r2, #1
	adds r0, r4, r2
	mov r2, r8
	adds r5, r0, r2
	movs r2, #0x91
	lsls r2, r2, #2
	adds r0, r4, r2
	mov r2, r8
	adds r3, r0, r2
	ldr r0, _080927E4 @ =gUnk_08353328
	mov ip, r0
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r1, r2
	ldr r6, _080927E8 @ =0x000003FF
	ands r1, r6
	lsls r1, r1, #2
	add r1, ip
	ldr r2, [r3]
	ldr r0, [r1]
	muls r0, r2, r0
	cmp r0, #0
	bge _08092740
	ldr r1, _080927EC @ =0x00007FFF
	adds r0, r0, r1
_08092740:
	asrs r0, r0, #0xf
	str r0, [r5]
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r4, r2
	mov r1, r8
	adds r2, r0, r1
	ldr r0, [r7]
	ands r0, r6
	lsls r0, r0, #2
	add r0, ip
	ldr r1, [r3]
	ldr r0, [r0]
	muls r0, r1, r0
	cmp r0, #0
	bge _08092764
	ldr r1, _080927EC @ =0x00007FFF
	adds r0, r0, r1
_08092764:
	asrs r0, r0, #0xf
	str r0, [r2]
	movs r0, #1
	mov r2, sb
	strb r0, [r2]
_0809276E:
	adds r0, r4, #0
	mov r1, sl
	bl sub_80925C4
	adds r0, r4, #0
	adds r0, #0xdc
	mov r1, sl
	adds r7, r0, r1
	ldrb r6, [r7]
	movs r0, #0x82
	lsls r0, r0, #1
	adds r2, r4, r0
	add r2, r8
	movs r1, #0xd2
	lsls r1, r1, #1
	adds r0, r4, r1
	add r0, r8
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r2]
	movs r0, #0xaa
	lsls r0, r0, #1
	adds r2, r4, r0
	add r2, r8
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r4, r1
	add r0, r8
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r2]
	movs r2, #0xb9
	lsls r2, r2, #2
	adds r1, r4, r2
	add r1, r8
	subs r2, #0xa0
	adds r0, r4, r2
	add r0, r8
	ldr r2, [r1]
	ldr r0, [r0]
	adds r5, r2, r0
	str r5, [r1]
	ldr r0, [r4, #0x10]
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	ldrb r1, [r4, #3]
	subs r1, #1
	bl __divsi3
	cmp r5, r0
	blt _080927F0
	movs r0, #0x63
	mov r2, sb
	strb r0, [r2]
	b _08092816
	.align 2, 0
_080927E4: .4byte gUnk_08353328
_080927E8: .4byte 0x000003FF
_080927EC: .4byte 0x00007FFF
_080927F0:
	adds r0, r6, #1
	lsls r0, r0, #2
	adds r1, r4, #0
	adds r1, #0x14
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r5, r0
	blt _08092816
	ldrb r0, [r7]
	adds r0, #1
	movs r1, #0
	strb r0, [r7]
	mov r0, sb
	strb r1, [r0]
	b _08092816
_0809280E:
	adds r0, r4, #0
	mov r1, sl
	bl sub_80925C4
_08092816:
	movs r1, #1
	add sb, r1
	movs r2, #4
	add r8, r2
	add sl, r1
	ldrb r0, [r4, #3]
	cmp sl, r0
	bge _08092828
	b _080926AC
_08092828:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8092838
sub_8092838: @ 0x08092838
	movs r1, #0
	movs r3, #0
	ldr r0, _08092850 @ =0x030048E0
	movs r2, #0xcd
	lsls r2, r2, #2
_08092842:
	strb r3, [r0]
	strb r1, [r0, #2]
	adds r0, r0, r2
	adds r1, #1
	cmp r1, #2
	ble _08092842
	bx lr
	.align 2, 0
_08092850: .4byte 0x030048E0

	thumb_func_start sub_8092854
sub_8092854: @ 0x08092854
	ldr r1, _0809286C @ =0x030048E0
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r3, r1, r0
	movs r2, #0xcd
	lsls r2, r2, #2
_08092860:
	ldrb r0, [r1]
	cmp r0, #0
	bne _08092870
	adds r0, r1, #0
	b _08092878
	.align 2, 0
_0809286C: .4byte 0x030048E0
_08092870:
	adds r1, r1, r2
	cmp r1, r3
	ble _08092860
	movs r0, #0
_08092878:
	bx lr
	.align 2, 0

	thumb_func_start sub_809287C
sub_809287C: @ 0x0809287C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08092898 @ =gUnk_0868C3AC
	movs r1, #3
	bl SpawnProc
	str r4, [r0, #0x2c]
	adds r0, #0x66
	movs r1, #0
	strh r1, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08092898: .4byte gUnk_0868C3AC

	thumb_func_start sub_809289C
sub_809289C: @ 0x0809289C
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x66
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r0, #0
	ldrsh r1, [r1, r0]
	ldr r0, [r2, #0x2c]
	cmp r1, r0
	bne _080928BA
	adds r0, r2, #0
	bl Proc_Break
_080928BA:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80928C0
sub_80928C0: @ 0x080928C0
	push {lr}
	ldr r0, _080928D0 @ =gUnk_0868C3AC
	bl Proc_Find
	cmp r0, #0
	bne _080928D4
	movs r0, #0
	b _080928D6
	.align 2, 0
_080928D0: .4byte gUnk_0868C3AC
_080928D4:
	movs r0, #1
_080928D6:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80928DC
sub_80928DC: @ 0x080928DC
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	adds r6, r1, #0
	adds r1, r2, #0
	ldr r0, _08092904 @ =gUnk_0868C3C4
	bl SpawnProc
	adds r4, r0, #0
	ldr r0, _08092908 @ =gUnk_0868C324
	bl Proc_Find
	str r0, [r4, #0x4c]
	lsls r5, r5, #8
	str r5, [r4, #0x2c]
	lsls r6, r6, #8
	str r6, [r4, #0x30]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08092904: .4byte gUnk_0868C3C4
_08092908: .4byte gUnk_0868C324

	thumb_func_start sub_809290C
sub_809290C: @ 0x0809290C
	adds r2, r0, #0
	adds r2, #0x66
	movs r1, #0
	strh r1, [r2]
	adds r0, #0x68
	strh r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809291C
sub_809291C: @ 0x0809291C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r7, r0, #0
	ldr r4, [r7, #0x4c]
	ldr r0, [r7, #0x2c]
	str r0, [r4, #0x3c]
	ldr r1, [r7, #0x30]
	str r1, [r4, #0x40]
	movs r2, #0x66
	adds r2, r2, r7
	mov r8, r2
	movs r3, #0
	ldrsh r5, [r2, r3]
	cmp r5, #1
	beq _0809296A
	cmp r5, #1
	bgt _08092948
	cmp r5, #0
	beq _0809294E
	b _08092960
_08092948:
	cmp r5, #2
	beq _080929C8
	b _08092960
_0809294E:
	bl sub_8092A9C
	mov r1, r8
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	adds r0, r7, #0
	adds r0, #0x68
	strh r5, [r0]
_08092960:
	adds r6, r4, #0
	adds r6, #0x4a
	adds r5, r4, #0
	adds r5, #0x48
	b _08092A68
_0809296A:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r2, #0x80
	lsls r2, r2, #2
	adds r7, #0x68
	movs r5, #0
	ldrsh r3, [r7, r5]
	movs r0, #0x20
	str r0, [sp]
	movs r0, #5
	bl Interpolate
	adds r2, r4, #0
	adds r2, #0x4a
	strh r0, [r2]
	adds r1, r4, #0
	adds r1, #0x48
	strh r0, [r1]
	ldr r0, [r4, #0x3c]
	ldr r3, _080929C0 @ =0xFFFF8800
	adds r0, r0, r3
	str r0, [r4, #0x34]
	ldr r0, [r4, #0x40]
	ldr r5, _080929C4 @ =0xFFFFB000
	adds r0, r0, r5
	str r0, [r4, #0x38]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r6, r2, #0
	adds r5, r1, #0
	cmp r0, #0x21
	bne _08092A68
	mov r1, r8
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r0, #0
	strh r0, [r7]
	b _08092A68
	.align 2, 0
_080929C0: .4byte 0xFFFF8800
_080929C4: .4byte 0xFFFFB000
_080929C8:
	adds r0, r7, #0
	adds r0, #0x68
	movs r5, #1
	ldrh r2, [r0]
	ands r5, r2
	mov r8, r0
	cmp r5, #0
	beq _08092A14
	movs r0, #1
	movs r1, #1
	bl sub_809228C
	movs r1, #0
	str r1, [r4, #0x2c]
	str r1, [r4, #0x30]
	movs r0, #0xf0
	lsls r0, r0, #7
	str r0, [r4, #0x34]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [r4, #0x38]
	str r1, [r4, #0x44]
	adds r3, r4, #0
	adds r3, #0x48
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3]
	adds r2, r4, #0
	adds r2, #0x4a
	strh r0, [r2]
	ldr r1, _08092A10 @ =gDispIo
	movs r0, #0x10
	ldrb r5, [r1]
	orrs r0, r5
	b _08092A4C
	.align 2, 0
_08092A10: .4byte gDispIo
_08092A14:
	movs r0, #0
	movs r1, #1
	bl sub_809228C
	str r5, [r4, #0x2c]
	str r5, [r4, #0x30]
	ldr r0, [r4, #0x3c]
	ldr r1, _08092A90 @ =0xFFFF8800
	adds r0, r0, r1
	str r0, [r4, #0x34]
	ldr r0, [r4, #0x40]
	ldr r2, _08092A94 @ =0xFFFFB000
	adds r0, r0, r2
	str r0, [r4, #0x38]
	str r5, [r4, #0x44]
	adds r3, r4, #0
	adds r3, #0x48
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r3]
	adds r2, r4, #0
	adds r2, #0x4a
	strh r0, [r2]
	ldr r1, _08092A98 @ =gDispIo
	movs r0, #0x11
	rsbs r0, r0, #0
	ldrb r5, [r1]
	ands r0, r5
_08092A4C:
	strb r0, [r1]
	adds r6, r2, #0
	adds r5, r3, #0
	mov r1, r8
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	bne _08092A68
	adds r0, r7, #0
	bl Proc_Break
_08092A68:
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	ldr r2, [r4, #0x34]
	ldr r3, [r4, #0x38]
	ldr r4, [r4, #0x44]
	str r4, [sp]
	movs r7, #0
	ldrsh r4, [r5, r7]
	str r4, [sp, #4]
	movs r5, #0
	ldrsh r4, [r6, r5]
	str r4, [sp, #8]
	bl sub_8092EB0
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092A90: .4byte 0xFFFF8800
_08092A94: .4byte 0xFFFFB000
_08092A98: .4byte gDispIo

	thumb_func_start sub_8092A9C
sub_8092A9C: @ 0x08092A9C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	adds r2, r0, #0
	adds r3, r1, #0
	asrs r0, r2, #8
	adds r2, r0, #0
	subs r2, #0x78
	asrs r0, r3, #8
	adds r3, r0, #0
	subs r3, #0x50
	movs r1, #0xf0
	subs r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov sb, r4
	asrs r0, r0, #0x10
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x14]
	movs r1, #0xa0
	subs r4, r1, r3
	lsls r4, r4, #0x10
	lsrs r5, r4, #0x10
	asrs r4, r4, #0x10
	subs r1, r1, r4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	adds r0, r0, r2
	subs r0, #0xf0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	mov r0, r8
	str r0, [sp, #8]
	ldr r1, [sp, #0x14]
	str r1, [sp]
	adds r0, r4, r3
	subs r0, #0xa0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	mov r2, sl
	str r2, [sp, #4]
	str r0, [sp, #0x10]
	movs r0, #1
	movs r1, #0
	bl sub_8092278
	ldr r1, _08092CD0 @ =0x02000000
	bl Decompress
	movs r2, #0
	cmp r2, r4
	bge _08092B66
	ldr r4, [sp, #8]
	lsls r0, r4, #0x10
	asrs r7, r0, #0x10
	ldr r1, [sp, #0x14]
	lsls r0, r1, #0x10
	asrs r6, r0, #0x10
_08092B20:
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #4
	ldr r2, _08092CD4 @ =0x0600A000
	adds r3, r0, r2
	adds r1, r7, r4
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	adds r0, r0, r6
	ldr r1, _08092CD0 @ =0x02000000
	adds r1, r0, r1
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _08092B48
	adds r0, #3
_08092B48:
	lsls r2, r0, #9
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r1, #0
	adds r1, r3, #0
	bl CpuSet
	adds r1, r4, #1
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	lsls r0, r5, #0x10
	cmp r1, r0
	blt _08092B20
_08092B66:
	movs r0, #2
	movs r1, #0
	bl sub_8092278
	ldr r1, _08092CD0 @ =0x02000000
	bl Decompress
	lsls r0, r5, #0x10
	movs r2, #0
	adds r5, r0, #0
	mov r4, r8
	lsls r6, r4, #0x10
	cmp r5, #0
	ble _08092BDE
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	ldr r4, _08092CD4 @ =0x0600A000
	adds r4, r4, r0
	mov r8, r4
	ldr r1, [sp, #8]
	lsls r0, r1, #0x10
	asrs r7, r0, #0x10
_08092B94:
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #4
	mov r2, r8
	adds r3, r0, r2
	adds r0, r7, r4
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	mov r2, sl
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	ldr r0, _08092CD0 @ =0x02000000
	adds r1, r1, r0
	ldr r2, [sp, #0x14]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _08092BC2
	adds r0, #3
_08092BC2:
	lsls r2, r0, #9
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r1, #0
	adds r1, r3, #0
	bl CpuSet
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r0, r5
	blt _08092B94
_08092BDE:
	movs r0, #3
	movs r1, #0
	bl sub_8092278
	ldr r1, _08092CD0 @ =0x02000000
	bl Decompress
	movs r2, #0
	cmp r6, #0
	ble _08092C4A
	ldr r4, [sp, #0xc]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	ldr r1, [sp]
	lsls r0, r1, #0x10
	asrs r7, r0, #0x10
_08092C00:
	asrs r1, r5, #0x10
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	adds r1, r1, r4
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	ldr r2, _08092CD4 @ =0x0600A000
	adds r3, r0, r2
	mov r0, r8
	adds r1, r0, r4
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	adds r0, r0, r7
	ldr r1, _08092CD0 @ =0x02000000
	adds r1, r0, r1
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _08092C2E
	adds r0, #3
_08092C2E:
	lsls r2, r0, #9
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r1, #0
	adds r1, r3, #0
	bl CpuSet
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r0, r6
	blt _08092C00
_08092C4A:
	movs r0, #4
	movs r1, #0
	bl sub_8092278
	ldr r1, _08092CD0 @ =0x02000000
	bl Decompress
	movs r2, #0
	cmp r6, #0
	ble _08092CBE
	mov r4, sb
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08092CD4 @ =0x0600A000
	adds r1, r1, r0
	mov r8, r1
	ldr r4, [sp, #0x10]
	lsls r0, r4, #0x10
	asrs r7, r0, #0x10
_08092C70:
	asrs r1, r5, #0x10
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	adds r1, r1, r4
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	mov r1, r8
	adds r3, r0, r1
	adds r0, r7, r4
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	ldr r2, [sp, #4]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	ldr r0, _08092CD0 @ =0x02000000
	adds r1, r1, r0
	ldr r2, [sp, #0x14]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _08092CA2
	adds r0, #3
_08092CA2:
	lsls r2, r0, #9
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r1, #0
	adds r1, r3, #0
	bl CpuSet
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r0, r6
	blt _08092C70
_08092CBE:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092CD0: .4byte 0x02000000
_08092CD4: .4byte 0x0600A000

	thumb_func_start sub_8092CD8
sub_8092CD8: @ 0x08092CD8
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _08092CF4 @ =gUnk_0868C3EC
	bl SpawnProc
	adds r4, r0, #0
	ldr r0, _08092CF8 @ =gUnk_0868C324
	bl Proc_Find
	str r0, [r4, #0x4c]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08092CF4: .4byte gUnk_0868C3EC
_08092CF8: .4byte gUnk_0868C324

	thumb_func_start sub_8092CFC
sub_8092CFC: @ 0x08092CFC
	adds r2, r0, #0
	adds r2, #0x66
	movs r1, #0
	strh r1, [r2]
	adds r0, #0x68
	strh r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8092D0C
sub_8092D0C: @ 0x08092D0C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	mov r8, r0
	ldr r5, [r0, #0x4c]
	adds r0, #0x66
	movs r1, #0
	ldrsh r4, [r0, r1]
	cmp r4, #0
	beq _08092D32
	cmp r4, #1
	beq _08092DE8
	adds r7, r5, #0
	adds r7, #0x48
	adds r6, r5, #0
	adds r6, #0x4a
	b _08092E36
_08092D32:
	mov r0, r8
	adds r0, #0x68
	movs r6, #1
	ldrh r3, [r0]
	ands r6, r3
	mov sb, r0
	cmp r6, #0
	beq _08092D7C
	movs r0, #1
	movs r1, #1
	bl sub_809228C
	str r4, [r5, #0x2c]
	str r4, [r5, #0x30]
	movs r0, #0xf0
	lsls r0, r0, #7
	str r0, [r5, #0x34]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [r5, #0x38]
	str r4, [r5, #0x44]
	adds r3, r5, #0
	adds r3, #0x48
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x4a
	strh r0, [r2]
	ldr r1, _08092D78 @ =gDispIo
	movs r0, #0x10
	ldrb r4, [r1]
	orrs r0, r4
	b _08092DB4
	.align 2, 0
_08092D78: .4byte gDispIo
_08092D7C:
	movs r0, #0
	movs r1, #1
	bl sub_809228C
	str r6, [r5, #0x2c]
	str r6, [r5, #0x30]
	ldr r0, [r5, #0x3c]
	ldr r1, _08092DDC @ =0xFFFF8800
	adds r0, r0, r1
	str r0, [r5, #0x34]
	ldr r0, [r5, #0x40]
	ldr r3, _08092DE0 @ =0xFFFFB000
	adds r0, r0, r3
	str r0, [r5, #0x38]
	str r6, [r5, #0x44]
	adds r3, r5, #0
	adds r3, #0x48
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r3]
	adds r2, r5, #0
	adds r2, #0x4a
	strh r0, [r2]
	ldr r1, _08092DE4 @ =gDispIo
	movs r0, #0x11
	rsbs r0, r0, #0
	ldrb r4, [r1]
	ands r0, r4
_08092DB4:
	strb r0, [r1]
	adds r7, r3, #0
	adds r6, r2, #0
	mov r1, sb
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bne _08092E36
	mov r0, r8
	adds r0, #0x66
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r0, #0
	mov r3, sb
	strh r0, [r3]
	b _08092E36
	.align 2, 0
_08092DDC: .4byte 0xFFFF8800
_08092DE0: .4byte 0xFFFFB000
_08092DE4: .4byte gDispIo
_08092DE8:
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x80
	lsls r2, r2, #1
	mov r4, r8
	adds r4, #0x68
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r0, #0x20
	str r0, [sp]
	movs r0, #5
	bl Interpolate
	adds r2, r5, #0
	adds r2, #0x4a
	strh r0, [r2]
	adds r1, r5, #0
	adds r1, #0x48
	strh r0, [r1]
	ldr r0, [r5, #0x3c]
	ldr r3, _08092E60 @ =0xFFFF8800
	adds r0, r0, r3
	str r0, [r5, #0x34]
	ldr r0, [r5, #0x40]
	ldr r3, _08092E64 @ =0xFFFFB000
	adds r0, r0, r3
	str r0, [r5, #0x38]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r7, r1, #0
	adds r6, r2, #0
	cmp r0, #0x21
	bne _08092E36
	mov r0, r8
	bl Proc_Break
_08092E36:
	ldr r0, [r5, #0x2c]
	ldr r1, [r5, #0x30]
	ldr r2, [r5, #0x34]
	ldr r3, [r5, #0x38]
	ldr r4, [r5, #0x44]
	str r4, [sp]
	movs r5, #0
	ldrsh r4, [r7, r5]
	str r4, [sp, #4]
	movs r5, #0
	ldrsh r4, [r6, r5]
	str r4, [sp, #8]
	bl sub_8092EB0
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092E60: .4byte 0xFFFF8800
_08092E64: .4byte 0xFFFFB000

	thumb_func_start sub_8092E68
sub_8092E68: @ 0x08092E68
	push {lr}
	ldr r0, _08092E84 @ =gUnk_0868C3C4
	bl Proc_Find
	cmp r0, #0
	bne _08092E8C
	ldr r0, _08092E88 @ =gUnk_0868C3EC
	bl Proc_Find
	cmp r0, #0
	bne _08092E8C
	movs r0, #0
	b _08092E8E
	.align 2, 0
_08092E84: .4byte gUnk_0868C3C4
_08092E88: .4byte gUnk_0868C3EC
_08092E8C:
	movs r0, #1
_08092E8E:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8092E94
sub_8092E94: @ 0x08092E94
	push {lr}
	ldr r0, _08092EA8 @ =gUnk_0868C3C4
	bl Proc_EndEach
	ldr r0, _08092EAC @ =gUnk_0868C3EC
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_08092EA8: .4byte gUnk_0868C3C4
_08092EAC: .4byte gUnk_0868C3EC

	thumb_func_start sub_8092EB0
sub_8092EB0: @ 0x08092EB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	mov sb, r0
	mov sl, r1
	adds r6, r2, #0
	mov r8, r3
	ldr r0, [sp, #0x28]
	ldr r1, [sp, #0x2c]
	ldr r2, [sp, #0x30]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #4]
	movs r1, #0x20
	bl Div
	adds r5, r0, #0
	movs r1, #2
	bl Div
	adds r4, r0, #0
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _08092F18
	ldr r2, _08092F10 @ =gUnk_08353328
	ldr r3, _08092F14 @ =0x000003FF
	adds r1, r4, #0
	ands r1, r3
	lsls r1, r1, #2
	adds r1, r1, r2
	adds r0, r4, #1
	ands r0, r3
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r7, r1, #1
	adds r3, r2, #0
	b _08092F26
	.align 2, 0
_08092F10: .4byte gUnk_08353328
_08092F14: .4byte 0x000003FF
_08092F18:
	ldr r1, _08092F50 @ =gUnk_08353328
	ldr r0, _08092F54 @ =0x000003FF
	ands r0, r4
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r7, [r0]
	adds r3, r1, #0
_08092F26:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	beq _08092F5C
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r2, _08092F54 @ =0x000003FF
	ands r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r5, _08092F58 @ =0x00000101
	adds r0, r4, r5
	ands r0, r2
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r1, [r1]
	ldr r0, [r0]
	adds r1, r1, r0
	asrs r5, r1, #1
	b _08092F6C
	.align 2, 0
_08092F50: .4byte gUnk_08353328
_08092F54: .4byte 0x000003FF
_08092F58: .4byte 0x00000101
_08092F5C:
	movs r1, #0x80
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08093050 @ =0x000003FF
	ands r0, r1
	lsls r0, r0, #2
	adds r0, r0, r3
	ldr r5, [r0]
_08092F6C:
	mov r0, sb
	cmp r0, #0
	bge _08092F74
	adds r0, #0xff
_08092F74:
	asrs r0, r0, #8
	mov sb, r0
	mov r0, sl
	cmp r0, #0
	bge _08092F80
	adds r0, #0xff
_08092F80:
	asrs r0, r0, #8
	mov sl, r0
	adds r0, r6, #0
	cmp r6, #0
	bge _08092F8C
	adds r0, #0xff
_08092F8C:
	asrs r6, r0, #8
	mov r0, r8
	cmp r0, #0
	bge _08092F96
	adds r0, #0xff
_08092F96:
	asrs r0, r0, #8
	mov r8, r0
	ldr r4, _08093054 @ =gDispIo
	ldr r2, [sp]
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x80
	lsls r0, r0, #9
	bl __divsi3
	adds r1, r0, #0
	adds r0, r1, #0
	muls r0, r5, r0
	cmp r0, #0
	bge _08092FB6
	adds r0, #0xff
_08092FB6:
	asrs r0, r0, #0xf
	ldr r3, _08093058 @ =0x030026F8
	strh r0, [r3]
	adds r0, r1, #0
	muls r0, r7, r0
	cmp r0, #0
	bge _08092FC6
	adds r0, #0xff
_08092FC6:
	asrs r0, r0, #0xf
	ldr r1, _0809305C @ =0x030026FA
	strh r0, [r1]
	ldr r2, [sp, #4]
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x80
	lsls r0, r0, #9
	bl __divsi3
	adds r1, r0, #0
	adds r0, r1, #0
	muls r0, r7, r0
	cmp r0, #0
	bge _08092FE6
	adds r0, #0xff
_08092FE6:
	asrs r0, r0, #0xf
	rsbs r0, r0, #0
	movs r3, #0x4c
	adds r3, r3, r4
	mov ip, r3
	strh r0, [r3]
	adds r0, r1, #0
	muls r0, r5, r0
	cmp r0, #0
	bge _08092FFC
	adds r0, #0xff
_08092FFC:
	asrs r0, r0, #0xf
	ldr r5, _08093060 @ =0x030026FE
	strh r0, [r5]
	ldr r7, _08093058 @ =0x030026F8
	movs r1, #0
	ldrsh r0, [r7, r1]
	mov r2, sb
	subs r3, r2, r6
	adds r1, r0, #0
	muls r1, r3, r1
	ldr r5, _0809305C @ =0x030026FA
	movs r7, #0
	ldrsh r0, [r5, r7]
	mov r5, sl
	mov r7, r8
	subs r2, r5, r7
	muls r0, r2, r0
	adds r1, r1, r0
	lsls r0, r6, #8
	adds r1, r1, r0
	str r1, [r4, #0x50]
	mov r1, ip
	movs r5, #0
	ldrsh r0, [r1, r5]
	muls r0, r3, r0
	ldr r7, _08093060 @ =0x030026FE
	movs r3, #0
	ldrsh r1, [r7, r3]
	muls r1, r2, r1
	adds r0, r0, r1
	mov r5, r8
	lsls r1, r5, #8
	adds r0, r0, r1
	str r0, [r4, #0x54]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093050: .4byte 0x000003FF
_08093054: .4byte gDispIo
_08093058: .4byte 0x030026F8
_0809305C: .4byte 0x030026FA
_08093060: .4byte 0x030026FE

	thumb_func_start sub_8093064
sub_8093064: @ 0x08093064
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r6, _080930CC @ =gUnk_08353328
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r3, r2
	ldr r2, _080930D0 @ =0x000003FF
	ands r1, r2
	lsls r1, r1, #2
	adds r1, r1, r6
	ldr r1, [r1]
	mov r8, r1
	mov r1, r8
	muls r1, r4, r1
	lsls r1, r1, #1
	asrs r1, r1, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	ands r3, r2
	lsls r3, r3, #2
	adds r3, r3, r6
	ldr r3, [r3]
	adds r2, r5, #0
	muls r2, r3, r2
	lsls r2, r2, #1
	asrs r2, r2, #0x10
	muls r3, r4, r3
	asrs r3, r3, #0xf
	rsbs r3, r3, #0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	mov r4, r8
	muls r4, r5, r4
	lsls r4, r4, #1
	asrs r4, r4, #0x10
	str r4, [sp]
	bl PutSpriteAffine
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080930CC: .4byte gUnk_08353328
_080930D0: .4byte 0x000003FF

	thumb_func_start StartWorldMapIntroScen
StartWorldMapIntroScen: @ 0x080930D4
	push {r4, r5, lr}
	ldr r5, _0809310C @ =ChapterAssets
	ldr r4, _08093110 @ =gPlaySt
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	cmp r0, #0
	beq _08093106
	movs r0, #0xe
	ldrsb r0, [r4, r0]
	bl GetChapterInfo
	adds r0, #0x3b
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r0, [r0]
	bl StartEvent
_08093106:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809310C: .4byte ChapterAssets
_08093110: .4byte gPlaySt

	thumb_func_start sub_8093114
sub_8093114: @ 0x08093114
	push {lr}
	movs r0, #4
	bl FadeBgmOut
	pop {r0}
	bx r0

	thumb_func_start sub_8093120
sub_8093120: @ 0x08093120
	push {lr}
	movs r0, #1
	bl FadeBgmOut
	pop {r0}
	bx r0

	thumb_func_start SetWMFlag
SetWMFlag: @ 0x0809312C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0809314C @ =gUnk_0868C648
	bl Proc_Find
	cmp r0, #0
	beq _08093144
	lsls r1, r4, #2
	adds r0, #0x30
	adds r0, r0, r1
	str r5, [r0]
_08093144:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809314C: .4byte gUnk_0868C648

	thumb_func_start GetWMFlag
GetWMFlag: @ 0x08093150
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08093164 @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	cmp r1, #0
	bne _08093168
	movs r0, #0
	b _08093170
	.align 2, 0
_08093164: .4byte gUnk_0868C648
_08093168:
	lsls r0, r4, #2
	adds r1, #0x30
	adds r1, r1, r0
	ldr r0, [r1]
_08093170:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start SetWMDot
SetWMDot: @ 0x08093178
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08093198 @ =gUnk_0868C648
	bl Proc_Find
	cmp r0, #0
	beq _08093190
	lsls r1, r4, #2
	adds r0, #0x40
	adds r0, r0, r1
	str r5, [r0]
_08093190:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093198: .4byte gUnk_0868C648

	thumb_func_start GetWMDot
GetWMDot: @ 0x0809319C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080931B0 @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	cmp r1, #0
	bne _080931B4
	movs r0, #0
	b _080931BC
	.align 2, 0
_080931B0: .4byte gUnk_0868C648
_080931B4:
	lsls r0, r4, #2
	adds r1, #0x40
	adds r1, r1, r0
	ldr r0, [r1]
_080931BC:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start SetWMHighlight
SetWMHighlight: @ 0x080931C4
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _080931E4 @ =gUnk_0868C648
	bl Proc_Find
	cmp r0, #0
	beq _080931DC
	lsls r1, r4, #2
	adds r0, #0x48
	adds r0, r0, r1
	str r5, [r0]
_080931DC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080931E4: .4byte gUnk_0868C648

	thumb_func_start GetWMHighlight
GetWMHighlight: @ 0x080931E8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080931FC @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	cmp r1, #0
	bne _08093200
	movs r0, #0
	b _08093208
	.align 2, 0
_080931FC: .4byte gUnk_0868C648
_08093200:
	lsls r0, r4, #2
	adds r1, #0x48
	adds r1, r1, r0
	ldr r0, [r1]
_08093208:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start SetWMMapText
SetWMMapText: @ 0x08093210
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _08093230 @ =gUnk_0868C648
	bl Proc_Find
	cmp r0, #0
	beq _08093228
	lsls r1, r4, #2
	adds r0, #0x50
	adds r0, r0, r1
	str r5, [r0]
_08093228:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093230: .4byte gUnk_0868C648

	thumb_func_start GetWMMapText
GetWMMapText: @ 0x08093234
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08093248 @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	cmp r1, #0
	bne _0809324C
	movs r0, #0
	b _08093254
	.align 2, 0
_08093248: .4byte gUnk_0868C648
_0809324C:
	lsls r0, r4, #2
	adds r1, #0x50
	adds r1, r1, r0
	ldr r0, [r1]
_08093254:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_809325C
sub_809325C: @ 0x0809325C
	ldr r1, _08093280 @ =gUnk_0868C414
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r1
	ldr r0, [r2]
	ldrh r3, [r0]
	lsrs r1, r3, #1
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r2, [r2, #8]
	lsls r1, r2, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	lsrs r1, r1, #1
	lsls r1, r1, #1
	adds r0, r0, r1
	bx lr
	.align 2, 0
_08093280: .4byte gUnk_0868C414

	thumb_func_start sub_8093284
sub_8093284: @ 0x08093284
	ldrh r0, [r0]
	bx lr

	thumb_func_start sub_8093288
sub_8093288: @ 0x08093288
	push {r4, lr}
	lsls r2, r1, #1
	adds r2, r2, r1
	lsls r2, r2, #1
	adds r2, r2, r0
	ldr r4, _080932CC @ =0x000001FF
	ldrh r2, [r2, #4]
	ands r4, r2
	ldr r0, _080932D0 @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080932AE
	ldr r0, _080932D4 @ =0xFFFFFE00
	orrs r4, r0
_080932AE:
	adds r0, r1, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0
	bne _080932C2
	adds r0, r4, #0
	movs r1, #2
	bl Div
	adds r4, r0, #0
_080932C2:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080932CC: .4byte 0x000001FF
_080932D0: .4byte gUnk_0868C648
_080932D4: .4byte 0xFFFFFE00

	thumb_func_start sub_80932D8
sub_80932D8: @ 0x080932D8
	push {r4, lr}
	lsls r2, r1, #1
	adds r2, r2, r1
	lsls r2, r2, #1
	adds r2, r2, r0
	ldrb r4, [r2, #2]
	ldr r0, _08093314 @ =gUnk_0868C648
	bl Proc_Find
	adds r1, r0, #0
	movs r0, #0x80
	ands r0, r4
	cmp r0, #0
	beq _080932F8
	ldr r0, _08093318 @ =0xFFFFFF00
	orrs r4, r0
_080932F8:
	adds r0, r1, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809330C
	adds r0, r4, #0
	movs r1, #2
	bl Div
	adds r4, r0, #0
_0809330C:
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08093314: .4byte gUnk_0868C648
_08093318: .4byte 0xFFFFFF00

	thumb_func_start sub_809331C
sub_809331C: @ 0x0809331C
	push {r4, r5, r6, lr}
	adds r3, r0, #0
	movs r1, #0
	movs r0, #0
	strh r0, [r3, #0x2a]
	strh r0, [r3, #0x2c]
	adds r0, r3, #0
	adds r0, #0x2e
	strb r1, [r0]
	ldr r6, _08093388 @ =gUnk_0868C658
	movs r4, #0
	movs r2, #3
	adds r1, r3, #0
	adds r1, #0x3c
_08093338:
	str r4, [r1]
	subs r1, #4
	subs r2, #1
	cmp r2, #0
	bge _08093338
	adds r4, r3, #0
	adds r4, #0x50
	adds r5, r3, #0
	adds r5, #0x48
	adds r2, r3, #0
	adds r2, #0x40
	movs r0, #0
	adds r1, r3, #0
	adds r1, #0x44
_08093354:
	str r0, [r1]
	subs r1, #4
	cmp r1, r2
	bge _08093354
	adds r2, r4, #0
	movs r0, #0
	adds r1, r2, #4
_08093362:
	str r0, [r1]
	subs r1, #4
	cmp r1, r2
	bge _08093362
	adds r2, r5, #0
	movs r0, #0
	adds r1, r2, #4
_08093370:
	str r0, [r1]
	subs r1, #4
	cmp r1, r2
	bge _08093370
	adds r0, r6, #0
	adds r1, r3, #0
	bl SpawnProc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093388: .4byte gUnk_0868C658

	thumb_func_start sub_809338C
sub_809338C: @ 0x0809338C
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_8093394
sub_8093394: @ 0x08093394
	push {r4, lr}
	sub sp, #0x38
	adds r4, r0, #0
	ldr r1, _080933EC @ =gUnk_08354728
	mov r0, sp
	movs r2, #0x37
	bl memcpy
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	add r0, sp
	ldrb r0, [r0]
	cmp r0, #0xff
	bne _080933BC
	movs r0, #0
	strh r0, [r4]
_080933BC:
	movs r1, #0
	ldrsh r0, [r4, r1]
	add r0, sp
	ldrb r0, [r0]
	lsls r4, r0, #5
	ldr r0, _080933F0 @ =gUnk_082D37E4
	adds r0, r4, r0
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080933F4 @ =gUnk_082D3764
	adds r4, r4, r0
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	add sp, #0x38
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080933EC: .4byte gUnk_08354728
_080933F0: .4byte gUnk_082D37E4
_080933F4: .4byte gUnk_082D3764

	thumb_func_start sub_80933F8
sub_80933F8: @ 0x080933F8
	push {lr}
	ldr r0, _08093430 @ =gUnk_082D33B8
	ldr r1, _08093434 @ =0x06016200
	bl Decompress
	ldr r0, _08093438 @ =gUnk_082D36E4
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x80
	bl ApplyPaletteExt
	ldr r0, _0809343C @ =gUnk_082D3864
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x40
	bl ApplyPaletteExt
	bl sub_8092838
	ldr r0, _08093440 @ =gUnk_0868C648
	movs r1, #3
	bl SpawnProc
	bl sub_80934A0
	pop {r0}
	bx r0
	.align 2, 0
_08093430: .4byte gUnk_082D33B8
_08093434: .4byte 0x06016200
_08093438: .4byte gUnk_082D36E4
_0809343C: .4byte gUnk_082D3864
_08093440: .4byte gUnk_0868C648

	thumb_func_start sub_8093444
sub_8093444: @ 0x08093444
	push {lr}
	ldr r0, _08093458 @ =gUnk_0868C648
	bl Proc_Find
	cmp r0, #0
	beq _08093452
	movs r0, #1
_08093452:
	pop {r1}
	bx r1
	.align 2, 0
_08093458: .4byte gUnk_0868C648

	thumb_func_start sub_809345C
sub_809345C: @ 0x0809345C
	push {lr}
	movs r0, #8
	bl Proc_EndEachMarked
	bl EndEachSpriteAnimProc
	bl EndPutTalkSpriteText
	ldr r0, _08093478 @ =gUnk_0868C648
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_08093478: .4byte gUnk_0868C648

	thumb_func_start sub_809347C
sub_809347C: @ 0x0809347C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, _0809349C @ =gUnk_0868C648
	bl Proc_Find
	subs r4, #0x78
	strh r4, [r0, #0x2a]
	subs r5, #0x50
	strh r5, [r0, #0x2c]
	adds r0, #0x2e
	movs r1, #1
	strb r1, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809349C: .4byte gUnk_0868C648

	thumb_func_start sub_80934A0
sub_80934A0: @ 0x080934A0
	push {lr}
	ldr r0, _080934B8 @ =gUnk_0868C648
	bl Proc_Find
	movs r2, #0
	movs r1, #0
	strh r1, [r0, #0x2a]
	strh r1, [r0, #0x2c]
	adds r0, #0x2e
	strb r2, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_080934B8: .4byte gUnk_0868C648

	thumb_func_start sub_80934BC
sub_80934BC: @ 0x080934BC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	ldr r0, _08093510 @ =gUnk_0868C648
	bl Proc_Find
	lsls r1, r5, #1
	adds r1, r1, r5
	lsls r1, r1, #2
	ldr r2, _08093514 @ =gUnk_0868C414
	adds r2, r1, r2
	movs r3, #4
	ldrsh r1, [r2, r3]
	ldrh r7, [r0, #0x2a]
	subs r4, r1, r7
	movs r3, #6
	ldrsh r1, [r2, r3]
	ldrh r7, [r0, #0x2c]
	subs r3, r1, r7
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0
	bne _080934F4
	asrs r4, r4, #1
	asrs r3, r3, #1
	subs r4, #2
	subs r3, #2
_080934F4:
	ldrh r0, [r2, #0xa]
	str r0, [sp]
	ldrb r2, [r2, #9]
	lsls r0, r2, #8
	str r0, [sp, #4]
	adds r0, r5, #0
	adds r1, r6, #0
	adds r2, r4, #0
	bl sub_80923C8
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093510: .4byte gUnk_0868C648
_08093514: .4byte gUnk_0868C414

	thumb_func_start sub_8093518
sub_8093518: @ 0x08093518
	push {lr}
	ldr r0, _08093554 @ =gUnk_082D33B8
	ldr r1, _08093558 @ =0x06016200
	bl Decompress
	ldr r0, _0809355C @ =gUnk_082D36E4
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x80
	bl ApplyPaletteExt
	ldr r0, _08093560 @ =Pal_SystemObjects
	movs r1, #0xd8
	lsls r1, r1, #2
	movs r2, #0x40
	bl ApplyPaletteExt
	ldr r0, _08093564 @ =gUnk_082AA9A8
	ldr r1, _08093568 @ =0x06016800
	bl Decompress
	ldr r0, _0809356C @ =gUnk_082AAD5C
	movs r1, #0xc8
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r0}
	bx r0
	.align 2, 0
_08093554: .4byte gUnk_082D33B8
_08093558: .4byte 0x06016200
_0809355C: .4byte gUnk_082D36E4
_08093560: .4byte Pal_SystemObjects
_08093564: .4byte gUnk_082AA9A8
_08093568: .4byte 0x06016800
_0809356C: .4byte gUnk_082AAD5C

	thumb_func_start StartWMIntroRotation
StartWMIntroRotation: @ 0x08093570
	push {lr}
	adds r1, r0, #0
	ldr r0, _08093580 @ =gUnk_0868C668
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08093580: .4byte gUnk_0868C668

	thumb_func_start sub_8093584
sub_8093584: @ 0x08093584
	adds r3, r0, #0
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #0x80
	lsls r0, r0, #2
	strh r0, [r1]
	adds r1, #4
	movs r0, #0x80
	strh r0, [r1]
	adds r0, r3, #0
	adds r0, #0x64
	strh r2, [r0]
	bx lr

	thumb_func_start sub_80935A0
sub_80935A0: @ 0x080935A0
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r7, r0, #0
	movs r1, #0x80
	lsls r1, r1, #8
	adds r4, r7, #0
	adds r4, #0x64
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r5, #0x23
	str r5, [sp]
	movs r0, #5
	movs r2, #0
	bl Interpolate
	adds r6, r0, #0
	movs r1, #0x80
	lsls r1, r1, #3
	movs r2, #0x80
	lsls r2, r2, #1
	ldrh r3, [r4]
	adds r0, r3, #1
	strh r0, [r4]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r5, [sp]
	movs r0, #5
	bl Interpolate
	movs r2, #0xf0
	lsls r2, r2, #7
	movs r3, #0xa0
	lsls r3, r3, #7
	str r6, [sp]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #0
	movs r1, #0
	bl sub_8092EB0
	ldrh r4, [r4]
	cmp r4, #0x28
	bne _08093600
	adds r0, r7, #0
	bl Proc_Break
_08093600:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8093608
sub_8093608: @ 0x08093608
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r0
	movs r0, #0x64
	add sb, r0
	movs r0, #0
	mov r1, sb
	strh r0, [r1]
	bl sub_8069C34
	bl sub_8069C74
	ldr r2, _080936E0 @ =gDispIo+0x3C
	mov ip, r2
	ldr r0, _080936E4 @ =0x0000FFE0
	ldrh r3, [r2]
	ands r0, r3
	movs r1, #0x1f
	orrs r0, r1
	strh r0, [r2]
	subs r2, #0x3c
	movs r4, #0x20
	mov r6, ip
	ldrb r0, [r6]
	orrs r0, r4
	strb r0, [r6]
	ldrb r0, [r2, #1]
	orrs r0, r4
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #8
	rsbs r0, r0, #0
	add r0, ip
	mov sl, r0
	ldrb r0, [r0]
	orrs r0, r4
	mov r1, sl
	strb r0, [r1]
	mov r7, ip
	subs r7, #6
	movs r2, #0x21
	rsbs r2, r2, #0
	adds r0, r2, #0
	ldrb r3, [r7]
	ands r0, r3
	strb r0, [r7]
	movs r1, #1
	mov r6, sl
	ldrb r0, [r6]
	orrs r0, r1
	movs r3, #2
	mov r8, r3
	mov r6, r8
	orrs r0, r6
	movs r3, #4
	orrs r0, r3
	movs r5, #8
	orrs r0, r5
	movs r3, #0x10
	orrs r0, r3
	mov r6, sl
	strb r0, [r6]
	ldrb r0, [r7]
	orrs r1, r0
	mov r6, r8
	orrs r1, r6
	movs r0, #4
	orrs r1, r0
	orrs r1, r5
	orrs r1, r3
	strb r1, [r7]
	mov r1, sl
	ldrb r1, [r1]
	orrs r4, r1
	mov r3, sl
	strb r4, [r3]
	ldrb r6, [r7]
	ands r2, r6
	strb r2, [r7]
	movs r0, #0x3f
	mov r1, ip
	ldrb r1, [r1]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	mov r2, ip
	strb r0, [r2]
	movs r3, #0
	strb r3, [r2, #8]
	strb r3, [r2, #9]
	mov r6, sb
	ldrh r0, [r6]
	strb r0, [r2, #0xa]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080936E0: .4byte gDispIo+0x3C
_080936E4: .4byte 0x0000FFE0

	thumb_func_start sub_80936E8
sub_80936E8: @ 0x080936E8
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x64
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r0, #0x2d
	str r0, [sp]
	movs r0, #5
	movs r1, #1
	movs r2, #0xc8
	bl Interpolate
	adds r2, r0, #0
	movs r0, #0x78
	movs r1, #0x50
	bl sub_8069DA4
	ldr r5, _08093760 @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r5, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r0, #0x28
	str r0, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x46
	strb r0, [r1]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x28
	bne _08093758
	adds r0, r6, #0
	bl Proc_Break
_08093758:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093760: .4byte gDispIo

	thumb_func_start sub_8093764
sub_8093764: @ 0x08093764
	push {r4, lr}
	ldr r4, _080937A8 @ =gDispIo
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	movs r0, #0
	bl SetOnHBlankA
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r4, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r4, #1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080937A8: .4byte gDispIo

	thumb_func_start StartWMHighlight
StartWMHighlight: @ 0x080937AC
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r1, #0
	ldr r0, _080937D0 @ =gUnk_0868C704
	movs r1, #3
	bl SpawnProc
	adds r1, r0, #0
	adds r0, #0x64
	strh r5, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, r4, #0
	bl SetWMHighlight
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080937D0: .4byte gUnk_0868C704

	thumb_func_start sub_80937D4
sub_80937D4: @ 0x080937D4
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r7, _0809389C @ =gUnk_0868C6B0
	adds r4, r5, #0
	adds r4, #0x64
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r7
	ldr r2, [r1]
	adds r6, r5, #0
	adds r6, #0x66
	movs r1, #0
	ldrsh r0, [r6, r1]
	ldr r1, _080938A0 @ =0x06015100
	cmp r0, #0
	bne _080937FC
	ldr r1, _080938A4 @ =0x06014000
_080937FC:
	adds r0, r2, #0
	bl Decompress
	ldr r0, _080938A8 @ =gUnk_082D3398
	movs r1, #0xd0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r2, #0
	ldrsh r1, [r4, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r7, #4
	adds r0, r0, r1
	ldr r0, [r0]
	movs r1, #0xd
	bl StartSpriteAnim
	adds r1, r0, #0
	str r1, [r5, #0x50]
	movs r4, #0
	ldrsh r0, [r6, r4]
	ldr r2, _080938AC @ =0x0000A288
	adds r4, r2, #0
	cmp r0, #0
	bne _0809383A
	movs r0, #0xa2
	lsls r0, r0, #8
	adds r4, r0, #0
_0809383A:
	movs r2, #0
	movs r3, #0
	strh r4, [r1, #0x22]
	ldr r1, _080938B0 @ =gDispIo
	mov ip, r1
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r4, [r1]
	ands r0, r4
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x44
	strb r2, [r0]
	mov r1, ip
	adds r1, #0x45
	movs r0, #0x10
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _080938B4 @ =0x0000FFE0
	mov r1, ip
	ldrh r1, [r1, #0x3c]
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	ldr r1, _080938B8 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	mov r4, ip
	strh r0, [r4, #0x3c]
	mov r1, ip
	adds r1, #0x3d
	movs r0, #0x20
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	str r3, [r5, #0x54]
	adds r1, r5, #0
	adds r1, #0x44
	movs r0, #0xc0
	strh r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809389C: .4byte gUnk_0868C6B0
_080938A0: .4byte 0x06015100
_080938A4: .4byte 0x06014000
_080938A8: .4byte gUnk_082D3398
_080938AC: .4byte 0x0000A288
_080938B0: .4byte gDispIo
_080938B4: .4byte 0x0000FFE0
_080938B8: .4byte 0x0000E0FF

	thumb_func_start sub_80938BC
sub_80938BC: @ 0x080938BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r5, r0, #0
	ldr r0, [r5, #0x50]
	ldr r2, _08093954 @ =gUnk_0868C6B0
	adds r1, r5, #0
	adds r1, #0x64
	movs r3, #0
	ldrsh r1, [r1, r3]
	lsls r3, r1, #1
	adds r3, r3, r1
	lsls r3, r3, #2
	adds r3, r3, r2
	ldrb r1, [r3, #8]
	movs r2, #0x80
	lsls r2, r2, #3
	ldrb r3, [r3, #9]
	orrs r2, r3
	bl DisplaySpriteAnim
	ldr r1, _08093958 @ =gSinLut
	adds r2, r5, #0
	adds r2, #0x44
	ldrb r7, [r2]
	lsls r0, r7, #1
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	asrs r0, r0, #0xb
	adds r3, r0, #0
	adds r3, #8
	ldrh r0, [r2]
	adds r0, #3
	movs r6, #0
	strh r0, [r2]
	ldr r1, _0809395C @ =gDispIo
	adds r4, r1, #0
	adds r4, #0x3c
	movs r2, #0x3f
	ldrb r7, [r4]
	ands r2, r7
	strb r2, [r4]
	movs r0, #0x44
	adds r0, r0, r1
	mov r8, r0
	strb r3, [r0]
	movs r0, #0x10
	subs r0, r0, r3
	movs r7, #0x45
	adds r7, r7, r1
	strb r0, [r7]
	adds r1, #0x46
	strb r6, [r1]
	ldr r0, [r5, #0x54]
	cmp r0, #0
	beq _08093948
	cmp r3, #2
	bne _08093948
	strb r2, [r4]
	mov r0, r8
	strb r6, [r0]
	movs r0, #0x10
	strb r0, [r7]
	strb r6, [r1]
	adds r0, r5, #0
	bl Proc_End
_08093948:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093954: .4byte gUnk_0868C6B0
_08093958: .4byte gSinLut
_0809395C: .4byte gDispIo

	thumb_func_start sub_8093960
sub_8093960: @ 0x08093960
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x50]
	bl EndSpriteAnim
	adds r4, #0x66
	movs r1, #0
	ldrsh r0, [r4, r1]
	movs r1, #0
	bl SetWMHighlight
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809397C
sub_809397C: @ 0x0809397C
	push {lr}
	bl GetWMHighlight
	cmp r0, #0
	beq _0809398A
	bl Proc_End
_0809398A:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8093990
sub_8093990: @ 0x08093990
	push {r4, lr}
	movs r4, #0
_08093994:
	adds r0, r4, #0
	bl sub_809397C
	adds r4, #1
	cmp r4, #1
	ble _08093994
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80939A8
sub_80939A8: @ 0x080939A8
	push {lr}
	bl GetWMHighlight
	adds r1, r0, #0
	cmp r1, #0
	beq _080939B8
	movs r0, #1
	str r0, [r1, #0x54]
_080939B8:
	pop {r0}
	bx r0

	thumb_func_start WMHighlightExists
WMHighlightExists: @ 0x080939BC
	push {lr}
	bl GetWMHighlight
	cmp r0, #0
	bne _080939CA
	movs r0, #0
	b _080939CC
_080939CA:
	movs r0, #1
_080939CC:
	pop {r1}
	bx r1

	thumb_func_start sub_80939D0
sub_80939D0: @ 0x080939D0
	push {lr}
	movs r0, #0
	bl GetWMHighlight
	cmp r0, #0
	bne _080939EA
	movs r0, #1
	bl GetWMHighlight
	cmp r0, #0
	bne _080939EA
	movs r0, #0
	b _080939EC
_080939EA:
	movs r0, #1
_080939EC:
	pop {r1}
	bx r1

	thumb_func_start sub_80939F0
sub_80939F0: @ 0x080939F0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r5, r1, #0
	mov r8, r2
	adds r7, r3, #0
	adds r0, r7, #0
	bl GetWMDot
	adds r6, r0, #0
	lsls r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r4, r4, #0x10
	orrs r4, r5
	str r4, [sp, #8]
	add r4, sp, #8
	adds r0, r4, #0
	bl sub_8093FD8
	cmp r6, #0
	beq _08093A34
	add r0, sp, #8
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r3, #2
	ldrsh r2, [r4, r3]
	movs r3, #0xc4
	lsls r3, r3, #2
	adds r0, r6, #0
	bl SetSpriteAnimProcParameters
	b _08093A62
_08093A34:
	ldr r0, _08093A70 @ =gUnk_082D3674
	add r1, sp, #8
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r3, #2
	ldrsh r2, [r4, r3]
	movs r3, #0xf
	mov r4, r8
	ands r3, r4
	lsls r3, r3, #0xc
	movs r4, #0xc4
	lsls r4, r4, #2
	orrs r3, r4
	movs r4, #1
	str r4, [sp]
	movs r4, #0xa
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	adds r1, r0, #0
	adds r0, r7, #0
	bl SetWMDot
_08093A62:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093A70: .4byte gUnk_082D3674

	thumb_func_start EndWMDot
EndWMDot: @ 0x08093A74
	push {r4, lr}
	adds r4, r0, #0
	bl GetWMDot
	cmp r0, #0
	beq _08093A84
	bl EndSpriteAnimProc
_08093A84:
	adds r0, r4, #0
	movs r1, #0
	bl SetWMDot
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start StartWMFlag
StartWMFlag: @ 0x08093A94
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r5, r1, #0
	adds r7, r2, #0
	mov r8, r3
	mov r0, r8
	bl GetWMFlag
	adds r6, r0, #0
	lsls r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r4, r4, #0x10
	orrs r4, r5
	str r4, [sp, #8]
	add r4, sp, #8
	adds r0, r4, #0
	bl sub_8093FD8
	cmp r6, #0
	beq _08093AE0
	add r0, sp, #8
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r3, #2
	ldrsh r2, [r4, r3]
	movs r3, #0xf
	ands r3, r7
	lsls r3, r3, #0xc
	movs r0, #0xc4
	lsls r0, r0, #2
	orrs r3, r0
	adds r0, r6, #0
	bl SetSpriteAnimProcParameters
	b _08093B0A
_08093AE0:
	ldr r0, _08093B18 @ =gUnk_082D3674
	add r1, sp, #8
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r3, #2
	ldrsh r2, [r4, r3]
	movs r3, #0xf
	ands r3, r7
	lsls r3, r3, #0xc
	movs r4, #0xc4
	lsls r4, r4, #2
	orrs r3, r4
	str r6, [sp]
	movs r4, #7
	str r4, [sp, #4]
	bl StartSpriteAnimProc
	adds r1, r0, #0
	mov r0, r8
	bl SetWMFlag
_08093B0A:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093B18: .4byte gUnk_082D3674

	thumb_func_start EndWMFlag
EndWMFlag: @ 0x08093B1C
	push {r4, lr}
	adds r4, r0, #0
	bl GetWMFlag
	cmp r0, #0
	beq _08093B2C
	bl EndSpriteAnimProc
_08093B2C:
	adds r0, r4, #0
	movs r1, #0
	bl SetWMFlag
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start StartWMMapText
StartWMMapText: @ 0x08093B3C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r2, #0
	mov r8, r3
	ldr r7, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r0, r0, #0x10
	orrs r0, r1
	str r0, [sp]
	mov r4, sp
	mov r0, sp
	bl sub_8093FD8
	ldr r0, _08093B9C @ =gUnk_0868C8D8
	movs r1, #3
	bl SpawnProc
	adds r1, r0, #0
	mov r0, sp
	movs r2, #0
	ldrsh r0, [r0, r2]
	str r0, [r1, #0x2c]
	movs r2, #2
	ldrsh r0, [r4, r2]
	str r0, [r1, #0x30]
	adds r0, r1, #0
	adds r0, #0x64
	strh r6, [r0]
	adds r0, #2
	mov r2, r8
	strh r2, [r0]
	adds r0, #2
	strh r7, [r0]
	adds r0, #2
	strh r5, [r0]
	adds r0, r5, #0
	bl SetWMMapText
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093B9C: .4byte gUnk_0868C8D8

	thumb_func_start sub_8093BA0
sub_8093BA0: @ 0x08093BA0
	push {lr}
	bl GetWMMapText
	cmp r0, #0
	beq _08093BAE
	bl Proc_End
_08093BAE:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8093BB4
sub_8093BB4: @ 0x08093BB4
	push {lr}
	bl GetWMMapText
	adds r1, r0, #0
	cmp r1, #0
	beq _08093BC4
	movs r0, #1
	str r0, [r1, #0x54]
_08093BC4:
	pop {r0}
	bx r0

	thumb_func_start sub_8093BC8
sub_8093BC8: @ 0x08093BC8
	push {r4, r5, lr}
	adds r5, r1, #0
	ldr r4, _08093C14 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #8
	movs r3, #4
	bl sub_8015298
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r2, #4
	movs r3, #4
	bl sub_8015298
	movs r0, #0xc0
	lsls r0, r0, #3
	adds r4, r4, r0
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r5, r5, r1
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	movs r3, #4
	bl sub_8015298
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093C14: .4byte gBuf

	thumb_func_start sub_8093C18
sub_8093C18: @ 0x08093C18
	adds r2, r0, #0
	adds r2, #0x44
	movs r1, #0
	strh r1, [r2]
	str r1, [r0, #0x54]
	bx lr

	thumb_func_start sub_8093C24
sub_8093C24: @ 0x08093C24
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldr r0, _08093C58 @ =gUnk_082D38A4
	movs r1, #0xb
	bl StartSpriteAnim
	str r0, [r4, #0x50]
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0x6a
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0xa2
	lsls r1, r1, #2
	cmp r0, #0
	bne _08093C46
	subs r1, #0x88
_08093C46:
	adds r0, r4, #0
	adds r0, #0x68
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #0
	bne _08093C5C
	movs r0, #0xa0
	lsls r0, r0, #7
	b _08093C60
	.align 2, 0
_08093C58: .4byte gUnk_082D38A4
_08093C5C:
	movs r0, #0x80
	lsls r0, r0, #7
_08093C60:
	orrs r0, r1
	strh r0, [r2, #0x22]
	ldr r2, _08093C8C @ =gUnk_0868C734
	adds r3, r4, #0
	adds r3, #0x64
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, #8
	adds r0, r0, r2
	ldr r1, [r0]
	ldr r0, _08093C90 @ =gUnk_082D5910
	adds r5, r3, #0
	cmp r1, r0
	bne _08093C94
	ldr r0, [r4, #0x50]
	movs r1, #1
	bl SetSpriteAnimId
	b _08093C9C
	.align 2, 0
_08093C8C: .4byte gUnk_0868C734
_08093C90: .4byte gUnk_082D5910
_08093C94:
	ldr r0, [r4, #0x50]
	movs r1, #2
	bl SetSpriteAnimId
_08093C9C:
	ldr r6, _08093D34 @ =gUnk_0868C734
	movs r2, #0
	ldrsh r1, [r5, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r6, #4
	adds r0, r0, r1
	ldr r2, [r0]
	adds r4, #0x6a
	movs r3, #0
	ldrsh r0, [r4, r3]
	ldr r1, _08093D38 @ =0x06015100
	cmp r0, #0
	bne _08093CBC
	ldr r1, _08093D3C @ =0x06014000
_08093CBC:
	adds r0, r2, #0
	bl sub_8093BC8
	movs r0, #0
	ldrsh r1, [r5, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r1, r6, #0
	adds r1, #8
	adds r0, r0, r1
	ldr r3, [r0]
	movs r1, #0
	ldrsh r0, [r4, r1]
	ldr r1, _08093D40 @ =0x06015300
	cmp r0, #0
	bne _08093CE0
	ldr r1, _08093D44 @ =0x06014200
_08093CE0:
	adds r0, r3, #0
	bl sub_8093BC8
	ldr r2, _08093D48 @ =gDispIo
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r3, r2, #0
	adds r3, #0x45
	movs r0, #0x10
	strb r0, [r3]
	adds r0, r2, #0
	adds r0, #0x46
	strb r1, [r0]
	ldr r0, _08093D4C @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	ldr r1, _08093D50 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0x80
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #0x3c]
	adds r1, r2, #0
	adds r1, #0x3d
	movs r0, #0x20
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093D34: .4byte gUnk_0868C734
_08093D38: .4byte 0x06015100
_08093D3C: .4byte 0x06014000
_08093D40: .4byte 0x06015300
_08093D44: .4byte 0x06014200
_08093D48: .4byte gDispIo
_08093D4C: .4byte 0x0000FFE0
_08093D50: .4byte 0x0000E0FF

	thumb_func_start sub_8093D54
sub_8093D54: @ 0x08093D54
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0x50]
	ldr r1, [r5, #0x2c]
	ldr r2, [r5, #0x30]
	movs r3, #0x80
	lsls r3, r3, #3
	orrs r2, r3
	adds r3, r5, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r3, [r3, r4]
	adds r4, r5, #0
	adds r4, #0x66
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp]
	adds r4, r5, #0
	adds r4, #0x68
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp, #4]
	bl sub_8093EAC
	adds r0, r5, #0
	adds r0, #0x44
	ldrh r1, [r0]
	adds r1, #1
	movs r3, #0
	strh r1, [r0]
	ldr r4, _08093DD0 @ =gDispIo
	adds r2, r4, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r6, [r2]
	ands r0, r6
	strb r0, [r2]
	adds r2, r1, #0
	adds r0, r4, #0
	adds r0, #0x44
	strb r2, [r0]
	movs r0, #0x10
	subs r0, r0, r2
	adds r2, r4, #0
	adds r2, #0x45
	strb r0, [r2]
	adds r0, r4, #0
	adds r0, #0x46
	strb r3, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #0xf
	ble _08093DC6
	adds r0, r5, #0
	bl Proc_Break
_08093DC6:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093DD0: .4byte gDispIo

	thumb_func_start sub_8093DD4
sub_8093DD4: @ 0x08093DD4
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0x50]
	ldr r1, [r5, #0x2c]
	ldr r2, [r5, #0x30]
	adds r3, r5, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r3, [r3, r4]
	adds r4, r5, #0
	adds r4, #0x66
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp]
	adds r4, r5, #0
	adds r4, #0x68
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp, #4]
	bl sub_8093EAC
	ldr r0, [r5, #0x54]
	cmp r0, #0
	beq _08093E0C
	adds r0, r5, #0
	bl Proc_Break
_08093E0C:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8093E14
sub_8093E14: @ 0x08093E14
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	ldr r0, [r5, #0x50]
	ldr r1, [r5, #0x2c]
	ldr r2, [r5, #0x30]
	movs r3, #0x80
	lsls r3, r3, #3
	orrs r2, r3
	adds r3, r5, #0
	adds r3, #0x64
	movs r4, #0
	ldrsh r3, [r3, r4]
	adds r4, r5, #0
	adds r4, #0x66
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp]
	adds r4, r5, #0
	adds r4, #0x68
	movs r6, #0
	ldrsh r4, [r4, r6]
	str r4, [sp, #4]
	bl sub_8093EAC
	adds r0, r5, #0
	adds r0, #0x44
	ldrh r2, [r0]
	subs r2, #1
	movs r3, #0
	strh r2, [r0]
	ldr r4, _08093E8C @ =gDispIo
	adds r1, r4, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r6, [r1]
	ands r0, r6
	strb r0, [r1]
	adds r1, r2, #0
	adds r0, r4, #0
	adds r0, #0x44
	strb r1, [r0]
	movs r0, #0x10
	subs r0, r0, r1
	adds r1, r4, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x46
	strb r3, [r0]
	lsls r2, r2, #0x10
	cmp r2, #0
	bne _08093E84
	adds r0, r5, #0
	bl Proc_Break
_08093E84:
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093E8C: .4byte gDispIo

	thumb_func_start sub_8093E90
sub_8093E90: @ 0x08093E90
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x6a
	movs r1, #0
	ldrsh r0, [r0, r1]
	movs r1, #0
	bl SetWMMapText
	ldr r0, [r4, #0x50]
	bl EndSpriteAnim
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8093EAC
sub_8093EAC: @ 0x08093EAC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	str r0, [sp, #4]
	adds r4, r1, #0
	adds r7, r2, #0
	str r3, [sp, #8]
	ldr r0, [sp, #0x30]
	mov r8, r0
	ldr r5, [sp, #0x34]
	ldr r1, _08093EEC @ =0xFFFFFE00
	mov sb, r1
	mov r2, sb
	ands r2, r4
	mov sb, r2
	ldr r0, _08093EF0 @ =0xFFFFFF00
	mov sl, r0
	mov r1, sl
	ands r1, r7
	mov sl, r1
	mov r2, r8
	cmp r2, #1
	beq _08093F08
	cmp r2, #1
	bgt _08093EF4
	cmp r2, #0
	beq _08093F00
	b _08093F0A
	.align 2, 0
_08093EEC: .4byte 0xFFFFFE00
_08093EF0: .4byte 0xFFFFFF00
_08093EF4:
	mov r0, r8
	cmp r0, #2
	beq _08093F04
	cmp r0, #3
	beq _08093F08
	b _08093F0A
_08093F00:
	subs r4, #2
	b _08093F0A
_08093F04:
	subs r4, #3
	b _08093F0A
_08093F08:
	adds r4, #2
_08093F0A:
	lsls r5, r5, #1
	subs r5, #1
	movs r0, #1
	rsbs r0, r0, #0
	mov r1, r8
	lsls r1, r1, #1
	str r1, [sp, #0xc]
	cmp r5, r0
	beq _08093F54
	ldr r1, _08093F64 @ =gUnk_0868C940
	ldr r0, [sp, #0xc]
	add r0, r8
	lsls r0, r0, #2
	adds r6, r0, r1
_08093F26:
	ldr r1, _08093F68 @ =0x000001FF
	ands r1, r4
	add r1, sb
	movs r2, #0xff
	ands r2, r7
	add r2, sl
	ldr r3, [r6]
	ldr r0, _08093F6C @ =0x00004320
	str r0, [sp]
	movs r0, #0xb
	bl PutSpriteExt
	movs r2, #4
	ldrsh r0, [r6, r2]
	adds r4, r4, r0
	movs r1, #6
	ldrsh r0, [r6, r1]
	adds r7, r7, r0
	subs r5, #1
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _08093F26
_08093F54:
	mov r2, r8
	cmp r2, #1
	beq _08093F96
	cmp r2, #1
	bgt _08093F70
	cmp r2, #0
	beq _08093F7E
	b _08093F96
	.align 2, 0
_08093F64: .4byte gUnk_0868C940
_08093F68: .4byte 0x000001FF
_08093F6C: .4byte 0x00004320
_08093F70:
	mov r0, r8
	cmp r0, #2
	beq _08093F7C
	cmp r0, #3
	beq _08093F94
	b _08093F96
_08093F7C:
	adds r4, #2
_08093F7E:
	ldr r0, _08093F90 @ =gUnk_0868C734
	ldr r2, [sp, #8]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r0
	ldr r0, [r1]
	subs r4, r4, r0
	b _08093F96
	.align 2, 0
_08093F90: .4byte gUnk_0868C734
_08093F94:
	subs r4, #2
_08093F96:
	ldr r0, _08093FD0 @ =gUnk_0868C940
	ldr r2, [sp, #0xc]
	add r2, r8
	lsls r2, r2, #2
	adds r2, r2, r0
	movs r0, #8
	ldrsh r1, [r2, r0]
	adds r1, r4, r1
	ldr r0, _08093FD4 @ =0x000001FF
	ands r1, r0
	add r1, sb
	movs r0, #0xa
	ldrsh r2, [r2, r0]
	adds r2, r7, r2
	movs r0, #0xff
	ands r2, r0
	add r2, sl
	ldr r0, [sp, #4]
	bl DisplaySpriteAnim
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093FD0: .4byte gUnk_0868C940
_08093FD4: .4byte 0x000001FF

	thumb_func_start sub_8093FD8
sub_8093FD8: @ 0x08093FD8
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _0809400C @ =gUnk_0868C648
	bl Proc_Find
	ldrh r1, [r4]
	ldrh r3, [r0, #0x2a]
	subs r2, r1, r3
	strh r2, [r4]
	ldrh r5, [r4, #2]
	ldrh r3, [r0, #0x2c]
	subs r1, r5, r3
	strh r1, [r4, #2]
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r0, #0
	bne _08094006
	lsls r0, r2, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x11
	strh r0, [r4, #2]
_08094006:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809400C: .4byte gUnk_0868C648

	thumb_func_start PlayWMIntroBGM
PlayWMIntroBGM: @ 0x08094010
	push {lr}
	ldr r0, _0809402C @ =gPlaySt
	ldrb r0, [r0, #0xe]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl GetChapterInfo
	ldrb r0, [r0, #0x17]
	movs r1, #0
	bl StartBgm
	pop {r0}
	bx r0
	.align 2, 0
_0809402C: .4byte gPlaySt

	thumb_func_start sub_8094030
sub_8094030: @ 0x08094030
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	adds r1, r3, #0
	ldr r0, _08094058 @ =gUnk_0868C970
	bl SpawnProcLocking
	ldr r1, _0809405C @ =0x000003FF
	ands r1, r4
	lsls r1, r1, #5
	ldr r2, _08094060 @ =0x06010000
	adds r1, r1, r2
	str r1, [r0, #0x4c]
	str r5, [r0, #0x54]
	str r6, [r0, #0x58]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08094058: .4byte gUnk_0868C970
_0809405C: .4byte 0x000003FF
_08094060: .4byte 0x06010000

	thumb_func_start sub_8094064
sub_8094064: @ 0x08094064
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809406C
sub_809406C: @ 0x0809406C
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	ldr r6, [r3, #0x4c]
	movs r1, #0
	b _080940C8
_08094076:
	movs r2, #0
	lsls r0, r1, #2
	adds r5, r1, #0
	adds r5, #8
	adds r4, r0, r6
_08094080:
	lsls r0, r2, #2
	adds r1, r0, r4
	ldr r0, [r1, #4]
	str r0, [r1]
	ldr r0, [r1, #8]
	str r0, [r1, #4]
	ldr r0, [r1, #0xc]
	str r0, [r1, #8]
	ldr r0, [r1, #0x10]
	str r0, [r1, #0xc]
	ldr r0, [r1, #0x14]
	str r0, [r1, #0x10]
	ldr r0, [r1, #0x18]
	str r0, [r1, #0x14]
	ldr r0, [r1, #0x1c]
	str r0, [r1, #0x18]
	ldr r0, _080940B0 @ =0x000002FF
	cmp r2, r0
	bgt _080940B4
	movs r7, #0x80
	lsls r7, r7, #3
	adds r0, r1, r7
	ldr r0, [r0]
	b _080940B6
	.align 2, 0
_080940B0: .4byte 0x000002FF
_080940B4:
	ldr r0, [r3, #0x58]
_080940B6:
	str r0, [r1, #0x1c]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r2, r2, r0
	movs r0, #0xc0
	lsls r0, r0, #2
	cmp r2, r0
	ble _08094080
	adds r1, r5, #0
_080940C8:
	ldr r0, [r3, #0x54]
	lsls r0, r0, #3
	cmp r1, r0
	blt _08094076
	adds r1, r3, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	ble _080940E8
	adds r0, r3, #0
	bl Proc_Break
_080940E8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80940F0
sub_80940F0: @ 0x080940F0
	push {lr}
	bl sub_8073324
	ldr r0, _08094104 @ =gUnk_0868C988
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_08094104: .4byte gUnk_0868C988

	thumb_func_start sub_8094108
sub_8094108: @ 0x08094108
	adds r0, #0x34
	movs r1, #1
	strb r1, [r0]
	bx lr

	thumb_func_start sub_8094110
sub_8094110: @ 0x08094110
	push {lr}
	movs r1, #0
	str r1, [r0, #0x2c]
	ldr r1, _08094128 @ =gPlaySt
	ldrb r1, [r1, #0xe]
	adds r2, r0, #0
	adds r2, #0x35
	strb r1, [r2]
	bl sub_8094108
	pop {r0}
	bx r0
	.align 2, 0
_08094128: .4byte gPlaySt

	thumb_func_start sub_809412C
sub_809412C: @ 0x0809412C
	push {r4, r5, r6, lr}
	adds r5, r0, #0
	ldr r4, [r5, #0x2c]
	bl IsEventRunning
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08094204
	adds r0, r5, #0
	adds r0, #0x34
	ldrb r1, [r0]
	adds r6, r0, #0
	cmp r1, #0
	bne _08094158
	movs r0, #1
	rsbs r0, r0, #0
	movs r1, #9
	bl DebugInitObj
	adds r0, r5, #0
	bl sub_8094108
_08094158:
	movs r0, #0x70
	movs r1, #0x64
	adds r2, r4, #0
	movs r3, #4
	bl DebugPutObjNumber
	ldr r1, _0809417C @ =gKeySt
	ldr r2, [r1]
	movs r0, #4
	ldrh r3, [r2, #8]
	ands r0, r3
	cmp r0, #0
	beq _08094180
	adds r0, r5, #0
	bl Proc_Break
	b _08094204
	.align 2, 0
_0809417C: .4byte gKeySt
_08094180:
	ldrh r2, [r2, #6]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _0809418C
	adds r4, #1
_0809418C:
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _08094196
	subs r4, #1
_08094196:
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _080941A0
	adds r4, #0xa
_080941A0:
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _080941AA
	subs r4, #0xa
_080941AA:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r2
	cmp r0, #0
	beq _080941B6
	adds r4, #0x64
_080941B6:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r2
	cmp r0, #0
	beq _080941C2
	subs r4, #0x64
_080941C2:
	cmp r4, #0
	bge _080941C8
	movs r4, #0
_080941C8:
	cmp r4, #0x26
	ble _080941CE
	movs r4, #0x26
_080941CE:
	ldr r0, [r5, #0x2c]
	cmp r4, r0
	beq _080941E2
	movs r0, #1
	rsbs r0, r0, #0
	movs r1, #9
	bl DebugInitObj
	str r4, [r5, #0x2c]
	b _08094204
_080941E2:
	ldr r1, [r1]
	movs r0, #1
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _08094204
	movs r0, #0
	strb r0, [r6]
	ldr r1, _0809420C @ =gPlaySt
	adds r0, r5, #0
	adds r0, #0x35
	ldrb r0, [r0]
	strb r0, [r1, #0xe]
	ldr r0, _08094210 @ =ProcScr_Unk_0868C304
	movs r1, #3
	bl SpawnProc
_08094204:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809420C: .4byte gPlaySt
_08094210: .4byte ProcScr_Unk_0868C304

	thumb_func_start sub_8094214
sub_8094214: @ 0x08094214
	push {lr}
	adds r1, r0, #0
	ldr r0, _08094224 @ =gUnk_0868FDB4
	bl SpawnProcLocking
	pop {r0}
	bx r0
	.align 2, 0
_08094224: .4byte gUnk_0868FDB4

	thumb_func_start sub_8094228
sub_8094228: @ 0x08094228
	push {lr}
	movs r0, #0
	bl SetOnHBlankA
	pop {r0}
	bx r0

	thumb_func_start sub_8094234
sub_8094234: @ 0x08094234
	push {r4, r5, lr}
	ldr r0, _080943BC @ =gUnk_0868FE0C
	bl InitBgs
	bl sub_8015344
	bl ResetText
	ldr r3, _080943C0 @ =gDispIo
	movs r0, #1
	ldrb r1, [r3, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x11
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r3, #1]
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _080943C4 @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #1
	orrs r0, r1
	ldr r1, _080943C8 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #4
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	bl sub_8069C34
	ldr r0, _080943CC @ =sub_8069FD8
	bl SetOnHBlankA
	bl sub_806A7AC
	ldr r4, _080943D0 @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r4, _080943D4 @ =gBuf
	ldr r1, _080943D8 @ =gUnk_08320434
	movs r2, #0x80
	lsls r2, r2, #7
	adds r0, r4, #0
	bl TmApplyTsa_t
	ldr r1, _080943DC @ =gBg3Tm
	movs r2, #0x80
	lsls r2, r2, #4
	adds r0, r4, #0
	bl sub_8015260
	ldr r0, _080943E0 @ =gUnk_08320D98
	movs r1, #0x80
	movs r2, #0x80
	bl ApplyPaletteExt
	movs r0, #4
	bl sub_80154AC
	movs r0, #5
	bl sub_80154AC
	movs r0, #6
	bl sub_80154AC
	movs r0, #7
	bl sub_80154AC
	ldr r4, _080943E4 @ =gBg0Tm
	adds r0, r4, #0
	movs r1, #0
	bl TmFill
	ldr r0, _080943E8 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080943EC @ =gUnk_08349A78
	movs r1, #0x60
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r5, _080943F0 @ =gUnk_0834658C
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r2, _080943F4 @ =0x06000020
	adds r1, r1, r2
	adds r0, r5, #0
	bl Decompress
	adds r0, r4, #4
	ldr r1, _080943F8 @ =0x00003001
	bl sub_8094438
	adds r0, r4, #0
	adds r0, #0xc4
	ldr r1, _080943FC @ =0x00003041
	bl sub_8094438
	movs r1, #0xc2
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08094400 @ =0x00003081
	bl sub_8094438
	movs r2, #0xa1
	lsls r2, r2, #2
	adds r0, r4, r2
	ldr r1, _08094404 @ =0x000030C1
	bl sub_8094438
	movs r1, #0xd1
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _08094408 @ =0x00003101
	bl sub_8094438
	ldr r2, _0809440C @ =0x00000404
	adds r0, r4, r2
	ldr r1, _08094410 @ =0x00003141
	bl sub_8094438
	ldr r1, _08094414 @ =0x000004C4
	adds r0, r4, r1
	ldr r1, _08094418 @ =0x00003181
	bl sub_8094438
	ldr r2, _0809441C @ =0x00000584
	adds r0, r4, r2
	ldr r1, _08094420 @ =0x000031C1
	bl sub_8094438
	ldr r1, _08094424 @ =0x00000644
	adds r0, r4, r1
	ldr r1, _08094428 @ =0x00003201
	bl sub_8094438
	ldr r2, _0809442C @ =0x00000744
	adds r4, r4, r2
	ldr r1, _08094430 @ =0x00003241
	adds r0, r4, #0
	bl sub_8094438
	movs r0, #1
	bl EnableBgSync
	movs r0, #2
	bl EnableBgSync
	ldr r2, _08094434 @ =0x0000FF60
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	movs r0, #0x47
	bl m4aSongNumStart
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080943BC: .4byte gUnk_0868FE0C
_080943C0: .4byte gDispIo
_080943C4: .4byte 0x0000FFE0
_080943C8: .4byte 0x0000E0FF
_080943CC: .4byte sub_8069FD8
_080943D0: .4byte gUnk_0831B0A8
_080943D4: .4byte gBuf
_080943D8: .4byte gUnk_08320434
_080943DC: .4byte gBg3Tm
_080943E0: .4byte gUnk_08320D98
_080943E4: .4byte gBg0Tm
_080943E8: .4byte gBg1Tm
_080943EC: .4byte gUnk_08349A78
_080943F0: .4byte gUnk_0834658C
_080943F4: .4byte 0x06000020
_080943F8: .4byte 0x00003001
_080943FC: .4byte 0x00003041
_08094400: .4byte 0x00003081
_08094404: .4byte 0x000030C1
_08094408: .4byte 0x00003101
_0809440C: .4byte 0x00000404
_08094410: .4byte 0x00003141
_08094414: .4byte 0x000004C4
_08094418: .4byte 0x00003181
_0809441C: .4byte 0x00000584
_08094420: .4byte 0x000031C1
_08094424: .4byte 0x00000644
_08094428: .4byte 0x00003201
_0809442C: .4byte 0x00000744
_08094430: .4byte 0x00003241
_08094434: .4byte 0x0000FF60

	thumb_func_start sub_8094438
sub_8094438: @ 0x08094438
	push {r4, lr}
	adds r2, r0, #0
	adds r4, r1, #0
	movs r1, #0
	adds r3, r4, #0
	adds r3, #0x20
_08094444:
	adds r0, r4, r1
	strh r0, [r2]
	adds r0, r2, #0
	adds r0, #0x40
	strh r3, [r0]
	adds r2, #2
	adds r3, #1
	adds r1, #1
	cmp r1, #0x1f
	ble _08094444
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8094460
sub_8094460: @ 0x08094460
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x64
	movs r0, #0xe4
	lsls r0, r0, #2
	ldrh r1, [r5]
	cmp r1, r0
	bne _080944AA
	ldr r4, _080944D8 @ =gBg1Tm+0x4
	ldr r1, _080944DC @ =0x00003281
	adds r0, r4, #0
	bl sub_8094438
	adds r0, r4, #0
	adds r0, #0xc0
	ldr r1, _080944E0 @ =0x000032C1
	bl sub_8094438
	movs r1, #0xc0
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _080944E4 @ =0x00003301
	bl sub_8094438
	movs r1, #0xe0
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _080944E8 @ =0x00003341
	bl sub_8094438
	movs r0, #1
	bl EnableBgSync
	movs r0, #2
	bl EnableBgSync
_080944AA:
	ldr r0, _080944EC @ =gKeySt
	ldr r1, [r0]
	movs r0, #8
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _080944BE
	adds r0, r6, #0
	bl Proc_Break
_080944BE:
	ldrh r0, [r5]
	adds r1, r0, #1
	strh r1, [r5]
	lsls r0, r0, #0x10
	ldr r1, _080944F0 @ =0x06C70000
	cmp r0, r1
	ble _080944D2
	adds r0, r6, #0
	bl Proc_Break
_080944D2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080944D8: .4byte gBg1Tm+0x4
_080944DC: .4byte 0x00003281
_080944E0: .4byte 0x000032C1
_080944E4: .4byte 0x00003301
_080944E8: .4byte 0x00003341
_080944EC: .4byte gKeySt
_080944F0: .4byte 0x06C70000

	thumb_func_start sub_80944F4
sub_80944F4: @ 0x080944F4
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8094504
sub_8094504: @ 0x08094504
	push {lr}
	adds r3, r0, #0
	adds r2, r3, #0
	adds r2, #0x64
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _08094528
	movs r0, #0
	strh r0, [r2]
	adds r1, r3, #0
	adds r1, #0x66
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_08094528:
	adds r0, r3, #0
	adds r0, #0x66
	ldrh r2, [r0]
	subs r2, #0x90
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	pop {r0}
	bx r0

	thumb_func_start sub_8094540
sub_8094540: @ 0x08094540
	push {r4, r5, r6, r7, lr}
	adds r7, r0, #0
	ldr r4, _080945EC @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r4]
	ands r0, r1
	strb r0, [r4]
	movs r0, #0
	bl InitBgs
	bl sub_804BE98
	bl sub_8057EF4
	adds r0, r7, #0
	adds r0, #0x2e
	movs r5, #0
	strb r5, [r0]
	ldr r1, _080945F0 @ =gUnk_0869056C
	subs r0, #1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	adds r1, r7, #0
	adds r1, #0x30
	strb r0, [r1]
	movs r6, #0
	strh r5, [r7, #0x2a]
	str r5, [r7, #0x34]
	str r5, [r7, #0x38]
	ldrb r1, [r1]
	adds r0, r7, #0
	bl sub_8094C80
	str r0, [r7, #0x34]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r4, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r4, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	bl GetGameTime
	str r0, [r7, #0x40]
	str r5, [r7, #0x3c]
	adds r1, r7, #0
	adds r1, #0x2c
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x32
	strb r6, [r0]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080945EC: .4byte gDispIo
_080945F0: .4byte gUnk_0869056C

	thumb_func_start sub_80945F4
sub_80945F4: @ 0x080945F4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	bl GetGameTime
	ldr r1, [r4, #0x40]
	subs r0, r0, r1
	str r0, [r4, #0x3c]
	adds r5, r4, #0
	adds r5, #0x2c
	ldrb r0, [r5]
	cmp r0, #2
	beq _08094644
	cmp r0, #2
	bgt _0809461A
	cmp r0, #1
	beq _08094620
	b _080946C4
_0809461A:
	cmp r0, #3
	beq _080946B2
	b _080946C4
_08094620:
	ldr r0, _08094640 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xb
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _080946C4
	movs r0, #0
	bl SetNextGameAction
	adds r0, r4, #0
	movs r1, #4
	bl Proc_Goto
	b _080946C4
	.align 2, 0
_08094640: .4byte gKeySt
_08094644:
	adds r3, r4, #0
	adds r3, #0x30
	ldrb r5, [r3]
	ldr r0, _0809469C @ =gUnk_0869056C
	mov r8, r0
	adds r1, r4, #0
	adds r1, #0x2e
	ldrb r2, [r1]
	movs r6, #0x2d
	adds r6, r6, r4
	ldrb r7, [r6]
	lsls r0, r7, #2
	adds r0, r2, r0
	add r0, r8
	ldrb r0, [r0]
	adds r0, #4
	cmp r5, r0
	blt _080946A4
	adds r0, r2, #1
	strb r0, [r1]
	ldrb r2, [r1]
	ldrb r1, [r6]
	lsls r0, r1, #2
	adds r0, r2, r0
	add r0, r8
	ldrb r1, [r0]
	adds r0, r1, #0
	cmp r0, #0xff
	beq _08094682
	cmp r2, #3
	bls _080946A0
_08094682:
	movs r0, #1
	bl SetNextGameAction
	adds r0, r4, #0
	movs r1, #5
	bl Proc_Goto
	movs r0, #1
	rsbs r0, r0, #0
	bl FadeBgmOut
	b _080946C4
	.align 2, 0
_0809469C: .4byte gUnk_0869056C
_080946A0:
	strb r1, [r3]
	b _080946A8
_080946A4:
	adds r0, r5, #1
	strb r0, [r3]
_080946A8:
	adds r0, r4, #0
	movs r1, #2
	bl Proc_Goto
	b _080946C4
_080946B2:
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r1, [r0]
	adds r0, r4, #0
	bl sub_8095AB8
	str r0, [r4, #0x38]
	movs r0, #1
	strb r0, [r5]
_080946C4:
	movs r0, #0
	strh r0, [r4, #0x2a]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80946D4
sub_80946D4: @ 0x080946D4
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x38]
	cmp r0, #0
	beq _080946E4
	movs r1, #4
	bl Proc_Goto
_080946E4:
	ldr r2, _08094720 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r0, r4, #0
	adds r0, #0x30
	ldrb r1, [r0]
	adds r0, r4, #0
	bl sub_8094C80
	str r0, [r4, #0x34]
	adds r1, r4, #0
	adds r1, #0x2c
	movs r0, #1
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094720: .4byte gDispIo

	thumb_func_start sub_8094724
sub_8094724: @ 0x08094724
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _08094794 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xb
	ldrh r1, [r1, #4]
	ands r0, r1
	cmp r0, #0
	beq _08094752
	adds r4, r5, #0
	adds r4, #0x32
	ldrb r0, [r4]
	cmp r0, #0
	bne _08094752
	movs r0, #0
	bl SetNextGameAction
	movs r0, #1
	strb r0, [r4]
	adds r0, r5, #0
	movs r1, #4
	bl Proc_Goto
_08094752:
	ldrh r0, [r5, #0x2a]
	cmp r0, #0
	bne _0809475C
	bl sub_8057F24
_0809475C:
	ldrh r0, [r5, #0x2a]
	adds r0, #1
	adds r1, r0, #0
	strh r0, [r5, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x11
	cmp r0, #0xd
	bls _0809479C
	ldr r2, _08094798 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	adds r0, r5, #0
	bl Proc_Break
	b _080947A4
	.align 2, 0
_08094794: .4byte gKeySt
_08094798: .4byte gDispIo
_0809479C:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_809485C
_080947A4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80947AC
sub_80947AC: @ 0x080947AC
	push {lr}
	movs r0, #1
	bl FadeBgmOut
	pop {r0}
	bx r0

	thumb_func_start sub_80947B8
sub_80947B8: @ 0x080947B8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x34]
	cmp r0, #0
	beq _080947C8
	movs r1, #4
	bl Proc_Goto
_080947C8:
	ldr r0, [r4, #0x38]
	cmp r0, #0
	beq _080947D4
	movs r1, #4
	bl Proc_Goto
_080947D4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80947DC
sub_80947DC: @ 0x080947DC
	push {r4, lr}
	adds r4, r0, #0
	bl sub_804BEB8
	adds r0, r4, #0
	bl CleanupGame
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_80947F0
sub_80947F0: @ 0x080947F0
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08094808 @ =gUnk_0868FE34
	bl SpawnProcLocking
	adds r0, #0x2d
	strb r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094808: .4byte gUnk_0868FE34

	thumb_func_start sub_809480C
sub_809480C: @ 0x0809480C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r3, _08094854 @ =gPal
	ldr r2, _08094858 @ =0x02000000
	movs r1, #0x80
	lsls r1, r1, #2
_08094818:
	ldrh r0, [r3]
	strh r0, [r2]
	adds r3, #2
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _08094818
	ldr r4, _08094858 @ =0x02000000
	ldrh r5, [r5, #0x2a]
	lsrs r3, r5, #1
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x20
	bl sub_805B5C8
	ldr r2, _08094854 @ =gPal
	movs r1, #0x80
	lsls r1, r1, #2
_0809483C:
	ldrh r0, [r4]
	strh r0, [r2]
	adds r4, #2
	adds r2, #2
	subs r1, #1
	cmp r1, #0
	bne _0809483C
	bl EnablePalSync
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08094854: .4byte gPal
_08094858: .4byte 0x02000000

	thumb_func_start sub_809485C
sub_809485C: @ 0x0809485C
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08094874 @ =gUnk_0868FEDC
	movs r1, #4
	bl SpawnProc
	strh r4, [r0, #0x2a]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094874: .4byte gUnk_0868FEDC

	thumb_func_start sub_8094878
sub_8094878: @ 0x08094878
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	str r2, [sp, #8]
	str r3, [sp, #0xc]
	ldr r2, [sp, #0x30]
	ldr r3, [sp, #0x34]
	ldr r4, [sp, #0x38]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r5, #1
	ldr r2, _080948D4 @ =gPal
	movs r0, #0x80
	lsls r0, r0, #1
	ldr r1, _080948D8 @ =0x0000021E
	adds r6, r2, r1
	adds r0, r4, r0
	lsls r1, r7, #5
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r3, r0, #2
	ldr r0, _080948DC @ =0x00000222
	adds r1, r1, r0
	adds r1, r1, r2
_080948C4:
	adds r0, r5, r4
	cmp r0, #0xf
	ble _080948E0
	ldrh r0, [r6]
	strh r0, [r1]
	adds r2, r7, #1
	mov sb, r2
	b _080948E8
	.align 2, 0
_080948D4: .4byte gPal
_080948D8: .4byte 0x0000021E
_080948DC: .4byte 0x00000222
_080948E0:
	ldrh r0, [r3]
	strh r0, [r1]
	adds r0, r7, #1
	mov sb, r0
_080948E8:
	adds r1, #2
	adds r3, #2
	adds r5, #1
	cmp r5, #0xf
	ble _080948C4
	bl EnablePalSync
	mov r1, sl
	cmp r1, #7
	bhi _08094900
	movs r2, #8
	mov sl, r2
_08094900:
	mov r3, r8
	cmp r3, #7
	bhi _0809490A
	movs r0, #8
	mov r8, r0
_0809490A:
	ldr r4, _080949A8 @ =gSinLut
	ldr r1, _080949AC @ =gSinLut+0x80
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r3, #0
	ldrsh r0, [r4, r3]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, sl
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r2, _080949AC @ =gSinLut+0x80
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r0, r0, #4
	mov r1, r8
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	adds r0, r7, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	ldr r0, _080949B0 @ =0x000001FF
	ldr r1, [sp, #8]
	ands r1, r0
	str r1, [sp, #8]
	lsls r1, r7, #9
	ldr r2, [sp, #8]
	adds r1, r2, r1
	ldr r3, [sp, #0xc]
	ands r3, r0
	str r3, [sp, #0xc]
	ldr r2, _080949B4 @ =gUnk_08690288
	ldr r3, [sp, #4]
	adds r0, r3, r7
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r3, [r0]
	movs r0, #0xf
	mov r2, sb
	ands r2, r0
	lsls r0, r2, #0xc
	str r0, [sp]
	movs r0, #4
	ldr r2, [sp, #0xc]
	bl PutSpriteExt
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080949A8: .4byte gSinLut
_080949AC: .4byte gSinLut+0x80
_080949B0: .4byte 0x000001FF
_080949B4: .4byte gUnk_08690288

	thumb_func_start sub_80949B8
sub_80949B8: @ 0x080949B8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r5, r0, #0
	ldr r2, _08094A04 @ =gDispIo
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #0
	strh r0, [r5, #0x2a]
	adds r2, r5, #0
	adds r2, #0x30
	ldrb r0, [r2]
	cmp r0, #0
	bne _08094A0C
	adds r1, r5, #0
	adds r1, #0x2f
	movs r0, #0
	strb r0, [r1]
	mov sb, r2
	ldr r2, _08094A08 @ =gUnk_08690288
	mov ip, r2
	movs r0, #0x2e
	adds r0, r0, r5
	mov r8, r0
	movs r2, #0x34
	adds r2, r2, r5
	mov sl, r2
	b _08094A42
	.align 2, 0
_08094A04: .4byte gDispIo
_08094A08: .4byte gUnk_08690288
_08094A0C:
	movs r4, #0
	movs r3, #0
	mov sb, r2
	adds r1, r5, #0
	adds r1, #0x2f
	ldr r0, _08094A78 @ =gUnk_08690288
	mov ip, r0
	movs r2, #0x2e
	adds r2, r2, r5
	mov r8, r2
	movs r0, #0x34
	adds r0, r0, r5
	mov sl, r0
	mov r6, sb
	adds r7, r1, #0
	mov r2, ip
_08094A2C:
	adds r2, #4
	adds r4, #1
	ldr r0, [r2]
	cmp r0, #0
	bne _08094A2C
	adds r3, #1
	ldrb r0, [r6]
	cmp r3, r0
	bne _08094A2C
	adds r0, r4, #1
	strb r0, [r7]
_08094A42:
	movs r0, #0
	mov r2, r8
	strb r0, [r2]
	ldrb r1, [r1]
	lsls r0, r1, #2
	mov r2, ip
	adds r1, r0, r2
	ldr r0, [r1]
	cmp r0, #0
	beq _08094A66
	mov r2, r8
_08094A58:
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r1, #4
	ldr r0, [r1]
	cmp r0, #0
	bne _08094A58
_08094A66:
	mov r0, sb
	ldrb r0, [r0]
	cmp r0, #0x13
	bls _08094A84
	ldr r0, _08094A7C @ =gUnk_08357140
	ldr r1, _08094A80 @ =0x06010000
	bl Decompress
	b _08094A8C
	.align 2, 0
_08094A78: .4byte gUnk_08690288
_08094A7C: .4byte gUnk_08357140
_08094A80: .4byte 0x06010000
_08094A84:
	ldr r0, _08094B0C @ =gUnk_08354780
	ldr r1, _08094B10 @ =0x06010000
	bl Decompress
_08094A8C:
	ldr r0, _08094B14 @ =gUnk_08354760
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r4, _08094B18 @ =gUnk_0835A368
	movs r1, #0xf0
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	movs r1, #0xf8
	lsls r1, r1, #2
	adds r0, r4, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08094B1C @ =gUnk_083599AC
	ldr r1, _08094B20 @ =0x06016000
	bl Decompress
	mov r1, sl
	movs r2, #0
	adds r0, r1, #0
	adds r0, #0x24
_08094AC2:
	str r2, [r0]
	subs r0, #4
	cmp r0, r1
	bge _08094AC2
	mov r2, r8
	ldrb r2, [r2]
	lsls r1, r2, #3
	mov r0, r8
	ldrb r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #2
	movs r0, #0xf0
	subs r0, r0, r1
	asrs r0, r0, #1
	subs r0, #0x10
	ldr r2, _08094B24 @ =0x000001FF
	adds r1, r2, #0
	ands r0, r1
	strh r0, [r5, #0x2c]
	adds r0, r5, #0
	movs r1, #0
	bl sub_8094EE8
	str r0, [r5, #0x34]
	mov r0, sb
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_80951DC
	str r0, [r5, #0x5c]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094B0C: .4byte gUnk_08354780
_08094B10: .4byte 0x06010000
_08094B14: .4byte gUnk_08354760
_08094B18: .4byte gUnk_0835A368
_08094B1C: .4byte gUnk_083599AC
_08094B20: .4byte 0x06016000
_08094B24: .4byte 0x000001FF

	thumb_func_start sub_8094B28
sub_8094B28: @ 0x08094B28
	push {r4, r5, lr}
	adds r4, r0, #0
	ldr r0, _08094B7C @ =gDispIo
	mov ip, r0
	mov r3, ip
	adds r3, #0x3c
	movs r2, #0x3f
	ldrb r0, [r3]
	ands r2, r0
	movs r0, #0x80
	orrs r2, r0
	mov r0, ip
	adds r0, #0x44
	movs r5, #0
	strb r5, [r0]
	adds r0, #1
	strb r5, [r0]
	ldrh r0, [r4, #0x2a]
	lsrs r1, r0, #1
	movs r0, #0x10
	subs r0, r0, r1
	mov r1, ip
	adds r1, #0x46
	strb r0, [r1]
	movs r0, #0x20
	orrs r2, r0
	strb r2, [r3]
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x20
	bne _08094B74
	strh r5, [r4, #0x2a]
	adds r0, r4, #0
	bl Proc_Break
_08094B74:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08094B7C: .4byte gDispIo

	thumb_func_start sub_8094B80
sub_8094B80: @ 0x08094B80
	push {r4, r5, r6, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x2a]
	cmp r0, #0x5f
	bls _08094B94
	adds r0, r4, #0
	bl Proc_Break
	movs r0, #0
	b _08094BD8
_08094B94:
	cmp r0, #0xf
	bls _08094BD4
	ldrh r1, [r4, #0x2a]
	adds r6, r1, #0
	subs r6, #0x10
	movs r0, #3
	ands r0, r6
	cmp r0, #0
	bne _08094BD4
	adds r0, r6, #0
	cmp r6, #0
	bge _08094BB0
	adds r0, r1, #0
	subs r0, #0xd
_08094BB0:
	asrs r0, r0, #2
	adds r5, r0, #1
	adds r0, r4, #0
	adds r0, #0x2e
	ldrb r0, [r0]
	cmp r5, r0
	bge _08094BD4
	lsls r1, r5, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_8094EE8
	adds r2, r0, #0
	lsls r1, r5, #2
	adds r0, r4, #0
	adds r0, #0x34
	adds r0, r0, r1
	str r2, [r0]
_08094BD4:
	ldrh r0, [r4, #0x2a]
	adds r0, #1
_08094BD8:
	strh r0, [r4, #0x2a]
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_8094BE0
sub_8094BE0: @ 0x08094BE0
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x2a]
	cmp r0, #0x14
	bne _08094BF2
	ldr r0, [r4, #0x5c]
	movs r1, #4
	bl Proc_Goto
_08094BF2:
	ldrh r0, [r4, #0x2a]
	cmp r0, #0x4f
	bls _08094C0E
	adds r0, r4, #0
	bl Proc_Break
	movs r0, #0
	strh r0, [r4, #0x2a]
	adds r1, r4, #0
	adds r1, #0x30
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	b _08094C48
_08094C0E:
	ldrh r5, [r4, #0x2a]
	adds r0, r5, #0
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08094C42
	adds r0, r5, #0
	movs r1, #6
	bl __udivsi3
	adds r1, r4, #0
	adds r1, #0x2e
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrb r1, [r1]
	cmp r0, r1
	bhs _08094C42
	lsls r0, r0, #2
	adds r1, r4, #0
	adds r1, #0x34
	adds r1, r1, r0
	ldr r0, [r1]
	bl Proc_Break
_08094C42:
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	strh r0, [r4, #0x2a]
_08094C48:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8094C50
sub_8094C50: @ 0x08094C50
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x34
	movs r5, #7
_08094C5A:
	ldr r0, [r4]
	cmp r0, #0
	beq _08094C64
	bl Proc_End
_08094C64:
	adds r4, #4
	subs r5, #1
	cmp r5, #0
	bge _08094C5A
	ldr r0, [r6, #0x60]
	movs r1, #0
	str r1, [r0, #0x34]
	adds r0, #0x2c
	movs r1, #3
	strb r1, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8094C80
sub_8094C80: @ 0x08094C80
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08094CB4 @ =gUnk_0868FEFC
	adds r1, r5, #0
	bl SpawnProc
	adds r2, r0, #0
	str r5, [r2, #0x60]
	adds r0, #0x30
	strb r4, [r0]
	movs r3, #0
	movs r1, #9
	adds r0, #0x28
_08094C9E:
	str r3, [r0]
	subs r0, #4
	subs r1, #1
	cmp r1, #0
	bge _08094C9E
	movs r0, #0
	str r0, [r2, #0x5c]
	adds r0, r2, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08094CB4: .4byte gUnk_0868FEFC

	thumb_func_start sub_8094CB8
sub_8094CB8: @ 0x08094CB8
	push {r4, lr}
	movs r1, #0
	strh r1, [r0, #0x2a]
	ldr r2, [r0, #0x14]
	adds r1, r2, #0
	adds r1, #0x2f
	ldrb r1, [r1]
	strh r1, [r0, #0x2c]
	adds r3, r0, #0
	adds r3, #0x2e
	ldrb r4, [r3]
	lsls r1, r4, #3
	subs r1, r1, r4
	lsls r1, r1, #2
	ldrh r2, [r2, #0x2c]
	adds r1, r2, r1
	ldr r3, _08094CE8 @ =0x000001FF
	adds r2, r3, #0
	ands r1, r2
	strh r1, [r0, #0x30]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094CE8: .4byte 0x000001FF

	thumb_func_start sub_8094CEC
sub_8094CEC: @ 0x08094CEC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r7, r0, #0
	movs r0, #0x2e
	adds r0, r0, r7
	mov sb, r0
	ldrb r1, [r0]
	mov sl, r1
	cmp r1, #0
	bne _08094DC0
	ldr r3, _08094DB8 @ =gSinLut
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r0, r3, r2
	movs r5, #0
	ldrsh r6, [r0, r5]
	asrs r6, r6, #6
	adds r0, r3, #0
	adds r0, #0xc0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r4, r0, #1
	adds r4, r4, r0
	asrs r4, r4, #9
	ldrh r0, [r7, #0x2a]
	movs r2, #0xc0
	subs r2, r2, r0
	movs r1, #0xff
	ands r2, r1
	adds r1, r2, #0
	adds r1, #0x40
	lsls r1, r1, #1
	adds r1, r1, r3
	movs r5, #0
	ldrsh r1, [r1, r5]
	asrs r5, r1, #6
	lsls r2, r2, #1
	adds r2, r2, r3
	movs r1, #0
	ldrsh r2, [r2, r1]
	lsls r1, r2, #1
	adds r1, r1, r2
	asrs r3, r1, #9
	lsls r0, r0, #8
	movs r1, #0x60
	str r3, [sp, #0xc]
	bl __divsi3
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r2, #0
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r0, [r7, #0x2c]
	mov r8, r0
	mov r2, sb
	ldrb r2, [r2]
	mov sb, r2
	ldrh r0, [r7, #0x30]
	adds r5, r0, r5
	subs r5, r5, r6
	ldr r0, _08094DBC @ =0x000001FF
	ands r5, r0
	subs r4, #0x18
	ldr r3, [sp, #0xc]
	subs r4, r3, r4
	ands r4, r0
	str r1, [sp]
	str r1, [sp, #4]
	ldrh r0, [r7, #0x2a]
	movs r1, #0xc
	bl __divsi3
	movs r1, #8
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #8]
	mov r0, r8
	mov r1, sb
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_8094878
	ldrh r0, [r7, #0x2a]
	adds r0, #4
	strh r0, [r7, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x60
	bne _08094E10
	mov r1, sl
	strh r1, [r7, #0x2a]
	adds r0, r7, #0
	bl Proc_Break
	b _08094E10
	.align 2, 0
_08094DB8: .4byte gSinLut
_08094DBC: .4byte 0x000001FF
_08094DC0:
	ldrh r1, [r7, #0x2a]
	adds r0, r1, #0
	adds r2, r1, #0
	asrs r6, r0, #4
	movs r0, #0x10
	subs r5, r0, r6
	adds r3, r5, #0
	ldrh r4, [r7, #0x2c]
	mov r2, sb
	ldrb r5, [r2]
	ldrh r0, [r7, #0x30]
	subs r2, r0, r3
	movs r0, #0x18
	subs r3, r0, r3
	str r1, [sp]
	movs r1, #0x80
	lsls r1, r1, #1
	mov r8, r1
	str r1, [sp, #4]
	movs r0, #0x10
	subs r0, r0, r6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_8094878
	ldrh r0, [r7, #0x2a]
	adds r0, #0x10
	strh r0, [r7, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r8
	bne _08094E10
	movs r0, #0
	strh r0, [r7, #0x2a]
	adds r0, r7, #0
	bl Proc_Break
_08094E10:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8094E20
sub_8094E20: @ 0x08094E20
	push {r4, r5, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldrh r0, [r4, #0x2c]
	adds r1, r4, #0
	adds r1, #0x2e
	ldrb r1, [r1]
	ldrh r2, [r4, #0x30]
	movs r3, #0x80
	lsls r3, r3, #1
	str r3, [sp]
	str r3, [sp, #4]
	movs r5, #0
	str r5, [sp, #8]
	movs r3, #0x18
	bl sub_8094878
	strh r5, [r4, #0x2a]
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8094E4C
sub_8094E4C: @ 0x08094E4C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r4, r0, #0
	ldrh r2, [r4, #0x2a]
	movs r0, #0x80
	lsls r0, r0, #1
	adds r6, r2, r0
	subs r0, r0, r2
	mov ip, r0
	ldrh r0, [r4, #0x30]
	cmp r0, #0xff
	bls _08094E78
	adds r1, r2, #0
	muls r1, r2, r1
	asrs r1, r1, #7
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	subs r0, r0, r1
	lsls r0, r0, #3
	rsbs r0, r0, #0
	b _08094E86
_08094E78:
	movs r1, #0xff
	ands r1, r0
	subs r1, #0x58
	adds r0, r2, #0
	muls r0, r2, r0
	asrs r0, r0, #7
	muls r0, r1, r0
_08094E86:
	cmp r0, #0
	bge _08094E8C
	adds r0, #0xff
_08094E8C:
	asrs r0, r0, #8
	ldrh r3, [r4, #0x2c]
	adds r5, r4, #0
	adds r5, #0x2e
	ldrb r1, [r5]
	ldrh r7, [r4, #0x30]
	adds r2, r7, r0
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r6, ip
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	ldrh r0, [r4, #0x2a]
	asrs r0, r0, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	adds r0, r3, #0
	movs r3, #0x18
	bl sub_8094878
	movs r0, #0x80
	lsls r0, r0, #1
	ldrh r7, [r4, #0x2a]
	cmp r7, r0
	bne _08094ED8
	ldr r0, [r4, #0x14]
	ldrb r5, [r5]
	lsls r1, r5, #2
	adds r0, #0x34
	adds r0, r0, r1
	movs r1, #0
	str r1, [r0]
	adds r0, r4, #0
	bl Proc_Break
_08094ED8:
	ldrh r0, [r4, #0x2a]
	adds r0, #8
	strh r0, [r4, #0x2a]
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8094EE8
sub_8094EE8: @ 0x08094EE8
	push {r4, lr}
	adds r2, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08094F04 @ =gUnk_0868FF4C
	adds r1, r2, #0
	bl SpawnProc
	adds r1, r0, #0
	adds r1, #0x2e
	strb r4, [r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08094F04: .4byte gUnk_0868FF4C

	thumb_func_start sub_8094F08
sub_8094F08: @ 0x08094F08
	push {lr}
	bl EnablePalSync
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8094F14
sub_8094F14: @ 0x08094F14
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r3, r0, #0
	movs r0, #0
	strh r0, [r3, #0x2a]
	ldr r0, _08094F88 @ =gPal
	movs r1, #0
	movs r4, #0xf
	ldr r2, _08094F8C @ =0x000003FE
	adds r0, r0, r2
_08094F2A:
	strh r1, [r0]
	subs r0, #2
	subs r4, #1
	cmp r4, #0
	bge _08094F2A
	adds r0, r3, #0
	adds r0, #0x2e
	movs r1, #0
	strb r1, [r0]
	adds r2, r3, #0
	adds r2, #0x2d
	strb r1, [r2]
	movs r4, #0
	adds r7, r3, #0
	adds r7, #0x2c
	ldr r1, _08094F90 @ =gUnk_08690A99
	mov r8, r1
	adds r6, r0, #0
	adds r5, r2, #0
_08094F50:
	ldrb r0, [r7]
	add r0, r8
	ldrb r0, [r0]
	bl GetJobInfo
	adds r0, #0x28
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #0
	beq _08094F74
	movs r0, #1
	lsls r0, r4
	ldrb r2, [r6]
	orrs r0, r2
	strb r0, [r6]
	ldrb r0, [r5]
	adds r0, #1
	strb r0, [r5]
_08094F74:
	adds r4, #1
	cmp r4, #7
	ble _08094F50
	bl EnablePalSync
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094F88: .4byte gPal
_08094F8C: .4byte 0x000003FE
_08094F90: .4byte gUnk_08690A99

	thumb_func_start sub_8094F94
sub_8094F94: @ 0x08094F94
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r1, r1, #0x18
	movs r7, #0xe0
	lsls r7, r7, #8
	cmp r1, #0
	beq _08094FB2
	movs r7, #0xf0
	lsls r7, r7, #8
_08094FB2:
	ldr r4, _08094FF4 @ =gUnk_086900F8
	str r7, [sp]
	movs r0, #4
	movs r1, #0x74
	movs r2, #0x48
	adds r3, r4, #0
	bl PutSpriteExt
	movs r5, #0
	cmp r5, r8
	bge _0809501E
	mov sb, r4
	movs r6, #0x74
	movs r4, #0x74
_08094FCE:
	mov r0, r8
	subs r0, #1
	cmp r5, r0
	bge _08094FF8
	str r7, [sp]
	movs r0, #4
	adds r1, r4, #0
	movs r2, #0x48
	mov r3, sb
	bl PutSpriteExt
	str r7, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r2, #0x48
	mov r3, sb
	bl PutSpriteExt
	b _08095014
	.align 2, 0
_08094FF4: .4byte gUnk_086900F8
_08094FF8:
	str r7, [sp]
	movs r0, #4
	adds r1, r4, #0
	movs r2, #0x48
	ldr r3, _0809502C @ =gUnk_086900F0
	bl PutSpriteExt
	str r7, [sp]
	movs r0, #4
	adds r1, r6, #0
	movs r2, #0x48
	ldr r3, _08095030 @ =gUnk_08690100
	bl PutSpriteExt
_08095014:
	adds r6, #8
	subs r4, #8
	adds r5, #1
	cmp r5, r8
	blt _08094FCE
_0809501E:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809502C: .4byte gUnk_086900F0
_08095030: .4byte gUnk_08690100

	thumb_func_start sub_8095034
sub_8095034: @ 0x08095034
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sb, r2
	movs r0, #0xe0
	lsls r0, r0, #8
	mov sl, r0
	cmp r5, #0
	beq _08095060
	movs r1, #0xf0
	lsls r1, r1, #8
	mov sl, r1
_08095060:
	movs r4, #0
	ldr r6, _080950F0 @ =gPal
	movs r7, #0xf8
	lsls r7, r7, #2
	adds r3, r6, r7
	lsls r2, r5, #0x10
	movs r0, #0xf0
	lsls r0, r0, #1
	mov ip, r0
_08095072:
	adds r0, r5, r4
	movs r1, #0xf
	cmp r0, #0xf
	bgt _0809507C
	lsrs r1, r2, #0x10
_0809507C:
	mov r7, ip
	adds r0, r1, r7
	lsls r0, r0, #1
	adds r0, r0, r6
	ldrh r0, [r0]
	strh r0, [r3]
	adds r3, #2
	movs r0, #0x80
	lsls r0, r0, #9
	adds r2, r2, r0
	adds r4, #1
	cmp r4, #0xf
	ble _08095072
	bl EnablePalSync
	movs r4, #0
	mov r1, r8
	lsls r0, r1, #5
	subs r0, #0x88
	ldr r6, _080950F4 @ =gUnk_086900BC
	rsbs r5, r0, #0
_080950A6:
	mov r0, sb
	asrs r0, r4
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	beq _080950C8
	ldr r1, _080950F8 @ =0x000001FF
	ands r1, r5
	ldr r3, [r6]
	movs r0, #0xf0
	lsls r0, r0, #8
	str r0, [sp]
	movs r0, #4
	movs r2, #0x50
	bl PutSpriteExt
	adds r5, #0x20
_080950C8:
	adds r6, #4
	adds r4, #1
	cmp r4, #7
	ble _080950A6
	ldr r3, _080950FC @ =gUnk_086900DC
	mov r7, sl
	str r7, [sp]
	movs r0, #4
	movs r1, #0x90
	movs r2, #0x50
	bl PutSpriteExt
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080950F0: .4byte gPal
_080950F4: .4byte gUnk_086900BC
_080950F8: .4byte 0x000001FF
_080950FC: .4byte gUnk_086900DC

	thumb_func_start sub_8095100
sub_8095100: @ 0x08095100
	push {r4, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	adds r1, r0, #0
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xd
	bhi _08095120
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0
	bl sub_8094F94
	b _08095132
_08095120:
	movs r0, #0xe
	movs r1, #0
	bl sub_8094F94
	movs r0, #0
	strh r0, [r4, #0x2a]
	adds r0, r4, #0
	bl Proc_Break
_08095132:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_8095138
sub_8095138: @ 0x08095138
	push {r4, r5, lr}
	adds r4, r0, #0
	ldrh r0, [r4, #0x2a]
	adds r0, #1
	adds r1, r0, #0
	strh r0, [r4, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	bls _08095156
	movs r5, #0
	adds r0, r4, #0
	bl Proc_Break
	b _0809515E
_08095156:
	movs r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0809515E:
	movs r0, #0xe
	movs r1, #0
	bl sub_8094F94
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	adds r0, #1
	ldrb r2, [r0]
	adds r0, r5, #0
	bl sub_8095034
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_809517C
sub_809517C: @ 0x0809517C
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0xe
	movs r1, #0
	bl sub_8094F94
	adds r0, r4, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	adds r0, #1
	ldrb r2, [r0]
	movs r0, #0
	bl sub_8095034
	movs r0, #0
	strh r0, [r4, #0x2a]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80951A4
sub_80951A4: @ 0x080951A4
	push {lr}
	adds r2, r0, #0
	ldrh r0, [r2, #0x2a]
	adds r0, #1
	strh r0, [r2, #0x2a]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x11
	cmp r0, #0x10
	bls _080951BE
	adds r0, r2, #0
	bl Proc_Break
	b _080951D8
_080951BE:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r2, #0
	adds r1, #0x2d
	ldrb r1, [r1]
	adds r2, #0x2e
	ldrb r2, [r2]
	bl sub_8095034
	movs r0, #0xe
	movs r1, #1
	bl sub_8094F94
_080951D8:
	pop {r0}
	bx r0

	thumb_func_start sub_80951DC
sub_80951DC: @ 0x080951DC
	push {r4, lr}
	adds r2, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080951F8 @ =gUnk_0868FF84
	adds r1, r2, #0
	bl SpawnProc
	adds r1, r0, #0
	adds r1, #0x2c
	strb r4, [r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080951F8: .4byte gUnk_0868FF84

	thumb_func_start sub_80951FC
sub_80951FC: @ 0x080951FC
	ldr r0, _08095224 @ =0x04000006
	ldrh r0, [r0]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x6d
	bhi _08095234
	ldr r3, _08095228 @ =0x04000008
	ldrh r2, [r3]
	ldr r1, _0809522C @ =0x0000FFFC
	adds r0, r1, #0
	ands r0, r2
	adds r0, #2
	strh r0, [r3]
	ldr r2, _08095230 @ =0x0400000C
	ldrh r0, [r2]
	ands r1, r0
	adds r1, #2
	b _0809524A
	.align 2, 0
_08095224: .4byte 0x04000006
_08095228: .4byte 0x04000008
_0809522C: .4byte 0x0000FFFC
_08095230: .4byte 0x0400000C
_08095234:
	ldr r3, _08095250 @ =0x04000008
	ldrh r2, [r3]
	ldr r1, _08095254 @ =0x0000FFFC
	adds r0, r1, #0
	ands r0, r2
	adds r0, #1
	strh r0, [r3]
	ldr r2, _08095258 @ =0x0400000C
	ldrh r0, [r2]
	ands r1, r0
	adds r1, #1
_0809524A:
	strh r1, [r2]
	bx lr
	.align 2, 0
_08095250: .4byte 0x04000008
_08095254: .4byte 0x0000FFFC
_08095258: .4byte 0x0400000C

	thumb_func_start sub_809525C
sub_809525C: @ 0x0809525C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08095328 @ =gDispIo
	mov ip, r0
	mov r2, ip
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	mov r1, ip
	adds r1, #0x44
	movs r2, #0
	movs r3, #0x10
	mov r8, r3
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #1
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _0809532C @ =0x0000FFE0
	mov r1, ip
	ldrh r1, [r1, #0x3c]
	ands r0, r1
	movs r1, #2
	orrs r0, r1
	ldr r1, _08095330 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0xe0
	lsls r3, r3, #5
	adds r1, r3, #0
	orrs r0, r1
	mov r1, ip
	strh r0, [r1, #0x3c]
	movs r5, #0x20
	ldrb r0, [r1, #1]
	orrs r0, r5
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r3, ip
	strb r0, [r3, #1]
	mov r0, ip
	adds r0, #0x2d
	strb r2, [r0]
	adds r0, #4
	strb r2, [r0]
	mov r1, ip
	adds r1, #0x2c
	movs r0, #0xf0
	strb r0, [r1]
	adds r1, #4
	movs r0, #0xa0
	strb r0, [r1]
	mov r6, ip
	adds r6, #0x34
	movs r0, #1
	ldrb r1, [r6]
	orrs r1, r0
	movs r2, #2
	orrs r1, r2
	movs r4, #4
	orrs r1, r4
	movs r3, #8
	orrs r1, r3
	mov r2, r8
	orrs r1, r2
	mov r7, ip
	adds r7, #0x36
	ldrb r2, [r7]
	orrs r0, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r0, r2
	orrs r0, r4
	orrs r0, r3
	mov r3, r8
	orrs r0, r3
	orrs r1, r5
	strb r1, [r6]
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	strb r0, [r7]
	mov r0, ip
	adds r0, #0x3d
	ldrb r1, [r0]
	orrs r5, r1
	strb r5, [r0]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095328: .4byte gDispIo
_0809532C: .4byte 0x0000FFE0
_08095330: .4byte 0x0000E0FF

	thumb_func_start sub_8095334
sub_8095334: @ 0x08095334
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x1c]
	add r1, sp, #4
	ldr r0, _08095358 @ =gUnk_0835C80C
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r6}
	stm r1!, {r2, r3, r6}
	movs r6, #4
	ldr r4, _0809535C @ =gUnk_08690A99
	b _08095362
	.align 2, 0
_08095358: .4byte gUnk_0835C80C
_0809535C: .4byte gUnk_08690A99
_08095360:
	adds r6, #1
_08095362:
	movs r0, #0x31
	adds r0, r0, r7
	mov sl, r0
	cmp r6, #7
	bgt _08095384
	ldrb r1, [r0]
	adds r0, r1, r4
	ldrb r0, [r0]
	bl GetJobInfo
	adds r0, #0x28
	adds r0, r0, r6
	ldrb r0, [r0]
	cmp r0, #0
	beq _08095360
	movs r2, #1
	str r2, [sp, #0x1c]
_08095384:
	movs r0, #0
	strh r0, [r7, #0x2a]
	strh r0, [r7, #0x2c]
	strh r0, [r7, #0x2e]
	adds r1, r7, #0
	adds r1, #0x3e
	movs r0, #1
	strb r0, [r1]
	adds r1, #6
	movs r0, #0xfa
	strb r0, [r1]
	ldr r0, _080953EC @ =gBg0Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080953F0 @ =gBg1Tm
	movs r1, #0
	bl TmFill
	ldr r0, _080953F4 @ =gBg2Tm
	movs r1, #0
	bl TmFill
	mov r3, sl
	ldrb r0, [r3]
	cmp r0, #0
	bne _08095400
	strh r0, [r7, #0x2e]
	ldr r4, _080953F8 @ =gUnk_086905F8
	mov r8, r4
	adds r5, r7, #0
	adds r5, #0x30
	ldr r4, _080953FC @ =gDispIo
	adds r6, r7, #0
	adds r6, #0x38
	str r6, [sp, #0x24]
	movs r0, #0x39
	adds r0, r0, r7
	mov sb, r0
	adds r1, r7, #0
	adds r1, #0x3a
	str r1, [sp, #0x28]
	adds r2, r7, #0
	adds r2, #0x3b
	str r2, [sp, #0x2c]
	adds r3, r7, #0
	adds r3, #0x3c
	str r3, [sp, #0x30]
	adds r6, #5
	str r6, [sp, #0x34]
	b _08095448
	.align 2, 0
_080953EC: .4byte gBg0Tm
_080953F0: .4byte gBg1Tm
_080953F4: .4byte gBg2Tm
_080953F8: .4byte gUnk_086905F8
_080953FC: .4byte gDispIo
_08095400:
	movs r6, #0
	movs r2, #0
	ldr r0, _080955E8 @ =gUnk_086905F8
	mov r8, r0
	adds r5, r7, #0
	adds r5, #0x30
	ldr r4, _080955EC @ =gDispIo
	adds r1, r7, #0
	adds r1, #0x38
	str r1, [sp, #0x24]
	movs r3, #0x39
	adds r3, r3, r7
	mov sb, r3
	adds r0, r7, #0
	adds r0, #0x3a
	str r0, [sp, #0x28]
	adds r1, #3
	str r1, [sp, #0x2c]
	adds r3, r7, #0
	adds r3, #0x3c
	str r3, [sp, #0x30]
	adds r0, #3
	str r0, [sp, #0x34]
	mov r3, sl
	mov r1, r8
_08095432:
	adds r1, #4
	adds r6, #1
	ldrb r0, [r1, #1]
	cmp r0, #0
	bne _08095432
	adds r2, #1
	ldrb r0, [r3]
	cmp r2, r0
	bne _08095432
	adds r0, r6, #1
	strh r0, [r7, #0x2e]
_08095448:
	ldrh r1, [r7, #0x2e]
	lsls r0, r1, #2
	add r0, r8
	ldrb r0, [r0]
	strb r0, [r5]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r2, [r4, #1]
	ands r0, r2
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r4, #1]
	bl ResetTextFont
	bl ResetText
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r3, [r4, #0xc]
	ands r0, r3
	movs r2, #2
	orrs r0, r2
	strb r0, [r4, #0xc]
	adds r0, r1, #0
	ldrb r6, [r4, #0x10]
	ands r0, r6
	orrs r0, r2
	strb r0, [r4, #0x10]
	ldrb r0, [r4, #0x14]
	ands r1, r0
	orrs r1, r2
	strb r1, [r4, #0x14]
	movs r0, #3
	ldrb r1, [r4, #0x18]
	orrs r0, r1
	strb r0, [r4, #0x18]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r4, _080955F0 @ =gUnk_0831B0A8
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _080955F4 @ =gUnk_0835AB08
	movs r1, #0xa0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _080955F8 @ =gBg3Tm
	ldr r1, _080955FC @ =gUnk_0835AB28
	movs r2, #0xa0
	lsls r2, r2, #8
	bl TmApplyTsa_t
	ldr r4, _08095600 @ =gUnk_0835A3E8
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08095604 @ =gUnk_0835A5D0
	movs r1, #0x90
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _08095608 @ =gBg2Tm
	ldr r1, _0809560C @ =gUnk_0835A5F0
	movs r2, #0x90
	lsls r2, r2, #8
	bl TmApplyTsa_t
	movs r0, #0xf
	bl EnableBgSync
	ldr r5, _08095610 @ =gBg0Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r4, _08095614 @ =gUnk_08690A99
	mov r2, sl
	ldrb r2, [r2]
	adds r0, r2, r4
	ldrb r0, [r0]
	bl GetJobInfo
	ldrb r0, [r0, #0xb]
	ldr r3, [sp, #0x24]
	strb r0, [r3]
	mov r6, sl
	ldrb r6, [r6]
	adds r0, r6, r4
	ldrb r0, [r0]
	bl GetJobInfo
	ldrb r0, [r0, #0xc]
	mov r1, sb
	strb r0, [r1]
	mov r2, sl
	ldrb r2, [r2]
	adds r0, r2, r4
	ldrb r0, [r0]
	bl GetJobInfo
	ldrb r0, [r0, #0xd]
	ldr r3, [sp, #0x28]
	strb r0, [r3]
	mov r6, sl
	ldrb r6, [r6]
	adds r0, r6, r4
	ldrb r0, [r0]
	bl GetJobInfo
	ldrb r0, [r0, #0xe]
	ldr r1, [sp, #0x2c]
	strb r0, [r1]
	mov r2, sl
	ldrb r2, [r2]
	adds r0, r2, r4
	ldrb r0, [r0]
	bl GetJobInfo
	ldrb r0, [r0, #0xf]
	ldr r3, [sp, #0x30]
	strb r0, [r3]
	mov r6, sl
	ldrb r6, [r6]
	adds r4, r6, r4
	ldrb r0, [r4]
	bl GetJobInfo
	ldrb r0, [r0, #0x10]
	ldr r1, [sp, #0x34]
	strb r0, [r1]
	movs r6, #0
	ldr r2, _08095618 @ =0x0200FF24
	str r2, [sp, #0x20]
	movs r3, #0x4a
	adds r3, r3, r5
	mov sb, r3
	adds r5, #0x42
	mov r8, r5
	adds r4, r2, #0
	add r5, sp, #4
_080955B2:
	adds r0, r4, #0
	movs r1, #3
	bl InitText
	adds r0, r4, #0
	bl ClearText
	adds r0, r4, #0
	movs r1, #3
	bl Text_SetColor
	adds r0, r4, #0
	movs r1, #0
	bl Text_SetCursor
	ldr r0, [sp, #0x1c]
	cmp r0, #0
	beq _08095620
	cmp r6, #1
	bne _08095620
	ldr r0, [sp, #0x20]
	adds r0, #8
	ldr r1, _0809561C @ =gUnk_0835C824
	bl Text_DrawString
	b _08095628
	.align 2, 0
_080955E8: .4byte gUnk_086905F8
_080955EC: .4byte gDispIo
_080955F0: .4byte gUnk_0831B0A8
_080955F4: .4byte gUnk_0835AB08
_080955F8: .4byte gBg3Tm
_080955FC: .4byte gUnk_0835AB28
_08095600: .4byte gUnk_0835A3E8
_08095604: .4byte gUnk_0835A5D0
_08095608: .4byte gBg2Tm
_0809560C: .4byte gUnk_0835A5F0
_08095610: .4byte gBg0Tm
_08095614: .4byte gUnk_08690A99
_08095618: .4byte 0x0200FF24
_0809561C: .4byte gUnk_0835C824
_08095620:
	ldr r1, [r5]
	adds r0, r4, #0
	bl Text_DrawString
_08095628:
	adds r0, r4, #0
	mov r1, r8
	bl PutText
	ldr r1, [sp, #0x24]
	adds r0, r1, r6
	ldrb r2, [r0]
	mov r0, sb
	movs r1, #0
	bl PutNumber
	movs r2, #0x80
	add sb, r2
	add r8, r2
	adds r4, #8
	adds r5, #4
	adds r6, #1
	cmp r6, #5
	ble _080955B2
	movs r5, #0
	adds r0, r7, #0
	bl sub_8095D2C
	str r0, [r7, #0x40]
	movs r0, #0x80
	lsls r0, r0, #1
	movs r1, #2
	movs r2, #0
	bl InitTalk
	bl SetInitTalkTextFont
	bl ClearTalkText
	bl EndTalk
	ldr r1, _08095800 @ =gUnk_086905B0
	mov r3, sl
	ldrb r3, [r3]
	lsls r0, r3, #1
	adds r0, r0, r1
	ldrh r2, [r0]
	movs r0, #2
	movs r1, #0xf
	bl StartTalkMsg
	movs r0, #0
	bl SetTalkPrintColor
	movs r0, #1
	bl SetTalkFlag
	movs r0, #2
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkFlag
	movs r0, #8
	bl SetTalkFlag
	movs r0, #0x40
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkPrintDelay
	ldr r0, _08095804 @ =0x02000400
	movs r2, #0
	movs r1, #0x82
	lsls r1, r1, #1
	strh r1, [r0, #2]
	movs r1, #0x58
	strh r1, [r0, #4]
	ldr r1, _08095808 @ =gUnk_0869058C
	mov r4, sl
	ldrb r4, [r4]
	adds r1, r4, r1
	ldrb r1, [r1]
	strh r1, [r0, #6]
	movs r1, #6
	strh r1, [r0, #8]
	strb r2, [r0, #1]
	movs r4, #1
	strh r4, [r0, #0xa]
	movs r1, #0xc0
	lsls r1, r1, #1
	strh r1, [r0, #0xc]
	movs r1, #2
	strh r1, [r0, #0xe]
	ldr r1, _0809580C @ =0x02000434
	str r1, [r0, #0x18]
	ldr r1, _08095810 @ =0x02002434
	str r1, [r0, #0x20]
	ldr r1, _08095814 @ =0x02007C34
	str r1, [r0, #0x1c]
	ldr r1, _08095818 @ =0x02007CD4
	str r1, [r0, #0x24]
	ldr r2, _0809581C @ =0x0200A6D4
	str r2, [r0, #0x2c]
	ldr r3, _08095820 @ =gUnk_086909A4
	mov r6, sl
	ldrb r6, [r6]
	lsls r1, r6, #2
	mov r7, sl
	ldrb r7, [r7]
	adds r1, r1, r7
	adds r1, r1, r3
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	strh r1, [r2]
	mov r6, sl
	ldrb r6, [r6]
	lsls r1, r6, #2
	mov r7, sl
	ldrb r7, [r7]
	adds r1, r1, r7
	adds r1, #1
	adds r1, r1, r3
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	strh r1, [r2, #2]
	mov r6, sl
	ldrb r6, [r6]
	lsls r1, r6, #2
	mov r7, sl
	ldrb r7, [r7]
	adds r1, r1, r7
	adds r1, #2
	adds r1, r1, r3
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	strh r1, [r2, #4]
	mov r6, sl
	ldrb r6, [r6]
	lsls r1, r6, #2
	mov r7, sl
	ldrb r7, [r7]
	adds r1, r1, r7
	adds r1, #3
	adds r1, r1, r3
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	strh r1, [r2, #6]
	mov r6, sl
	ldrb r6, [r6]
	lsls r1, r6, #2
	mov r7, sl
	ldrb r7, [r7]
	adds r1, r1, r7
	adds r1, #4
	adds r1, r1, r3
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	strh r1, [r2, #8]
	movs r1, #0xa0
	lsls r1, r1, #2
	strh r1, [r2, #0xe]
	movs r3, #0xf
	strh r3, [r2, #0x10]
	subs r1, #0x80
	strh r1, [r2, #0xa]
	strh r3, [r2, #0xc]
	strh r4, [r2, #0x12]
	ldr r1, _08095824 @ =gBg1Tm
	str r1, [r2, #0x14]
	ldr r1, _08095828 @ =0x0200A6FC
	str r1, [r2, #0x18]
	ldr r1, _0809582C @ =0x0200C6FC
	str r1, [r2, #0x1c]
	ldr r1, _08095830 @ =0x0200CEFC
	str r1, [r2, #0x20]
	ldr r1, _08095834 @ =sub_809525C
	str r1, [r2, #0x24]
	bl sub_804BED8
	ldr r4, _08095838 @ =0x0200DEFC
	ldr r1, _0809583C @ =gUnk_08690A53
	mov r2, sl
	ldrb r2, [r2]
	lsls r0, r2, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4]
	movs r0, #0xa
	strh r0, [r4, #2]
	movs r0, #0xe0
	lsls r0, r0, #2
	strh r0, [r4, #4]
	mov r3, sl
	ldrb r3, [r3]
	lsls r0, r3, #1
	adds r1, #1
	adds r0, r0, r1
	ldrb r0, [r0]
	strh r0, [r4, #6]
	movs r0, #0xb
	strh r0, [r4, #8]
	movs r0, #0xf0
	lsls r0, r0, #2
	strh r0, [r4, #0xa]
	strh r5, [r4, #0xc]
	ldr r0, _08095840 @ =0x0000FFFF
	strh r0, [r4, #0xe]
	ldr r0, _08095844 @ =0x06010000
	str r0, [r4, #0x1c]
	ldr r0, _08095848 @ =0x0200DF24
	str r0, [r4, #0x20]
	adds r0, r4, #0
	bl sub_804BF40
	movs r3, #0x98
	lsls r3, r3, #1
	movs r0, #0x68
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0xd0
	movs r2, #0x68
	bl sub_804C318
	ldr r0, _0809584C @ =sub_80951FC
	bl SetOnHBlankA
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095800: .4byte gUnk_086905B0
_08095804: .4byte 0x02000400
_08095808: .4byte gUnk_0869058C
_0809580C: .4byte 0x02000434
_08095810: .4byte 0x02002434
_08095814: .4byte 0x02007C34
_08095818: .4byte 0x02007CD4
_0809581C: .4byte 0x0200A6D4
_08095820: .4byte gUnk_086909A4
_08095824: .4byte gBg1Tm
_08095828: .4byte 0x0200A6FC
_0809582C: .4byte 0x0200C6FC
_08095830: .4byte 0x0200CEFC
_08095834: .4byte sub_809525C
_08095838: .4byte 0x0200DEFC
_0809583C: .4byte gUnk_08690A53
_08095840: .4byte 0x0000FFFF
_08095844: .4byte 0x06010000
_08095848: .4byte 0x0200DF24
_0809584C: .4byte sub_80951FC

	thumb_func_start sub_8095850
sub_8095850: @ 0x08095850
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	adds r5, r7, #0
	adds r5, #0x44
	movs r0, #0x50
	ldrh r1, [r7, #0x2a]
	subs r0, r0, r1
	movs r1, #0xe
	bl __divsi3
	adds r0, #1
	ldrb r1, [r5]
	subs r0, r1, r0
	strb r0, [r5]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xb3
	bhi _08095882
	movs r0, #0xb4
	strb r0, [r5]
_08095882:
	ldr r0, _08095934 @ =gDispIo
	mov ip, r0
	movs r2, #1
	ldrb r0, [r0, #1]
	orrs r0, r2
	movs r1, #2
	mov r8, r1
	mov r1, r8
	orrs r0, r1
	movs r1, #4
	mov sl, r1
	mov r1, sl
	orrs r0, r1
	movs r1, #8
	mov sb, r1
	mov r1, sb
	orrs r0, r1
	movs r4, #0x10
	orrs r0, r4
	movs r1, #0x20
	orrs r0, r1
	movs r1, #0x41
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r1, ip
	strb r0, [r1, #1]
	mov r0, ip
	adds r0, #0x2d
	movs r1, #0
	strb r1, [r0]
	ldrh r6, [r7, #0x2a]
	adds r1, r6, #0
	movs r0, #0x50
	subs r0, r0, r1
	mov r3, ip
	adds r3, #0x31
	strb r0, [r3]
	subs r3, #5
	movs r0, #0xf0
	strb r0, [r3]
	adds r1, #0x50
	mov r0, ip
	adds r0, #0x30
	strb r1, [r0]
	adds r0, #4
	ldrb r1, [r0]
	orrs r2, r1
	mov r1, r8
	orrs r2, r1
	mov r1, sl
	orrs r2, r1
	mov r1, sb
	orrs r2, r1
	orrs r2, r4
	strb r2, [r0]
	mov r2, ip
	adds r2, #0x36
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2]
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x50
	bne _08095938
	movs r0, #0xb4
	strb r0, [r5]
	movs r0, #0
	strh r0, [r7, #0x2a]
	adds r0, r7, #0
	bl Proc_Break
	ldr r0, [r7, #0x40]
	bl sub_8095D48
	b _0809593C
	.align 2, 0
_08095934: .4byte gDispIo
_08095938:
	adds r0, r6, #4
	strh r0, [r7, #0x2a]
_0809593C:
	ldr r0, _08095974 @ =0x02000400
	adds r4, r7, #0
	adds r4, #0x44
	ldrb r1, [r4]
	movs r2, #0x58
	bl sub_804BE20
	ldr r0, _08095978 @ =0x0200DEFC
	ldrb r3, [r4]
	adds r1, r3, #0
	subs r1, #0x30
	adds r3, #0x30
	movs r2, #0x68
	str r2, [sp]
	bl sub_804C318
	ldr r0, [r7, #0x40]
	movs r1, #0x78
	bl sub_8095D40
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095974: .4byte 0x02000400
_08095978: .4byte 0x0200DEFC

	thumb_func_start sub_809597C
sub_809597C: @ 0x0809597C
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	movs r6, #0
	ldrh r1, [r4, #0x2c]
	ldr r0, _08095994 @ =0x0000018F
	cmp r1, r0
	bls _08095998
	ldr r0, [r4, #0x34]
	adds r0, #0x2c
	movs r1, #2
	strb r1, [r0]
	b _080959E8
	.align 2, 0
_08095994: .4byte 0x0000018F
_08095998:
	ldrh r2, [r4, #0x2a]
	adds r2, #1
	strh r2, [r4, #0x2a]
	adds r0, r1, #1
	strh r0, [r4, #0x2c]
	ldr r1, _08095A18 @ =gUnk_086905F8
	ldrh r3, [r4, #0x2e]
	lsls r0, r3, #2
	adds r1, r0, r1
	ldrb r0, [r1, #1]
	cmp r0, #0
	beq _080959E8
	adds r1, r0, #0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r1
	bhi _080959EC
	cmp r1, #0xff
	bne _080959E8
	adds r5, r4, #0
	adds r5, #0x3e
	ldrb r0, [r5]
	cmp r0, #0
	beq _080959DA
	ldr r0, _08095A1C @ =0x02000400
	bl sub_804BE4C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080959EC
	ldrb r0, [r5]
	cmp r0, #0
	bne _080959E8
_080959DA:
	ldr r0, _08095A1C @ =0x02000400
	bl sub_804BE80
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080959E8
	movs r6, #1
_080959E8:
	cmp r6, #0
	beq _08095A62
_080959EC:
	ldrh r0, [r4, #0x2e]
	adds r0, #1
	strh r0, [r4, #0x2e]
	ldr r7, _08095A18 @ =gUnk_086905F8
	lsls r0, r0, #2
	adds r1, r0, r7
	ldrb r0, [r1, #1]
	cmp r0, #0
	beq _08095A62
	ldrb r2, [r1]
	cmp r2, #0xff
	bne _08095A20
	ldr r0, _08095A1C @ =0x02000400
	bl sub_804BE6C
	adds r1, r4, #0
	adds r1, #0x3e
	movs r0, #0
	strb r0, [r1]
	adds r6, r4, #0
	adds r6, #0x30
	b _08095A52
	.align 2, 0
_08095A18: .4byte gUnk_086905F8
_08095A1C: .4byte 0x02000400
_08095A20:
	adds r0, r4, #0
	adds r0, #0x30
	adds r6, r0, #0
	ldrb r0, [r6]
	cmp r0, r2
	beq _08095A52
	ldr r5, _08095A68 @ =0x02000400
	ldrb r0, [r1]
	strh r0, [r5, #8]
	adds r0, r5, #0
	bl sub_804BCC8
	ldrh r1, [r4, #0x2e]
	lsls r0, r1, #2
	adds r0, r0, r7
	ldrb r0, [r0]
	cmp r0, #4
	bne _08095A4A
	adds r0, r5, #0
	bl sub_804BE6C
_08095A4A:
	adds r1, r4, #0
	adds r1, #0x3e
	movs r0, #1
	strb r0, [r1]
_08095A52:
	ldr r1, _08095A6C @ =gUnk_086905F8
	ldrh r2, [r4, #0x2e]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r1, #0
	strb r0, [r6]
	strh r1, [r4, #0x2a]
_08095A62:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095A68: .4byte 0x02000400
_08095A6C: .4byte gUnk_086905F8

	thumb_func_start nullsub_47
nullsub_47: @ 0x08095A70
	bx lr
	.align 2, 0

	thumb_func_start sub_8095A74
sub_8095A74: @ 0x08095A74
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0
	bl SetOnHBlankA
	bl EndTalk
	bl sub_8057F24
	ldr r0, _08095AB0 @ =0x0200DEFC
	bl sub_804C2EC
	bl sub_8057F08
	ldr r0, _08095AB4 @ =0x02000400
	bl sub_804BF00
	ldr r0, [r4, #0x40]
	cmp r0, #0
	beq _08095AA2
	movs r1, #4
	bl Proc_Goto
_08095AA2:
	ldr r1, [r4, #0x34]
	movs r0, #0
	str r0, [r1, #0x38]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08095AB0: .4byte 0x0200DEFC
_08095AB4: .4byte 0x02000400

	thumb_func_start sub_8095AB8
sub_8095AB8: @ 0x08095AB8
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _08095ADC @ =gUnk_0868FFCC
	adds r1, r5, #0
	bl SpawnProc
	adds r2, r0, #0
	adds r2, #0x31
	movs r1, #0
	strb r4, [r2]
	str r5, [r0, #0x34]
	str r1, [r0, #0x40]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08095ADC: .4byte gUnk_0868FFCC

	thumb_func_start sub_8095AE0
sub_8095AE0: @ 0x08095AE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov ip, r0
	ldr r0, [r0, #0x14]
	mov r1, ip
	str r0, [r1, #0x30]
	movs r1, #0
	movs r0, #0
	mov r2, ip
	strh r0, [r2, #0x2a]
	adds r2, #0x42
	strb r1, [r2]
	mov r1, ip
	adds r1, #0x43
	movs r0, #0xfa
	strb r0, [r1]
	movs r4, #0
	ldr r0, _08095B48 @ =gUnk_08690D44
	mov sb, r0
	movs r1, #0x34
	add r1, ip
	mov r8, r1
	adds r7, r2, #0
	mov sl, sb
_08095B16:
	lsls r0, r4, #2
	ldr r2, _08095B4C @ =0x0200FF54
	adds r0, r0, r2
	movs r1, #0
	strb r1, [r0]
	strb r1, [r0, #1]
	mov r1, ip
	ldr r0, [r1, #0x30]
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r3, r0, #2
	mov r2, sb
	adds r0, r3, r2
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08095B64
	mov r0, r8
	adds r1, r0, r4
	movs r0, #0xff
	strb r0, [r1]
	b _08095B98
	.align 2, 0
_08095B48: .4byte gUnk_08690D44
_08095B4C: .4byte 0x0200FF54
_08095B50:
	mov r1, r8
	adds r0, r1, r4
	strb r5, [r0]
	ldrb r2, [r3, #6]
	ldrb r1, [r3, #5]
	subs r0, r2, r1
	ldrb r2, [r7]
	adds r0, r2, r0
	strb r0, [r7]
	b _08095B92
_08095B64:
	movs r5, #0
	ldr r1, _08095BBC @ =gUnk_08690C14
	ldr r0, [r1]
	adds r6, r4, #1
	cmp r0, #0
	beq _08095B92
	mov r2, sl
	adds r0, r3, r2
	ldr r0, [r0]
	adds r0, r0, r4
	movs r2, #0
	ldrsb r2, [r0, r2]
	adds r3, r1, #0
_08095B7E:
	movs r0, #4
	ldrsb r0, [r3, r0]
	cmp r0, r2
	beq _08095B50
	adds r1, #8
	adds r3, #8
	adds r5, #1
	ldr r0, [r1]
	cmp r0, #0
	bne _08095B7E
_08095B92:
	adds r4, r6, #0
	cmp r4, #0xd
	ble _08095B16
_08095B98:
	ldr r1, _08095BC0 @ =0x06010000
	ldr r0, _08095BC4 @ =gUnk_0835B040
	bl Decompress
	ldr r0, _08095BC8 @ =gUnk_0835C034
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x40
	bl ApplyPaletteExt
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095BBC: .4byte gUnk_08690C14
_08095BC0: .4byte 0x06010000
_08095BC4: .4byte gUnk_0835B040
_08095BC8: .4byte gUnk_0835C034

	thumb_func_start sub_8095BCC
sub_8095BCC: @ 0x08095BCC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	str r0, [sp, #0x10]
	ldr r1, _08095D1C @ =gUnk_0835C829
	add r0, sp, #4
	movs r2, #0xc
	bl memcpy
	movs r0, #0
	mov sb, r0
	ldr r1, [sp, #0x10]
	adds r1, #0x42
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	adds r2, #0x43
	str r2, [sp, #0x1c]
	ldr r3, [sp, #0x10]
	adds r3, #0x34
	str r3, [sp, #0x14]
_08095BFA:
	ldr r1, [sp, #0x10]
	ldr r0, [r1, #0x30]
	adds r0, #0x38
	add r0, sb
	ldrb r0, [r0]
	mov r8, r0
	movs r7, #0
	lsrs r0, r0, #2
	movs r2, #1
	add r2, sb
	mov sl, r2
	cmp r7, r0
	bge _08095C3E
	adds r6, r0, #0
	movs r4, #0x30
	mov r3, sb
	lsls r5, r3, #4
	adds r7, r6, #0
_08095C1E:
	ldr r0, _08095D20 @ =gUnk_0869006C
	ldr r3, [r0, #0xc]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xd
	adds r1, r4, #0
	adds r2, r5, #0
	adds r2, #0x10
	bl PutSpriteExt
	adds r4, #8
	subs r7, #1
	cmp r7, #0
	bne _08095C1E
	adds r7, r6, #0
_08095C3E:
	movs r0, #3
	mov r1, r8
	ands r0, r1
	cmp r0, #0
	beq _08095C68
	lsls r1, r7, #3
	adds r1, #0x30
	mov r3, sb
	lsls r2, r3, #4
	adds r2, #0x10
	subs r0, #1
	lsls r0, r0, #2
	ldr r3, _08095D20 @ =gUnk_0869006C
	adds r0, r0, r3
	ldr r3, [r0]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #0xd
	bl PutSpriteExt
_08095C68:
	mov sb, sl
	mov r0, sb
	cmp r0, #5
	ble _08095BFA
	movs r0, #0x78
	ldr r1, [sp, #0x18]
	ldrb r1, [r1]
	subs r0, r0, r1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	ldr r2, [sp, #0x1c]
	ldrb r2, [r2]
	adds r7, r2, r0
	movs r3, #0
	mov sb, r3
	ldr r1, [sp, #0x14]
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _08095D00
	ldr r5, _08095D24 @ =gUnk_08690C14
	adds r4, r1, #0
_08095C94:
	ldrb r2, [r4]
	lsls r0, r2, #3
	adds r0, r0, r5
	movs r1, #5
	ldrsb r1, [r0, r1]
	subs r1, r7, r1
	movs r3, #7
	ldrsb r3, [r0, r3]
	movs r2, #8
	subs r2, r2, r3
	ldr r3, [r0]
	movs r0, #0xa0
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r3, [r4]
	lsls r0, r3, #3
	adds r0, r0, r5
	movs r1, #5
	ldrsb r1, [r0, r1]
	subs r1, r7, r1
	subs r1, #2
	movs r3, #7
	ldrsb r3, [r0, r3]
	movs r2, #6
	subs r2, r2, r3
	ldr r3, [r0]
	movs r0, #0x80
	lsls r0, r0, #7
	str r0, [sp]
	movs r0, #4
	bl PutSpriteExt
	ldrb r1, [r4]
	lsls r0, r1, #3
	adds r0, r0, r5
	movs r1, #6
	ldrsb r1, [r0, r1]
	ldrb r0, [r0, #5]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r1, r1, r0
	adds r7, r7, r1
	adds r4, #1
	movs r2, #1
	add sb, r2
	mov r3, sb
	cmp r3, #0xd
	bgt _08095D00
	ldrb r0, [r4]
	cmp r0, #0xff
	bne _08095C94
_08095D00:
	ldr r1, [sp, #0x10]
	ldrh r0, [r1, #0x2a]
	cmp r0, #0xfe
	bhi _08095D0C
	adds r0, #1
	strh r0, [r1, #0x2a]
_08095D0C:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095D1C: .4byte gUnk_0835C829
_08095D20: .4byte gUnk_0869006C
_08095D24: .4byte gUnk_08690C14

	thumb_func_start nullsub_48
nullsub_48: @ 0x08095D28
	bx lr
	.align 2, 0

	thumb_func_start sub_8095D2C
sub_8095D2C: @ 0x08095D2C
	push {lr}
	adds r1, r0, #0
	ldr r0, _08095D3C @ =gUnk_08690014
	bl SpawnProc
	pop {r1}
	bx r1
	.align 2, 0
_08095D3C: .4byte gUnk_08690014

	thumb_func_start sub_8095D40
sub_8095D40: @ 0x08095D40
	adds r0, #0x43
	strb r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8095D48
sub_8095D48: @ 0x08095D48
	ldr r0, _08095D54 @ =0x0200FF54
	movs r1, #0x80
	strb r1, [r0]
	movs r1, #2
	strb r1, [r0, #1]
	bx lr
	.align 2, 0
_08095D54: .4byte 0x0200FF54

	thumb_func_start nullsub_49
nullsub_49: @ 0x08095D58
	bx lr
	.align 2, 0

	thumb_func_start sub_8095D5C
sub_8095D5C: @ 0x08095D5C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08095D7C @ =gUnk_08690E7C
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x61
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r1, #0
	b _08095D80
	.align 2, 0
_08095D7C: .4byte gUnk_08690E7C
_08095D80:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8095D88
sub_8095D88: @ 0x08095D88
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _08095DEC @ =gUnk_08690E70
	ldr r2, [r7, #4]
	adds r1, r2, #0
	adds r2, #0x61
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r7]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r7, #8]
	bl SetInitTalkTextFont
	bl ClearTalkText
	ldr r1, [r7, #8]
	adds r0, r1, #0
	bl DecodeMsg
	adds r2, r0, #0
	ldr r3, [r7, #4]
	movs r0, #8
	movs r1, #2
	bl StartTalkExt
	movs r0, #0
	bl SetTalkPrintColor
	movs r0, #1
	bl SetTalkFlag
	movs r0, #2
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkFlag
	movs r0, #1
	bl SetActiveTalkFace
	add sp, #0xc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095DEC: .4byte gUnk_08690E70

	thumb_func_start sub_8095DF0
sub_8095DF0: @ 0x08095DF0
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r3, [r7, #4]
	ldr r0, [r7]
	movs r1, #0
	movs r2, #0
	bl sub_8095E90
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095E10
sub_8095E10: @ 0x08095E10
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	movs r2, #0
	movs r3, #0
	bl sub_8095E90
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095E30
sub_8095E30: @ 0x08095E30
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	movs r2, #1
	movs r3, #0
	bl sub_8095E90
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095E50
sub_8095E50: @ 0x08095E50
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	movs r2, #2
	movs r3, #0
	bl sub_8095E90
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095E70
sub_8095E70: @ 0x08095E70
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	ldr r0, [r7]
	movs r2, #0
	movs r3, #0
	bl sub_8095E90
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095E90
sub_8095E90: @ 0x08095E90
	push {r7, lr}
	sub sp, #0x1c
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	adds r0, r2, #0
	str r3, [r7, #0xc]
	adds r1, r7, #0
	adds r1, #8
	strb r0, [r1]
	bl sub_8073324
	ldr r0, [r7, #0xc]
	cmp r0, #0
	beq _08095EC0
	ldr r0, _08095EBC @ =gUnk_08690F00
	ldr r1, [r7, #0xc]
	bl SpawnProcLocking
	str r0, [r7, #0x10]
	b _08095ECC
	.align 2, 0
_08095EBC: .4byte gUnk_08690F00
_08095EC0:
	ldr r1, _08095EFC @ =gUnk_08690F00
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0x10]
_08095ECC:
	ldr r0, [r7, #0x10]
	adds r1, r7, #0
	adds r1, #8
	adds r2, r0, #0
	adds r0, #0x61
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, [r7, #0x10]
	ldr r1, [r7]
	str r1, [r0, #0x2c]
	ldr r0, [r7, #4]
	cmp r0, #0
	beq _08095F00
	ldr r0, [r7, #4]
	str r0, [r7, #0x14]
	b _08095F04
	.align 2, 0
_08095EFC: .4byte gUnk_08690F00
_08095F00:
	ldr r0, _08095F10 @ =gUnk_08690E60
	str r0, [r7, #0x14]
_08095F04:
	movs r0, #0
	str r0, [r7, #0x18]
_08095F08:
	ldr r0, [r7, #0x18]
	cmp r0, #0x14
	ble _08095F14
	b _08095F4C
	.align 2, 0
_08095F10: .4byte gUnk_08690E60
_08095F14:
	adds r0, r7, #0
	adds r0, #0x14
	ldr r1, [r0]
	ldrh r2, [r1]
	adds r1, #2
	str r1, [r0]
	adds r0, r2, #0
	bl CreateItem
	ldr r1, [r7, #0x10]
	ldr r2, [r7, #0x18]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r3, r1, #0
	adds r3, #0x30
	adds r1, r3, r2
	ldrh r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strh r0, [r1]
	ldr r0, [r7, #0x18]
	adds r1, r0, #1
	str r1, [r7, #0x18]
	b _08095F08
_08095F4C:
	ldr r1, [r7, #0x10]
	adds r0, r1, #0
	bl sub_8095F5C
	add sp, #0x1c
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8095F5C
sub_8095F5C: @ 0x08095F5C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	str r0, [r7, #4]
_08095F68:
	ldr r0, [r7]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x30
	adds r1, r0, r1
	ldrh r0, [r1]
	cmp r0, #0
	bne _08095F7C
	b _08095F84
_08095F7C:
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08095F68
_08095F84:
	ldr r1, [r7]
	ldr r2, [r7, #4]
	adds r0, r2, #0
	adds r2, r1, #0
	adds r1, #0x5a
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r0, r3
	adds r2, r0, #0
	strb r2, [r1]
	ldr r0, [r7]
	ldr r1, [r0, #0x2c]
	adds r0, r1, #0
	bl GetUnitItemCount
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5b
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8095FC4
sub_8095FC4: @ 0x08095FC4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	ldr r1, _08095FE4 @ =gUnk_08690F00
	adds r0, r1, #0
	bl Proc_Find
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x60
	ldrb r0, [r1]
	cmp r0, #0
	bne _08095FE8
	b _08095FEE
	.align 2, 0
_08095FE4: .4byte gUnk_08690F00
_08095FE8:
	ldr r0, [r7]
	bl sub_80970BC
_08095FEE:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8095FF8
sub_8095FF8: @ 0x08095FF8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	ldr r1, _08096018 @ =gUnk_08690F00
	adds r0, r1, #0
	bl Proc_Find
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x60
	ldrb r0, [r1]
	cmp r0, #1
	bne _0809601C
	b _08096022
	.align 2, 0
_08096018: .4byte gUnk_08690F00
_0809601C:
	ldr r0, [r7]
	bl sub_80972AC
_08096022:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809602C
sub_809602C: @ 0x0809602C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096048 @ =0x000002C3
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096048: .4byte 0x000002C3

	thumb_func_start sub_809604C
sub_809604C: @ 0x0809604C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _08096076
	cmp r0, #1
	bgt _08096066
	cmp r0, #0
	beq _0809606C
	b _0809606C
_08096066:
	cmp r0, #2
	beq _08096080
	b _0809606C
_0809606C:
	ldr r0, [r7]
	movs r1, #0xc
	bl Proc_Goto
	b _080960B0
_08096076:
	ldr r0, [r7]
	movs r1, #1
	bl Proc_Goto
	b _080960B0
_08096080:
	ldr r0, [r7]
	ldr r1, [r0, #0x2c]
	adds r0, r1, #0
	bl GetUnitItemCount
	cmp r0, #0
	bne _080960A8
	ldr r1, _080960A4 @ =0x000002D5
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	ldr r0, [r7]
	movs r1, #7
	bl Proc_Goto
	b _080960B0
	.align 2, 0
_080960A4: .4byte 0x000002D5
_080960A8:
	ldr r0, [r7]
	movs r1, #4
	bl Proc_Goto
_080960B0:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80960B8
sub_80960B8: @ 0x080960B8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #0xb3
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80960D4
sub_80960D4: @ 0x080960D4
	push {r4, r5, r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, [r7]
	str r0, [r7, #8]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	movs r0, #4
	bl EnableBgSync
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r2, _08096128 @ =0x0203DCB8
	adds r1, r0, r2
	adds r0, r1, #0
	bl ClearText
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x30
	adds r1, r0, r1
	ldrh r0, [r1]
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _0809612C
	b _08096154
	.align 2, 0
_08096128: .4byte 0x0203DCB8
_0809612C:
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _0809615C @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #0x10]
	ldr r3, [r7, #8]
	ldr r2, [r3, #0x2c]
	ldr r3, [r7, #4]
	adds r4, r3, #0
	lsls r3, r4, #1
	movs r4, #0x1f
	ands r3, r4
	lsls r4, r3, #5
	adds r3, r4, #0
	lsls r4, r3, #1
	ldr r5, _08096160 @ =gBg2Tm+0xE
	adds r3, r4, r5
	bl sub_8097444
_08096154:
	add sp, #0x14
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809615C: .4byte 0x0203DCB8
_08096160: .4byte gBg2Tm+0xE

	thumb_func_start sub_8096164
sub_8096164: @ 0x08096164
	push {r4, r5, r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, [r7]
	str r0, [r7, #8]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	movs r0, #4
	bl EnableBgSync
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r2, _080961B8 @ =0x0203DCB8
	adds r1, r0, r2
	adds r0, r1, #0
	bl ClearText
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x30
	adds r1, r0, r1
	ldrh r0, [r1]
	str r0, [r7, #0x10]
	ldr r0, [r7, #0x10]
	cmp r0, #0
	bne _080961BC
	b _080961E4
	.align 2, 0
_080961B8: .4byte 0x0203DCB8
_080961BC:
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _080961EC @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #0x10]
	ldr r3, [r7, #8]
	ldr r2, [r3, #0x2c]
	ldr r3, [r7, #4]
	adds r4, r3, #0
	lsls r3, r4, #1
	movs r4, #0x1f
	ands r3, r4
	lsls r4, r3, #5
	adds r3, r4, #0
	lsls r4, r3, #1
	ldr r5, _080961F0 @ =gBg2Tm+0xE
	adds r3, r4, r5
	bl sub_80974A0
_080961E4:
	add sp, #0x14
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080961EC: .4byte 0x0203DCB8
_080961F0: .4byte gBg2Tm+0xE

	thumb_func_start sub_80961F4
sub_80961F4: @ 0x080961F4
	push {r4, r7, lr}
	sub sp, #0x10
	add r7, sp, #0xc
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5e
	ldrb r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5a
	ldrb r1, [r2]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r4, r3, #0
	adds r4, #0x5f
	ldrb r3, [r4]
	movs r2, #0x48
	str r2, [sp]
	ldr r2, _08096230 @ =sub_80960D4
	str r2, [sp, #4]
	ldr r2, [r7]
	str r2, [sp, #8]
	movs r2, #5
	bl sub_8097AC4
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096230: .4byte sub_80960D4

	thumb_func_start sub_8096234
sub_8096234: @ 0x08096234
	push {r4, r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	adds r0, r7, #4
	movs r1, #0
	strb r1, [r0]
	bl sub_8097BC0
	bl sub_8097D10
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r4, r0, #0
	bl sub_8097CF4
	lsls r2, r4, #0x10
	lsrs r1, r2, #0x10
	lsls r2, r0, #0x10
	lsrs r0, r2, #0x10
	cmp r1, r0
	beq _08096278
	adds r0, r7, #4
	movs r1, #1
	strb r1, [r0]
_08096278:
	bl sub_8097CF4
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5c
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	bl sub_8097D34
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5d
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	ldr r0, [r7]
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5c
	adds r2, r0, #0
	adds r0, #0x5e
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r0, [r7]
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5d
	adds r2, r0, #0
	adds r0, #0x5f
	ldrb r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrb r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strb r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	movs r0, #0x38
	bl sub_80415CC
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #0
	beq _0809635A
	adds r0, r7, #4
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _0809635A
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	ldr r0, [r7]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r0, #0x30
	adds r3, r0, r2
	ldrh r2, [r3]
	movs r0, #0x38
	bl sub_80706FC
_0809635A:
	bl sub_809773C
	bl sub_8097DA8
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _0809636C
	b _080964D8
_0809636C:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #0
	beq _080963AE
	ldr r1, _080963A8 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x81
	lsls r2, r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080963A4
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	bl sub_807089C
_080963A4:
	b _080964D8
	.align 2, 0
_080963A8: .4byte gKeySt
_080963AC:
	.byte 0x36, 0xE0
_080963AE:
	ldr r1, _08096418 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809641C
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	ldr r0, [r7]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r0, #0x30
	adds r3, r0, r2
	ldrh r2, [r3]
	movs r0, #0x38
	bl sub_80706FC
	b _080964D8
	.align 2, 0
_08096418: .4byte gKeySt
_0809641C:
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r1, [r7]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r1, #0x30
	adds r2, r1, r2
	ldrh r1, [r2]
	bl sub_809750C
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	str r0, [r7, #8]
	ldr r1, _08096474 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809649C
	bl GetGold
	ldr r1, [r7, #8]
	cmp r1, r0
	ble _0809647C
	ldr r1, _08096478 @ =0x000002DB
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	ldr r0, [r7]
	movs r1, #1
	bl Proc_Goto
	b _08096494
	.align 2, 0
_08096474: .4byte gKeySt
_08096478: .4byte 0x000002DB
_0809647C:
	ldr r1, [r7, #8]
	adds r0, r1, #0
	bl SetTalkNumber
	ldr r1, _08096498 @ =0x000002DE
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	ldr r0, [r7]
	bl Proc_Break
_08096494:
	b _080964D8
	.align 2, 0
_08096498: .4byte 0x000002DE
_0809649C:
	ldr r1, _080964D0 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #2
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080964D8
	ldr r0, _080964D4 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _080964C4
	movs r0, #0x6b
	bl m4aSongNumStart
_080964C4:
	ldr r0, [r7]
	movs r1, #7
	bl Proc_Goto
	b _080964D8
	.align 2, 0
_080964D0: .4byte gKeySt
_080964D4: .4byte gPlaySt
_080964D8:
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80964E0
sub_80964E0: @ 0x080964E0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _08096500
	cmp r0, #1
	bgt _080964FA
	cmp r0, #0
	beq _08096502
	b _08096502
_080964FA:
	cmp r0, #2
	beq _08096502
	b _08096502
_08096500:
	b _0809650C
_08096502:
	ldr r0, [r7]
	movs r1, #1
	bl Proc_Goto
	b _0809650C
_0809650C:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096514
sub_8096514: @ 0x08096514
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5b
	ldrb r0, [r1]
	cmp r0, #4
	bls _08096538
	ldr r1, _08096534 @ =0x000002E7
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	b _08096562
	.align 2, 0
_08096534: .4byte 0x000002E7
_08096538:
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r1, [r7]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r1, #0x30
	adds r2, r1, r2
	ldrh r1, [r2]
	bl UnitAddItem
	ldr r0, [r7]
	bl sub_8097830
	ldr r0, [r7]
	movs r1, #3
	bl Proc_Goto
_08096562:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809656C
sub_809656C: @ 0x0809656C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _0809658C
	cmp r0, #1
	bgt _08096586
	cmp r0, #0
	beq _0809658E
	b _0809658E
_08096586:
	cmp r0, #2
	beq _0809658E
	b _0809658E
_0809658C:
	b _08096598
_0809658E:
	ldr r0, [r7]
	movs r1, #0xb
	bl Proc_Goto
	b _08096598
_08096598:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80965A0
sub_80965A0: @ 0x080965A0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080965BC @ =0x000002ED
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080965BC: .4byte 0x000002ED

	thumb_func_start sub_80965C0
sub_80965C0: @ 0x080965C0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5c
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x30
	adds r1, r0, r1
	ldrh r2, [r1]
	adds r0, r2, #0
	bl AddSupplyItem
	ldr r0, [r7]
	bl sub_8097830
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80965F0
sub_80965F0: @ 0x080965F0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _0809660C @ =0x000002EA
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809660C: .4byte 0x000002EA

	thumb_func_start sub_8096610
sub_8096610: @ 0x08096610
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl CountSupplyItems
	cmp r0, #0x63
	bgt _08096628
	ldr r0, [r7]
	movs r1, #0xa
	bl Proc_Goto
_08096628:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096630
sub_8096630: @ 0x08096630
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #0xbc
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_809664C
sub_809664C: @ 0x0809664C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096668 @ =0x000002CF
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096668: .4byte 0x000002CF

	thumb_func_start sub_809666C
sub_809666C: @ 0x0809666C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096688 @ =0x000002D2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096688: .4byte 0x000002D2

	thumb_func_start sub_809668C
sub_809668C: @ 0x0809668C
	push {r7, lr}
	sub sp, #0x10
	add r7, sp, #0xc
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5b
	ldrb r1, [r2]
	movs r2, #0x48
	str r2, [sp]
	ldr r2, _080966C0 @ =sub_8096164
	str r2, [sp, #4]
	ldr r2, [r7]
	str r2, [sp, #8]
	movs r2, #5
	movs r3, #0
	bl sub_8097AC4
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080966C0: .4byte sub_8096164

	thumb_func_start sub_80966C4
sub_80966C4: @ 0x080966C4
	push {r4, r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	adds r0, r7, #4
	movs r1, #0
	strb r1, [r0]
	bl sub_8097BC0
	bl sub_8097D10
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r4, r0, #0
	bl sub_8097CF4
	lsls r2, r4, #0x10
	lsrs r1, r2, #0x10
	lsls r2, r0, #0x10
	lsrs r0, r2, #0x10
	cmp r1, r0
	beq _08096708
	adds r0, r7, #4
	movs r1, #1
	strb r1, [r0]
_08096708:
	bl sub_8097CF4
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5c
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	bl sub_8097D34
	ldr r1, [r7]
	adds r2, r1, #0
	adds r1, #0x5d
	ldrb r2, [r1]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r0
	adds r0, r2, #0
	strb r0, [r1]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	movs r0, #0x38
	bl sub_80415CC
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #0
	beq _080967B0
	adds r0, r7, #4
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _080967B0
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	ldr r2, [r7]
	ldr r0, [r2, #0x2c]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r0, #0x1c
	adds r3, r0, r2
	ldrh r2, [r3]
	movs r0, #0x38
	bl sub_80706FC
_080967B0:
	bl sub_8097DA8
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _080967BE
	b _0809693C
_080967BE:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x62
	ldrb r0, [r1]
	cmp r0, #0
	beq _080967FE
	ldr r1, _080967F8 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x81
	lsls r2, r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _080967F6
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	bl sub_807089C
_080967F6:
	b _0809693C
	.align 2, 0
_080967F8: .4byte gKeySt
_080967FC:
	.byte 0x38, 0xE0
_080967FE:
	ldr r1, _0809686C @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08096870
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5c
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5d
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #4
	adds r2, r1, #0
	subs r2, #0x48
	subs r1, r0, r2
	ldr r2, [r7]
	ldr r0, [r2, #0x2c]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r0, #0x1c
	adds r3, r0, r2
	ldrh r2, [r3]
	movs r0, #0x38
	bl sub_80706FC
	b _0809693C
	.align 2, 0
_0809686C: .4byte gKeySt
_08096870:
	ldr r1, _080968C0 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #1
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08096900
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5c
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r1, r0, r1
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_80975C8
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	bne _080968C4
	movs r1, #0xb9
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	ldr r0, [r7]
	movs r1, #4
	bl Proc_Goto
	b _080968FA
	.align 2, 0
_080968C0: .4byte gKeySt
_080968C4:
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5c
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r1, r0, r1
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_80975A0
	lsls r2, r0, #0x10
	lsrs r1, r2, #0x10
	adds r0, r1, #0
	bl SetTalkNumber
	ldr r1, _080968FC @ =0x000002DE
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	ldr r0, [r7]
	bl Proc_Break
_080968FA:
	b _0809693C
	.align 2, 0
_080968FC: .4byte 0x000002DE
_08096900:
	ldr r1, _08096934 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #2
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809693C
	ldr r0, _08096938 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08096928
	movs r0, #0x6b
	bl m4aSongNumStart
_08096928:
	ldr r0, [r7]
	movs r1, #8
	bl Proc_Goto
	b _0809693C
	.align 2, 0
_08096934: .4byte gKeySt
_08096938: .4byte gPlaySt
_0809693C:
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096944
sub_8096944: @ 0x08096944
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _08096964
	cmp r0, #1
	bgt _0809695E
	cmp r0, #0
	beq _080969FA
	b _080969FA
_0809695E:
	cmp r0, #2
	beq _080969FA
	b _080969FA
_08096964:
	movs r0, #0xb9
	movs r1, #8
	bl PlaySeDelayed
	ldr r0, _080969F0 @ =gAction
	ldrb r1, [r0, #0x11]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x14
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x11]
	bl GetGold
	str r0, [r7, #4]
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5c
	ldrb r1, [r2]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r1, r0, r1
	ldrh r2, [r1]
	adds r0, r2, #0
	bl sub_80975A0
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	ldr r1, [r7, #4]
	adds r0, r1, r0
	str r0, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl SetGold
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x5c
	ldrb r1, [r2]
	bl UnitRemoveItem
	ldr r0, [r7]
	bl sub_8095F5C
	ldr r0, [r7]
	bl sub_80972AC
	ldr r1, _080969F4 @ =gBg0Tm+0x1B6
	adds r0, r1, #0
	bl sub_8097084
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5b
	ldrb r0, [r1]
	cmp r0, #0
	bne _080969F8
	ldr r0, [r7]
	movs r1, #7
	bl Proc_Goto
	b _08096A04
	.align 2, 0
_080969F0: .4byte gAction
_080969F4: .4byte gBg0Tm+0x1B6
_080969F8:
	b _08096A04
_080969FA:
	ldr r0, [r7]
	movs r1, #4
	bl Proc_Goto
	b _08096A04
_08096A04:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096A0C
sub_8096A0C: @ 0x08096A0C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #0xb6
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096A28
sub_8096A28: @ 0x08096A28
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x5c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _08096A54 @ =0x000002C6
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096A54: .4byte 0x000002C6

	thumb_func_start sub_8096A58
sub_8096A58: @ 0x08096A58
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096A74 @ =0x000002C9
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096A74: .4byte 0x000002C9

	thumb_func_start sub_8096A78
sub_8096A78: @ 0x08096A78
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096A94 @ =0x000002E1
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_8095D88
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096A94: .4byte 0x000002E1

	thumb_func_start sub_8096A98
sub_8096A98: @ 0x08096A98
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08096AB8 @ =gUnk_08691190
	adds r0, r1, #0
	bl Proc_EndEach
	ldr r0, _08096ABC @ =ProcScr_Mu
	ldr r1, _08096AC0 @ =ShowMu
	bl Proc_ForEach
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096AB8: .4byte gUnk_08691190
_08096ABC: .4byte ProcScr_Mu
_08096AC0: .4byte ShowMu

	thumb_func_start sub_8096AC4
sub_8096AC4: @ 0x08096AC4
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08096AF4 @ =gBmSt
	ldrb r1, [r0, #4]
	movs r2, #0x10
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	bne _08096AEA
	ldr r1, _08096AF8 @ =gUnk_08690E88
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
_08096AEA:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096AF4: .4byte gBmSt
_08096AF8: .4byte gUnk_08690E88

	thumb_func_start sub_8096AFC
sub_8096AFC: @ 0x08096AFC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08096B24 @ =gBmSt
	ldrb r1, [r0, #4]
	movs r2, #0x10
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	bne _08096B2C
	ldr r1, _08096B28 @ =gUnk_08690EC0
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProcLocking
	b _08096B30
	.align 2, 0
_08096B24: .4byte gBmSt
_08096B28: .4byte gUnk_08690EC0
_08096B2C:
	bl ClearTalk
_08096B30:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8096B38
sub_8096B38: @ 0x08096B38
	push {r4, r7, lr}
	sub sp, #0xc
	add r7, sp, #4
	str r0, [r7]
	movs r0, #0x38
	movs r1, #0
	bl StartBgm
	ldr r0, _08096C5C @ =ProcScr_Mu
	ldr r1, _08096C60 @ =HideMu
	bl Proc_ForEach
	bl sub_8097638
	ldr r0, _08096C64 @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _08096C64 @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _08096C64 @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _08096C64 @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #3
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r1, #0
	movs r1, #2
	movs r2, #0
	bl InitTalk
	bl InitFaces
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x5c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x5e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x5f
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x5d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x60
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x62
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	movs r1, #0x90
	lsls r1, r1, #2
	adds r0, r1, #0
	movs r1, #3
	bl sub_809777C
	ldr r0, [r7]
	bl sub_8095D5C
	movs r1, #1
	str r1, [sp]
	movs r1, #0x20
	movs r2, #8
	movs r3, #3
	bl StartTalkFace
	ldr r0, _08096C68 @ =gUnk_082DC944
	ldr r1, _08096C6C @ =gBuf
	bl Decompress
	ldr r0, _08096C70 @ =gBg1Tm
	ldr r1, _08096C6C @ =gBuf
	movs r2, #0x80
	lsls r2, r2, #5
	bl TmApplyTsa_t
	movs r0, #0
	str r0, [sp]
	movs r0, #6
	movs r1, #8
	movs r2, #0x14
	movs r3, #0xc
	bl sub_8041358
	movs r0, #2
	bl EnableBgSync
	ldr r0, [r7]
	bl sub_8096F70
	movs r0, #0
	str r0, [r7, #4]
_08096C52:
	ldr r0, [r7, #4]
	cmp r0, #5
	ble _08096C74
	b _08096C94
	.align 2, 0
_08096C5C: .4byte ProcScr_Mu
_08096C60: .4byte HideMu
_08096C64: .4byte gDispIo
_08096C68: .4byte gUnk_082DC944
_08096C6C: .4byte gBuf
_08096C70: .4byte gBg1Tm
_08096C74:
	ldr r0, [r7, #4]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r2, _08096C90 @ =0x0203DCB8
	adds r1, r0, r2
	adds r0, r1, #0
	movs r1, #0x14
	bl InitText
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _08096C52
	.align 2, 0
_08096C90: .4byte 0x0203DCB8
_08096C94:
	ldr r0, [r7]
	bl sub_8097180
	ldr r0, _08096F50 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08096F50 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x40
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08096F50 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x38
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x48
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x30
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x98
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x33
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x32
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x38
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xc0
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F50 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08096F54 @ =gDispIo+0x3C
	ldr r1, _08096F54 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08096F58 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08096F54 @ =gDispIo+0x3C
	ldr r1, _08096F54 @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08096F54 @ =gDispIo+0x3C
	ldr r1, _08096F54 @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08096F5C @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08096F54 @ =gDispIo+0x3C
	ldr r1, _08096F54 @ =gDispIo+0x3C
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r4, _08096F60 @ =gUnk_08336D5C
	movs r0, #3
	bl GetBgChrOffset
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08096F64 @ =gBg3Tm
	ldr r1, _08096F68 @ =gUnk_083278EC
	movs r2, #0xc0
	lsls r2, r2, #8
	bl TmApplyTsa_t
	ldr r0, _08096F6C @ =gUnk_083278AC
	movs r1, #0xe0
	lsls r1, r1, #1
	movs r2, #0x40
	bl ApplyPaletteExt
	movs r0, #8
	bl EnableBgSync
	add sp, #0xc
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096F50: .4byte gDispIo
_08096F54: .4byte gDispIo+0x3C
_08096F58: .4byte 0x0000FFE0
_08096F5C: .4byte 0x0000E0FF
_08096F60: .4byte gUnk_08336D5C
_08096F64: .4byte gBg3Tm
_08096F68: .4byte gUnk_083278EC
_08096F6C: .4byte gUnk_083278AC

	thumb_func_start sub_8096F70
sub_8096F70: @ 0x08096F70
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r0, _08096FF8 @ =gUnk_082DCA2C
	ldr r1, _08096FFC @ =0x06014C00
	bl Decompress
	ldr r1, _08097000 @ =gUnk_08691190
	adds r0, r1, #0
	ldr r1, [r7]
	bl SpawnProc
	str r0, [r7, #4]
	ldr r0, [r7, #4]
	adds r1, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xac
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7, #4]
	adds r1, r0, #0
	adds r0, #0x66
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x2c
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, [r7, #4]
	adds r1, r0, #0
	adds r0, #0x68
	ldrh r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	ldr r3, _08097004 @ =0x00004260
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _08097008 @ =gUnk_0810FF78
	movs r1, #0xa0
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809700C @ =gBg0Tm+0x1B8
	adds r0, r1, #0
	bl sub_8097014
	ldr r1, _08097010 @ =gBg0Tm+0x1B6
	adds r0, r1, #0
	bl sub_8097084
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08096FF8: .4byte gUnk_082DCA2C
_08096FFC: .4byte 0x06014C00
_08097000: .4byte gUnk_08691190
_08097004: .4byte 0x00004260
_08097008: .4byte gUnk_0810FF78
_0809700C: .4byte gBg0Tm+0x1B8
_08097010: .4byte gBg0Tm+0x1B6

	thumb_func_start sub_8097014
sub_8097014: @ 0x08097014
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	ldr r1, _08097044 @ =0x03001570
	adds r0, r1, #0
	movs r1, #1
	bl InitText
	ldr r2, _08097048 @ =gUnk_0835CA44
	ldr r0, [r7]
	movs r1, #3
	bl PutString
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097044: .4byte 0x03001570
_08097048: .4byte gUnk_0835CA44

	thumb_func_start sub_809704C
sub_809704C: @ 0x0809704C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
_08097056:
	ldr r0, [r7, #4]
	cmp r0, #0
	bgt _0809705E
	b _0809707C
_0809705E:
	ldr r0, [r7]
	movs r1, #0
	strh r1, [r0]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r0, #0x40
	movs r1, #0
	strh r1, [r0]
	ldr r0, [r7]
	subs r1, r0, #2
	str r1, [r7]
	ldr r0, [r7, #4]
	subs r1, r0, #1
	str r1, [r7, #4]
	b _08097056
_0809707C:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8097084
sub_8097084: @ 0x08097084
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	ldr r0, [r7]
	movs r1, #6
	bl sub_809704C
	bl GetGold
	adds r2, r0, #0
	ldr r0, [r7]
	movs r1, #2
	bl PutNumber
	movs r0, #1
	bl EnableBgSync
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80970BC
sub_80970BC: @ 0x080970BC
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x60
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _0809710C @ =gUnk_08691138
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	ldr r1, [r7]
	str r1, [r0, #0x54]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	str r0, [r7, #4]
_080970FA:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	adds r1, r0, #5
	ldr r0, [r7, #4]
	cmp r0, r1
	blt _08097110
	b _08097150
	.align 2, 0
_0809710C: .4byte gUnk_08691138
_08097110:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _08097148 @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	movs r2, #0x1f
	ands r1, r2
	lsls r2, r1, #5
	adds r1, r2, #0
	lsls r2, r1, #1
	ldr r3, _0809714C @ =gBg2Tm+0xE
	adds r1, r2, r3
	bl PutBlankText
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080970FA
	.align 2, 0
_08097148: .4byte 0x0203DCB8
_0809714C: .4byte gBg2Tm+0xE
_08097150:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	adds r1, r0, #0
	adds r0, r1, #0
	subs r0, #0x48
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	movs r0, #4
	bl EnableBgSync
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8097180
sub_8097180: @ 0x08097180
	push {r4, r5, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	str r0, [r7, #4]
_0809719C:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	adds r1, r0, #5
	ldr r0, [r7, #4]
	cmp r0, r1
	blt _080971AE
	b _080971D8
_080971AE:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r2, _080971D4 @ =0x0203DCB8
	adds r1, r0, r2
	adds r0, r1, #0
	bl ClearText
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _0809719C
	.align 2, 0
_080971D4: .4byte 0x0203DCB8
_080971D8:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	str r0, [r7, #4]
_080971E2:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	adds r1, r0, #5
	ldr r0, [r7, #4]
	cmp r0, r1
	blt _080971F4
	b _08097250
_080971F4:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	ldr r0, [r7]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x30
	adds r1, r0, r1
	ldrh r0, [r1]
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	cmp r0, #0
	bne _08097218
	b _08097250
_08097218:
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _08097248 @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #8]
	ldr r3, [r7]
	ldr r2, [r3, #0x2c]
	ldr r3, [r7, #4]
	adds r4, r3, #0
	lsls r3, r4, #1
	movs r4, #0x1f
	ands r3, r4
	lsls r4, r3, #5
	adds r3, r4, #0
	lsls r4, r3, #1
	ldr r5, _0809724C @ =gBg2Tm+0xE
	adds r3, r4, r5
	bl sub_8097444
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080971E2
	.align 2, 0
_08097248: .4byte 0x0203DCB8
_0809724C: .4byte gBg2Tm+0xE
_08097250:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x5f
	ldrb r0, [r1]
	adds r1, r0, #0
	lsls r0, r1, #4
	adds r1, r0, #0
	adds r0, r1, #0
	subs r0, #0x48
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	movs r0, #4
	bl EnableBgSync
	add sp, #0x10
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8097280
sub_8097280: @ 0x08097280
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	bl sub_80961F4
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	bl sub_8097180
	ldr r0, [r7]
	bl Proc_Break
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80972AC
sub_80972AC: @ 0x080972AC
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	adds r1, r0, #0
	adds r0, #0x60
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #1
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r1, _080972F4 @ =gUnk_08691148
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	ldr r1, [r7]
	str r1, [r0, #0x54]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	movs r0, #0
	str r0, [r7, #4]
_080972EC:
	ldr r0, [r7, #4]
	cmp r0, #4
	ble _080972F8
	b _08097338
	.align 2, 0
_080972F4: .4byte gUnk_08691148
_080972F8:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _08097330 @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	movs r2, #0x1f
	ands r1, r2
	lsls r2, r1, #5
	adds r1, r2, #0
	lsls r2, r1, #1
	ldr r3, _08097334 @ =gBg2Tm+0xE
	adds r1, r2, r3
	bl PutBlankText
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080972EC
	.align 2, 0
_08097330: .4byte 0x0203DCB8
_08097334: .4byte gBg2Tm+0xE
_08097338:
	ldr r2, _08097350 @ =0x0000FFB8
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	movs r0, #4
	bl EnableBgSync
	add sp, #0x10
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097350: .4byte 0x0000FFB8

	thumb_func_start sub_8097354
sub_8097354: @ 0x08097354
	push {r4, r5, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	movs r0, #0
	str r0, [r7, #4]
_0809736A:
	ldr r0, [r7, #4]
	cmp r0, #4
	ble _08097372
	b _0809739C
_08097372:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r2, _08097398 @ =0x0203DCB8
	adds r1, r0, r2
	adds r0, r1, #0
	bl ClearText
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _0809736A
	.align 2, 0
_08097398: .4byte 0x0203DCB8
_0809739C:
	movs r0, #0
	str r0, [r7, #4]
_080973A0:
	ldr r0, [r7, #4]
	cmp r0, #4
	ble _080973A8
	b _08097408
_080973A8:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	movs r1, #6
	bl DivRem
	str r0, [r7, #0xc]
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r1, [r7, #4]
	adds r2, r1, #0
	lsls r1, r2, #1
	adds r0, #0x1c
	adds r1, r0, r1
	ldrh r0, [r1]
	str r0, [r7, #8]
	ldr r0, [r7, #8]
	cmp r0, #0
	bne _080973CE
	b _08097408
_080973CE:
	ldr r0, [r7, #0xc]
	adds r1, r0, #0
	lsls r0, r1, #3
	ldr r1, _08097400 @ =0x0203DCB8
	adds r0, r0, r1
	ldr r1, [r7, #8]
	ldr r3, [r7]
	ldr r2, [r3, #0x2c]
	ldr r3, [r7, #4]
	adds r4, r3, #0
	lsls r3, r4, #1
	movs r4, #0x1f
	ands r3, r4
	lsls r4, r3, #5
	adds r3, r4, #0
	lsls r4, r3, #1
	ldr r5, _08097404 @ =gBg2Tm+0xE
	adds r3, r4, r5
	bl sub_80974A0
	ldr r0, [r7, #4]
	adds r1, r0, #1
	str r1, [r7, #4]
	b _080973A0
	.align 2, 0
_08097400: .4byte 0x0203DCB8
_08097404: .4byte gBg2Tm+0xE
_08097408:
	movs r0, #4
	bl EnableBgSync
	add sp, #0x10
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8097418
sub_8097418: @ 0x08097418
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	bl sub_809668C
	ldr r0, [r7]
	ldr r1, [r0, #0x54]
	adds r0, r1, #0
	bl sub_8097354
	ldr r0, [r7]
	bl Proc_Break
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8097444
sub_8097444: @ 0x08097444
	push {r4, r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	bl sub_809750C
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	str r0, [r7, #0x10]
	ldr r4, [r7, #4]
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	bl IsItemDisplayUseable
	lsls r1, r0, #0x18
	asrs r2, r1, #0x18
	ldr r3, [r7, #0xc]
	ldr r0, [r7]
	adds r1, r4, #0
	bl sub_8016694
	ldr r0, [r7, #0xc]
	adds r4, r0, #0
	adds r4, #0x22
	bl GetGold
	ldr r1, [r7, #0x10]
	cmp r0, r1
	blt _0809748C
	movs r1, #2
	b _0809748E
_0809748C:
	movs r1, #1
_0809748E:
	ldr r2, [r7, #0x10]
	adds r0, r4, #0
	bl PutNumber
	add sp, #0x14
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80974A0
sub_80974A0: @ 0x080974A0
	push {r4, r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r4, [r7, #4]
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	bl IsItemDisplayUseable
	lsls r1, r0, #0x18
	asrs r2, r1, #0x18
	ldr r3, [r7, #0xc]
	ldr r0, [r7]
	adds r1, r4, #0
	bl sub_8016694
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl sub_80975C8
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _080974F2
	ldr r0, [r7, #0xc]
	adds r4, r0, #0
	adds r4, #0x22
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl sub_80975A0
	lsls r1, r0, #0x10
	lsrs r2, r1, #0x10
	adds r0, r4, #0
	movs r1, #2
	bl PutNumber
	b _080974FE
_080974F2:
	ldr r3, _08097508 @ =gUnk_0835CA78
	ldr r0, [r7]
	movs r1, #0x5c
	movs r2, #2
	bl Text_InsertDrawString
_080974FE:
	add sp, #0x10
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097508: .4byte gUnk_0835CA78

	thumb_func_start sub_809750C
sub_809750C: @ 0x0809750C
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl GetItemValue
	str r0, [r7, #8]
	ldr r0, _0809757C @ =gBmSt
	ldrb r1, [r0, #4]
	movs r2, #0x10
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x18
	lsrs r0, r1, #0x18
	cmp r0, #0
	beq _08097558
	ldr r0, [r7, #8]
	bl __floatsidf
	adds r3, r1, #0
	adds r2, r0, #0
	adds r1, r3, #0
	adds r0, r2, #0
	ldr r2, _08097580 @ =0x3FF80000
	ldr r3, _08097584 @ =0x00000000
	bl __muldf3
	adds r3, r1, #0
	adds r2, r0, #0
	adds r1, r3, #0
	adds r0, r2, #0
	bl __fixdfsi
	str r0, [r7, #8]
_08097558:
	ldr r0, [r7]
	movs r1, #0x6e
	bl UnitHasItem
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _0809758A
	ldr r0, [r7, #8]
	asrs r1, r0, #0x1f
	lsrs r2, r1, #0x1f
	adds r1, r0, r2
	asrs r0, r1, #1
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r1, #0
	b _08097596
	.align 2, 0
_0809757C: .4byte gBmSt
_08097580: .4byte 0x3FF80000
_08097584: .4byte 0x00000000
_08097588:
	.byte 0x05, 0xE0
_0809758A:
	ldr r1, [r7, #8]
	adds r0, r1, #0
	lsls r2, r0, #0x10
	lsrs r1, r2, #0x10
	adds r0, r1, #0
	b _08097596
_08097596:
	add sp, #0xc
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_80975A0
sub_80975A0: @ 0x080975A0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl GetItemValue
	asrs r1, r0, #0x1f
	lsrs r2, r1, #0x1f
	adds r1, r0, r2
	asrs r0, r1, #1
	adds r1, r0, #0
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x10
	adds r0, r1, #0
	b _080975C0
_080975C0:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80975C8
sub_80975C8: @ 0x080975C8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl GetItemAttributes
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080975E2
	movs r0, #0
	b _080975F8
_080975E2:
	ldr r0, [r7]
	bl sub_80975A0
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	bne _080975F4
	movs r0, #0
	b _080975F8
_080975F4:
	movs r0, #1
	b _080975F8
_080975F8:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8097600
sub_8097600: @ 0x08097600
	push {r4, r5, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	adds r1, #0x64
	movs r2, #0
	ldrsh r0, [r1, r2]
	ldr r2, [r7]
	adds r1, r2, #0
	adds r2, #0x66
	movs r3, #0
	ldrsh r1, [r2, r3]
	ldr r2, _08097634 @ =gUnk_08691158
	ldr r4, [r7]
	adds r3, r4, #0
	adds r4, #0x68
	movs r5, #0
	ldrsh r3, [r4, r5]
	bl PutOamHiRam
	add sp, #4
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097634: .4byte gUnk_08691158

	thumb_func_start sub_8097638
sub_8097638: @ 0x08097638
	push {r7, lr}
	mov r7, sp
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0xbf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08097714 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl SetBgOffset
	ldr r1, _08097718 @ =gBg0Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r1, _0809771C @ =gBg1Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r1, _08097720 @ =gBg2Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	ldr r1, _08097724 @ =gBg3Tm
	adds r0, r1, #0
	movs r1, #0
	bl TmFill
	movs r0, #0xf
	bl EnableBgSync
	bl ResetText
	bl LoadUiFrameGraphics
	bl InitIcons
	movs r0, #4
	bl ApplyIconPalettes
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_8070E70
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097714: .4byte gDispIo
_08097718: .4byte gBg0Tm
_0809771C: .4byte gBg1Tm
_08097720: .4byte gBg2Tm
_08097724: .4byte gBg3Tm

	thumb_func_start sub_8097728
sub_8097728: @ 0x08097728
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl sub_809773C
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_809773C
sub_809773C: @ 0x0809773C
	push {r7, lr}
	mov r7, sp
	bl sub_8097DD8
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _0809775A
	movs r2, #0xc9
	lsls r2, r2, #6
	movs r0, #0x78
	movs r1, #0x40
	movs r3, #1
	bl sub_80977C0
_0809775A:
	bl sub_8097DFC
	lsls r1, r0, #0x18
	asrs r0, r1, #0x18
	cmp r0, #0
	beq _08097774
	movs r2, #0xc9
	lsls r2, r2, #6
	movs r0, #0x78
	movs r1, #0x98
	movs r3, #0
	bl sub_80977C0
_08097774:
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809777C
sub_809777C: @ 0x0809777C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	ldr r0, _080977B4 @ =gUnk_08320E18
	ldr r1, [r7]
	lsls r2, r1, #0x16
	lsrs r1, r2, #0x16
	lsls r2, r1, #5
	ldr r3, _080977B8 @ =0x06010000
	adds r1, r2, r3
	bl Decompress
	ldr r0, _080977BC @ =gUnk_08319E88
	ldr r2, [r7, #4]
	adds r1, r2, #0
	adds r1, #0x10
	adds r2, r1, #0
	lsls r1, r2, #5
	movs r2, #0x20
	bl ApplyPaletteExt
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080977B4: .4byte gUnk_08320E18
_080977B8: .4byte 0x06010000
_080977BC: .4byte gUnk_08319E88

	thumb_func_start sub_80977C0
sub_80977C0: @ 0x080977C0
	push {r4, r7, lr}
	sub sp, #0x1c
	add r7, sp, #4
	str r0, [r7]
	str r1, [r7, #4]
	adds r0, r2, #0
	str r3, [r7, #0xc]
	adds r1, r7, #0
	adds r1, #8
	strh r0, [r1]
	bl GetGameTime
	adds r1, r0, #0
	adds r0, r1, #0
	movs r1, #0x28
	bl DivRem
	str r0, [r7, #0x10]
	ldr r1, [r7, #0x10]
	adds r0, r1, #0
	movs r1, #8
	bl Div
	adds r1, r0, #0
	lsls r0, r1, #1
	str r0, [r7, #0x10]
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bne _08097802
	movs r0, #0x80
	lsls r0, r0, #6
	str r0, [r7, #0x14]
	b _08097806
_08097802:
	movs r0, #0
	str r0, [r7, #0x14]
_08097806:
	ldr r0, [r7]
	ldr r2, [r7, #0x14]
	adds r1, r0, #0
	orrs r1, r2
	ldr r2, [r7, #4]
	ldr r3, _0809782C @ =Sprite_16x8
	adds r0, r7, #0
	adds r0, #8
	ldrh r4, [r0]
	ldr r0, [r7, #0x10]
	adds r4, r4, r0
	str r4, [sp]
	movs r0, #2
	bl PutSpriteExt
	add sp, #0x1c
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809782C: .4byte Sprite_16x8

	thumb_func_start sub_8097830
sub_8097830: @ 0x08097830
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	movs r0, #0xb9
	movs r1, #8
	bl PlaySeDelayed
	ldr r0, _080978A4 @ =gAction
	ldrb r1, [r0, #0x11]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x14
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x11]
	bl GetGold
	str r0, [r7, #4]
	ldr r1, [r7]
	ldr r0, [r1, #0x2c]
	ldr r1, [r7]
	ldr r3, [r7]
	adds r2, r3, #0
	adds r3, #0x5c
	ldrb r2, [r3]
	adds r3, r2, #0
	lsls r2, r3, #1
	adds r1, #0x30
	adds r2, r1, r2
	ldrh r1, [r2]
	bl sub_809750C
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	ldr r1, [r7, #4]
	subs r0, r1, r0
	str r0, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl SetGold
	ldr r0, [r7]
	bl sub_8095F5C
	ldr r0, [r7]
	bl sub_8097180
	ldr r1, _080978A8 @ =gBg0Tm+0x1B6
	adds r0, r1, #0
	bl sub_8097084
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080978A4: .4byte gAction
_080978A8: .4byte gBg0Tm+0x1B6

	thumb_func_start sub_80978AC
sub_80978AC: @ 0x080978AC
	push {r7, lr}
	sub sp, #0x10
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	adds r0, r2, #0
	adds r1, r7, #0
	adds r1, #8
	strb r0, [r1]
	ldr r0, [r7]
	cmp r0, #0
	bge _080978C8
	movs r0, #0
	str r0, [r7]
_080978C8:
	ldr r0, [r7]
	ldr r1, [r7, #4]
	cmp r0, r1
	blt _080978D6
	ldr r0, [r7, #4]
	subs r1, r0, #1
	str r1, [r7]
_080978D6:
	ldr r0, [r7]
	str r0, [r7, #0xc]
	ldr r1, _08097920 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x40
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809792C
	ldr r0, [r7]
	cmp r0, #0
	bne _08097924
	adds r0, r7, #0
	adds r0, #8
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _0809791E
	ldr r1, _08097920 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x40
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809791E
	ldr r0, [r7, #4]
	subs r1, r0, #1
	str r1, [r7]
_0809791E:
	b _0809792A
	.align 2, 0
_08097920: .4byte gKeySt
_08097924:
	ldr r0, [r7]
	subs r1, r0, #1
	str r1, [r7]
_0809792A:
	b _0809797E
_0809792C:
	ldr r1, _08097974 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	movs r2, #0x80
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _0809797E
	ldr r1, [r7, #4]
	subs r0, r1, #1
	ldr r1, [r7]
	cmp r1, r0
	bne _08097978
	adds r0, r7, #0
	adds r0, #8
	movs r1, #0
	ldrsb r1, [r0, r1]
	cmp r1, #0
	beq _08097972
	ldr r1, _08097974 @ =gKeySt
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0x80
	adds r0, r1, #0
	ands r0, r2
	adds r2, r0, #0
	lsls r1, r2, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #0
	beq _08097972
	movs r0, #0
	str r0, [r7]
_08097972:
	b _0809797E
	.align 2, 0
_08097974: .4byte gKeySt
_08097978:
	ldr r0, [r7]
	adds r1, r0, #1
	str r1, [r7]
_0809797E:
	ldr r0, [r7, #0xc]
	ldr r1, [r7]
	cmp r0, r1
	beq _08097998
	ldr r0, _080979A0 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08097998
	movs r0, #0x66
	bl m4aSongNumStart
_08097998:
	ldr r1, [r7]
	adds r0, r1, #0
	b _080979A4
	.align 2, 0
_080979A0: .4byte gPlaySt
_080979A4:
	add sp, #0x10
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80979AC
sub_80979AC: @ 0x080979AC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _080979C4 @ =0x0203DD04
	ldr r1, [r7]
	str r1, [r0]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080979C4: .4byte 0x0203DD04

	thumb_func_start sub_80979C8
sub_80979C8: @ 0x080979C8
	push {r7, lr}
	sub sp, #0x14
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	str r3, [r7, #0xc]
	ldr r0, _080979F0 @ =0x0203DD04
	ldr r1, [r0]
	str r1, [r7, #0x10]
	ldr r0, _080979F0 @ =0x0203DD04
	ldr r1, [r7]
	str r1, [r0]
	ldr r0, [r7]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	bne _080979F4
	movs r0, #0
	b _08097A4A
	.align 2, 0
_080979F0: .4byte 0x0203DD04
_080979F4:
	ldr r0, [r7, #8]
	ldr r1, [r7, #4]
	cmp r0, r1
	ble _08097A00
	movs r0, #0
	b _08097A4A
_08097A00:
	ldr r0, [r7]
	ldr r1, [r7, #0x10]
	cmp r0, r1
	bge _08097A24
	ldr r0, [r7, #0xc]
	cmp r0, #0
	bne _08097A12
	movs r0, #0
	b _08097A4A
_08097A12:
	ldr r0, [r7]
	ldr r1, [r7, #0xc]
	subs r0, r0, r1
	cmp r0, #0
	bgt _08097A22
	movs r0, #1
	rsbs r0, r0, #0
	b _08097A4A
_08097A22:
	b _08097A46
_08097A24:
	ldr r0, [r7, #8]
	ldr r1, [r7, #0xc]
	adds r0, r0, r1
	ldr r1, [r7, #4]
	cmp r0, r1
	bne _08097A34
	movs r0, #0
	b _08097A4A
_08097A34:
	ldr r0, [r7]
	ldr r1, [r7, #0xc]
	subs r0, r0, r1
	ldr r2, [r7, #8]
	subs r1, r2, #1
	cmp r0, r1
	blt _08097A46
	movs r0, #1
	b _08097A4A
_08097A46:
	movs r0, #0
	b _08097A4A
_08097A4A:
	add sp, #0x14
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097A54
sub_8097A54: @ 0x08097A54
	push {r7, lr}
	sub sp, #0xc
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	str r2, [r7, #8]
	ldr r0, [r7]
	ldr r1, [r7, #4]
	subs r0, r0, r1
	cmp r0, #0
	blt _08097A78
	ldr r0, [r7]
	ldr r1, [r7, #4]
	subs r0, r0, r1
	ldr r1, [r7, #8]
	cmp r0, r1
	blt _08097A86
	b _08097A8C
_08097A78:
	ldr r0, [r7, #4]
	ldr r1, [r7]
	subs r0, r0, r1
	ldr r1, [r7, #8]
	cmp r0, r1
	blt _08097A86
	b _08097A8C
_08097A86:
	ldr r1, [r7, #4]
	adds r0, r1, #0
	b _08097ABA
_08097A8C:
	ldr r0, [r7, #4]
	ldr r1, [r7]
	subs r0, r0, r1
	cmp r0, #0
	bgt _08097AAC
	ldr r0, [r7]
	ldr r1, [r7, #4]
	ldr r2, [r7]
	subs r1, r1, r2
	cmp r1, #0
	bge _08097AAA
	ldr r1, [r7, #8]
	adds r2, r1, #0
	rsbs r1, r2, #0
	adds r0, r0, r1
_08097AAA:
	b _08097AB2
_08097AAC:
	ldr r1, [r7]
	ldr r2, [r7, #8]
	adds r0, r1, r2
_08097AB2:
	str r0, [r7]
	ldr r1, [r7]
	adds r0, r1, #0
	b _08097ABA
_08097ABA:
	add sp, #0xc
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097AC4
sub_8097AC4: @ 0x08097AC4
	push {r4, r5, r7, lr}
	sub sp, #8
	mov r7, sp
	adds r5, r0, #0
	adds r4, r1, #0
	adds r1, r2, #0
	adds r0, r3, #0
	adds r2, r7, #0
	adds r3, r5, #0
	strh r3, [r2]
	adds r2, r7, #2
	adds r3, r4, #0
	strh r3, [r2]
	adds r2, r7, #4
	strh r1, [r2]
	adds r1, r7, #6
	strh r0, [r1]
	adds r0, r7, #0
	ldrh r1, [r0]
	adds r0, r1, #0
	bl sub_80979AC
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	adds r1, r7, #0
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	adds r1, r7, #2
	ldrh r2, [r0, #2]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #2]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	adds r1, r7, #4
	ldrh r2, [r0, #4]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #4]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	adds r1, r7, #6
	ldrh r2, [r0, #6]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	ldrh r1, [r1]
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #6]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	ldrh r1, [r0, #8]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x10
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #8]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	ldrh r1, [r0, #0xa]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #4
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0xa]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, [r7, #0x1c]
	str r1, [r0, #0x14]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, [r7, #0x20]
	str r1, [r0, #0x18]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, [r7, #0x18]
	rsbs r2, r1, #0
	str r2, [r0, #0x10]
	ldr r1, _08097BBC @ =gUnk_086911A8
	ldr r0, [r1]
	adds r1, r7, #6
	ldrh r2, [r1]
	adds r3, r2, #0
	lsls r1, r3, #4
	ldrh r2, [r0, #0xc]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0xc]
	add sp, #8
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097BBC: .4byte gUnk_086911A8

	thumb_func_start sub_8097BC0
sub_8097BC0: @ 0x08097BC0
	push {r4, r7, lr}
	mov r7, sp
	ldr r0, _08097C1C @ =gUnk_086911A8
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r2, _08097C1C @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #2]
	adds r1, r2, #0
	movs r2, #0
	bl sub_80978AC
	adds r1, r0, #0
	ldr r2, _08097C1C @ =gUnk_086911A8
	ldr r0, [r2]
	ldrh r2, [r0]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _08097C1C @ =gUnk_086911A8
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r1, _08097C1C @ =gUnk_086911A8
	ldr r2, [r1]
	ldrh r1, [r2, #2]
	ldr r2, _08097C1C @ =gUnk_086911A8
	ldr r3, [r2]
	ldrh r2, [r3, #4]
	ldr r3, _08097C1C @ =gUnk_086911A8
	ldr r4, [r3]
	ldrh r3, [r4, #6]
	bl sub_80979C8
	cmp r0, #0
	beq _08097C26
	cmp r0, #0
	bgt _08097C20
	movs r1, #1
	cmn r0, r1
	beq _08097C74
	b _08097C26
	.align 2, 0
_08097C1C: .4byte gUnk_086911A8
_08097C20:
	cmp r0, #1
	beq _08097C28
	b _08097C26
_08097C26:
	b _08097CB4
_08097C28:
	ldr r1, _08097C70 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, _08097C70 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r2, _08097C70 @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #6]
	adds r1, r2, #1
	ldrh r2, [r0, #6]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #6]
	ldr r1, _08097C70 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, _08097C70 @ =gUnk_086911A8
	ldr r2, [r1]
	ldr r1, [r2, #0x18]
	ldr r2, _08097C70 @ =gUnk_086911A8
	ldr r3, [r2]
	ldrh r2, [r3, #6]
	ldr r4, _08097C70 @ =gUnk_086911A8
	ldr r3, [r4]
	ldrh r4, [r3, #4]
	adds r3, r2, r4
	subs r2, r3, #1
	ldr r3, [r0, #0x14]
	adds r0, r1, #0
	adds r1, r2, #0
	bl _call_via_r3
	b _08097CB4
	.align 2, 0
_08097C70: .4byte gUnk_086911A8
_08097C74:
	ldr r1, _08097CB0 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, _08097CB0 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r2, _08097CB0 @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #6]
	subs r1, r2, #1
	ldrh r2, [r0, #6]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #6]
	ldr r1, _08097CB0 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r1, _08097CB0 @ =gUnk_086911A8
	ldr r2, [r1]
	ldr r1, [r2, #0x18]
	ldr r2, _08097CB0 @ =gUnk_086911A8
	ldr r3, [r2]
	ldrh r2, [r3, #6]
	ldr r3, [r0, #0x14]
	adds r0, r1, #0
	adds r1, r2, #0
	bl _call_via_r3
	b _08097CB4
	.align 2, 0
_08097CB0: .4byte gUnk_086911A8
_08097CB4:
	ldr r0, _08097CF0 @ =gUnk_086911A8
	ldr r1, [r0]
	ldrh r0, [r1, #0xc]
	ldr r1, _08097CF0 @ =gUnk_086911A8
	ldr r2, [r1]
	ldrh r1, [r2, #6]
	ldr r3, _08097CF0 @ =gUnk_086911A8
	ldr r2, [r3]
	ldrh r3, [r2, #8]
	muls r1, r3, r1
	ldr r2, _08097CF0 @ =gUnk_086911A8
	ldr r3, [r2]
	ldrh r2, [r3, #0xa]
	bl sub_8097A54
	adds r1, r0, #0
	ldr r2, _08097CF0 @ =gUnk_086911A8
	ldr r0, [r2]
	ldrh r2, [r0, #0xc]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0xc]
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097CF0: .4byte gUnk_086911A8

	thumb_func_start sub_8097CF4
sub_8097CF4: @ 0x08097CF4
	push {r7, lr}
	mov r7, sp
	ldr r1, _08097D04 @ =gUnk_086911A8
	ldr r0, [r1]
	ldrh r1, [r0]
	adds r0, r1, #0
	b _08097D08
	.align 2, 0
_08097D04: .4byte gUnk_086911A8
_08097D08:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097D10
sub_8097D10: @ 0x08097D10
	push {r7, lr}
	mov r7, sp
	ldr r1, _08097D28 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r2, _08097D28 @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #0xc]
	ldr r0, [r0, #0x10]
	adds r1, r2, r0
	adds r0, r1, #0
	b _08097D2C
	.align 2, 0
_08097D28: .4byte gUnk_086911A8
_08097D2C:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097D34
sub_8097D34: @ 0x08097D34
	push {r7, lr}
	mov r7, sp
	ldr r1, _08097D44 @ =gUnk_086911A8
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	adds r0, r1, #0
	b _08097D48
	.align 2, 0
_08097D44: .4byte gUnk_086911A8
_08097D48:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097D50
sub_8097D50: @ 0x08097D50
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08097D78 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	ldrh r2, [r0, #8]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #8]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097D78: .4byte gUnk_086911A8

	thumb_func_start sub_8097D7C
sub_8097D7C: @ 0x08097D7C
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _08097DA4 @ =gUnk_086911A8
	ldr r0, [r1]
	ldr r2, [r7]
	adds r1, r2, #0
	ldrh r2, [r0, #0xa]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0, #0xa]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097DA4: .4byte gUnk_086911A8

	thumb_func_start sub_8097DA8
sub_8097DA8: @ 0x08097DA8
	push {r7, lr}
	mov r7, sp
	ldr r0, _08097DC8 @ =gUnk_086911A8
	ldr r1, [r0]
	ldrh r0, [r1, #0xc]
	ldr r1, _08097DC8 @ =gUnk_086911A8
	ldr r2, [r1]
	ldrh r1, [r2, #6]
	ldr r3, _08097DC8 @ =gUnk_086911A8
	ldr r2, [r3]
	ldrh r3, [r2, #8]
	muls r1, r3, r1
	cmp r0, r1
	beq _08097DCC
	movs r0, #1
	b _08097DD0
	.align 2, 0
_08097DC8: .4byte gUnk_086911A8
_08097DCC:
	movs r0, #0
	b _08097DD0
_08097DD0:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097DD8
sub_8097DD8: @ 0x08097DD8
	push {r7, lr}
	mov r7, sp
	ldr r1, _08097DEC @ =gUnk_086911A8
	ldr r0, [r1]
	ldrh r1, [r0, #6]
	cmp r1, #0
	beq _08097DF0
	movs r0, #1
	b _08097DF4
	.align 2, 0
_08097DEC: .4byte gUnk_086911A8
_08097DF0:
	movs r0, #0
	b _08097DF4
_08097DF4:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097DFC
sub_8097DFC: @ 0x08097DFC
	push {r7, lr}
	mov r7, sp
	ldr r0, _08097E1C @ =gUnk_086911A8
	ldr r1, [r0]
	ldrh r0, [r1, #6]
	ldr r2, _08097E1C @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #4]
	adds r0, r0, r2
	ldr r2, _08097E1C @ =gUnk_086911A8
	ldr r1, [r2]
	ldrh r2, [r1, #2]
	cmp r0, r2
	bge _08097E20
	movs r0, #1
	b _08097E24
	.align 2, 0
_08097E1C: .4byte gUnk_086911A8
_08097E20:
	movs r0, #0
	b _08097E24
_08097E24:
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097E2C
sub_8097E2C: @ 0x08097E2C
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	ldr r0, _08097E6C @ =gMPlayTable
	ldr r2, _08097E70 @ =gSongTable
	adds r1, r2, #0
	movs r1, #0xe6
	lsls r1, r1, #1
	adds r2, r2, r1
	ldrh r1, [r2]
	adds r3, r1, #0
	lsls r2, r3, #1
	adds r2, r2, r1
	lsls r1, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	str r1, [r7, #4]
	ldr r0, [r7, #4]
	ldr r1, [r0, #4]
	lsls r2, r1, #0x10
	lsrs r0, r2, #0x10
	cmp r0, #0
	bne _08097E76
	ldr r0, [r7, #4]
	ldr r1, [r0, #4]
	lsrs r2, r1, #0x1f
	lsls r0, r2, #0x1f
	cmp r0, #0
	bne _08097E76
	movs r0, #0
	b _08097E7A
	.align 2, 0
_08097E6C: .4byte gMPlayTable
_08097E70: .4byte gSongTable
_08097E74:
	.byte 0x01, 0xE0
_08097E76:
	movs r0, #1
	b _08097E7A
_08097E7A:
	add sp, #8
	pop {r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8097E84
sub_8097E84: @ 0x08097E84
	push {r7, lr}
	mov r7, sp
	ldr r0, _08097EA4 @ =gActiveUnit
	ldr r1, [r0]
	adds r0, r1, #0
	bl ArenaBegin
	ldr r1, _08097EA8 @ =gUnk_086911AC
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097EA4: .4byte gActiveUnit
_08097EA8: .4byte gUnk_086911AC

	thumb_func_start sub_8097EAC
sub_8097EAC: @ 0x08097EAC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	ldr r1, _08097EC8 @ =gUnk_0869130C
	adds r0, r1, #0
	movs r1, #3
	bl SpawnProc
	str r0, [r7]
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097EC8: .4byte gUnk_0869130C

	thumb_func_start sub_8097ECC
sub_8097ECC: @ 0x08097ECC
	push {r4, r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	ldr r0, _08098220 @ =ProcScr_Mu
	ldr r1, _08098224 @ =HideMu
	bl Proc_ForEach
	bl sub_8097638
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #0xc]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0xc]
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #0x10]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	movs r3, #2
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x10]
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #0x14]
	movs r2, #0xfc
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x14]
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #0x18]
	movs r2, #3
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x18]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r1, #0
	movs r1, #2
	movs r2, #0
	bl InitTalk
	bl InitFaces
	movs r0, #1
	str r0, [sp]
	movs r0, #0xba
	movs r1, #0x20
	movs r2, #8
	movs r3, #3
	bl StartTalkFace
	ldr r0, _0809822C @ =gUnk_082DC944
	ldr r1, _08098230 @ =gBuf
	bl Decompress
	ldr r0, _08098234 @ =gBg1Tm
	ldr r1, _08098230 @ =gBuf
	movs r2, #0x80
	lsls r2, r2, #5
	bl TmApplyTsa_t
	ldr r1, _08098238 @ =gBg1Tm+0x200
	adds r0, r1, #0
	movs r1, #0x1e
	movs r2, #0xc
	movs r3, #0
	bl TmFillRect_t
	movs r0, #2
	bl EnableBgSync
	ldr r0, [r7]
	bl sub_8096F70
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x40
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08098228 @ =gDispIo
	ldrb r1, [r0, #1]
	movs r2, #0x7f
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #1]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #4
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #1
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #2
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xfb
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #8
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0x10
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2d
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x58
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x31
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x48
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2c
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x30
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x98
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2f
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x33
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x2e
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0xf0
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x32
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x38
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x34
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x35
	ldrb r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x36
	ldrb r1, [r0]
	movs r2, #0xdf
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x3c
	ldrb r1, [r0]
	movs r2, #0xc0
	orrs r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x44
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x45
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _08098228 @ =gDispIo
	adds r1, r0, #0
	adds r0, #0x46
	ldrb r1, [r0]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0]
	ldr r0, _0809823C @ =gDispIo+0x3C
	ldr r1, _0809823C @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08098240 @ =0x0000FFE0
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0809823C @ =gDispIo+0x3C
	ldr r1, _0809823C @ =gDispIo+0x3C
	ldrh r2, [r1]
	movs r3, #8
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0809823C @ =gDispIo+0x3C
	ldr r1, _0809823C @ =gDispIo+0x3C
	ldrh r2, [r1]
	ldr r3, _08098244 @ =0x0000E0FF
	adds r1, r2, #0
	ands r1, r3
	adds r2, r1, #0
	strh r2, [r0]
	ldr r0, _0809823C @ =gDispIo+0x3C
	ldr r1, _0809823C @ =gDispIo+0x3C
	ldrh r2, [r1]
	strh r2, [r0]
	ldr r4, _08098248 @ =Img_Background_082D80B0
	movs r0, #3
	bl GetBgChrOffset
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r0, r2
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809824C @ =gBg3Tm
	ldr r1, _08098250 @ =Tsa_Background_082DAC8C
	movs r2, #0xc0
	lsls r2, r2, #8
	bl TmApplyTsa_t
	ldr r0, _08098254 @ =Pal_Background_082DB140
	movs r1, #0xc0
	lsls r1, r1, #1
	movs r2, #0x80
	bl ApplyPaletteExt
	movs r0, #8
	bl EnableBgSync
	add sp, #8
	pop {r4, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098220: .4byte ProcScr_Mu
_08098224: .4byte HideMu
_08098228: .4byte gDispIo
_0809822C: .4byte gUnk_082DC944
_08098230: .4byte gBuf
_08098234: .4byte gBg1Tm
_08098238: .4byte gBg1Tm+0x200
_0809823C: .4byte gDispIo+0x3C
_08098240: .4byte 0x0000FFE0
_08098244: .4byte 0x0000E0FF
_08098248: .4byte Img_Background_082D80B0
_0809824C: .4byte gBg3Tm
_08098250: .4byte Tsa_Background_082DAC8C
_08098254: .4byte Pal_Background_082DB140

	thumb_func_start sub_8098258
sub_8098258: @ 0x08098258
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, _08098284 @ =gArenaSt
	ldr r1, [r0]
	ldr r2, _08098288 @ =gBattleUnitA
	adds r0, r1, #0
	adds r1, r2, #0
	bl UpdateUnitFromBattle
	ldr r0, _0809828C @ =gActiveUnit
	ldr r1, [r0]
	adds r0, r1, #0
	bl StartMu
	bl SetAutoMuDefaultFacing
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098284: .4byte gArenaSt
_08098288: .4byte gBattleUnitA
_0809828C: .4byte gActiveUnit

	thumb_func_start sub_8098290
sub_8098290: @ 0x08098290
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080982AC @ =0x000002F3
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080982AC: .4byte 0x000002F3

	thumb_func_start sub_80982B0
sub_80982B0: @ 0x080982B0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ArenaGetMatchupGoldValue
	adds r1, r0, #0
	adds r0, r1, #0
	bl SetTalkNumber
	movs r1, #0xbd
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80982D8
sub_80982D8: @ 0x080982D8
	push {r4, r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _08098310
	cmp r0, #1
	bgt _080982F2
	cmp r0, #0
	beq _080982F8
	b _080982F8
_080982F2:
	cmp r0, #2
	beq _080982F8
	b _080982F8
_080982F8:
	ldr r1, _0809830C @ =0x000002F6
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	ldr r0, [r7]
	movs r1, #2
	bl Proc_Goto
	b _08098338
	.align 2, 0
_0809830C: .4byte 0x000002F6
_08098310:
	bl ArenaGetMatchupGoldValue
	adds r4, r0, #0
	bl GetGold
	cmp r4, r0
	bgt _08098322
	b _08098338
_08098320:
	.byte 0x09, 0xE0
_08098322:
	movs r1, #0xbf
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	ldr r0, [r7]
	movs r1, #2
	bl Proc_Goto
	b _08098338
_08098338:
	add sp, #4
	pop {r4, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8098340
sub_8098340: @ 0x08098340
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	bl GetGold
	str r0, [r7, #4]
	bl ArenaGetMatchupGoldValue
	ldr r1, [r7, #4]
	subs r0, r1, r0
	str r0, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl SetGold
	ldr r0, _08098388 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08098372
	movs r0, #0xb9
	bl m4aSongNumStart
_08098372:
	ldr r1, _0809838C @ =gBg0Tm+0x1B6
	adds r0, r1, #0
	bl sub_8097084
	ldr r0, [r7]
	bl sub_8098624
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098388: .4byte gPlaySt
_0809838C: .4byte gBg0Tm+0x1B6

	thumb_func_start sub_8098390
sub_8098390: @ 0x08098390
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080983AC @ =0x000002F7
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080983AC: .4byte 0x000002F7

	thumb_func_start sub_80983B0
sub_80983B0: @ 0x080983B0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080983CC @ =0x000002F5
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080983CC: .4byte 0x000002F5

	thumb_func_start sub_80983D0
sub_80983D0: @ 0x080983D0
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r1, #1
	rsbs r1, r1, #0
	adds r0, r1, #0
	bl FadeBgmOut
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80983EC
sub_80983EC: @ 0x080983EC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	movs r1, #7
	bl Proc_Mark
	bl ClearTalk
	ldr r1, _0809846C @ =gUnk_08691190
	adds r0, r1, #0
	bl Proc_EndEach
	ldr r0, _08098470 @ =gAction
	ldrb r1, [r0, #0x11]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	movs r3, #0x16
	adds r1, r2, #0
	orrs r1, r3
	adds r2, r1, #0
	strb r2, [r0, #0x11]
	ldr r1, _08098474 @ =gActiveUnit
	ldr r0, [r1]
	ldr r2, _08098474 @ =gActiveUnit
	ldr r1, [r2]
	ldrh r2, [r1, #0xc]
	movs r3, #0x40
	adds r1, r2, #0
	orrs r1, r3
	ldrh r2, [r0, #0xc]
	movs r3, #0
	ands r2, r3
	adds r3, r2, #0
	adds r2, r3, #0
	orrs r2, r1
	adds r1, r2, #0
	strh r1, [r0, #0xc]
	ldr r0, _08098474 @ =gActiveUnit
	ldr r1, [r0]
	adds r0, r1, #0
	bl sub_808495C
	bl EndAllMus
	ldr r0, _08098470 @ =gAction
	ldrb r1, [r0, #0x15]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x15]
	ldr r0, _08098474 @ =gActiveUnit
	ldr r1, [r0]
	adds r0, r1, #0
	bl BattleGenerateArena
	bl BeginBattleAnimations
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809846C: .4byte gUnk_08691190
_08098470: .4byte gAction
_08098474: .4byte gActiveUnit

	thumb_func_start sub_8098478
sub_8098478: @ 0x08098478
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl StartPartialGameLock
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8098490
sub_8098490: @ 0x08098490
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r0, [r7]
	bl sub_8097ECC
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80984A8
sub_80984A8: @ 0x080984A8
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	bl GetGold
	str r0, [r7, #4]
	bl ArenaGetResult
	cmp r0, #2
	beq _08098504
	cmp r0, #2
	bgt _080984C8
	cmp r0, #1
	beq _080984D2
	b _08098548
_080984C8:
	cmp r0, #3
	beq _08098514
	cmp r0, #4
	beq _08098538
	b _08098548
_080984D2:
	bl ArenaGetMatchupGoldValue
	adds r1, r0, #0
	lsls r2, r1, #1
	adds r0, r2, #0
	bl SetTalkNumber
	movs r1, #0xbe
	lsls r1, r1, #2
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	bl ArenaGetMatchupGoldValue
	adds r1, r0, #0
	lsls r0, r1, #1
	ldr r1, [r7, #4]
	adds r0, r1, r0
	str r0, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl SetGold
	b _08098548
_08098504:
	ldr r1, _08098510 @ =0x000002F9
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	b _08098548
	.align 2, 0
_08098510: .4byte 0x000002F9
_08098514:
	ldr r1, _08098534 @ =0x000002FB
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	bl ArenaGetMatchupGoldValue
	ldr r1, [r7, #4]
	adds r0, r1, r0
	str r0, [r7, #4]
	ldr r1, [r7, #4]
	adds r0, r1, #0
	bl SetGold
	b _08098548
	.align 2, 0
_08098534: .4byte 0x000002FB
_08098538:
	ldr r1, _08098544 @ =0x000002FA
	adds r0, r1, #0
	ldr r1, [r7]
	bl sub_80985D8
	b _08098548
	.align 2, 0
_08098544: .4byte 0x000002FA
_08098548:
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8098550
sub_8098550: @ 0x08098550
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ArenaGetResult
	cmp r0, #2
	beq _080985A0
	cmp r0, #2
	bgt _0809856A
	cmp r0, #1
	beq _08098574
	b _080985A4
_0809856A:
	cmp r0, #3
	beq _08098574
	cmp r0, #4
	beq _080985A2
	b _080985A4
_08098574:
	ldr r1, _08098598 @ =gBg0Tm+0x1B6
	adds r0, r1, #0
	bl sub_8097084
	ldr r0, _0809859C @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1e
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _0809858E
	movs r0, #0xb9
	bl m4aSongNumStart
_0809858E:
	ldr r0, [r7]
	movs r1, #0x3c
	bl StartTemporaryLock
	b _080985A4
	.align 2, 0
_08098598: .4byte gBg0Tm+0x1B6
_0809859C: .4byte gPlaySt
_080985A0:
	b _080985A4
_080985A2:
	b _080985A4
_080985A4:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80985AC
sub_80985AC: @ 0x080985AC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	ldr r1, _080985CC @ =gUnk_08691190
	adds r0, r1, #0
	bl Proc_EndEach
	ldr r0, _080985D0 @ =ProcScr_Mu
	ldr r1, _080985D4 @ =ShowMu
	bl Proc_ForEach
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080985CC: .4byte gUnk_08691190
_080985D0: .4byte ProcScr_Mu
_080985D4: .4byte ShowMu

	thumb_func_start sub_80985D8
sub_80985D8: @ 0x080985D8
	push {r7, lr}
	sub sp, #8
	mov r7, sp
	str r0, [r7]
	str r1, [r7, #4]
	bl SetInitTalkTextFont
	bl ClearTalkText
	ldr r0, [r7]
	bl DecodeMsg
	adds r2, r0, #0
	ldr r3, [r7, #4]
	movs r0, #8
	movs r1, #2
	bl StartTalkExt
	movs r0, #0
	bl SetTalkPrintColor
	movs r0, #1
	bl SetTalkFlag
	movs r0, #2
	bl SetTalkFlag
	movs r0, #4
	bl SetTalkFlag
	movs r0, #1
	bl SetActiveTalkFace
	add sp, #8
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8098624
sub_8098624: @ 0x08098624
	push {r4, r5, r7, lr}
	sub sp, #8
	add r7, sp, #4
	str r0, [r7]
	movs r0, #0
	str r0, [sp]
	movs r0, #7
	movs r1, #9
	movs r2, #0x10
	movs r3, #6
	bl sub_8041358
	movs r0, #0
	bl SetTextFont
	bl InitSystemTextFont
	ldr r4, _080986C0 @ =gBg0Tm+0x290
	ldr r5, _080986C4 @ =gUnk_08677DB8
	bl GetLang
	adds r1, r0, #0
	lsls r0, r1, #2
	adds r1, r5, r0
	ldr r2, [r1]
	adds r0, r4, #0
	movs r1, #0
	bl PutString
	ldr r0, _080986C8 @ =gBg0Tm+0x298
	ldr r1, _080986CC @ =gArenaSt
	ldr r3, [r1, #4]
	movs r2, #8
	ldrsb r2, [r3, r2]
	movs r1, #2
	bl PutNumber
	ldr r4, _080986D0 @ =gBg0Tm+0x310
	ldr r0, _080986CC @ =gArenaSt
	ldr r1, [r0, #4]
	ldr r0, [r1]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #0
	bl PutString
	ldr r4, _080986D4 @ =gBg0Tm+0x29E
	ldr r0, _080986CC @ =gArenaSt
	ldr r1, [r0, #4]
	ldr r0, [r1, #4]
	ldrh r1, [r0]
	adds r0, r1, #0
	bl DecodeMsg
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #0
	bl PutString
	ldr r4, _080986D8 @ =gBg0Tm+0x31E
	ldr r0, _080986CC @ =gArenaSt
	ldrh r1, [r0, #0x1c]
	adds r0, r1, #0
	bl GetItemName
	adds r2, r0, #0
	adds r0, r4, #0
	movs r1, #0
	bl PutString
	add sp, #8
	pop {r4, r5, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080986C0: .4byte gBg0Tm+0x290
_080986C4: .4byte gUnk_08677DB8
_080986C8: .4byte gBg0Tm+0x298
_080986CC: .4byte gArenaSt
_080986D0: .4byte gBg0Tm+0x310
_080986D4: .4byte gBg0Tm+0x29E
_080986D8: .4byte gBg0Tm+0x31E

	thumb_func_start sub_80986DC
sub_80986DC: @ 0x080986DC
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl ArenaGetResult
	cmp r0, #1
	beq _080986EE
	b _08098708
_080986EE:
	ldr r0, _08098704 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1f
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _08098702
	movs r0, #0x46
	movs r1, #0
	bl StartBgmCore
_08098702:
	b _08098728
	.align 2, 0
_08098704: .4byte gPlaySt
_08098708:
	ldr r0, _08098724 @ =gPlaySt
	ldrb r1, [r0, #0x1d]
	lsls r2, r1, #0x1f
	lsrs r0, r2, #0x1f
	cmp r0, #0
	bne _0809871C
	movs r0, #0x39
	movs r1, #0
	bl StartBgmCore
_0809871C:
	ldr r0, [r7]
	bl Proc_End
	b _08098728
	.align 2, 0
_08098724: .4byte gPlaySt
_08098728:
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8098730
sub_8098730: @ 0x08098730
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0x39
	movs r1, #0
	movs r2, #0
	bl StartBgmExt
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809874C
sub_809874C: @ 0x0809874C
	push {r7, lr}
	mov r7, sp
	ldr r1, _08098760 @ =gUnk_0869141C
	adds r0, r1, #0
	bl StartEvent
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098760: .4byte gUnk_0869141C

	thumb_func_start sub_8098764
sub_8098764: @ 0x08098764
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	bl GetTalkChoiceResult
	cmp r0, #1
	beq _08098784
	cmp r0, #1
	bgt _0809877E
	cmp r0, #0
	beq _0809878C
	b _0809878C
_0809877E:
	cmp r0, #2
	beq _08098788
	b _0809878C
_08098784:
	movs r0, #1
	b _08098790
_08098788:
	movs r0, #0
	b _08098790
_0809878C:
	movs r0, #0
	b _08098790
_08098790:
	add sp, #4
	pop {r7}
	pop {r1}
	bx r1

	thumb_func_start sub_8098798
sub_8098798: @ 0x08098798
	push {r7, lr}
	mov r7, sp
	ldr r0, _080987B4 @ =gAction
	ldrb r1, [r0, #0x16]
	movs r2, #0
	ands r1, r2
	adds r2, r1, #0
	strb r2, [r0, #0x16]
	movs r0, #3
	bl sub_80857B0
	pop {r7}
	pop {r0}
	bx r0
	.align 2, 0
_080987B4: .4byte gAction

	thumb_func_start sub_80987B8
sub_80987B8: @ 0x080987B8
	push {r7, lr}
	sub sp, #4
	mov r7, sp
	str r0, [r7]
	movs r0, #0
	bl SetNextGameAction
	ldr r0, [r7]
	bl EventEndBattleMap
	add sp, #4
	pop {r7}
	pop {r0}
	bx r0

	thumb_func_start sub_80987D4
sub_80987D4: @ 0x080987D4
	push {lr}
	ldr r0, _080987E4 @ =ProcScr_OpeningSequence
	movs r1, #3
	bl SpawnProc
	pop {r0}
	bx r0
	.align 2, 0
_080987E4: .4byte ProcScr_OpeningSequence

	thumb_func_start sub_80987E8
sub_80987E8: @ 0x080987E8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08098824 @ =gKeySt
	ldr r1, [r0]
	movs r0, #0xb
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0809881C
	movs r0, #2
	bl SetNextGameAction
	ldr r1, _08098828 @ =0x03005284
	movs r0, #1
	strb r0, [r1]
	movs r0, #9
	bl Proc_EndEachMarked
	bl sub_809882C
	movs r0, #1
	bl FadeBgmOut
	adds r0, r4, #0
	bl Proc_Break
_0809881C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08098824: .4byte gKeySt
_08098828: .4byte 0x03005284

	thumb_func_start sub_809882C
sub_809882C: @ 0x0809882C
	push {r4, lr}
	ldr r1, _0809885C @ =gPal
	movs r2, #0
	movs r0, #0
	strh r0, [r1]
	ldr r3, _08098860 @ =gDispIo
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r4, [r1]
	ands r0, r4
	strb r0, [r1]
	adds r1, #8
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809885C: .4byte gPal
_08098860: .4byte gDispIo

	thumb_func_start nullsub_50
nullsub_50: @ 0x08098864
	bx lr
	.align 2, 0

	thumb_func_start sub_8098868
sub_8098868: @ 0x08098868
	push {lr}
	ldr r0, _080988B0 @ =gUnk_08691604
	bl InitBgs
	ldr r2, _080988B4 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	bl SetAllBlackPals
	bl EnablePalSync
	movs r0, #0
	bl sub_8098AD8
	ldr r1, _080988B8 @ =0x03005284
	movs r0, #0
	strb r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_080988B0: .4byte gUnk_08691604
_080988B4: .4byte gDispIo
_080988B8: .4byte 0x03005284

	thumb_func_start nullsub_51
nullsub_51: @ 0x080988BC
	bx lr
	.align 2, 0

	thumb_func_start sub_80988C0
sub_80988C0: @ 0x080988C0
	push {lr}
	ldr r0, _08098924 @ =gUnk_0869161C
	bl InitBgs
	bl sub_8015344
	ldr r3, _08098928 @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r3]
	ands r0, r1
	strb r0, [r3]
	movs r0, #1
	ldrb r2, [r3, #1]
	orrs r0, r2
	movs r1, #2
	orrs r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_08098924: .4byte gUnk_0869161C
_08098928: .4byte gDispIo

	thumb_func_start sub_809892C
sub_809892C: @ 0x0809892C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	str r3, [sp]
	ldr r7, _080989F4 @ =gDispIo
	movs r3, #0x20
	mov ip, r3
	mov r4, ip
	ldrb r5, [r7, #1]
	orrs r4, r5
	movs r5, #0x41
	rsbs r5, r5, #0
	ands r4, r5
	movs r5, #0x7f
	ands r4, r5
	strb r4, [r7, #1]
	adds r5, r7, #0
	adds r5, #0x2d
	movs r4, #0
	strb r4, [r5]
	adds r5, #4
	movs r4, #0x10
	strb r4, [r5]
	subs r5, #5
	movs r4, #0xf0
	strb r4, [r5]
	adds r5, #4
	movs r4, #0x90
	strb r4, [r5]
	movs r3, #0x34
	adds r3, r3, r7
	mov sl, r3
	movs r6, #1
	ands r0, r6
	subs r4, #0x92
	ldrb r5, [r3]
	ands r4, r5
	orrs r4, r0
	ands r1, r6
	lsls r1, r1, #1
	movs r0, #3
	rsbs r0, r0, #0
	mov sb, r0
	ands r4, r0
	orrs r4, r1
	ands r2, r6
	lsls r2, r2, #2
	movs r3, #5
	rsbs r3, r3, #0
	mov r8, r3
	ands r4, r3
	orrs r4, r2
	ldr r5, [sp]
	ands r5, r6
	lsls r3, r5, #3
	movs r2, #9
	rsbs r2, r2, #0
	ands r4, r2
	orrs r4, r3
	ldr r0, [sp, #0x24]
	ands r0, r6
	lsls r1, r0, #4
	movs r0, #0x11
	rsbs r0, r0, #0
	ands r4, r0
	orrs r4, r1
	adds r1, r7, #0
	adds r1, #0x36
	movs r5, #2
	rsbs r5, r5, #0
	ldrb r3, [r1]
	ands r5, r3
	mov r3, sb
	ands r5, r3
	mov r3, r8
	ands r5, r3
	ands r5, r2
	ands r5, r0
	mov r0, ip
	orrs r4, r0
	mov r3, sl
	strb r4, [r3]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r5, r0
	strb r5, [r1]
	bl EnablePalSync
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080989F4: .4byte gDispIo

	thumb_func_start sub_80989F8
sub_80989F8: @ 0x080989F8
	push {lr}
	ldr r0, _08098A14 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _08098A0E
	movs r0, #0x42
	movs r1, #0
	bl StartBgmCore
_08098A0E:
	pop {r0}
	bx r0
	.align 2, 0
_08098A14: .4byte 0x03005284

	thumb_func_start sub_8098A18
sub_8098A18: @ 0x08098A18
	push {r4, lr}
	adds r1, r0, #0
	ldr r4, _08098A3C @ =gUnk_08691634
	ldr r3, _08098A40 @ =0x03005290
	movs r0, #0
	adds r2, r3, #0
	adds r2, #0x1c
_08098A26:
	str r0, [r2]
	subs r2, #4
	cmp r2, r3
	bge _08098A26
	adds r0, r4, #0
	bl SpawnProc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08098A3C: .4byte gUnk_08691634
_08098A40: .4byte 0x03005290

	thumb_func_start sub_8098A44
sub_8098A44: @ 0x08098A44
	movs r1, #0
	str r1, [r0, #0x54]
	bx lr
	.align 2, 0

	thumb_func_start sub_8098A4C
sub_8098A4C: @ 0x08098A4C
	ldr r1, [r0, #0x54]
	adds r1, #1
	str r1, [r0, #0x54]
	bx lr

	thumb_func_start sub_8098A54
sub_8098A54: @ 0x08098A54
	push {lr}
	ldr r0, _08098A70 @ =gUnk_08691634
	bl Proc_Find
	ldr r2, _08098A74 @ =0x03005290
	ldr r1, [r2]
	adds r1, #1
	str r1, [r2]
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r0, [r0, #0x54]
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_08098A70: .4byte gUnk_08691634
_08098A74: .4byte 0x03005290

	thumb_func_start sub_8098A78
sub_8098A78: @ 0x08098A78
	push {lr}
	movs r0, #0
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098A84
sub_8098A84: @ 0x08098A84
	push {lr}
	movs r0, #1
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098A90
sub_8098A90: @ 0x08098A90
	push {lr}
	movs r0, #2
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098A9C
sub_8098A9C: @ 0x08098A9C
	push {lr}
	movs r0, #3
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098AA8
sub_8098AA8: @ 0x08098AA8
	push {lr}
	movs r0, #4
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098AB4
sub_8098AB4: @ 0x08098AB4
	push {lr}
	movs r0, #5
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098AC0
sub_8098AC0: @ 0x08098AC0
	push {lr}
	movs r0, #6
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098ACC
sub_8098ACC: @ 0x08098ACC
	push {lr}
	movs r0, #7
	bl sub_8098AFC
	pop {r0}
	bx r0

	thumb_func_start sub_8098AD8
sub_8098AD8: @ 0x08098AD8
	push {lr}
	lsls r0, r0, #5
	ldr r1, _08098AF8 @ =gUnk_08380ECC
	adds r0, r0, r1
	movs r1, #0xf8
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	bl sub_809937C
	bl sub_8099404
	pop {r0}
	bx r0
	.align 2, 0
_08098AF8: .4byte gUnk_08380ECC

	thumb_func_start sub_8098AFC
sub_8098AFC: @ 0x08098AFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r7, r0, #0
	ldr r1, _08098B74 @ =gUnk_08691738
	lsls r0, r7, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl DecodeMsg
	adds r4, r0, #0
	ldr r2, _08098B78 @ =gUnk_08691778
	lsls r1, r7, #1
	adds r1, r1, r7
	lsls r1, r1, #2
	adds r0, r2, #0
	adds r0, #8
	adds r0, r1, r0
	ldr r6, [r0]
	adds r1, r1, r2
	ldrh r5, [r1]
	movs r0, #0
	mov r8, r0
	cmp r4, #0
	beq _08098B66
	mov sb, r1
	ldr r1, _08098B7C @ =gUnk_08691498
	mov sl, r1
_08098B38:
	adds r0, r7, #0
	adds r1, r5, #0
	mov r2, r8
	adds r3, r4, #0
	bl sub_8098B80
	adds r0, r4, #0
	bl sub_8099358
	adds r4, r0, #0
	adds r5, #0x14
	mov r1, sb
	ldrh r0, [r1, #2]
	cmp r0, #0
	beq _08098B62
	mov r1, sl
	ldr r0, [r1]
	ldrh r1, [r6]
	adds r0, r1, r0
	add r8, r0
	adds r6, #2
_08098B62:
	cmp r4, #0
	bne _08098B38
_08098B66:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098B74: .4byte gUnk_08691738
_08098B78: .4byte gUnk_08691778
_08098B7C: .4byte gUnk_08691498

	thumb_func_start sub_8098B80
sub_8098B80: @ 0x08098B80
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	mov r8, r0
	adds r6, r1, #0
	adds r4, r2, #0
	adds r5, r3, #0
	ldr r0, _08098BB0 @ =gUnk_086917D8
	movs r1, #3
	bl SpawnProc
	adds r1, r0, #0
	adds r1, #0x44
	strh r4, [r1]
	str r5, [r0, #0x4c]
	str r6, [r0, #0x30]
	mov r1, r8
	str r1, [r0, #0x54]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08098BB0: .4byte gUnk_086917D8

	thumb_func_start sub_8098BB4
sub_8098BB4: @ 0x08098BB4
	adds r0, #0x44
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_8098BBC
sub_8098BBC: @ 0x08098BBC
	push {lr}
	adds r2, r0, #0
	adds r1, r2, #0
	adds r1, #0x44
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _08098BD6
	adds r0, r2, #0
	bl Proc_Break
_08098BD6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8098BDC
sub_8098BDC: @ 0x08098BDC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, [r4, #0x4c]
	bl sub_8099328
	movs r1, #0xf0
	subs r1, r1, r0
	lsrs r0, r1, #0x1f
	adds r1, r1, r0
	asrs r1, r1, #1
	str r1, [r4, #0x2c]
	adds r4, #0x64
	movs r0, #0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8098C00
sub_8098C00: @ 0x08098C00
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	ldr r6, [r5, #0x4c]
	ldr r1, [r5, #0x54]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _08098C38 @ =gUnk_08691778
	adds r7, r0, r1
	adds r1, r5, #0
	adds r1, #0x64
	movs r0, #1
	ldrh r2, [r1]
	subs r0, r0, r2
	strh r0, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08098C88
_08098C24:
	ldrb r0, [r6]
	cmp r0, #0
	blt _08098C3C
	cmp r0, #1
	ble _08098C78
	cmp r0, #4
	bne _08098C3C
	adds r6, #1
	b _08098C80
	.align 2, 0
_08098C38: .4byte gUnk_08691778
_08098C3C:
	ldr r0, _08098C74 @ =gUnk_08691858
	movs r1, #3
	bl SpawnProc
	adds r4, r0, #0
	ldr r0, [r5, #0x54]
	str r0, [r4, #0x54]
	ldr r0, [r5, #0x2c]
	str r0, [r4, #0x2c]
	ldr r0, [r5, #0x30]
	movs r1, #0xff
	ands r0, r1
	ldrh r1, [r7, #4]
	adds r0, r1, r0
	str r0, [r4, #0x30]
	adds r0, r6, #0
	bl sub_80992DC
	adds r4, #0x4a
	strh r0, [r4]
	adds r0, r6, #0
	bl sub_8099314
	ldr r1, [r5, #0x2c]
	adds r1, r1, r0
	str r1, [r5, #0x2c]
	adds r6, #2
	b _08098C80
	.align 2, 0
_08098C74: .4byte gUnk_08691858
_08098C78:
	adds r0, r5, #0
	bl Proc_Break
	b _08098C88
_08098C80:
	str r6, [r5, #0x4c]
	ldrh r0, [r7, #2]
	cmp r0, #0
	beq _08098C24
_08098C88:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start nullsub_52
nullsub_52: @ 0x08098C90
	bx lr
	.align 2, 0

	thumb_func_start sub_8098C94
sub_8098C94: @ 0x08098C94
	push {lr}
	ldr r0, _08098CA0 @ =gUnk_08691858
	bl Proc_EndEach
	pop {r0}
	bx r0
	.align 2, 0
_08098CA0: .4byte gUnk_08691858

	thumb_func_start sub_8098CA4
sub_8098CA4: @ 0x08098CA4
	push {lr}
	ldr r0, _08098CB8 @ =0x02002800
	movs r1, #0
	str r1, [r0]
	ldr r0, _08098CBC @ =gUnk_08691858
	bl Proc_BreakEach
	pop {r0}
	bx r0
	.align 2, 0
_08098CB8: .4byte 0x02002800
_08098CBC: .4byte gUnk_08691858

	thumb_func_start sub_8098CC0
sub_8098CC0: @ 0x08098CC0
	push {r4, r5, lr}
	adds r0, #0x64
	movs r4, #0
	movs r1, #0
	strh r1, [r0]
	ldr r2, _08098D04 @ =gDispIo+0x3C
	ldr r0, _08098D08 @ =0x0000FFE0
	ldrh r1, [r2]
	ands r0, r1
	movs r3, #0x10
	orrs r0, r3
	ldr r1, _08098D0C @ =0x0000E0FF
	ands r0, r1
	movs r5, #0xe0
	lsls r5, r5, #3
	adds r1, r5, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0x20
	ldrb r1, [r2, #1]
	orrs r0, r1
	strb r0, [r2, #1]
	movs r0, #0x3f
	ldrb r5, [r2]
	ands r0, r5
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	strb r3, [r2, #8]
	strb r4, [r2, #9]
	strb r4, [r2, #0xa]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08098D04: .4byte gDispIo+0x3C
_08098D08: .4byte 0x0000FFE0
_08098D0C: .4byte 0x0000E0FF

	thumb_func_start sub_8098D10
sub_8098D10: @ 0x08098D10
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x64
	ldrh r1, [r6]
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r0, #0x1f
	bgt _08098D78
	adds r0, r1, #1
	movs r5, #0
	strh r0, [r6]
	ldr r7, _08098D74 @ =gDispIo
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	movs r2, #0
	ldrsh r3, [r6, r2]
	movs r4, #0x20
	str r4, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x44
	strb r0, [r1]
	movs r0, #0
	ldrsh r3, [r6, r0]
	str r4, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	strb r5, [r0]
	b _08098DA2
	.align 2, 0
_08098D74: .4byte gDispIo
_08098D78:
	ldr r3, _08098DAC @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bl sub_8098C94
	adds r0, r4, #0
	bl Proc_Break
_08098DA2:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098DAC: .4byte gDispIo

	thumb_func_start sub_8098DB0
sub_8098DB0: @ 0x08098DB0
	adds r0, #0x64
	movs r3, #0
	movs r1, #0
	strh r1, [r0]
	ldr r1, _08098DE0 @ =gDispIo+0x3C
	ldr r0, _08098DE4 @ =0x0000FFE0
	ldrh r2, [r1]
	ands r0, r2
	ldr r2, _08098DE8 @ =0x0000E0FF
	ands r0, r2
	strh r0, [r1]
	movs r0, #0x20
	ldrb r2, [r1, #1]
	orrs r0, r2
	strb r0, [r1, #1]
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	movs r0, #0x10
	strb r0, [r1, #8]
	strb r3, [r1, #9]
	strb r3, [r1, #0xa]
	bx lr
	.align 2, 0
_08098DE0: .4byte gDispIo+0x3C
_08098DE4: .4byte 0x0000FFE0
_08098DE8: .4byte 0x0000E0FF

	thumb_func_start sub_8098DEC
sub_8098DEC: @ 0x08098DEC
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x64
	ldrh r1, [r2]
	movs r3, #0
	ldrsh r0, [r2, r3]
	cmp r0, #0x1f
	bgt _08098E3C
	adds r0, r1, #1
	movs r4, #0
	strh r0, [r2]
	ldr r5, _08098E38 @ =gDispIo
	adds r1, r5, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	movs r0, #0
	ldrsh r3, [r2, r0]
	movs r0, #0x20
	str r0, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x44
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x45
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	b _08098E66
	.align 2, 0
_08098E38: .4byte gDispIo
_08098E3C:
	ldr r3, _08098E70 @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bl sub_8098C94
	adds r0, r4, #0
	bl Proc_Break
_08098E66:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08098E70: .4byte gDispIo

	thumb_func_start sub_8098E74
sub_8098E74: @ 0x08098E74
	push {r4, lr}
	adds r0, #0x64
	movs r3, #0
	movs r1, #0
	strh r1, [r0]
	ldr r2, _08098EBC @ =gDispIo+0x3C
	ldr r0, _08098EC0 @ =0x0000FFE0
	ldrh r1, [r2]
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	ldr r1, _08098EC4 @ =0x0000E0FF
	ands r0, r1
	movs r4, #0x80
	lsls r4, r4, #5
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0x21
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	strb r0, [r2, #1]
	movs r0, #0x3f
	ldrb r4, [r2]
	ands r0, r4
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	strb r3, [r2, #8]
	movs r0, #0x10
	strb r0, [r2, #9]
	strb r3, [r2, #0xa]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08098EBC: .4byte gDispIo+0x3C
_08098EC0: .4byte 0x0000FFE0
_08098EC4: .4byte 0x0000E0FF

	thumb_func_start sub_8098EC8
sub_8098EC8: @ 0x08098EC8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r6, r4, #0
	adds r6, #0x64
	ldrh r1, [r6]
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r0, #0x1f
	bgt _08098F30
	adds r0, r1, #1
	movs r5, #0
	strh r0, [r6]
	ldr r7, _08098F2C @ =gDispIo
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	movs r2, #0
	ldrsh r3, [r6, r2]
	movs r4, #0x20
	str r4, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x44
	strb r0, [r1]
	movs r0, #0
	ldrsh r3, [r6, r0]
	str r4, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	strb r5, [r0]
	b _08098F5A
	.align 2, 0
_08098F2C: .4byte gDispIo
_08098F30:
	ldr r3, _08098F64 @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bl sub_8098C94
	adds r0, r4, #0
	bl Proc_Break
_08098F5A:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098F64: .4byte gDispIo

	thumb_func_start sub_8098F68
sub_8098F68: @ 0x08098F68
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0
	strh r0, [r1]
	adds r5, r4, #0
	adds r5, #0x4a
	ldrh r0, [r5]
	bl sub_8099424
	ldrh r0, [r5]
	ldr r3, _08098FA0 @ =gUnk_08691778
	ldr r2, [r4, #0x54]
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldrh r1, [r1, #2]
	adds r2, r4, #0
	bl sub_809947C
	ldr r1, _08098FA4 @ =0xFFFFF000
	adds r0, r0, r1
	strh r0, [r5]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08098FA0: .4byte gUnk_08691778
_08098FA4: .4byte 0xFFFFF000

	thumb_func_start sub_8098FA8
sub_8098FA8: @ 0x08098FA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r3, [r7, #0x58]
	ldr r1, _08098FD8 @ =gUnk_08691494
	ldr r0, [r1]
	cmp r3, r0
	blt _08098FDC
	movs r0, #0
	str r0, [r7, #0x58]
	ldr r0, [r7, #0x54]
	bl sub_80993E8
	adds r0, r7, #0
	bl Proc_Break
	adds r0, r7, #0
	bl sub_80990B8
	b _0809909C
	.align 2, 0
_08098FD8: .4byte gUnk_08691494
_08098FDC:
	adds r3, #1
	str r3, [r7, #0x58]
	ldr r2, [r7, #0x30]
	adds r1, r2, #0
	adds r1, #8
	str r0, [sp]
	movs r0, #4
	bl Interpolate
	adds r2, r0, #0
	movs r0, #0x80
	lsls r0, r0, #1
	mov sb, r0
	add r2, sb
	ldr r0, [r7, #0x54]
	lsls r0, r0, #9
	ldr r1, [r7, #0x2c]
	adds r1, r1, r0
	ldr r3, _080990AC @ =Sprite_16x16
	adds r0, r7, #0
	adds r0, #0x4a
	ldrh r0, [r0]
	str r0, [sp]
	movs r0, #0
	bl PutSpriteExt
	ldr r5, _080990B0 @ =gSinLut
	movs r1, #0x80
	adds r1, r1, r5
	mov sl, r1
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	mov r8, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	movs r1, #0
	ldrsh r4, [r5, r1]
	rsbs r4, r4, #0
	lsls r4, r4, #4
	ldr r3, [r7, #0x58]
	ldr r2, _080990B4 @ =gUnk_08691494
	ldr r0, [r2]
	str r0, [sp]
	movs r0, #4
	movs r1, #1
	mov r2, sb
	bl Interpolate
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r1, #0
	ldrsh r0, [r5, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r2, sl
	movs r0, #0
	ldrsh r4, [r2, r0]
	lsls r4, r4, #4
	ldr r3, [r7, #0x58]
	ldr r1, _080990B4 @ =gUnk_08691494
	ldr r0, [r1]
	str r0, [sp]
	movs r0, #4
	movs r1, #1
	mov r2, sb
	bl Interpolate
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7, #0x54]
	str r0, [sp]
	adds r0, r1, #0
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl SetObjAffine
_0809909C:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080990AC: .4byte Sprite_16x16
_080990B0: .4byte gSinLut
_080990B4: .4byte gUnk_08691494

	thumb_func_start sub_80990B8
sub_80990B8: @ 0x080990B8
	push {r4, r5, lr}
	sub sp, #4
	ldr r1, [r0, #0x2c]
	ldr r2, [r0, #0x30]
	ldr r3, _080990E0 @ =Sprite_16x16
	movs r4, #0x4a
	adds r4, r4, r0
	adds r0, #0x64
	movs r5, #0
	ldrsh r0, [r0, r5]
	ldrh r4, [r4]
	adds r0, r4, r0
	str r0, [sp]
	movs r0, #0
	bl PutSpriteExt
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080990E0: .4byte Sprite_16x16

	thumb_func_start sub_80990E4
sub_80990E4: @ 0x080990E4
	push {lr}
	bl sub_8099520
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80990F0
sub_80990F0: @ 0x080990F0
	push {lr}
	bl sub_80990B8
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80990FC
sub_80990FC: @ 0x080990FC
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #4
	mov r8, r0
	bl sub_80993AC
	mov r1, r8
	str r0, [r1, #0x54]
	movs r0, #1
	str r0, [r1, #0x58]
	ldr r4, _08099190 @ =gSinLut
	movs r2, #0x80
	adds r2, r2, r4
	mov sl, r2
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	movs r1, #1
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	movs r1, #0x80
	lsls r1, r1, #1
	mov sb, r1
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	lsls r0, r0, #4
	movs r1, #1
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r1, sl
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r2, r8
	ldr r1, [r2, #0x54]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099190: .4byte gSinLut

	thumb_func_start sub_8099194
sub_8099194: @ 0x08099194
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _080991C0 @ =gUnk_08691494
	mov sl, r0
	ldr r3, [r7, #0x58]
	ldr r0, [r0]
	cmp r3, r0
	blt _080991C4
	movs r0, #0
	str r0, [r7, #0x58]
	ldr r0, [r7, #0x54]
	bl sub_80993E8
	adds r0, r7, #0
	bl Proc_Break
	b _0809929A
	.align 2, 0
_080991C0: .4byte gUnk_08691494
_080991C4:
	adds r3, #1
	str r3, [r7, #0x58]
	ldr r1, [r7, #0x2c]
	adds r2, r1, #0
	adds r2, #0x10
	str r0, [sp]
	movs r0, #4
	bl Interpolate
	adds r4, r0, #0
	ldr r0, [r7, #0x54]
	lsls r0, r0, #9
	adds r4, r4, r0
	ldr r1, [r7, #0x30]
	adds r2, r1, #0
	adds r2, #0x10
	ldr r3, [r7, #0x58]
	mov r5, sl
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	bl Interpolate
	adds r2, r0, #0
	movs r0, #0x80
	lsls r0, r0, #1
	mov sb, r0
	add r2, sb
	ldr r3, _080992AC @ =Sprite_16x16
	adds r0, r7, #0
	adds r0, #0x4a
	ldrh r0, [r0]
	str r0, [sp]
	movs r0, #0
	adds r1, r4, #0
	bl PutSpriteExt
	ldr r1, _080992B0 @ =gSinLut
	mov r8, r1
	ldr r2, _080992B4 @ =gSinLut+0x80
	movs r5, #0
	ldrsh r4, [r2, r5]
	lsls r4, r4, #4
	ldr r3, [r7, #0x58]
	mov r1, sl
	ldr r0, [r1]
	str r0, [sp]
	movs r0, #0
	mov r1, sb
	movs r2, #2
	bl Interpolate
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	mov r2, r8
	movs r5, #0
	ldrsh r0, [r2, r5]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	mov r0, r8
	movs r1, #0
	ldrsh r4, [r0, r1]
	lsls r4, r4, #4
	ldr r3, [r7, #0x58]
	mov r2, sl
	ldr r0, [r2]
	str r0, [sp]
	movs r0, #0
	mov r1, sb
	movs r2, #2
	bl Interpolate
	adds r1, r0, #0
	adds r0, r4, #0
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r1, _080992B4 @ =gSinLut+0x80
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7, #0x54]
	str r0, [sp]
	adds r0, r1, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
_0809929A:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080992AC: .4byte Sprite_16x16
_080992B0: .4byte gSinLut
_080992B4: .4byte gSinLut+0x80

	thumb_func_start sub_80992B8
sub_80992B8: @ 0x080992B8
	push {lr}
	ldr r0, _080992C8 @ =gUnk_08691858
	ldr r1, _080992CC @ =sub_80992D0
	bl Proc_ForEach
	pop {r0}
	bx r0
	.align 2, 0
_080992C8: .4byte gUnk_08691858
_080992CC: .4byte sub_80992D0

	thumb_func_start sub_80992D0
sub_80992D0: @ 0x080992D0
	adds r0, #0x64
	movs r1, #0x80
	lsls r1, r1, #4
	strh r1, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_80992DC
sub_80992DC: @ 0x080992DC
	push {r4, r5, lr}
	ldr r2, _080992FC @ =gUnk_08691644
	movs r3, #0
	ldrb r1, [r2]
	cmp r1, #0
	beq _0809930A
	ldrb r4, [r0]
_080992EA:
	cmp r1, r4
	bne _08099300
	ldrb r1, [r2, #1]
	ldrb r5, [r0, #1]
	cmp r1, r5
	bne _08099300
	adds r0, r3, #0
	b _0809930C
	.align 2, 0
_080992FC: .4byte gUnk_08691644
_08099300:
	adds r3, #1
	adds r2, #2
	ldrb r1, [r2]
	cmp r1, #0
	bne _080992EA
_0809930A:
	movs r0, #0x40
_0809930C:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8099314
sub_8099314: @ 0x08099314
	push {lr}
	bl sub_80992DC
	ldr r1, _08099324 @ =gUnk_086916E5
	adds r0, r0, r1
	ldrb r0, [r0]
	pop {r1}
	bx r1
	.align 2, 0
_08099324: .4byte gUnk_086916E5

	thumb_func_start sub_8099328
sub_8099328: @ 0x08099328
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r5, #0
	b _08099348
_08099330:
	ldrb r0, [r4]
	cmp r0, #1
	beq _0809934E
	cmp r0, #4
	bne _0809933E
	adds r4, #1
	b _08099348
_0809933E:
	adds r0, r4, #0
	bl sub_8099314
	adds r5, r5, r0
	adds r4, #2
_08099348:
	ldrb r0, [r4]
	cmp r0, #0
	bne _08099330
_0809934E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8099358
sub_8099358: @ 0x08099358
	adds r1, r0, #0
	b _08099370
_0809935C:
	ldrb r0, [r1]
	cmp r0, #1
	beq _0809936A
	cmp r0, #4
	bne _0809936E
	adds r1, #1
	b _08099370
_0809936A:
	adds r0, r1, #1
	b _08099378
_0809936E:
	adds r1, #2
_08099370:
	ldrb r0, [r1]
	cmp r0, #0
	bne _0809935C
	movs r0, #0
_08099378:
	bx lr
	.align 2, 0

	thumb_func_start sub_809937C
sub_809937C: @ 0x0809937C
	push {r4, r5, r6, lr}
	movs r3, #0
	ldr r6, _080993A8 @ =0x03005280
	movs r4, #7
	movs r5, #1
_08099386:
	asrs r2, r3, #3
	adds r2, r2, r6
	adds r1, r3, #0
	ands r1, r4
	adds r0, r5, #0
	lsls r0, r1
	ldrb r1, [r2]
	bics r1, r0
	adds r0, r1, #0
	strb r0, [r2]
	adds r3, #1
	cmp r3, #0x1f
	ble _08099386
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080993A8: .4byte 0x03005280

	thumb_func_start sub_80993AC
sub_80993AC: @ 0x080993AC
	push {r4, r5, r6, r7, lr}
	movs r4, #0
	ldr r7, _080993D8 @ =0x03005280
	movs r6, #7
	movs r5, #1
_080993B6:
	asrs r0, r4, #3
	adds r3, r0, r7
	ldrb r2, [r3]
	adds r1, r4, #0
	ands r1, r6
	adds r0, r2, #0
	asrs r0, r1
	ands r0, r5
	cmp r0, #0
	bne _080993DC
	adds r0, r5, #0
	lsls r0, r1
	orrs r2, r0
	strb r2, [r3]
	adds r0, r4, #0
	b _080993E2
	.align 2, 0
_080993D8: .4byte 0x03005280
_080993DC:
	adds r4, #1
	cmp r4, #0x1f
	ble _080993B6
_080993E2:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_80993E8
sub_80993E8: @ 0x080993E8
	ldr r1, _08099400 @ =0x03005280
	asrs r2, r0, #3
	adds r2, r2, r1
	movs r1, #7
	ands r1, r0
	movs r0, #1
	lsls r0, r1
	ldrb r1, [r2]
	bics r1, r0
	adds r0, r1, #0
	strb r0, [r2]
	bx lr
	.align 2, 0
_08099400: .4byte 0x03005280

	thumb_func_start sub_8099404
sub_8099404: @ 0x08099404
	push {lr}
	ldr r0, _08099418 @ =gUnk_0837F478
	ldr r1, _0809941C @ =0x02000000
	bl Decompress
	ldr r1, _08099420 @ =0x02002800
	movs r0, #0
	str r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_08099418: .4byte gUnk_0837F478
_0809941C: .4byte 0x02000000
_08099420: .4byte 0x02002800

	thumb_func_start sub_8099424
sub_8099424: @ 0x08099424
	push {r4, r5, lr}
	adds r2, r0, #0
	ldr r0, _0809946C @ =0x02002800
	ldr r0, [r0]
	movs r5, #0xf
	adds r1, r0, #0
	ands r1, r5
	lsls r1, r1, #1
	movs r4, #0xf0
	ands r0, r4
	lsls r0, r0, #2
	adds r1, r1, r0
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r1, r0
	ldr r3, _08099470 @ =0x000003FF
	ands r1, r3
	lsls r1, r1, #5
	ldr r0, _08099474 @ =0x06010000
	adds r1, r1, r0
	adds r0, r2, #0
	ands r0, r5
	lsls r0, r0, #1
	ands r2, r4
	lsls r2, r2, #2
	adds r0, r0, r2
	ands r0, r3
	lsls r0, r0, #5
	ldr r2, _08099478 @ =0x02000000
	adds r0, r0, r2
	movs r2, #0
	bl sub_80995B0
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809946C: .4byte 0x02002800
_08099470: .4byte 0x000003FF
_08099474: .4byte 0x06010000
_08099478: .4byte 0x02000000

	thumb_func_start sub_809947C
sub_809947C: @ 0x0809947C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	mov sb, r1
	mov sl, r2
	ldr r1, _080994EC @ =0x02002800
	mov r8, r1
	ldr r3, [r1]
	movs r2, #0xf
	mov ip, r2
	adds r2, r3, #0
	mov r1, ip
	ands r2, r1
	lsls r2, r2, #1
	movs r5, #0xf0
	adds r1, r3, #0
	ands r1, r5
	lsls r1, r1, #2
	adds r2, r2, r1
	movs r1, #0x80
	lsls r1, r1, #2
	adds r6, r2, r1
	ldr r4, _080994F0 @ =0x000003FF
	adds r1, r6, #0
	ands r1, r4
	lsls r1, r1, #5
	ldr r2, _080994F4 @ =0x06010000
	adds r7, r1, r2
	adds r1, r0, #0
	mov r2, ip
	ands r1, r2
	lsls r1, r1, #1
	ands r0, r5
	lsls r0, r0, #2
	adds r1, r1, r0
	ands r1, r4
	lsls r1, r1, #5
	ldr r0, _080994F8 @ =0x02000000
	adds r4, r1, r0
	adds r3, #1
	mov r0, r8
	str r3, [r0]
	mov r1, sb
	cmp r1, #0
	beq _08099500
	ldr r0, _080994FC @ =gUnk_08691890
	mov r1, sl
	bl SpawnProc
	str r7, [r0, #0x30]
	str r4, [r0, #0x2c]
	mov r2, sb
	strh r2, [r0, #0x3c]
	b _0809950A
	.align 2, 0
_080994EC: .4byte 0x02002800
_080994F0: .4byte 0x000003FF
_080994F4: .4byte 0x06010000
_080994F8: .4byte 0x02000000
_080994FC: .4byte gUnk_08691890
_08099500:
	ldr r2, _0809951C @ =0x0000FFFF
	adds r0, r4, #0
	adds r1, r7, #0
	bl sub_80995B0
_0809950A:
	adds r0, r6, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809951C: .4byte 0x0000FFFF

	thumb_func_start sub_8099520
sub_8099520: @ 0x08099520
	push {lr}
	adds r2, r0, #0
	movs r1, #0xc0
	lsls r1, r1, #1
	movs r0, #0x1f
	bl sub_809947C
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_8099534
sub_8099534: @ 0x08099534
	movs r1, #0
	str r1, [r0, #0x34]
	strh r1, [r0, #0x38]
	ldrh r1, [r0, #0x3c]
	strh r1, [r0, #0x3a]
	bx lr

	thumb_func_start sub_8099540
sub_8099540: @ 0x08099540
	push {r4, lr}
	adds r4, r0, #0
	ldrh r1, [r4, #0x38]
	ldrh r2, [r4, #0x3a]
	b _0809955C
_0809954A:
	ldr r0, [r4, #0x2c]
	ldr r1, [r4, #0x30]
	ldr r2, [r4, #0x34]
	adds r2, #1
	str r2, [r4, #0x34]
	bl sub_80995B0
	ldrh r1, [r4, #0x38]
	ldr r2, _0809957C @ =0xFFFFFF00
_0809955C:
	adds r0, r1, r2
	strh r0, [r4, #0x38]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xff
	bgt _0809954A
	ldr r0, [r4, #0x34]
	cmp r0, #0x3f
	ble _08099574
	adds r0, r4, #0
	bl Proc_Break
_08099574:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809957C: .4byte 0xFFFFFF00

	thumb_func_start sub_8099580
sub_8099580: @ 0x08099580
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #7
	ands r0, r2
	lsls r0, r0, #2
	movs r3, #0xf
	lsls r3, r0
	asrs r2, r2, #3
	cmp r2, #0xf
	ble _08099596
	adds r2, #0xf0
_08099596:
	lsls r0, r2, #2
	adds r2, r0, r1
	ldr r1, [r2]
	bics r1, r3
	adds r0, r0, r4
	ldr r0, [r0]
	ands r0, r3
	adds r1, r1, r0
	str r1, [r2]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_80995B0
sub_80995B0: @ 0x080995B0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r7, r0, #0
	adds r6, r1, #0
	adds r5, r2, #0
	cmp r5, #0
	beq _08099604
	ldr r0, _080995FC @ =0x0000FFFF
	cmp r5, r0
	beq _08099624
	subs r5, #1
	ldr r0, _08099600 @ =gUnk_086918B0
	lsls r4, r5, #1
	adds r4, r4, r0
	ldrh r2, [r4]
	adds r0, r7, #0
	bl sub_8099580
	ldrh r2, [r4]
	adds r2, #0x40
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8099580
	ldrh r2, [r4]
	adds r2, #0x80
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8099580
	ldrh r2, [r4]
	adds r2, #0xc0
	adds r0, r7, #0
	adds r1, r6, #0
	bl sub_8099580
	b _0809963C
	.align 2, 0
_080995FC: .4byte 0x0000FFFF
_08099600: .4byte gUnk_086918B0
_08099604:
	str r5, [sp]
	ldr r4, _08099620 @ =0x01000010
	mov r0, sp
	adds r1, r6, #0
	adds r2, r4, #0
	bl CpuFastSet
	str r5, [sp, #4]
	add r0, sp, #4
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r6, r2
	adds r2, r4, #0
	b _08099638
	.align 2, 0
_08099620: .4byte 0x01000010
_08099624:
	adds r0, r7, #0
	adds r1, r6, #0
	movs r2, #0x10
	bl CpuFastSet
	movs r1, #0x80
	lsls r1, r1, #3
	adds r0, r7, r1
	adds r1, r6, r1
	movs r2, #0x10
_08099638:
	bl CpuFastSet
_0809963C:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_8099644
sub_8099644: @ 0x08099644
	push {lr}
	movs r0, #0x1f
	movs r1, #1
	bl sub_8014ACC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8099654
sub_8099654: @ 0x08099654
	push {r4, r5, lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r0, _0809966C @ =0x03005284
	movs r5, #0
	ldrsb r5, [r0, r5]
	cmp r5, #0
	beq _08099670
	adds r0, r1, #0
	bl Proc_End
	b _08099700
	.align 2, 0
_0809966C: .4byte 0x03005284
_08099670:
	bl sub_8099BE4
	ldr r0, _08099708 @ =gUnk_0836A494
	ldr r1, _0809970C @ =gBg0Tm
	movs r4, #0xa0
	lsls r4, r4, #1
	adds r2, r4, #0
	movs r3, #0
	bl sub_80998D4
	ldr r0, _08099710 @ =gUnk_083674BC
	ldr r1, _08099714 @ =gBg1Tm
	movs r2, #0
	movs r3, #1
	bl sub_80998D4
	ldr r0, _08099718 @ =gUnk_0836A094
	ldr r1, _0809971C @ =gBg3Tm
	adds r2, r4, #0
	movs r3, #3
	bl sub_80998D4
	ldr r0, _08099720 @ =gUnk_0836A888
	ldr r4, _08099724 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	bl ApplyPaletteExt
	ldr r0, _08099728 @ =gPal
	strh r5, [r0]
	movs r0, #6
	bl SetBlackPal
	ldr r4, _0809972C @ =gUnk_08367B30
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r0, _08099730 @ =0x06002800
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r4, _08099734 @ =gUnk_08364AB4
	movs r0, #1
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	movs r0, #0xf
	bl EnableBgSync
	movs r0, #1
	bl sub_8098AD8
	movs r0, #1
	str r0, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #1
	bl sub_809892C
_08099700:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08099708: .4byte gUnk_0836A494
_0809970C: .4byte gBg0Tm
_08099710: .4byte gUnk_083674BC
_08099714: .4byte gBg1Tm
_08099718: .4byte gUnk_0836A094
_0809971C: .4byte gBg3Tm
_08099720: .4byte gUnk_0836A888
_08099724: .4byte gBuf
_08099728: .4byte gPal
_0809972C: .4byte gUnk_08367B30
_08099730: .4byte 0x06002800
_08099734: .4byte gUnk_08364AB4

	thumb_func_start sub_8099738
sub_8099738: @ 0x08099738
	push {lr}
	adds r3, r0, #0
	ldr r0, _0809974C @ =gBuf+0x1E0
	movs r1, #0xe
	movs r2, #0x64
	bl StartPalFade
	pop {r0}
	bx r0
	.align 2, 0
_0809974C: .4byte gBuf+0x1E0

	thumb_func_start sub_8099750
sub_8099750: @ 0x08099750
	push {lr}
	adds r3, r0, #0
	ldr r0, _08099764 @ =gBuf+0xC0
	movs r1, #6
	movs r2, #0xb4
	bl StartPalFade
	pop {r0}
	bx r0
	.align 2, 0
_08099764: .4byte gBuf+0xC0

	thumb_func_start sub_8099768
sub_8099768: @ 0x08099768
	push {lr}
	adds r3, r0, #0
	ldr r0, _08099780 @ =Pal_AllBlack
	movs r1, #6
	movs r2, #0x64
	bl StartPalFade
	movs r1, #0x2c
	bl SetPalFadeStop
	pop {r0}
	bx r0
	.align 2, 0
_08099780: .4byte Pal_AllBlack

	thumb_func_start sub_8099784
sub_8099784: @ 0x08099784
	push {lr}
	movs r0, #6
	movs r1, #1
	bl sub_8014ACC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8099794
sub_8099794: @ 0x08099794
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809979C
sub_809979C: @ 0x0809979C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	adds r1, r5, #0
	adds r1, #0x64
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0xc7
	bgt _080997B6
	adds r0, r2, #1
	strh r0, [r1]
	b _080997BC
_080997B6:
	adds r0, r5, #0
	bl Proc_Break
_080997BC:
	ldr r4, _08099804 @ =gDispIo
	adds r2, r4, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	ldr r0, _08099808 @ =gUnk_0869149C
	ldr r2, [r0]
	adds r0, r5, #0
	adds r0, #0x64
	movs r1, #0
	ldrsh r3, [r0, r1]
	movs r0, #0xc8
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	bl Interpolate
	adds r1, r4, #0
	adds r1, #0x44
	movs r2, #0
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r4, #0
	adds r0, #0x46
	strb r2, [r0]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08099804: .4byte gDispIo
_08099808: .4byte gUnk_0869149C

	thumb_func_start sub_809980C
sub_809980C: @ 0x0809980C
	adds r2, r0, #0
	movs r3, #0
	movs r1, #3
	adds r0, #0x30
_08099814:
	strh r3, [r0]
	subs r0, #2
	subs r1, #1
	cmp r1, #0
	bge _08099814
	movs r0, #0
	strh r0, [r2, #0x34]
	bx lr

	thumb_func_start sub_8099824
sub_8099824: @ 0x08099824
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	movs r5, #0
_0809982A:
	lsls r1, r5, #1
	adds r4, r6, #0
	adds r4, #0x2a
	adds r4, r4, r1
	ldr r0, _08099864 @ =gUnk_08380F4C
	adds r1, r1, r0
	ldrh r0, [r4]
	ldrh r1, [r1]
	adds r1, r0, r1
	strh r1, [r4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl sub_809992C
	lsls r0, r5, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r4]
	lsrs r1, r4, #8
	movs r2, #0
	bl SetBgOffset
	adds r5, #1
	cmp r5, #3
	ble _0809982A
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099864: .4byte gUnk_08380F4C

	thumb_func_start sub_8099868
sub_8099868: @ 0x08099868
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r7, r0, #0
	ldrh r0, [r7, #0x34]
	adds r1, r0, #1
	strh r1, [r7, #0x34]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	movs r6, #0
_08099880:
	ldr r0, _080998D0 @ =gUnk_08380F4C
	lsls r5, r6, #1
	adds r0, r5, r0
	ldrh r1, [r0]
	movs r0, #0x3c
	str r0, [sp]
	movs r0, #0
	movs r2, #0x80
	lsls r2, r2, #2
	mov r3, r8
	bl Interpolate
	adds r1, r0, #0
	adds r4, r7, #0
	adds r4, #0x2a
	adds r4, r4, r5
	ldrh r0, [r4]
	adds r1, r0, r1
	strh r1, [r4]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl sub_809992C
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r4]
	lsrs r1, r4, #8
	movs r2, #0
	bl SetBgOffset
	adds r6, #1
	cmp r6, #3
	ble _08099880
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080998D0: .4byte gUnk_08380F4C

	thumb_func_start sub_80998D4
sub_80998D4: @ 0x080998D4
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	mov sb, r1
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r4, _08099924 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	movs r0, #0x80
	lsls r0, r0, #4
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	adds r0, r4, #0
	mov r1, sb
	mov r2, r8
	adds r3, r5, #0
	bl sub_80152C4
	movs r0, #0x80
	lsls r0, r0, #4
	adds r4, r4, r0
	lsls r6, r6, #0xb
	ldr r0, _08099928 @ =0x02002804
	adds r6, r6, r0
	adds r0, r4, #0
	adds r1, r6, #0
	mov r2, r8
	adds r3, r5, #0
	bl sub_80152C4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099924: .4byte gBuf
_08099928: .4byte 0x02002804

	thumb_func_start sub_809992C
sub_809992C: @ 0x0809992C
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r0, r1, #0
	cmp r1, #0
	bge _08099938
	adds r0, r1, #7
_08099938:
	asrs r0, r0, #3
	subs r4, r0, #1
	movs r0, #0x1f
	ands r4, r0
	cmp r1, #8
	ble _08099970
	adds r0, r5, #0
	adds r1, r4, #0
	movs r2, #0
	bl GetTmOffsetById
	adds r2, r0, #0
	lsls r0, r5, #0xb
	lsls r1, r4, #1
	adds r0, r0, r1
	ldr r1, _08099978 @ =0x02002804
	adds r1, r0, r1
	movs r3, #0x1f
_0809995C:
	ldrh r0, [r1]
	strh r0, [r2]
	adds r2, #0x40
	adds r1, #0x40
	subs r3, #1
	cmp r3, #0
	bge _0809995C
	adds r0, r5, #0
	bl EnableBgSyncById
_08099970:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08099978: .4byte 0x02002804

	thumb_func_start sub_809997C
sub_809997C: @ 0x0809997C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r0, _08099994 @ =0x03005284
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	beq _08099998
	adds r0, r1, #0
	bl Proc_End
	b _080999FE
	.align 2, 0
_08099994: .4byte 0x03005284
_08099998:
	bl sub_8099CCC
	ldr r4, _08099A08 @ =gUnk_0836A9AC
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08099A0C @ =gUnk_0836EEFC
	ldr r1, _08099A10 @ =gBg0Tm
	bl Decompress
	ldr r0, _08099A14 @ =gUnk_0836F610
	ldr r4, _08099A18 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	movs r5, #0x80
	lsls r5, r5, #2
	adds r0, r4, #0
	movs r1, #0
	adds r2, r5, #0
	bl ApplyPaletteExt
	ldr r4, _08099A1C @ =gPal
	strh r6, [r4]
	ldr r0, _08099A20 @ =gUnk_083747A4
	ldr r1, _08099A24 @ =0x06010000
	bl Decompress
	ldr r0, _08099A28 @ =gUnk_08375888
	adds r1, r5, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	strh r6, [r4]
	movs r0, #0xf
	bl EnableBgSync
	movs r0, #1
	str r0, [sp]
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_809892C
_080999FE:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099A08: .4byte gUnk_0836A9AC
_08099A0C: .4byte gUnk_0836EEFC
_08099A10: .4byte gBg0Tm
_08099A14: .4byte gUnk_0836F610
_08099A18: .4byte gBuf
_08099A1C: .4byte gPal
_08099A20: .4byte gUnk_083747A4
_08099A24: .4byte 0x06010000
_08099A28: .4byte gUnk_08375888

	thumb_func_start sub_8099A2C
sub_8099A2C: @ 0x08099A2C
	push {lr}
	ldr r3, _08099A78 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r1, #1
	movs r0, #6
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r2, [r0]
	ldr r0, _08099A7C @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #3
	orrs r0, r1
	ldr r1, _08099A80 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #2
	bl sub_8098AD8
	pop {r0}
	bx r0
	.align 2, 0
_08099A78: .4byte gDispIo
_08099A7C: .4byte 0x0000FFE0
_08099A80: .4byte 0x0000E0FF

	thumb_func_start sub_8099A84
sub_8099A84: @ 0x08099A84
	push {lr}
	ldr r0, [r0, #0x50]
	bl EndSpriteAnim
	pop {r0}
	bx r0

	thumb_func_start sub_8099A90
sub_8099A90: @ 0x08099A90
	push {r4, lr}
	adds r4, r0, #0
	movs r0, #0x10
	bl SetBlackPal
	movs r0, #0x11
	bl SetBlackPal
	movs r0, #0x12
	bl SetBlackPal
	movs r0, #0x13
	bl SetBlackPal
	adds r1, r4, #0
	adds r1, #0x64
	movs r0, #0
	strh r0, [r1]
	ldr r0, _08099ACC @ =gUnk_08375908
	movs r1, #0xd
	bl StartSpriteAnim
	str r0, [r4, #0x50]
	movs r1, #0xc0
	lsls r1, r1, #4
	strh r1, [r0, #0x22]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08099ACC: .4byte gUnk_08375908

	thumb_func_start sub_8099AD0
sub_8099AD0: @ 0x08099AD0
	push {r4, r5, lr}
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x64
	ldrh r0, [r4]
	cmp r0, #2
	bne _08099AEC
	ldr r0, _08099B0C @ =gUnk_083758A8
	ldr r1, _08099B10 @ =gUnk_086914A0
	ldr r2, [r1]
	movs r1, #0x11
	adds r3, r5, #0
	bl StartPalFade
_08099AEC:
	ldr r0, _08099B14 @ =gUnk_08375888
	movs r2, #0
	ldrsh r1, [r4, r2]
	adds r1, #0x10
	ldr r2, _08099B10 @ =gUnk_086914A0
	ldr r2, [r2]
	adds r3, r5, #0
	bl StartPalFade
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08099B0C: .4byte gUnk_083758A8
_08099B10: .4byte gUnk_086914A0
_08099B14: .4byte gUnk_08375888

	thumb_func_start sub_8099B18
sub_8099B18: @ 0x08099B18
	push {r4, lr}
	ldr r4, [r0, #0x50]
	bl sub_8099BCC
	movs r1, #0xb4
	subs r1, r1, r0
	adds r0, r4, #0
	movs r2, #0x10
	bl DisplaySpriteAnim
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8099B34
sub_8099B34: @ 0x08099B34
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_8099B44
sub_8099B44: @ 0x08099B44
	push {lr}
	adds r1, r0, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #0x18
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	bl sub_8099BA8
	pop {r0}
	bx r0

	thumb_func_start sub_8099B5C
sub_8099B5C: @ 0x08099B5C
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	movs r1, #0x80
	lsls r1, r1, #1
	adds r4, r5, #0
	adds r4, #0x66
	ldrh r3, [r4]
	adds r0, r3, #1
	strh r0, [r4]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0x1e
	str r0, [sp]
	movs r0, #0
	movs r2, #0x18
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x64
	ldrh r2, [r1]
	adds r0, r2, r0
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	bl sub_8099BA8
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0x1d
	ble _08099BA0
	adds r0, r5, #0
	bl Proc_Break
_08099BA0:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_8099BA8
sub_8099BA8: @ 0x08099BA8
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0
	adds r1, r4, #0
	movs r2, #0
	bl SetBgOffset
	movs r0, #2
	adds r1, r4, #0
	movs r2, #0
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_8099BCC
sub_8099BCC: @ 0x08099BCC
	push {lr}
	ldr r0, _08099BE0 @ =gUnk_08691B20
	bl Proc_Find
	adds r0, #0x64
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x18
	pop {r1}
	bx r1
	.align 2, 0
_08099BE0: .4byte gUnk_08691B20

	thumb_func_start sub_8099BE4
sub_8099BE4: @ 0x08099BE4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08099CB8 @ =gUnk_08691B38
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r0, _08099CBC @ =gDispIo
	mov ip, r0
	movs r0, #8
	rsbs r0, r0, #0
	mov r1, ip
	ldrb r1, [r1]
	ands r0, r1
	mov r2, ip
	strb r0, [r2]
	movs r5, #1
	ldrb r0, [r2, #1]
	orrs r0, r5
	movs r6, #2
	orrs r0, r6
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r2, #1]
	mov r4, ip
	adds r4, #0x3c
	movs r2, #0x3f
	ldrb r7, [r4]
	ands r2, r7
	movs r0, #0x44
	add r0, ip
	mov r8, r0
	movs r1, #0
	mov sb, r1
	movs r3, #0x10
	movs r6, #0x46
	add r6, ip
	mov sl, r6
	subs r1, #4
	adds r0, r1, #0
	mov r7, ip
	ldrb r7, [r7, #0xc]
	ands r0, r7
	mov r6, ip
	strb r0, [r6, #0xc]
	adds r0, r1, #0
	ldrb r7, [r6, #0x10]
	ands r0, r7
	orrs r0, r5
	strb r0, [r6, #0x10]
	ldrb r0, [r6, #0x14]
	ands r1, r0
	movs r5, #2
	orrs r1, r5
	strb r1, [r6, #0x14]
	movs r0, #3
	ldrb r6, [r6, #0x18]
	orrs r0, r6
	mov r7, ip
	strb r0, [r7, #0x18]
	movs r0, #0x40
	orrs r2, r0
	strb r2, [r4]
	mov r0, r8
	strb r3, [r0]
	ldr r1, _08099CC0 @ =0x030026F5
	strb r3, [r1]
	mov r5, sb
	mov r2, sl
	strb r5, [r2]
	ldr r0, _08099CC4 @ =0x0000FFE0
	ldrh r6, [r7, #0x3c]
	ands r0, r6
	movs r1, #1
	orrs r0, r1
	ldr r1, _08099CC8 @ =0x0000E0FF
	ands r0, r1
	movs r7, #0xe0
	lsls r7, r7, #4
	adds r1, r7, #0
	orrs r0, r1
	mov r1, ip
	strh r0, [r1, #0x3c]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08099CB8: .4byte gUnk_08691B38
_08099CBC: .4byte gDispIo
_08099CC0: .4byte 0x030026F5
_08099CC4: .4byte 0x0000FFE0
_08099CC8: .4byte 0x0000E0FF

	thumb_func_start sub_8099CCC
sub_8099CCC: @ 0x08099CCC
	push {lr}
	ldr r0, _08099D34 @ =gUnk_08691B50
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r3, _08099D38 @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r3]
	ands r0, r1
	strb r0, [r3]
	movs r0, #1
	ldrb r2, [r3, #1]
	orrs r0, r2
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r3, #1]
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r0}
	bx r0
	.align 2, 0
_08099D34: .4byte gUnk_08691B50
_08099D38: .4byte gDispIo

	thumb_func_start sub_8099D3C
sub_8099D3C: @ 0x08099D3C
	push {lr}
	adds r1, r0, #0
	ldr r0, _08099D54 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08099D58
	adds r0, r1, #0
	bl Proc_End
	b _08099D9C
	.align 2, 0
_08099D54: .4byte 0x03005284
_08099D58:
	bl sub_80988C0
	ldr r2, _08099DA0 @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r3, [r2, #0xc]
	ands r0, r3
	strb r0, [r2, #0xc]
	movs r0, #3
	ldrb r3, [r2, #0x10]
	orrs r0, r3
	strb r0, [r2, #0x10]
	adds r0, r1, #0
	ldrb r3, [r2, #0x14]
	ands r0, r3
	strb r0, [r2, #0x14]
	ldrb r0, [r2, #0x18]
	ands r1, r0
	strb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
_08099D9C:
	pop {r0}
	bx r0
	.align 2, 0
_08099DA0: .4byte gDispIo

	thumb_func_start sub_8099DA4
sub_8099DA4: @ 0x08099DA4
	push {r4, lr}
	sub sp, #0x10
	bl sub_80988C0
	ldr r2, _08099E38 @ =gDispIo
	movs r1, #4
	rsbs r1, r1, #0
	adds r0, r1, #0
	ldrb r3, [r2, #0xc]
	ands r0, r3
	strb r0, [r2, #0xc]
	movs r0, #3
	ldrb r3, [r2, #0x10]
	orrs r0, r3
	strb r0, [r2, #0x10]
	adds r0, r1, #0
	ldrb r3, [r2, #0x14]
	ands r0, r3
	strb r0, [r2, #0x14]
	ldrb r0, [r2, #0x18]
	ands r1, r0
	strb r1, [r2, #0x18]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	ldr r4, _08099E3C @ =gUnk_08141320
	movs r0, #1
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r3, _08099E40 @ =0x06000020
	adds r1, r1, r3
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08099E44 @ =gUnk_08143AB8
	ldr r4, _08099E48 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _08099E4C @ =gBg1Tm
	movs r1, #0x20
	str r1, [sp]
	movs r1, #0x13
	str r1, [sp, #4]
	str r4, [sp, #8]
	movs r1, #0
	str r1, [sp, #0xc]
	movs r2, #1
	movs r3, #1
	bl sub_8014F70
	movs r0, #1
	str r0, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_809892C
	add sp, #0x10
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08099E38: .4byte gDispIo
_08099E3C: .4byte gUnk_08141320
_08099E40: .4byte 0x06000020
_08099E44: .4byte gUnk_08143AB8
_08099E48: .4byte gBuf
_08099E4C: .4byte gBg1Tm

	thumb_func_start sub_8099E50
sub_8099E50: @ 0x08099E50
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _08099E68 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _08099E6C
	adds r0, r1, #0
	bl Proc_End
	b _08099E9C
	.align 2, 0
_08099E68: .4byte 0x03005284
_08099E6C:
	ldr r4, _08099EA4 @ =gUnk_08378F54
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r0, _08099EA8 @ =0x06000020
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _08099EAC @ =gUnk_08379DCC
	ldr r4, _08099EB0 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _08099EB4 @ =gBg0Tm
	adds r1, r4, #0
	movs r2, #1
	bl TmApplyTsa_t
	ldr r0, _08099EB8 @ =gUnk_08379F8C
	ldr r1, _08099EBC @ =0x06010800
	bl Decompress
_08099E9C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08099EA4: .4byte gUnk_08378F54
_08099EA8: .4byte 0x06000020
_08099EAC: .4byte gUnk_08379DCC
_08099EB0: .4byte gBuf
_08099EB4: .4byte gBg0Tm
_08099EB8: .4byte gUnk_08379F8C
_08099EBC: .4byte 0x06010800

	thumb_func_start sub_8099EC0
sub_8099EC0: @ 0x08099EC0
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	mov r8, r0
	ldr r3, _08099F7C @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r6, #0
	movs r0, #0xe
	strb r0, [r1]
	adds r1, #1
	movs r2, #0x10
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x46
	strb r6, [r0]
	ldr r0, _08099F80 @ =0x0000FFE0
	ldrh r4, [r3, #0x3c]
	ands r0, r4
	movs r1, #1
	orrs r0, r1
	ldr r1, _08099F84 @ =0x0000E0FF
	ands r0, r1
	movs r4, #0x90
	lsls r4, r4, #5
	adds r1, r4, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	adds r1, r3, #0
	adds r1, #0x3d
	movs r0, #0x20
	ldrb r4, [r1]
	orrs r0, r4
	strb r0, [r1]
	movs r0, #1
	ldrb r1, [r3, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	orrs r0, r2
	strb r0, [r3, #1]
	movs r0, #1
	bl sub_8098AD8
	movs r0, #0xf
	bl EnableBgSync
	ldr r4, _08099F88 @ =gUnk_08379D2C
	adds r0, r4, #0
	movs r1, #0x20
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r5, _08099F8C @ =gPal
	strh r6, [r5]
	subs r4, #0x20
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	strh r6, [r5]
	movs r0, #0x10
	bl SetBlackPal
	bl sub_8069C34
	ldr r0, _08099F90 @ =sub_806A040
	bl SetOnHBlankA
	ldr r0, _08099F94 @ =gUnk_08691CC0
	mov r1, r8
	bl SpawnProc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08099F7C: .4byte gDispIo
_08099F80: .4byte 0x0000FFE0
_08099F84: .4byte 0x0000E0FF
_08099F88: .4byte gUnk_08379D2C
_08099F8C: .4byte gPal
_08099F90: .4byte sub_806A040
_08099F94: .4byte gUnk_08691CC0

	thumb_func_start nullsub_53
nullsub_53: @ 0x08099F98
	bx lr
	.align 2, 0

	thumb_func_start sub_8099F9C
sub_8099F9C: @ 0x08099F9C
	push {lr}
	ldr r0, [r0, #0x50]
	bl EndSpriteAnim
	pop {r0}
	bx r0

	thumb_func_start sub_8099FA8
sub_8099FA8: @ 0x08099FA8
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _08099FCC @ =gUnk_0837AAE8
	movs r1, #2
	bl StartSpriteAnim
	str r0, [r4, #0x50]
	movs r2, #0
	movs r1, #0x88
	lsls r1, r1, #3
	strh r1, [r0, #0x22]
	movs r0, #0xc8
	str r0, [r4, #0x30]
	adds r4, #0x44
	strh r2, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08099FCC: .4byte gUnk_0837AAE8

	thumb_func_start sub_8099FD0
sub_8099FD0: @ 0x08099FD0
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	adds r2, r4, #0
	adds r2, #0x44
	movs r0, #0
	ldrsh r1, [r2, r0]
	ldr r0, _0809A010 @ =gUnk_086914E0
	ldr r5, [r0]
	cmp r1, r5
	bgt _08099FFE
	ldrh r3, [r2]
	adds r0, r3, #1
	strh r0, [r2]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r5, [sp]
	movs r0, #0
	movs r1, #0xc8
	movs r2, #0x80
	bl Interpolate
	str r0, [r4, #0x30]
_08099FFE:
	ldr r0, [r4, #0x50]
	ldr r2, [r4, #0x30]
	movs r1, #0x78
	bl DisplaySpriteAnim
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A010: .4byte gUnk_086914E0

	thumb_func_start sub_809A014
sub_809A014: @ 0x0809A014
	push {lr}
	adds r3, r0, #0
	adds r1, r3, #0
	adds r1, #0x64
	movs r0, #0
	strh r0, [r1]
	ldr r0, _0809A030 @ =gUnk_0837AAC8
	movs r2, #0x82
	lsls r2, r2, #1
	movs r1, #0x10
	bl StartPalFade
	pop {r0}
	bx r0
	.align 2, 0
_0809A030: .4byte gUnk_0837AAC8

	thumb_func_start sub_809A034
sub_809A034: @ 0x0809A034
	push {lr}
	adds r2, r0, #0
	adds r2, #0x64
	ldrh r1, [r2]
	adds r1, #1
	strh r1, [r2]
	bl sub_809A0A8
	pop {r0}
	bx r0

	thumb_func_start sub_809A048
sub_809A048: @ 0x0809A048
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	adds r0, r4, #0
	bl sub_809A068
	adds r0, r4, #0
	bl sub_809A0A8
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809A068
sub_809A068: @ 0x0809A068
	push {lr}
	adds r0, #0x64
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	movs r1, #6
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0809A09C @ =gUnk_08380F54
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _0809A0A0 @ =gUnk_0837AA68
	adds r0, r0, r1
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809A0A4 @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809A09C: .4byte gUnk_08380F54
_0809A0A0: .4byte gUnk_0837AA68
_0809A0A4: .4byte gPal

	thumb_func_start sub_809A0A8
sub_809A0A8: @ 0x0809A0A8
	push {lr}
	adds r0, #0x64
	ldrh r0, [r0]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	movs r1, #7
	ands r0, r1
	ldr r1, _0809A0D4 @ =gUnk_08691C78
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #5
	ldr r1, _0809A0D8 @ =gUnk_08379D0C
	adds r0, r0, r1
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809A0DC @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809A0D4: .4byte gUnk_08691C78
_0809A0D8: .4byte gUnk_08379D0C
_0809A0DC: .4byte gPal

	thumb_func_start sub_809A0E0
sub_809A0E0: @ 0x0809A0E0
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809A114
	adds r4, #0x64
	movs r0, #0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809A0F4
sub_809A0F4: @ 0x0809A0F4
	push {lr}
	adds r2, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r0, #7
	ands r1, r0
	cmp r1, #0
	bne _0809A10E
	adds r0, r2, #0
	bl sub_809A13C
_0809A10E:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809A114
sub_809A114: @ 0x0809A114
	push {lr}
	ldr r0, _0809A130 @ =gUnk_0837AB18
	ldr r1, _0809A134 @ =0x06010000
	bl Decompress
	ldr r0, _0809A138 @ =gUnk_0837ACB0
	movs r1, #0x88
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	pop {r0}
	bx r0
	.align 2, 0
_0809A130: .4byte gUnk_0837AB18
_0809A134: .4byte 0x06010000
_0809A138: .4byte gUnk_0837ACB0

	thumb_func_start sub_809A13C
sub_809A13C: @ 0x0809A13C
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0809A1AC @ =gUnk_08691CA8
	bl SpawnProc
	adds r4, r0, #0
	bl RandNextB
	movs r1, #0xf1
	bl DivRem
	adds r0, #0x28
	strh r0, [r4, #0x2a]
	movs r0, #0xa0
	strh r0, [r4, #0x2c]
	bl RandNextB
	movs r1, #8
	bl DivRem
	ldr r1, _0809A1B0 @ =gUnk_08380F5A
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r4, #0
	adds r0, #0x30
	strb r1, [r0]
	bl RandNextB
	movs r1, #4
	bl DivRem
	adds r0, #2
	adds r1, r4, #0
	adds r1, #0x2e
	strb r0, [r1]
	bl RandNextB
	movs r1, #4
	bl DivRem
	adds r0, #3
	adds r1, r4, #0
	adds r1, #0x2f
	strb r0, [r1]
	bl RandNextB
	ldr r1, _0809A1B4 @ =0x00000101
	bl DivRem
	adds r1, r4, #0
	adds r1, #0x31
	strb r0, [r1]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809A1AC: .4byte gUnk_08691CA8
_0809A1B0: .4byte gUnk_08380F5A
_0809A1B4: .4byte 0x00000101

	thumb_func_start sub_809A1B8
sub_809A1B8: @ 0x0809A1B8
	movs r1, #0
	strh r1, [r0, #0x32]
	bx lr
	.align 2, 0

	thumb_func_start sub_809A1C0
sub_809A1C0: @ 0x0809A1C0
	push {r4, r5, lr}
	sub sp, #4
	mov ip, r0
	ldr r3, _0809A238 @ =gSinLut
	mov r1, ip
	adds r1, #0x31
	ldrh r2, [r0, #0x32]
	lsls r0, r2, #2
	ldrb r1, [r1]
	adds r0, r1, r0
	movs r1, #0xff
	ands r0, r1
	lsls r0, r0, #1
	adds r0, r0, r3
	movs r1, #0
	ldrsh r0, [r0, r1]
	asrs r3, r0, #8
	lsrs r2, r2, #4
	cmp r2, #7
	ble _0809A1EA
	movs r2, #7
_0809A1EA:
	ldr r1, _0809A23C @ =gUnk_08380F62
	mov r0, ip
	adds r0, #0x30
	ldrb r0, [r0]
	lsls r0, r0, #3
	adds r0, r0, r2
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r4, r0, #1
	mov r0, ip
	adds r0, #0x2e
	mov r2, ip
	ldrh r2, [r2, #0x2a]
	ldrb r0, [r0]
	subs r0, r2, r0
	mov r5, ip
	strh r0, [r5, #0x2a]
	mov r0, ip
	adds r0, #0x2f
	ldrh r1, [r5, #0x2c]
	ldrb r0, [r0]
	subs r2, r1, r0
	strh r2, [r5, #0x2c]
	ldrh r0, [r5, #0x32]
	adds r0, #1
	strh r0, [r5, #0x32]
	movs r1, #0x2a
	ldrsh r0, [r5, r1]
	adds r1, r0, r3
	cmp r1, #0
	blt _0809A22E
	lsls r0, r2, #0x10
	cmp r0, #0
	bge _0809A240
_0809A22E:
	mov r0, ip
	bl Proc_Break
	b _0809A256
	.align 2, 0
_0809A238: .4byte gSinLut
_0809A23C: .4byte gUnk_08380F62
_0809A240:
	mov r3, ip
	movs r5, #0x2c
	ldrsh r2, [r3, r5]
	ldr r3, _0809A260 @ =Sprite_16x16
	movs r0, #0xa0
	lsls r0, r0, #5
	adds r0, r4, r0
	str r0, [sp]
	movs r0, #2
	bl PutSpriteExt
_0809A256:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A260: .4byte Sprite_16x16

	thumb_func_start sub_809A264
sub_809A264: @ 0x0809A264
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809A26C
sub_809A26C: @ 0x0809A26C
	push {r4, r5, lr}
	adds r4, r0, #0
	movs r0, #1
	movs r1, #0
	bl sub_806A87C
	adds r4, #0x64
	movs r2, #0
	ldrsh r1, [r4, r2]
	ldr r2, _0809A2BC @ =gUnk_086914D4
	movs r3, #0
	ldrsh r2, [r2, r3]
	ldr r3, _0809A2C0 @ =gUnk_086914D0
	movs r5, #0
	ldrsh r3, [r3, r5]
	bl sub_806A330
	movs r0, #1
	movs r1, #0xa0
	bl sub_806A87C
	movs r2, #0
	ldrsh r1, [r4, r2]
	ldr r2, _0809A2C4 @ =gUnk_086914DC
	movs r3, #0
	ldrsh r2, [r2, r3]
	ldr r3, _0809A2C8 @ =gUnk_086914D8
	movs r5, #0
	ldrsh r3, [r3, r5]
	bl sub_806A330
	bl sub_806A424
	ldrh r0, [r4]
	adds r0, #2
	strh r0, [r4]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A2BC: .4byte gUnk_086914D4
_0809A2C0: .4byte gUnk_086914D0
_0809A2C4: .4byte gUnk_086914DC
_0809A2C8: .4byte gUnk_086914D8

	thumb_func_start sub_809A2CC
sub_809A2CC: @ 0x0809A2CC
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	ldr r0, _0809A2E4 @ =0x03005284
	movs r6, #0
	ldrsb r6, [r0, r6]
	cmp r6, #0
	beq _0809A2E8
	adds r0, r7, #0
	bl Proc_End
	b _0809A36E
	.align 2, 0
_0809A2E4: .4byte 0x03005284
_0809A2E8:
	bl sub_809A900
	bl SetAllBlackPals
	ldr r4, _0809A378 @ =gUnk_08376FDC
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809A37C @ =gUnk_08378C60
	ldr r1, _0809A380 @ =gBg0Tm
	adds r0, r4, #0
	bl Decompress
	ldr r1, _0809A384 @ =gBg1Tm
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809A388 @ =gUnk_08375B84
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809A38C @ =gUnk_08376B70
	ldr r1, _0809A390 @ =gBg2Tm
	bl Decompress
	ldr r0, _0809A394 @ =gUnk_08376DF4
	ldr r4, _0809A398 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r4, #0
	movs r1, #0
	bl ApplyPaletteExt
	ldr r0, _0809A39C @ =gPal
	strh r6, [r0]
	movs r0, #0xf
	bl EnableBgSync
	ldr r0, _0809A3A0 @ =gUnk_08691DE8
	adds r1, r7, #0
	bl SpawnProc
	movs r0, #3
	bl sub_8098AD8
	movs r0, #1
	str r0, [sp]
	movs r1, #1
	movs r2, #1
	movs r3, #0
	bl sub_809892C
_0809A36E:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A378: .4byte gUnk_08376FDC
_0809A37C: .4byte gUnk_08378C60
_0809A380: .4byte gBg0Tm
_0809A384: .4byte gBg1Tm
_0809A388: .4byte gUnk_08375B84
_0809A38C: .4byte gUnk_08376B70
_0809A390: .4byte gBg2Tm
_0809A394: .4byte gUnk_08376DF4
_0809A398: .4byte gBuf
_0809A39C: .4byte gPal
_0809A3A0: .4byte gUnk_08691DE8

	thumb_func_start sub_809A3A4
sub_809A3A4: @ 0x0809A3A4
	adds r0, #0x64
	movs r3, #0
	movs r1, #0
	strh r1, [r0]
	ldr r1, _0809A3CC @ =gDispIo+0x3C
	ldr r0, _0809A3D0 @ =0x0000FFE0
	ldrh r2, [r1]
	ands r0, r2
	movs r2, #1
	orrs r0, r2
	strh r0, [r1]
	movs r0, #0xc0
	ldrb r2, [r1]
	orrs r0, r2
	strb r0, [r1]
	strb r3, [r1, #8]
	strb r3, [r1, #9]
	strb r3, [r1, #0xa]
	bx lr
	.align 2, 0
_0809A3CC: .4byte gDispIo+0x3C
_0809A3D0: .4byte 0x0000FFE0

	thumb_func_start sub_809A3D4
sub_809A3D4: @ 0x0809A3D4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	mov r4, r8
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	movs r7, #0
	strh r0, [r4]
	ldr r5, _0809A474 @ =gDispIo
	adds r6, r5, #0
	adds r6, #0x3c
	movs r0, #0xc0
	ldrb r1, [r6]
	orrs r0, r1
	strb r0, [r6]
	ldr r0, _0809A478 @ =0x030026F4
	strb r7, [r0]
	movs r1, #0x45
	adds r1, r1, r5
	mov sl, r1
	strb r7, [r1]
	ldr r0, _0809A47C @ =gUnk_086914CC
	ldr r2, [r0]
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldr r0, _0809A480 @ =gUnk_086914C8
	ldr r0, [r0]
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	bl Interpolate
	movs r1, #0x46
	adds r1, r1, r5
	mov sb, r1
	strb r0, [r1]
	ldrh r4, [r4]
	cmp r4, #0x20
	bne _0809A464
	mov r0, r8
	bl Proc_Break
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r5, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r5, #1]
	movs r0, #0x3f
	ldrb r1, [r6]
	ands r0, r1
	strb r0, [r6]
	movs r0, #0x10
	ldr r1, _0809A478 @ =0x030026F4
	strb r0, [r1]
	mov r0, sl
	strb r7, [r0]
	mov r1, sb
	strb r7, [r1]
_0809A464:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A474: .4byte gDispIo
_0809A478: .4byte 0x030026F4
_0809A47C: .4byte gUnk_086914CC
_0809A480: .4byte gUnk_086914C8

	thumb_func_start sub_809A484
sub_809A484: @ 0x0809A484
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r2, #0x64
	movs r4, #0
	movs r3, #0
	movs r5, #0x10
	movs r1, #0x10
	strh r1, [r2]
	adds r0, #0x44
	strh r3, [r0]
	ldr r3, _0809A4C0 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	strb r4, [r0]
	adds r0, #1
	strb r5, [r0]
	adds r0, #1
	strb r4, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A4C0: .4byte gDispIo

	thumb_func_start sub_809A4C4
sub_809A4C4: @ 0x0809A4C4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	movs r1, #0
	mov r8, r1
	strh r0, [r4]
	ldr r7, _0809A534 @ =gDispIo
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldr r5, _0809A538 @ =gUnk_086914BC
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x44
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	mov r1, r8
	strb r1, [r0]
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r5]
	cmp r1, r0
	bne _0809A526
	adds r0, r6, #0
	bl Proc_Break
_0809A526:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A534: .4byte gDispIo
_0809A538: .4byte gUnk_086914BC

	thumb_func_start sub_809A53C
sub_809A53C: @ 0x0809A53C
	push {lr}
	adds r3, r0, #0
	adds r2, r3, #0
	adds r2, #0x44
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0809A560 @ =gUnk_086914C4
	ldr r1, [r1]
	cmp r0, r1
	blt _0809A55C
	adds r0, r3, #0
	bl Proc_Break
_0809A55C:
	pop {r0}
	bx r0
	.align 2, 0
_0809A560: .4byte gUnk_086914C4

	thumb_func_start sub_809A564
sub_809A564: @ 0x0809A564
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	ldr r2, _0809A580 @ =gDispIo+0x3C
	ldr r0, _0809A584 @ =0x0000E0FF
	ldrh r1, [r2]
	ands r0, r1
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2]
	bx lr
	.align 2, 0
_0809A580: .4byte gDispIo+0x3C
_0809A584: .4byte 0x0000E0FF

	thumb_func_start sub_809A588
sub_809A588: @ 0x0809A588
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	movs r1, #0
	mov r8, r1
	strh r0, [r4]
	ldr r7, _0809A5F8 @ =gDispIo
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r7, #0
	adds r1, #0x44
	movs r0, #0x10
	strb r0, [r1]
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldr r5, _0809A5FC @ =gUnk_086914C0
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl Interpolate
	adds r1, r7, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0x46
	mov r1, r8
	strb r1, [r0]
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r5]
	cmp r1, r0
	bne _0809A5EC
	adds r0, r6, #0
	bl Proc_Break
_0809A5EC:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A5F8: .4byte gDispIo
_0809A5FC: .4byte gUnk_086914C0

	thumb_func_start sub_809A600
sub_809A600: @ 0x0809A600
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	ldr r2, _0809A630 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	ldr r0, _0809A634 @ =0x0000FFE0
	ldrh r1, [r2, #0x3c]
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strh r0, [r2, #0x3c]
	bx lr
	.align 2, 0
_0809A630: .4byte gDispIo
_0809A634: .4byte 0x0000FFE0

	thumb_func_start sub_809A638
sub_809A638: @ 0x0809A638
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r0
	ldr r5, _0809A6D8 @ =gDispIo
	adds r7, r5, #0
	adds r7, #0x3c
	movs r0, #0xc0
	ldrb r1, [r7]
	orrs r0, r1
	strb r0, [r7]
	movs r2, #0x44
	adds r2, r2, r5
	mov sl, r2
	movs r6, #0
	strb r6, [r2]
	movs r3, #0x45
	adds r3, r3, r5
	mov sb, r3
	strb r6, [r3]
	mov r4, r8
	adds r4, #0x64
	ldrh r3, [r4]
	adds r0, r3, #1
	strh r0, [r4]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0x20
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x46
	strb r0, [r1]
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0x1f
	ble _0809A6C6
	movs r0, #0x3f
	ldrb r3, [r7]
	ands r0, r3
	strb r0, [r7]
	movs r2, #0x10
	movs r0, #0x10
	mov r3, sl
	strb r0, [r3]
	mov r0, sb
	strb r6, [r0]
	strb r6, [r1]
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r5, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	orrs r0, r2
	strb r0, [r5, #1]
	mov r0, r8
	bl Proc_Break
_0809A6C6:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A6D8: .4byte gDispIo

	thumb_func_start sub_809A6DC
sub_809A6DC: @ 0x0809A6DC
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809A6E4
sub_809A6E4: @ 0x0809A6E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r7, r0, #0
	ldr r2, _0809A728 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r2, r7, #0
	adds r2, #0x64
	movs r6, #0
	ldrsh r1, [r2, r6]
	ldr r0, _0809A72C @ =gUnk_086914B8
	ldr r0, [r0]
	cmp r1, r0
	bge _0809A730
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	b _0809A736
	.align 2, 0
_0809A728: .4byte gDispIo
_0809A72C: .4byte gUnk_086914B8
_0809A730:
	adds r0, r7, #0
	bl Proc_Break
_0809A736:
	movs r0, #0x80
	lsls r0, r0, #1
	mov sl, r0
	movs r2, #0xa0
	lsls r2, r2, #3
	movs r1, #0x64
	adds r1, r1, r7
	mov sb, r1
	movs r6, #0
	ldrsh r3, [r1, r6]
	ldr r5, _0809A7F0 @ =gUnk_086914B8
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	mov r1, sl
	bl Interpolate
	adds r4, r0, #0
	ldr r0, _0809A7F4 @ =gUnk_086914A8
	ldr r1, [r0]
	mov r0, sb
	movs r2, #0
	ldrsh r3, [r0, r2]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r2, #0
	bl Interpolate
	ldr r3, _0809A7F8 @ =gUnk_08353328
	mov r6, sl
	adds r1, r4, r6
	ldr r2, _0809A7FC @ =0x000003FF
	ands r1, r2
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r1, [r1]
	adds r6, r1, #0
	muls r6, r0, r6
	asrs r6, r6, #7
	mov r8, r6
	ands r4, r2
	lsls r4, r4, #2
	adds r4, r4, r3
	ldr r1, [r4]
	adds r6, r1, #0
	muls r6, r0, r6
	asrs r6, r6, #7
	movs r2, #0x80
	lsls r2, r2, #7
	mov r0, sb
	movs r1, #0
	ldrsh r3, [r0, r1]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #0
	bl Interpolate
	adds r4, r0, #0
	lsls r4, r4, #2
	ldr r0, _0809A800 @ =gUnk_086914A4
	ldr r1, [r0]
	lsls r1, r1, #8
	mov r2, sb
	movs r0, #0
	ldrsh r3, [r2, r0]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	mov r2, sl
	bl Interpolate
	adds r5, r0, #0
	mov r0, r8
	adds r1, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_809A868
	mov r1, r8
	str r1, [r7, #0x2c]
	str r6, [r7, #0x30]
	str r4, [r7, #0x54]
	str r5, [r7, #0x58]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809A7F0: .4byte gUnk_086914B8
_0809A7F4: .4byte gUnk_086914A8
_0809A7F8: .4byte gUnk_08353328
_0809A7FC: .4byte 0x000003FF
_0809A800: .4byte gUnk_086914A4

	thumb_func_start sub_809A804
sub_809A804: @ 0x0809A804
	adds r0, #0x44
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809A80C
sub_809A80C: @ 0x0809A80C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r1, [r5, #0x30]
	ldr r0, _0809A850 @ =gUnk_086914B4
	ldr r2, [r0]
	lsls r2, r2, #8
	subs r2, r1, r2
	adds r6, r5, #0
	adds r6, #0x44
	movs r0, #0
	ldrsh r3, [r6, r0]
	ldr r4, _0809A854 @ =gUnk_086914B0
	ldr r0, [r4]
	str r0, [sp]
	movs r0, #0
	bl Interpolate
	adds r1, r0, #0
	ldr r0, [r5, #0x2c]
	ldr r2, [r5, #0x54]
	ldr r3, [r5, #0x58]
	bl sub_809A868
	movs r0, #0
	ldrsh r1, [r6, r0]
	ldr r0, [r4]
	cmp r1, r0
	bge _0809A858
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	b _0809A85E
	.align 2, 0
_0809A850: .4byte gUnk_086914B4
_0809A854: .4byte gUnk_086914B0
_0809A858:
	adds r0, r5, #0
	bl Proc_Break
_0809A85E:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809A868
sub_809A868: @ 0x0809A868
	push {r4, r5, lr}
	sub sp, #0xc
	adds r5, r2, #0
	ldr r2, _0809A89C @ =0xFFFFF000
	adds r0, r0, r2
	ldr r2, _0809A8A0 @ =gUnk_086914AC
	ldr r4, [r2]
	adds r2, r4, #0
	subs r2, #0x50
	lsls r2, r2, #8
	adds r1, r1, r2
	movs r2, #0xd0
	lsls r2, r2, #7
	lsls r4, r4, #8
	str r5, [sp]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r3, [sp, #4]
	str r3, [sp, #8]
	adds r3, r4, #0
	bl sub_8092EB0
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A89C: .4byte 0xFFFFF000
_0809A8A0: .4byte gUnk_086914AC

	thumb_func_start sub_809A8A4
sub_809A8A4: @ 0x0809A8A4
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809A8B4
sub_809A8B4: @ 0x0809A8B4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #2
	strh r0, [r1]
	adds r4, #0x66
	ldrh r0, [r4]
	adds r0, #3
	strh r0, [r4]
	ldrh r1, [r1]
	lsls r2, r1, #0x10
	asrs r1, r2, #0x14
	adds r1, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	asrs r2, r2, #0x13
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	bl SetBgOffset
	ldrh r4, [r4]
	lsls r2, r4, #0x10
	asrs r1, r2, #0x14
	rsbs r1, r1, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	asrs r2, r2, #0x13
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #1
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809A900
sub_809A900: @ 0x0809A900
	push {r4, r5, lr}
	ldr r0, _0809A9DC @ =gUnk_08691DF8
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r0, _0809A9E0 @ =gDispIo
	mov ip, r0
	movs r0, #8
	rsbs r0, r0, #0
	mov r1, ip
	ldrb r1, [r1]
	ands r0, r1
	movs r2, #1
	orrs r0, r2
	mov r3, ip
	strb r0, [r3]
	ldrb r0, [r3, #1]
	orrs r0, r2
	movs r3, #2
	orrs r0, r3
	movs r1, #5
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	mov r4, ip
	strb r0, [r4, #1]
	subs r1, #0x83
	adds r0, r1, #0
	ldrb r5, [r4, #0xc]
	ands r0, r5
	strb r0, [r4, #0xc]
	adds r0, r1, #0
	ldrb r4, [r4, #0x10]
	ands r0, r4
	orrs r0, r3
	mov r5, ip
	strb r0, [r5, #0x10]
	adds r0, r1, #0
	ldrb r3, [r5, #0x14]
	ands r0, r3
	orrs r0, r2
	strb r0, [r5, #0x14]
	ldrb r4, [r5, #0x18]
	ands r1, r4
	strb r1, [r5, #0x18]
	mov r2, ip
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r5, [r2]
	ands r0, r5
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r2, #9
	movs r0, #0x10
	strb r0, [r2]
	mov r0, ip
	adds r0, #0x46
	strb r1, [r0]
	ldr r0, _0809A9E4 @ =0x0000FFE0
	mov r1, ip
	ldrh r1, [r1, #0x3c]
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	ldr r1, _0809A9E8 @ =0x0000E0FF
	ands r0, r1
	movs r2, #0xc0
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	mov r3, ip
	strh r0, [r3, #0x3c]
	mov r1, ip
	adds r1, #0x3d
	movs r0, #0x20
	ldrb r4, [r1]
	orrs r0, r4
	strb r0, [r1]
	movs r0, #0
	movs r1, #4
	bl SetBgBpp
	movs r0, #1
	movs r1, #4
	bl SetBgBpp
	movs r0, #2
	movs r1, #8
	bl SetBgBpp
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809A9DC: .4byte gUnk_08691DF8
_0809A9E0: .4byte gDispIo
_0809A9E4: .4byte 0x0000FFE0
_0809A9E8: .4byte 0x0000E0FF

	thumb_func_start sub_809A9EC
sub_809A9EC: @ 0x0809A9EC
	push {r4, lr}
	ldr r4, _0809AA14 @ =gUnk_0837ACD0
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809AA18 @ =gUnk_0837C844
	ldr r1, _0809AA1C @ =gBuf
	bl Decompress
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809AA14: .4byte gUnk_0837ACD0
_0809AA18: .4byte gUnk_0837C844
_0809AA1C: .4byte gBuf

	thumb_func_start sub_809AA20
sub_809AA20: @ 0x0809AA20
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r4, r0, #0
	adds r6, r1, #0
	ldr r5, _0809AA6C @ =gBg0Tm
	adds r0, r5, #0
	movs r1, #0xff
	bl TmFill
	ldr r0, _0809AA70 @ =gUnk_08691E10
	lsls r4, r4, #2
	adds r4, r4, r0
	ldrb r0, [r4, #1]
	str r0, [sp]
	movs r0, #0x14
	str r0, [sp, #4]
	ldrb r1, [r4]
	lsls r0, r1, #1
	ldr r1, _0809AA74 @ =gBuf
	adds r0, r0, r1
	str r0, [sp, #8]
	movs r0, #2
	ldrsb r0, [r4, r0]
	str r0, [sp, #0xc]
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_8014E98
	movs r0, #1
	bl EnableBgSync
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809AA6C: .4byte gBg0Tm
_0809AA70: .4byte gUnk_08691E10
_0809AA74: .4byte gBuf

	thumb_func_start sub_809AA78
sub_809AA78: @ 0x0809AA78
	push {lr}
	ldr r0, _0809AA94 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0809AA8E
	movs r0, #0x44
	movs r1, #0
	bl StartBgmCore
_0809AA8E:
	pop {r0}
	bx r0
	.align 2, 0
_0809AA94: .4byte 0x03005284

	thumb_func_start sub_809AA98
sub_809AA98: @ 0x0809AA98
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _0809AAB0 @ =0x03005284
	movs r4, #0
	ldrsb r4, [r0, r4]
	cmp r4, #0
	beq _0809AAB4
	adds r0, r5, #0
	bl Proc_End
	b _0809AAE6
	.align 2, 0
_0809AAB0: .4byte 0x03005284
_0809AAB4:
	bl sub_80988C0
	bl SetAllBlackPals
	ldr r2, _0809AAEC @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	bl sub_809A9EC
	adds r0, r5, #0
	adds r0, #0x64
	strh r4, [r0]
	subs r0, #0x20
	strh r4, [r0]
_0809AAE6:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809AAEC: .4byte gDispIo

	thumb_func_start sub_809AAF0
sub_809AAF0: @ 0x0809AAF0
	push {r4, r5, r6, r7, lr}
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0x64
	movs r1, #0
	ldrsh r0, [r7, r1]
	lsls r0, r0, #2
	ldr r1, _0809AB10 @ =gUnk_08691E30
	adds r5, r0, r1
	ldrh r0, [r5, #2]
	cmp r0, #0
	bne _0809AB14
	adds r0, r6, #0
	bl Proc_Break
	b _0809AB42
	.align 2, 0
_0809AB10: .4byte gUnk_08691E30
_0809AB14:
	adds r4, r6, #0
	adds r4, #0x44
	ldrh r1, [r4]
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	beq _0809AB28
	subs r0, r1, #1
	strh r0, [r4]
	b _0809AB42
_0809AB28:
	ldrb r0, [r5]
	ldrb r1, [r5, #1]
	bl sub_809AA20
	ldr r0, _0809AB48 @ =gUnk_08691EB8
	adds r1, r6, #0
	bl SpawnProc
	ldrh r0, [r5, #2]
	strh r0, [r4]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
_0809AB42:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809AB48: .4byte gUnk_08691EB8

	thumb_func_start sub_809AB4C
sub_809AB4C: @ 0x0809AB4C
	push {lr}
	ldr r0, _0809AB9C @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809AB5E
	movs r0, #0x93
	bl m4aSongNumStart
_0809AB5E:
	ldr r3, _0809ABA0 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0809ABA4 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #0x1f
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_0809AB9C: .4byte gPlaySt
_0809ABA0: .4byte gDispIo
_0809ABA4: .4byte 0x0000FFE0

	thumb_func_start sub_809ABA8
sub_809ABA8: @ 0x0809ABA8
	push {r4, lr}
	ldr r3, _0809ABE4 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	movs r4, #0
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #8
	strb r0, [r1]
	ldr r0, _0809ABE8 @ =gUnk_0837CB0C
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0809ABEC @ =gPal
	strh r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809ABE4: .4byte gDispIo
_0809ABE8: .4byte gUnk_0837CB0C
_0809ABEC: .4byte gPal

	thumb_func_start sub_809ABF0
sub_809ABF0: @ 0x0809ABF0
	push {r4, lr}
	ldr r2, _0809AC28 @ =gDispIo
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r1, #8
	movs r4, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x45
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	ldr r0, _0809AC2C @ =gUnk_0837CB2C
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r0, _0809AC30 @ =gPal
	strh r4, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809AC28: .4byte gDispIo
_0809AC2C: .4byte gUnk_0837CB2C
_0809AC30: .4byte gPal

	thumb_func_start sub_809AC34
sub_809AC34: @ 0x0809AC34
	push {lr}
	ldr r0, _0809AC4C @ =gUnk_0837CB4C
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809AC50 @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809AC4C: .4byte gUnk_0837CB4C
_0809AC50: .4byte gPal

	thumb_func_start sub_809AC54
sub_809AC54: @ 0x0809AC54
	push {lr}
	ldr r0, _0809AC6C @ =gUnk_0837CB6C
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809AC70 @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809AC6C: .4byte gUnk_0837CB6C
_0809AC70: .4byte gPal

	thumb_func_start sub_809AC74
sub_809AC74: @ 0x0809AC74
	push {lr}
	ldr r0, _0809AC8C @ =Pal_AllBlack
	movs r1, #0
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r1, _0809AC90 @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809AC8C: .4byte Pal_AllBlack
_0809AC90: .4byte gPal

	thumb_func_start sub_809AC94
sub_809AC94: @ 0x0809AC94
	push {r4, r5, lr}
	ldr r0, _0809AD20 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809ACA6
	movs r0, #0x94
	bl m4aSongNumStart
_0809ACA6:
	ldr r5, _0809AD24 @ =gBg0Tm
	adds r0, r5, #0
	movs r1, #0
	bl TmFill
	ldr r4, _0809AD28 @ =gUnk_0837CB8C
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x13
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809AD2C @ =gUnk_0837EEB4
	adds r1, r5, #0
	bl Decompress
	ldr r0, _0809AD30 @ =gUnk_0837F418
	movs r1, #0
	movs r2, #0x60
	bl ApplyPaletteExt
	movs r0, #1
	bl EnableBgSync
	ldr r3, _0809AD34 @ =gDispIo
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strb r0, [r2]
	adds r0, r3, #0
	adds r0, #0x44
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r1, r3, #0
	adds r1, #0x46
	movs r0, #0x10
	strb r0, [r1]
	ldr r0, _0809AD38 @ =0x0000FFE0
	ldrh r1, [r3, #0x3c]
	ands r0, r1
	movs r1, #0x1e
	orrs r0, r1
	strh r0, [r3, #0x3c]
	movs r0, #0x20
	ldrb r1, [r2]
	orrs r0, r1
	strb r0, [r2]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809AD20: .4byte gPlaySt
_0809AD24: .4byte gBg0Tm
_0809AD28: .4byte gUnk_0837CB8C
_0809AD2C: .4byte gUnk_0837EEB4
_0809AD30: .4byte gUnk_0837F418
_0809AD34: .4byte gDispIo
_0809AD38: .4byte 0x0000FFE0

	thumb_func_start sub_809AD3C
sub_809AD3C: @ 0x0809AD3C
	ldr r3, _0809AD60 @ =gDispIo
	adds r1, r3, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r2, [r1]
	ands r0, r2
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	bx lr
	.align 2, 0
_0809AD60: .4byte gDispIo

	thumb_func_start sub_809AD64
sub_809AD64: @ 0x0809AD64
	ldr r2, _0809AD84 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	subs r1, #8
	ands r0, r1
	strb r0, [r2, #1]
	bx lr
	.align 2, 0
_0809AD84: .4byte gDispIo

	thumb_func_start sub_809AD88
sub_809AD88: @ 0x0809AD88
	push {lr}
	adds r1, r0, #0
	ldr r0, _0809ADA0 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0809ADA4
	adds r0, r1, #0
	bl Proc_End
	b _0809ADC2
	.align 2, 0
_0809ADA0: .4byte 0x03005284
_0809ADA4:
	ldr r2, _0809ADC8 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
_0809ADC2:
	pop {r0}
	bx r0
	.align 2, 0
_0809ADC8: .4byte gDispIo

	thumb_func_start sub_809ADCC
sub_809ADCC: @ 0x0809ADCC
	push {r4, r5, lr}
	sub sp, #4
	bl sub_809B0E8
	ldr r4, _0809AE44 @ =gUnk_08375ADC
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	ldr r0, _0809AE48 @ =0x06000020
	adds r1, r1, r0
	adds r0, r4, #0
	bl Decompress
	bl sub_809AED4
	ldr r4, _0809AE4C @ =gUnk_0836F6D4
	movs r0, #2
	bl GetBgChrOffset
	adds r1, r0, #0
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809AE50 @ =gUnk_08373F80
	movs r0, #2
	bl GetBgTilemapOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809AE54 @ =gUnk_08374670
	ldr r4, _0809AE58 @ =gBuf
	adds r1, r4, #0
	bl Decompress
	ldr r0, _0809AE5C @ =gUnk_08375B64
	movs r1, #0xd0
	lsls r1, r1, #1
	adds r4, r4, r1
	adds r1, r4, #0
	movs r2, #0x20
	bl sub_8015260
	movs r0, #1
	str r0, [sp]
	movs r1, #1
	movs r2, #1
	movs r3, #0
	bl sub_809892C
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809AE44: .4byte gUnk_08375ADC
_0809AE48: .4byte 0x06000020
_0809AE4C: .4byte gUnk_0836F6D4
_0809AE50: .4byte gUnk_08373F80
_0809AE54: .4byte gUnk_08374670
_0809AE58: .4byte gBuf
_0809AE5C: .4byte gUnk_08375B64

	thumb_func_start sub_809AE60
sub_809AE60: @ 0x0809AE60
	push {lr}
	ldr r2, _0809AE94 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #2
	orrs r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	ldr r0, _0809AE98 @ =gBuf
	movs r2, #0x80
	lsls r2, r2, #2
	movs r1, #0
	bl ApplyPaletteExt
	ldr r1, _0809AE9C @ =gPal
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_0809AE94: .4byte gDispIo
_0809AE98: .4byte gBuf
_0809AE9C: .4byte gPal

	thumb_func_start sub_809AEA0
sub_809AEA0: @ 0x0809AEA0
	ldr r2, _0809AEC0 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	bx lr
	.align 2, 0
_0809AEC0: .4byte gDispIo

	thumb_func_start sub_809AEC4
sub_809AEC4: @ 0x0809AEC4
	push {lr}
	movs r0, #0xd
	movs r1, #1
	bl sub_8014ACC
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809AED4
sub_809AED4: @ 0x0809AED4
	push {r4, r5, r6, lr}
	sub sp, #8
	movs r5, #0
	ldr r0, _0809AF24 @ =gUnk_086914F8
	ldr r0, [r0]
	cmp r5, r0
	bge _0809AF14
	movs r6, #4
_0809AEE4:
	bl RandNextB
	movs r1, #0x1d
	bl DivRem
	adds r4, r0, #0
	bl RandNextB
	movs r1, #0x1d
	bl DivRem
	adds r2, r0, #0
	str r6, [sp]
	str r6, [sp, #4]
	ldr r0, _0809AF28 @ =gBg0Tm
	adds r1, r4, #0
	ldr r3, _0809AF2C @ =0x0000D001
	bl sub_8014E30
	adds r5, #1
	ldr r0, _0809AF24 @ =gUnk_086914F8
	ldr r0, [r0]
	cmp r5, r0
	blt _0809AEE4
_0809AF14:
	movs r0, #1
	bl EnableBgSync
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809AF24: .4byte gUnk_086914F8
_0809AF28: .4byte gBg0Tm
_0809AF2C: .4byte 0x0000D001

	thumb_func_start sub_809AF30
sub_809AF30: @ 0x0809AF30
	push {lr}
	sub sp, #4
	adds r1, r0, #0
	ldr r0, _0809AF4C @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0809AF50
	adds r0, r1, #0
	bl Proc_End
	b _0809AF6E
	.align 2, 0
_0809AF4C: .4byte 0x03005284
_0809AF50:
	bl sub_809B188
	movs r0, #0xd
	bl EnableBgSync
	movs r0, #2
	bl sub_8098AD8
	movs r0, #1
	str r0, [sp]
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_809892C
_0809AF6E:
	add sp, #4
	pop {r0}
	bx r0

	thumb_func_start sub_809AF74
sub_809AF74: @ 0x0809AF74
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809AF84
sub_809AF84: @ 0x0809AF84
	push {r4, r5, lr}
	adds r0, #0x64
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r3, #0
	ldrsh r2, [r0, r3]
	ldr r0, _0809AFDC @ =gUnk_086914F0
	ldr r0, [r0]
	adds r3, r2, #0
	muls r3, r0, r3
	ldr r0, _0809AFE0 @ =gUnk_086914F4
	ldr r0, [r0]
	adds r5, r2, #0
	muls r5, r0, r5
	movs r0, #1
	ands r1, r0
	movs r4, #0x30
	cmp r1, #0
	beq _0809AFAE
	movs r4, #0
_0809AFAE:
	adds r1, r3, r4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	subs r2, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	bl SetBgOffset
	adds r1, r5, #0
	adds r1, #0x18
	adds r1, r1, r4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r4, #0
	adds r2, #8
	movs r0, #1
	bl SetBgOffset
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809AFDC: .4byte gUnk_086914F0
_0809AFE0: .4byte gUnk_086914F4

	thumb_func_start sub_809AFE4
sub_809AFE4: @ 0x0809AFE4
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809AF84
	adds r4, #0x66
	ldrh r1, [r4]
	adds r1, #1
	strh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x13
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #2
	movs r2, #0
	bl SetBgOffset
	ldrh r4, [r4]
	lsls r1, r4, #0x10
	asrs r1, r1, #0x13
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #3
	movs r2, #0
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809B01C
sub_809B01C: @ 0x0809B01C
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809B024
sub_809B024: @ 0x0809B024
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r1, r0, #0
	adds r6, r1, #0
	adds r6, #0x64
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	ble _0809B042
	adds r0, r1, #0
	bl Proc_Break
_0809B042:
	ldr r5, _0809B090 @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	movs r0, #0
	ldrsh r3, [r6, r0]
	movs r4, #0x20
	str r4, [sp]
	movs r0, #0
	movs r1, #6
	movs r2, #4
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x44
	strb r0, [r1]
	movs r1, #0
	ldrsh r3, [r6, r1]
	str r4, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x45
	strb r0, [r1]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B090: .4byte gDispIo

	thumb_func_start sub_809B094
sub_809B094: @ 0x0809B094
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809B0A4
sub_809B0A4: @ 0x0809B0A4
	push {r4, lr}
	adds r4, r0, #0
	adds r1, r4, #0
	adds r1, #0x64
	ldrh r0, [r1]
	adds r0, #0xa0
	strh r0, [r1]
	adds r4, #0x66
	ldrh r0, [r4]
	adds r0, #0x40
	strh r0, [r4]
	ldrh r1, [r1]
	lsls r2, r1, #0x10
	asrs r2, r2, #0x18
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	ldrh r4, [r4]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x18
	movs r2, #0xb4
	subs r2, r2, r0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	movs r1, #0
	bl SetBgOffset
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809B0E8
sub_809B0E8: @ 0x0809B0E8
	push {r4, r5, lr}
	ldr r0, _0809B180 @ =gUnk_086920A0
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r0, _0809B184 @ =gDispIo
	mov ip, r0
	movs r0, #8
	rsbs r0, r0, #0
	mov r1, ip
	ldrb r1, [r1]
	ands r0, r1
	mov r2, ip
	strb r0, [r2]
	movs r3, #1
	ldrb r1, [r2, #1]
	orrs r1, r3
	movs r0, #2
	orrs r1, r0
	movs r0, #5
	rsbs r0, r0, #0
	ands r1, r0
	subs r0, #4
	ands r1, r0
	movs r0, #0x10
	orrs r1, r0
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r2, #0
	mov r4, ip
	ldrb r4, [r4, #0xc]
	ands r0, r4
	mov r5, ip
	strb r0, [r5, #0xc]
	adds r0, r2, #0
	ldrb r4, [r5, #0x10]
	ands r0, r4
	strb r0, [r5, #0x10]
	adds r0, r2, #0
	ldrb r5, [r5, #0x14]
	ands r0, r5
	orrs r0, r3
	mov r3, ip
	strb r0, [r3, #0x14]
	ldrb r4, [r3, #0x18]
	ands r2, r4
	strb r2, [r3, #0x18]
	movs r0, #0x21
	rsbs r0, r0, #0
	ands r1, r0
	subs r0, #0x20
	ands r1, r0
	movs r0, #0x7f
	ands r1, r0
	strb r1, [r3, #1]
	mov r1, ip
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r5, [r1]
	ands r0, r5
	strb r0, [r1]
	adds r1, #8
	movs r2, #0
	movs r0, #0x10
	strb r0, [r1]
	mov r0, ip
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B180: .4byte gUnk_086920A0
_0809B184: .4byte gDispIo

	thumb_func_start sub_809B188
sub_809B188: @ 0x0809B188
	push {lr}
	ldr r0, _0809B210 @ =gUnk_086920B8
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r3, _0809B214 @ =gDispIo
	movs r0, #8
	rsbs r0, r0, #0
	ldrb r1, [r3]
	ands r0, r1
	strb r0, [r3]
	movs r0, #1
	ldrb r2, [r3, #1]
	orrs r0, r2
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	movs r1, #9
	rsbs r1, r1, #0
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	movs r1, #0x21
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #0x20
	ands r0, r1
	movs r1, #0x7f
	ands r0, r1
	strb r0, [r3, #1]
	adds r2, r3, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r1, r3, #0
	adds r1, #0x44
	movs r2, #0
	movs r0, #6
	strb r0, [r1]
	adds r0, r3, #0
	adds r0, #0x45
	strb r2, [r0]
	adds r0, #1
	strb r2, [r0]
	ldr r0, _0809B218 @ =0x0000FFE0
	ldrh r2, [r3, #0x3c]
	ands r0, r2
	movs r1, #1
	orrs r0, r1
	ldr r1, _0809B21C @ =0x0000E0FF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r3, #0x3c]
	bl SetAllBlackPals
	pop {r0}
	bx r0
	.align 2, 0
_0809B210: .4byte gUnk_086920B8
_0809B214: .4byte gDispIo
_0809B218: .4byte 0x0000FFE0
_0809B21C: .4byte 0x0000E0FF

	thumb_func_start sub_809B220
sub_809B220: @ 0x0809B220
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r4, r0, #0
	adds r5, r2, #0
	adds r7, r3, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	movs r2, #0
_0809B236:
	movs r0, #0
	adds r2, r2, r7
	mov sb, r2
	cmp r0, r7
	bge _0809B26C
_0809B240:
	movs r2, #0
	adds r1, r0, #1
	mov ip, r1
	lsls r6, r0, #5
_0809B248:
	movs r1, #0
	adds r3, r2, r5
	cmp r1, r5
	bge _0809B260
	mov r0, r8
	adds r2, r0, r6
_0809B254:
	adds r0, r2, r1
	strh r0, [r4]
	adds r4, #2
	adds r1, #1
	cmp r1, r5
	blt _0809B254
_0809B260:
	adds r2, r3, #0
	cmp r2, #0x1f
	ble _0809B248
	mov r0, ip
	cmp r0, r7
	blt _0809B240
_0809B26C:
	mov r2, sb
	cmp r2, #0x1f
	ble _0809B236
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809B280
sub_809B280: @ 0x0809B280
	push {r4, lr}
	adds r1, r0, #0
	ldr r0, _0809B298 @ =0x03005284
	movs r4, #0
	ldrsb r4, [r0, r4]
	cmp r4, #0
	beq _0809B29C
	adds r0, r1, #0
	bl Proc_End
	b _0809B2E8
	.align 2, 0
_0809B298: .4byte 0x03005284
_0809B29C:
	bl sub_80988C0
	bl SetAllBlackPals
	ldr r2, _0809B2F0 @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	subs r1, #4
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	adds r1, r2, #0
	adds r1, #0x3c
	movs r0, #0x3f
	ldrb r3, [r1]
	ands r0, r3
	strb r0, [r1]
	adds r1, #8
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r2, #0
	adds r0, #0x45
	strb r4, [r0]
	adds r0, #1
	strb r4, [r0]
	movs r0, #0
	bl sub_8098AD8
	bl sub_8098AC0
_0809B2E8:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B2F0: .4byte gDispIo

	thumb_func_start sub_809B2F4
sub_809B2F4: @ 0x0809B2F4
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809B2FC
sub_809B2FC: @ 0x0809B2FC
	push {r4, lr}
	adds r4, r0, #0
	adds r0, #0x64
	ldrh r1, [r0]
	adds r1, #1
	strh r1, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	ldr r0, _0809B328 @ =gUnk_08692118
	ldr r0, [r0]
	cmp r1, r0
	blt _0809B32C
	movs r0, #1
	bl SetNextGameAction
	adds r0, r4, #0
	bl sub_8014870
	adds r0, r4, #0
	bl Proc_Break
	b _0809B35C
	.align 2, 0
_0809B328: .4byte gUnk_08692118
_0809B32C:
	ldr r0, _0809B364 @ =gKeySt
	ldr r1, [r0]
	movs r0, #9
	ldrh r1, [r1, #8]
	ands r0, r1
	cmp r0, #0
	beq _0809B35C
	ldr r0, _0809B368 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809B34A
	movs r0, #0x6d
	bl m4aSongNumStart
_0809B34A:
	movs r0, #0
	bl SetNextGameAction
	adds r0, r4, #0
	bl sub_8014888
	adds r0, r4, #0
	bl Proc_Break
_0809B35C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B364: .4byte gKeySt
_0809B368: .4byte gPlaySt

	thumb_func_start sub_809B36C
sub_809B36C: @ 0x0809B36C
	push {lr}
	bl EndEachSpriteAnimProc
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_809B378
sub_809B378: @ 0x0809B378
	push {lr}
	adds r1, r0, #0
	ldr r0, _0809B394 @ =0x03005284
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	beq _0809B38E
	adds r0, r1, #0
	bl Proc_End
_0809B38E:
	pop {r0}
	bx r0
	.align 2, 0
_0809B394: .4byte 0x03005284

	thumb_func_start sub_809B398
sub_809B398: @ 0x0809B398
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _0809B478 @ =gUnk_08692240
	bl InitBgs
	movs r0, #0xf
	bl DisableBgSync
	ldr r2, _0809B47C @ =gDispIo
	movs r0, #2
	rsbs r0, r0, #0
	ldrb r1, [r2, #1]
	ands r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	movs r0, #2
	bl GetBgTilemapOffset
	movs r5, #0xc0
	lsls r5, r5, #0x13
	adds r0, r0, r5
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #0
	bl sub_8015208
	ldr r4, _0809B480 @ =gUnk_0835CC90
	movs r0, #0
	bl GetBgChrOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809B484 @ =gUnk_0835F780
	movs r0, #0
	bl GetBgTilemapOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809B488 @ =gUnk_0835F9EC
	movs r0, #1
	bl GetBgTilemapOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r4, _0809B48C @ =gUnk_0835F3A8
	movs r0, #2
	bl GetBgTilemapOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809B490 @ =gUnk_0835CB90
	movs r2, #0x80
	lsls r2, r2, #1
	movs r1, #0
	bl ApplyPaletteExt
	ldr r4, _0809B494 @ =gUnk_0835FC3C
	movs r0, #3
	bl GetBgChrOffset
	adds r1, r0, #0
	adds r1, r1, r5
	adds r0, r4, #0
	bl Decompress
	ldr r0, _0809B498 @ =gUnk_08364418
	movs r1, #0xf0
	lsls r1, r1, #1
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r2, _0809B49C @ =gBg3Tm
	movs r1, #0
	ldr r4, _0809B4A0 @ =0x0000027F
	ldr r0, _0809B4A4 @ =0xFFFFF000
	adds r3, r0, #0
_0809B458:
	adds r0, r1, r3
	strh r0, [r2]
	adds r2, #2
	adds r1, #1
	cmp r1, r4
	ble _0809B458
	movs r0, #8
	bl EnableBgSync
	adds r1, r6, #0
	adds r1, #0x64
	movs r0, #0
	strh r0, [r1]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B478: .4byte gUnk_08692240
_0809B47C: .4byte gDispIo
_0809B480: .4byte gUnk_0835CC90
_0809B484: .4byte gUnk_0835F780
_0809B488: .4byte gUnk_0835F9EC
_0809B48C: .4byte gUnk_0835F3A8
_0809B490: .4byte gUnk_0835CB90
_0809B494: .4byte gUnk_0835FC3C
_0809B498: .4byte gUnk_08364418
_0809B49C: .4byte gBg3Tm
_0809B4A0: .4byte 0x0000027F
_0809B4A4: .4byte 0xFFFFF000

	thumb_func_start sub_809B4A8
sub_809B4A8: @ 0x0809B4A8
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r6, r0, #0
	ldr r0, _0809B524 @ =gUnk_0835E6DC
	ldr r1, _0809B528 @ =0x06010000
	bl Decompress
	ldr r0, _0809B52C @ =gUnk_0835CB90
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0xa0
	bl ApplyPaletteExt
	ldr r5, _0809B530 @ =gUnk_0835F2C8
	movs r0, #3
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	adds r0, r5, #0
	movs r1, #0xa3
	movs r2, #0x1b
	movs r3, #0
	bl StartSpriteAnimProc
	str r4, [sp]
	str r4, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x78
	movs r2, #0x55
	movs r3, #0
	bl StartSpriteAnimProc
	movs r0, #1
	str r0, [sp]
	str r4, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x78
	movs r2, #0x78
	movs r3, #0
	bl StartSpriteAnimProc
	movs r0, #2
	str r0, [sp]
	str r4, [sp, #4]
	adds r0, r5, #0
	movs r1, #0x78
	movs r2, #0x98
	movs r3, #0
	bl StartSpriteAnimProc
	ldr r0, _0809B534 @ =gUnk_08692258
	adds r1, r6, #0
	bl SpawnProc
	ldr r0, _0809B538 @ =gUnk_08692298
	adds r1, r6, #0
	bl SpawnProc
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B524: .4byte gUnk_0835E6DC
_0809B528: .4byte 0x06010000
_0809B52C: .4byte gUnk_0835CB90
_0809B530: .4byte gUnk_0835F2C8
_0809B534: .4byte gUnk_08692258
_0809B538: .4byte gUnk_08692298

	thumb_func_start sub_809B53C
sub_809B53C: @ 0x0809B53C
	adds r1, r0, #0
	adds r1, #0x64
	movs r2, #0
	strh r2, [r1]
	adds r0, #0x66
	strh r2, [r0]
	bx lr
	.align 2, 0

	thumb_func_start sub_809B54C
sub_809B54C: @ 0x0809B54C
	push {lr}
	adds r2, r0, #0
	adds r3, r2, #0
	adds r3, #0x64
	ldrh r0, [r3]
	adds r1, r0, #1
	strh r1, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809B586
	movs r0, #0
	strh r0, [r3]
	adds r2, #0x66
	ldrh r0, [r2]
	adds r0, #1
	movs r1, #0xf
	ands r0, r1
	strh r0, [r2]
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #1
	ldr r1, _0809B58C @ =gUnk_0835F388
	adds r0, r0, r1
	movs r1, #0x8c
	lsls r1, r1, #2
	movs r2, #2
	bl ApplyPaletteExt
_0809B586:
	pop {r0}
	bx r0
	.align 2, 0
_0809B58C: .4byte gUnk_0835F388

	thumb_func_start sub_809B590
sub_809B590: @ 0x0809B590
	push {r4, lr}
	ldr r1, _0809B5FC @ =gDispIo
	mov ip, r1
	movs r1, #1
	mov r2, ip
	ldrb r2, [r2, #1]
	orrs r1, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	subs r2, #2
	ands r1, r2
	movs r2, #8
	orrs r1, r2
	movs r2, #0x10
	orrs r1, r2
	mov r3, ip
	strb r1, [r3, #1]
	adds r3, #0x3c
	ldr r1, _0809B600 @ =0x0000FFE0
	mov r4, ip
	ldrh r4, [r4, #0x3c]
	ands r1, r4
	movs r2, #1
	orrs r1, r2
	ldr r2, _0809B604 @ =0x0000E0FF
	ands r1, r2
	movs r4, #0x80
	lsls r4, r4, #4
	adds r2, r4, #0
	orrs r1, r2
	mov r2, ip
	strh r1, [r2, #0x3c]
	movs r1, #0x3f
	ldrb r4, [r3]
	ands r1, r4
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x44
	movs r2, #0
	strb r2, [r1]
	adds r3, #9
	movs r1, #0x10
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x46
	strb r2, [r1]
	adds r0, #0x64
	strh r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B5FC: .4byte gDispIo
_0809B600: .4byte 0x0000FFE0
_0809B604: .4byte 0x0000E0FF

	thumb_func_start sub_809B608
sub_809B608: @ 0x0809B608
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x64
	ldrh r0, [r6]
	adds r0, #1
	movs r5, #0
	strh r0, [r6]
	movs r0, #0
	ldrsh r3, [r6, r0]
	ldr r4, _0809B694 @ =gUnk_08692120
	ldr r0, [r4]
	str r0, [sp]
	movs r0, #5
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	ldr r1, _0809B698 @ =gDispIo
	mov ip, r1
	mov r3, ip
	adds r3, #0x3c
	movs r1, #0x3f
	ldrb r2, [r3]
	ands r1, r2
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x44
	strb r0, [r1]
	movs r1, #0x10
	subs r1, r1, r0
	mov r0, ip
	adds r0, #0x45
	strb r1, [r0]
	adds r0, #1
	strb r5, [r0]
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #0
	ldrsh r3, [r6, r0]
	ldr r0, [r4]
	str r0, [sp]
	movs r0, #5
	movs r2, #0
	bl Interpolate
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #0
	movs r1, #0
	bl SetBgOffset
	movs r2, #0
	ldrsh r1, [r6, r2]
	ldr r0, [r4]
	cmp r1, r0
	blt _0809B68C
	adds r0, r7, #0
	bl Proc_Break
	movs r0, #0
	strh r0, [r6]
_0809B68C:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B694: .4byte gUnk_08692120
_0809B698: .4byte gDispIo

	thumb_func_start sub_809B69C
sub_809B69C: @ 0x0809B69C
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr

	thumb_func_start sub_809B6A4
sub_809B6A4: @ 0x0809B6A4
	push {lr}
	adds r3, r0, #0
	adds r2, r3, #0
	adds r2, #0x64
	ldrh r0, [r2]
	adds r1, r0, #1
	strh r1, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0809B6C8 @ =gUnk_0869212C
	ldr r1, [r1]
	cmp r0, r1
	blt _0809B6C4
	adds r0, r3, #0
	bl Proc_Break
_0809B6C4:
	pop {r0}
	bx r0
	.align 2, 0
_0809B6C8: .4byte gUnk_0869212C

	thumb_func_start sub_809B6CC
sub_809B6CC: @ 0x0809B6CC
	ldr r3, _0809B6F0 @ =gDispIo
	movs r1, #1
	ldrb r2, [r3, #1]
	orrs r1, r2
	movs r2, #3
	rsbs r2, r2, #0
	ands r1, r2
	movs r2, #4
	orrs r1, r2
	movs r2, #8
	orrs r1, r2
	movs r2, #0x10
	orrs r1, r2
	strb r1, [r3, #1]
	adds r0, #0x64
	movs r1, #0
	strh r1, [r0]
	bx lr
	.align 2, 0
_0809B6F0: .4byte gDispIo

	thumb_func_start sub_809B6F4
sub_809B6F4: @ 0x0809B6F4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r5, r7, #0
	adds r5, #0x64
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	movs r0, #0
	ldrsh r3, [r5, r0]
	ldr r6, _0809B758 @ =gUnk_0869211C
	ldr r0, [r6]
	str r0, [sp]
	movs r0, #4
	movs r1, #0xf0
	movs r2, #0
	bl Interpolate
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0
	ldrsh r3, [r5, r0]
	ldr r0, [r6]
	str r0, [sp]
	movs r0, #4
	movs r1, #0x69
	movs r2, #0
	bl Interpolate
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #2
	adds r1, r4, #0
	bl SetBgOffset
	movs r0, #0
	ldrsh r1, [r5, r0]
	ldr r0, [r6]
	cmp r1, r0
	blt _0809B74E
	adds r0, r7, #0
	bl Proc_Break
_0809B74E:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B758: .4byte gUnk_0869211C

	thumb_func_start sub_809B75C
sub_809B75C: @ 0x0809B75C
	push {r4, lr}
	ldr r1, _0809B7C8 @ =gDispIo
	mov ip, r1
	movs r1, #1
	mov r2, ip
	ldrb r2, [r2, #1]
	orrs r1, r2
	movs r2, #2
	orrs r1, r2
	movs r2, #4
	orrs r1, r2
	movs r2, #8
	orrs r1, r2
	movs r2, #0x10
	orrs r1, r2
	mov r3, ip
	strb r1, [r3, #1]
	adds r3, #0x3c
	ldr r1, _0809B7CC @ =0x0000FFE0
	mov r4, ip
	ldrh r4, [r4, #0x3c]
	ands r1, r4
	movs r2, #2
	orrs r1, r2
	ldr r2, _0809B7D0 @ =0x0000E0FF
	ands r1, r2
	movs r4, #0xc0
	lsls r4, r4, #4
	adds r2, r4, #0
	orrs r1, r2
	mov r2, ip
	strh r1, [r2, #0x3c]
	movs r1, #0x3f
	ldrb r4, [r3]
	ands r1, r4
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x44
	movs r2, #0
	strb r2, [r1]
	adds r3, #9
	movs r1, #0x10
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x46
	strb r2, [r1]
	adds r0, #0x64
	strh r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B7C8: .4byte gDispIo
_0809B7CC: .4byte 0x0000FFE0
_0809B7D0: .4byte 0x0000E0FF

	thumb_func_start sub_809B7D4
sub_809B7D4: @ 0x0809B7D4
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r4, r7, #0
	adds r4, #0x64
	ldrh r0, [r4]
	adds r0, #1
	movs r6, #0
	strh r0, [r4]
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldr r5, _0809B85C @ =gUnk_08692124
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #8
	movs r2, #0
	bl Interpolate
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0
	bl SetBgOffset
	movs r1, #0
	ldrsh r3, [r4, r1]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #0
	movs r2, #8
	bl Interpolate
	ldr r2, _0809B860 @ =gDispIo
	mov ip, r2
	mov r3, ip
	adds r3, #0x3c
	movs r1, #0x3f
	ldrb r2, [r3]
	ands r1, r2
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x44
	strb r0, [r1]
	movs r1, #0x10
	subs r1, r1, r0
	mov r0, ip
	adds r0, #0x45
	strb r1, [r0]
	adds r0, #1
	strb r6, [r0]
	movs r0, #0
	ldrsh r1, [r4, r0]
	ldr r0, [r5]
	cmp r1, r0
	blt _0809B852
	adds r0, r7, #0
	bl Proc_Break
_0809B852:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B85C: .4byte gUnk_08692124
_0809B860: .4byte gDispIo

	thumb_func_start sub_809B864
sub_809B864: @ 0x0809B864
	ldr r1, _0809B894 @ =gDispIo
	mov ip, r1
	mov r3, ip
	adds r3, #0x3c
	movs r1, #0x3f
	ldrb r2, [r3]
	ands r1, r2
	movs r2, #0x40
	orrs r1, r2
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x44
	movs r2, #0
	strb r2, [r1]
	adds r3, #9
	movs r1, #0x10
	strb r1, [r3]
	mov r1, ip
	adds r1, #0x46
	strb r2, [r1]
	adds r0, #0x64
	strh r2, [r0]
	bx lr
	.align 2, 0
_0809B894: .4byte gDispIo

	thumb_func_start sub_809B898
sub_809B898: @ 0x0809B898
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r6, r0, #0
	ldr r5, _0809B8F8 @ =gDispIo
	adds r2, r5, #0
	adds r2, #0x3c
	movs r0, #0x3f
	ldrb r1, [r2]
	ands r0, r1
	movs r1, #0x40
	orrs r0, r1
	strb r0, [r2]
	adds r4, r6, #0
	adds r4, #0x64
	movs r0, #0
	ldrsh r3, [r4, r0]
	movs r0, #0x18
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x10
	bl Interpolate
	adds r1, r5, #0
	adds r1, #0x44
	movs r2, #0
	strb r0, [r1]
	adds r1, #1
	movs r0, #0x10
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0x46
	strb r2, [r0]
	ldrh r0, [r4]
	adds r1, r0, #1
	strh r1, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x17
	ble _0809B8EE
	adds r0, r6, #0
	bl Proc_Break
_0809B8EE:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B8F8: .4byte gDispIo

	thumb_func_start sub_809B8FC
sub_809B8FC: @ 0x0809B8FC
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _0809B954 @ =gUnk_08364438
	ldr r1, _0809B958 @ =0x06014000
	bl Decompress
	ldr r0, _0809B95C @ =gUnk_08364A94
	movs r1, #0x80
	lsls r1, r1, #2
	movs r2, #0x20
	bl ApplyPaletteExt
	ldr r2, _0809B960 @ =gDispIo
	movs r0, #1
	ldrb r1, [r2, #1]
	orrs r0, r1
	movs r1, #3
	rsbs r1, r1, #0
	ands r0, r1
	subs r1, #2
	ands r0, r1
	movs r1, #8
	orrs r0, r1
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2, #1]
	ldr r0, _0809B964 @ =0x0000FFE0
	ldrh r3, [r2, #0x3c]
	ands r0, r3
	movs r1, #0x10
	orrs r0, r1
	ldr r1, _0809B968 @ =0x0000E0FF
	ands r0, r1
	movs r3, #0xf0
	lsls r3, r3, #4
	adds r1, r3, #0
	orrs r0, r1
	strh r0, [r2, #0x3c]
	adds r4, #0x64
	movs r0, #0
	strh r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B954: .4byte gUnk_08364438
_0809B958: .4byte 0x06014000
_0809B95C: .4byte gUnk_08364A94
_0809B960: .4byte gDispIo
_0809B964: .4byte 0x0000FFE0
_0809B968: .4byte 0x0000E0FF

	thumb_func_start sub_809B96C
sub_809B96C: @ 0x0809B96C
	push {r4, lr}
	adds r4, r0, #0
	bl sub_809B99C
	adds r2, r4, #0
	adds r2, #0x64
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, _0809B98C @ =gUnk_08692128
	ldr r1, [r1]
	cmp r0, r1
	bne _0809B990
	adds r0, r4, #0
	bl Proc_Break
	b _0809B996
	.align 2, 0
_0809B98C: .4byte gUnk_08692128
_0809B990:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_0809B996:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_809B99C
sub_809B99C: @ 0x0809B99C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	adds r4, #0x64
	movs r0, #0
	ldrsh r3, [r4, r0]
	ldr r5, _0809BAD8 @ =gUnk_08692128
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #0x96
	movs r2, #0
	bl Interpolate
	adds r7, r0, #0
	movs r1, #0
	ldrsh r3, [r4, r1]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #0x64
	movs r2, #0
	bl Interpolate
	adds r6, r0, #0
	movs r2, #0
	ldrsh r3, [r4, r2]
	ldr r0, [r5]
	str r0, [sp]
	movs r0, #4
	movs r1, #0x80
	movs r2, #0x80
	lsls r2, r2, #2
	bl Interpolate
	mov sb, r0
	movs r0, #0x8f
	lsls r0, r0, #2
	mov r8, r0
	adds r0, r7, r0
	ldr r5, _0809BADC @ =0x000001FF
	ands r0, r5
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r6, r2
	movs r2, #0xff
	mov sl, r2
	ands r1, r2
	ldr r2, _0809BAE0 @ =gUnk_08692300
	movs r3, #0x80
	lsls r3, r3, #2
	bl PutOamHiRam
	lsls r0, r7, #1
	adds r0, r0, r7
	cmp r0, #0
	bge _0809BA18
	adds r0, #7
_0809BA18:
	asrs r0, r0, #3
	add r0, r8
	ands r0, r5
	lsrs r1, r6, #0x1f
	adds r1, r6, r1
	asrs r1, r1, #1
	movs r2, #0x90
	lsls r2, r2, #1
	adds r1, r1, r2
	mov r2, sl
	ands r1, r2
	ldr r2, _0809BAE4 @ =gUnk_086922F8
	movs r3, #0x80
	lsls r3, r3, #2
	bl PutOamHiRam
	adds r0, r7, #0
	cmp r0, #0
	bge _0809BA40
	adds r0, #7
_0809BA40:
	asrs r4, r0, #3
	add r4, r8
	ands r4, r5
	adds r0, r6, #0
	movs r1, #6
	bl __divsi3
	adds r1, r0, #0
	movs r0, #0x90
	lsls r0, r0, #1
	adds r1, r1, r0
	mov r2, sl
	ands r1, r2
	ldr r2, _0809BAE8 @ =gUnk_086922F0
	adds r0, r4, #0
	movs r3, #0x80
	lsls r3, r3, #2
	bl PutOamHiRam
	ldr r4, _0809BAEC @ =gSinLut
	movs r0, #0x80
	adds r0, r0, r4
	mov r8, r0
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r6, r0, #0
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	rsbs r0, r0, #0
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r5, r0, #0
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	adds r4, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	mov r2, r8
	movs r1, #0
	ldrsh r0, [r2, r1]
	lsls r0, r0, #4
	mov r1, sb
	bl Div
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl SetObjAffine
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809BAD8: .4byte gUnk_08692128
_0809BADC: .4byte 0x000001FF
_0809BAE0: .4byte gUnk_08692300
_0809BAE4: .4byte gUnk_086922F8
_0809BAE8: .4byte gUnk_086922F0
_0809BAEC: .4byte gSinLut

	thumb_func_start sub_809BAF0
sub_809BAF0: @ 0x0809BAF0
	push {lr}
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl StartBgmExt
	pop {r0}
	bx r0

	thumb_func_start sub_809BB00
sub_809BB00: @ 0x0809BB00
	push {lr}
	ldr r0, _0809BB18 @ =gPlaySt
	ldrb r0, [r0, #0x1d]
	lsls r0, r0, #0x1e
	cmp r0, #0
	blt _0809BB12
	movs r0, #0x92
	bl m4aSongNumStart
_0809BB12:
	pop {r0}
	bx r0
	.align 2, 0
_0809BB18: .4byte gPlaySt
