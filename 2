asm("\
	.syntax unified\n\
	push {r4, r5, r6, r7, lr}\n\
	mov r7, sl\n\
	mov r6, sb\n\
	mov r5, r8\n\
	push {r5, r6, r7}\n\
	mov sl, r0\n\
	adds r4, r1, #0\n\
	adds r5, r2, #0\n\
	lsls r0, r3, #5\n\
	movs r1, #0x10\n\
	bl Div\n\
	adds r6, r0, #0\n\
	adds r0, r4, r5\n\
	cmp r4, r0\n\
	bge .L0805B6BA\n\
	mov sb, r0\n\
	movs r0, #0x1f\n\
	mov r8, r0\n\
	movs r7, #0x1f\n\
.L0805B66C:\n\
	lsls r0, r4, #5\n\
	adds r4, #1\n\
	mov ip, r4\n\
	mov r1, sl\n\
	adds r5, r1, r0\n\
	movs r4, #0xf\n\
.L0805B678:\n\
	ldrh r1, [r5]\n\
	adds r2, r7, #0\n\
	ands r2, r1\n\
	lsls r1, r1, #0x10\n\
	lsrs r3, r1, #0x15\n\
	mov r0, r8\n\
	ands r3, r0\n\
	lsrs r1, r1, #0x1a\n\
	ands r1, r0\n\
	subs r0, r7, r2\n\
	muls r0, r6, r0\n\
	asrs r0, r0, #5\n\
	adds r2, r2, r0\n\
	subs r0, r7, r3\n\
	muls r0, r6, r0\n\
	asrs r0, r0, #5\n\
	adds r3, r3, r0\n\
	subs r0, r7, r1\n\
	muls r0, r6, r0\n\
	asrs r0, r0, #5\n\
	adds r1, r1, r0\n\
	lsls r3, r3, #5\n\
	orrs r2, r3\n\
	lsls r1, r1, #0xa\n\
	orrs r2, r1\n\
	strh r2, [r5]\n\
	adds r5, #2\n\
	subs r4, #1\n\
	cmp r4, #0\n\
	bge .L0805B678\n\
	mov r4, ip\n\
	cmp r4, sb\n\
	blt .L0805B66C\n\
.L0805B6BA:\n\
	pop {r3, r4, r5}\n\
	mov r8, r3\n\
	mov sb, r4\n\
	mov sl, r5\n\
	pop {r4, r5, r6, r7}\n\
	pop {r0}\n\
	bx r0\n\
	.syntax divided\n\
");
